<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Android性能优化</title>
    <url>/posts/9b085480.html</url>
    <content><![CDATA[<h2 id="启动优化"><a href="#启动优化" class="headerlink" title="启动优化"></a>启动优化</h2><p>延迟加载，比如通过IdleHandler在系统空闲时加载模块<br>异步初始化</p>
<p>缺点：界面展示了，但是用户操控出现卡断</p>
<p><a href="https://blog.csdn.net/github_35186068/article/details/86486033">Android 性能优化 - 启动优化</a><br><a href="https://dzone.com/articles/how-to-capture-heap-dump-from-android-app">How to Capture Heap Dump From an Android App</a><br><a href="https://developer.android.com/topic/performance/tracing/navigate-report">浏览 Systrace 报告</a><br><a href="https://source.android.google.cn/devices/tech/dalvik/dex-format?hl=zh-cn">Dalvik 可执行文件格式</a><br><a href="https://www.imooc.com/article/317405">应用性能优化之VerifyClass</a></p>
<h2 id="渲染性能优化"><a href="#渲染性能优化" class="headerlink" title="渲染性能优化"></a>渲染性能优化</h2><p>防止因视图层次结构导致性能下降包括两个目标：一个是实现视图层次结构扁平化，一个是减少 <a href="https://developer.android.google.cn/topic/performance/rendering/optimizing-view-hierarchies?hl=zh-cn#double">Double Taxation</a>。布局耗时过长的一个常见原因是，View 对象的层次结构互相嵌套(层级过深)。每个嵌套的布局对象都会增加布局阶段的开销。层次结构越扁平，完成布局阶段所需的时间越少。</p>
<p><strong>优化方案：</strong></p>
<ul>
<li>使用 ConstraintLayout 而非 RelativeLayout 或 LinearLayout，因为这么做通常更高效，并且减少了布局的嵌套。不过，对于可通过 FrameLayout 实现的简单布局，还是建议使用 FrameLayout；</li>
<li>如果使用 RelativeLayout 类，则可通过使用未设权重的嵌套 LinearLayout 视图，以更低的开销达到同样的效果。但是，如果您使用的是嵌套的加权 LinearLayout 视图，则布局开销会高得多，因为它需要多次布局传递；</li>
<li>使用 RecyclerView 而不要使用 ListView，因为前者可以回收各个列表项的布局，这种方式不仅效率更高，而且可以提升滚动性能。</li>
<li>布局中使用 <a href="https://developer.android.google.cn/develop/ui/views/layout/improving-layouts/reusing-layouts?hl=zh-cn#Merge">&lt;merge&gt;</a>来减少布局层次。</li>
<li><a href="https://developer.android.google.cn/develop/ui/views/layout/improving-layouts/loading-ondemand?hl=zh-cn">使用ViewStub延迟加载视图</a></li>
<li><a href="https://developer.android.google.cn/topic/performance/rendering/overdraw?hl=zh-cn#rt">降低透明度</a>，比如一个字体颜色不要使用透明度的值，要使用RGB，而不是ARGB。</li>
<li><a href="https://developer.android.google.cn/topic/performance/rendering/overdraw?hl=zh-cn#rubil">移除布局中不必要的背景</a></li>
</ul>
<p><a href="https://developer.android.google.cn/topic/performance/rendering/optimizing-view-hierarchies?hl=zh-cn">性能和视图层次结构</a><br><a href="https://developer.android.google.cn/jetpack/compose/performance?hl=zh-cn">Jetpack Compose 性能</a><br><a href="https://developer.android.google.cn/topic/performance/rendering/inspect-gpu-rendering?hl=zh-cn#debug_overdraw">检查 GPU 渲染速度和过度绘制</a><br><a href="https://developer.android.google.cn/quality/technical?hl=zh-cn">Android技术质量</a> 是谷歌官方介绍的性能检查和优化措施。</p>
<p>频繁GC：申请大量对象、图片内存占用</p>
<h2 id="包体积优化"><a href="#包体积优化" class="headerlink" title="包体积优化"></a>包体积优化</h2><ul>
<li>so等做成插件</li>
<li><strong>Build &gt; Analyze APK：</strong><a href="https://developer.android.google.cn/studio/debug/apk-analyzer?hl=zh-cn">使用 APK 分析器分析 build</a> &gt; <a href="https://developer.android.google.cn/studio/debug/apk-analyzer?hl=zh-cn#compare_files">比较文件</a> 可以用于了解为什么应用较之先前版本有所增大。</li>
</ul>
<h2 id="性能工具介绍"><a href="#性能工具介绍" class="headerlink" title="性能工具介绍"></a>性能工具介绍</h2><p><del><a href="https://developer.android.google.cn/studio/profile/traceview?hl=zh-cn">Traceview</a></del>(已废弃)<br><a href="https://developer.android.google.cn/studio/profile/cpu-profiler?hl=zh-cn">CPU 性能分析器</a></p>
<h3 id="MethodTracing"><a href="#MethodTracing" class="headerlink" title="MethodTracing"></a>MethodTracing</h3><p>通过<code>MethodTracing</code>可以查看方法调用的耗时，但是method tracing会导致虚拟机运行比正常情况要慢，所以该方式只能查看相对耗时。</p>
<p>使用方法：</p>
<ul>
<li>通过AndroidStudio的Profiler的CPU中可以抓取MethodTracing。</li>
<li>也可以通过代码方式抓取，比如通过下面方式可以分析activity启动耗时：</li>
</ul>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//启动trace日志，比如在点击按键，启动一个Activity之前调用</span></span><br><span class="line">Debug.startMethodTracing(<span class="string">&quot;<span class="subst">$&#123;filesDir.absolutePath&#125;</span>/dmtrace.trace&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//停止日志，放在activity onCreate中即可</span></span><br><span class="line">findViewById&lt;View&gt;(android.R.id.content).viewTreeObserver.addOnPreDrawListener &#123;</span><br><span class="line">    Handler(Looper.getMainLooper()).post &#123;</span><br><span class="line">        Debug.stopMethodTracing()</span><br><span class="line">        Log.d(TAG, <span class="string">&quot;[rjy] stopMethodTracing&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>trace文件导出后，使用AndroidStudio的Profile打开即可查看。</p>
<p><img src="/images/Android/MethodTracing%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="MethodTracing示意图"></p>
<p>相关接口说明：</p>
<ul>
<li><a href="https://developer.android.google.cn/reference/android/os/Debug#startMethodTracing()">startMethodTracing</a></li>
<li><a href="https://developer.android.google.cn/reference/android/os/Debug#startMethodTracingSampling(java.lang.String,%20int,%20int)">startMethodTracingSampling</a></li>
</ul>
<p>参考：<a href="https://developer.android.google.cn/studio/profile/generate-trace-logs?hl=zh-cn">通过对应用插桩生成轨迹日志</a></p>
<h3 id="代码检查：Lint-gt-Performance"><a href="#代码检查：Lint-gt-Performance" class="headerlink" title="代码检查：Lint &gt; Performance"></a>代码检查：Lint &gt; Performance</h3><p>AndroidStudio： Code &gt; Inspect Code 可以启动lint检查，检查示意图：</p>
<p><img src="/images/Android/Lint_Performance.png" alt="Lint Performance示意图"></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://developer.android.google.cn/quality/technical?hl=zh-cn">Android技术质量</a> 是谷歌官方介绍的性能检查和优化措施。<br><a href="https://github.com/JsonChao/Awesome-Android-Performance?tab=readme-ov-file">Awesome-Android-Performance</a><br><a href="https://blog.csdn.net/github_35186068/article/details/86486033">Android 性能优化 - 启动优化</a><br><a href="https://dzone.com/articles/how-to-capture-heap-dump-from-android-app">How to Capture Heap Dump From an Android App</a><br><a href="https://developer.android.com/topic/performance/tracing/navigate-report">浏览 Systrace 报告</a><br><a href="https://source.android.google.cn/devices/tech/dalvik/dex-format?hl=zh-cn">Dalvik 可执行文件格式</a><br><a href="https://www.imooc.com/article/317405">应用性能优化之VerifyClass</a></p>
<h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><ol>
<li>Android Studio-Profiler连接失败，“no supported devices”，可以使用<code>adb root</code>来获取root权限，这样就可以解决连接不上的问题。</li>
</ol>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>C++语法手册</title>
    <url>/posts/66ec960c.html</url>
    <content><![CDATA[<h2 id="using用法"><a href="#using用法" class="headerlink" title="using用法"></a>using用法</h2><ol>
<li><p>导入命名空间</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 导入整个命名空间到当前作用域，这样std::cout就可以写成cout了。</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// 只导入某个变量到当前作用域 </span></span><br><span class="line"><span class="keyword">using</span> std::cout; </span><br></pre></td></tr></table></figure>

<p> 一般头文件中要避免使用using导入命名空间。否则引入这个头文件的也相当于导入了命名空间，容易带来命名冲突。</p>
</li>
<li><p>指定别名，C++11中可以使用using来指定别名，作用与typedef相同</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> T; <span class="comment">// 用 T 代替 int</span></span><br><span class="line"><span class="keyword">using</span> T = <span class="type">int</span>; <span class="comment">// 用 T 代替 int</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>派生类引入基类成员</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span> &#123;</span><br><span class="line"><span class="keyword">protected</span>:  <span class="comment">//此处可以改成public，但不能改成private</span></span><br><span class="line">    <span class="type">int</span> value;</span><br><span class="line">    <span class="type">int</span> name;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Derived</span> : <span class="keyword">private</span> Base &#123; <span class="comment">//Base是私有继承</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//通过Derived的实例可以访问父类的value，但是无法访问父类的name变量</span></span><br><span class="line">    <span class="keyword">using</span> Base::value;  </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><h3 id="static-cast"><a href="#static-cast" class="headerlink" title="static_cast"></a><a href="https://en.cppreference.com/w/cpp/language/static_cast">static_cast</a></h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">D</span> : <span class="keyword">public</span> B &#123;&#125;;</span><br><span class="line"></span><br><span class="line">D d;</span><br><span class="line">B&amp; b = d;</span><br><span class="line">D&amp; newD = <span class="built_in">static_cast</span>&lt;D&amp;&gt;(b);</span><br></pre></td></tr></table></figure>

<p>代码中D和B的继承关系不是虚继承（没有virtual修饰继承关系），如果是虚继承，就无法使用static_cast了。</p>
<h3 id="dynamic-cast"><a href="#dynamic-cast" class="headerlink" title="dynamic_cast"></a><a href="https://en.cppreference.com/w/cpp/language/dynamic_cast">dynamic_cast</a></h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">D</span> : <span class="keyword">virtual</span> <span class="keyword">public</span> B &#123;&#125;;</span><br><span class="line"></span><br><span class="line">D d;</span><br><span class="line">B&amp; b = d;</span><br><span class="line">D&amp; newD = <span class="built_in">dynamic_cast</span>&lt;D&amp;&gt;(b); <span class="comment">// downcast</span></span><br><span class="line"></span><br><span class="line">B&amp; newB = <span class="built_in">dynamic_cast</span>&lt;B&amp;&gt;(d); <span class="comment">//可以成功，但无必要，可以直接使用B&amp; newB = d;效率更高</span></span><br></pre></td></tr></table></figure>

<p>上述代码有两个关键点：1）D与B的继承关系通过virtual修饰；2）B包含虚函数。只有这两个条件同时满足才能使用dynamic_cast。另外与static_cast区别是：static_cast必然成功，而dynamic_cast失败的情况会返回target-type类型的空指针。</p>
<h2 id="值分类"><a href="#值分类" class="headerlink" title="值分类"></a>值分类</h2><p><a href="https://en.cppreference.com/w/cpp/language/value_category">Value categories</a>介绍了 lvalue/prvalue/xvalue/glvalue/rvalue</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines">C++ Core Guidelines</a><br><a href="https://learn.microsoft.com/zh-cn/cpp/cpp/cpp-language-reference?view=msvc-170">C++ 语言参考</a></p>
]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>JetpackCompose key的使用</title>
    <url>/posts/826e5a44.html</url>
    <content><![CDATA[<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Preview</span></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">MyDemo</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> contents <span class="keyword">by</span> remember &#123;</span><br><span class="line">        mutableStateOf(listOf(<span class="string">&quot;str1&quot;</span>, <span class="string">&quot;str0&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    Column(</span><br><span class="line">        modifier = Modifier.fillMaxSize(),</span><br><span class="line">        horizontalAlignment = Alignment.CenterHorizontally</span><br><span class="line">    ) &#123;</span><br><span class="line">        ElevatedButton(onClick = &#123;</span><br><span class="line">            <span class="keyword">val</span> list = mutableListOf&lt;String&gt;()</span><br><span class="line">            list.add(<span class="string">&quot;str<span class="subst">$&#123;contents.size&#125;</span>&quot;</span>)</span><br><span class="line">            list.addAll(contents)</span><br><span class="line">            contents = list</span><br><span class="line">        &#125;) &#123;</span><br><span class="line">            Text(text = <span class="string">&quot;顶部插入&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (txt <span class="keyword">in</span> contents) &#123;</span><br><span class="line">            key(txt) &#123;</span><br><span class="line">                DemoText(text = txt)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        DemoText(text = <span class="string">&quot;Hello1&quot;</span>)</span><br><span class="line">        DemoText(text = <span class="string">&quot;Hello2&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">DemoText</span><span class="params">(text: <span class="type">String</span>)</span></span> &#123;</span><br><span class="line">    Log.d(<span class="string">&quot;SecondActivity&quot;</span>, <span class="string">&quot;[rjy] DemoText=<span class="variable">$text</span>&quot;</span>)</span><br><span class="line">    Text(text = text)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上述代码中，如果不使用<code>key</code>，就会导致每次顶部插入时，for循环内部的组合项都会被重新构造。加上<code>key</code>后，就会只构造text变化的DemoText。另外对于for循环外部的两个DemoText时不会重新构造的，因为这两个组合项的输入参数时不变的。</p>
<p>参考：<a href="https://developer.android.google.cn/jetpack/compose/lifecycle?hl=zh-cn">可组合项的生命周期</a></p>
]]></content>
      <categories>
        <category>JetpackCompose</category>
      </categories>
      <tags>
        <tag>JetpackCompose</tag>
      </tags>
  </entry>
  <entry>
    <title>Shadow插件化框架原理</title>
    <url>/posts/765590d3.html</url>
    <content><![CDATA[<h2 id="sample项目调试"><a href="#sample项目调试" class="headerlink" title="sample项目调试"></a>sample项目调试</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sample-host-debug.apk -&gt; projects/sample/source/sample-host</span><br><span class="line">├── sample-constant -&gt; projects/sample/source/sample-constant</span><br><span class="line">└── sample-host-lib -&gt; projects/sample/source/sample-host-lib</span><br><span class="line"></span><br><span class="line">pluginmanager.apk -&gt; projects/sample/source/sample-manager</span><br><span class="line">└── sample-constant -&gt; projects/sample/source/sample-constant</span><br><span class="line"></span><br><span class="line">sample-runtime-debug.apk -&gt; projects/sample/source/sample-plugin/sample-runtime</span><br><span class="line">└── activity-container -&gt; projects/sdk/core/activity-container (maven)</span><br><span class="line"></span><br><span class="line">sample-loader-debug.apk -&gt; projects/sample/source/sample-plugin/sample-loader</span><br><span class="line">├── sample-host-lib -&gt; projects/sample/source/sample-host-lib (compileOnly)</span><br><span class="line">└── sample-constant -&gt; projects/sample/source/sample-constant</span><br></pre></td></tr></table></figure>

<p>下载Shadow工程后，在根目录执行<code>./gradlew build</code>等待编译成功，然后通过adb安装：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">adb install projects/sample/source/sample-host/build/outputs/apk/debug/sample-host-debug.apk</span><br></pre></td></tr></table></figure>

<p>在sample-host-debug.apk的assets目录下包含<code>pluginmanager.apk</code>和<code>plugin-debug.zip</code>，其中plugin-debug.zip包含的文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── config.json</span><br><span class="line">├── sample-app-plugin-debug.apk</span><br><span class="line">├── sample-app-plugin-debug2.apk</span><br><span class="line">├── sample-base-plugin-debug.apk</span><br><span class="line">├── sample-loader-debug.apk</span><br><span class="line">└── sample-runtime-debug.apk</span><br></pre></td></tr></table></figure>

<p>config.json文件内容如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"> <span class="attr">&quot;compact_version&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">  <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">  <span class="number">3</span></span><br><span class="line"> <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"> <span class="attr">&quot;pluginLoader&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;apkName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sample-loader-debug.apk&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hash&quot;</span><span class="punctuation">:</span> <span class="string">&quot;476180733ADFE69DDBE88CADAD473A4B&quot;</span></span><br><span class="line"> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"> <span class="attr">&quot;plugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;partKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sample-plugin-app&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;apkName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sample-app-plugin-debug.apk&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;dependsOn&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;sample-base&quot;</span></span><br><span class="line">   <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;businessName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sample-plugin-app&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hostWhiteList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;com.tencent.shadow.sample.host.lib&quot;</span></span><br><span class="line">   <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hash&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ECF851E261BF1B8D165D9AEB7C4C3699&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;partKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sample-plugin-app2&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;apkName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sample-app-plugin-debug2.apk&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;dependsOn&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;sample-base&quot;</span></span><br><span class="line">   <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;businessName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sample-plugin-app2&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hostWhiteList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;com.tencent.shadow.sample.host.lib&quot;</span></span><br><span class="line">   <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hash&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ECF851E261BF1B8D165D9AEB7C4C3699&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;partKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sample-base&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;apkName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sample-base-plugin-debug.apk&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;businessName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sample-plugin-app&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hostWhiteList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;com.tencent.shadow.sample.host.lib&quot;</span></span><br><span class="line">   <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hash&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18CA96C8EA499DC657ED6DE44B050728&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"> <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"> <span class="attr">&quot;runtime&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;apkName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sample-runtime-debug.apk&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hash&quot;</span><span class="punctuation">:</span> <span class="string">&quot;364BAB0EB1B8CD345D15D767D1FA8DC7&quot;</span></span><br><span class="line"> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"> <span class="attr">&quot;UUID&quot;</span><span class="punctuation">:</span> <span class="string">&quot;F5574A0D-D937-42C0-93A6-35E190CCA955&quot;</span><span class="punctuation">,</span></span><br><span class="line"> <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line"> <span class="attr">&quot;UUID_NickName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.1.5&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="插件启动过程"><a href="#插件启动过程" class="headerlink" title="插件启动过程"></a>插件启动过程</h2><p>在sample代码中启动插件Activity会通过一个跳板<code>PluginLoadActivity</code>，跳板Activity会展示插件loading view，从而避免插件启动过程中的黑屏给用户带来困惑。</p>
<pre class="mermaid">

zenuml
PluginLoadActivity.&quot;startPlugin run&quot; {
    mPluginManager &#x3D; HostApplication.loadPluginManager {
        PluginManager &#x3D; Shadow.getPluginManager {
            new DynamicPluginManager()
        }
    }
    DynamicPluginManager.enter {
        updateManagerImpl {
            &#x2F;&#x2F;从pluginmanager.apk中加载manager
            new SamplePluginManager()
        }
        SamplePluginManager.enter {
            onStartActivity {
                &quot;展示pluginmanager.apk的loading&quot; {
                    &quot;👇① 子线程run&quot;
                }
            }
        }
    }
}
</pre>

<pre class="mermaid">

zenuml
SamplePluginManager.&quot;☝① onStartActivity run&quot; {
    FastPluginManager.installPlugin
    FastPluginManager.loadPlugin(sample-base) {
        loadPluginLoaderAndRuntime {
            bindPluginProcessService {
                &quot;独立进程启动PluginProcessService&quot;
            }
            loadRunTime {
                PpsController.&quot;👇① loadRuntime&quot;
            }
            loadPluginLoader {
                PpsController.&quot;👇② loadPluginLoader&quot;
            }
        }
        BinderPluginLoader.&quot;👇③ loadPlugin&quot;
    }
    FastPluginManager.loadPlugin(sample-plugin-app)
    FastPluginManager.callApplicationOnCreate(sample-base) {
        BinderPluginLoader.callApplicationOnCreate
    }
    FastPluginManager.callApplicationOnCreate(sample-plugin-app)
    BinderPluginLoader.convertActivityIntent
    BinderPluginLoader.startActivityInPluginProcess
}
</pre>

<h3 id="加载Runtime"><a href="#加载Runtime" class="headerlink" title="加载Runtime"></a>加载Runtime</h3><pre class="mermaid">

zenuml
PluginProcessService.&quot;☝① (binder)loadRuntime&quot; {
    InstalledApk &#x3D; BinderUuidManager.getRuntime
    DynamicRuntime.loadRuntime {
        &quot;runtime挂在ClassLoader parent&quot;
    }
}
</pre>

<p><code>PluginProcessService</code>类位于宿主apk中，但是是在独立进程中启动服务。<br>runtime加载后ClassLoader的结构是：<code>BootClassLoader</code> &lt;- <code>RuntimeClassLoader</code> &lt;- <code>PathClassLoader</code>。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">dalvik.system.PathClassLoader[DexPathList[[zip file &quot;/data/app/~~ENGi6EgoGsbDZ8Ntp66PEg==/com.tencent.shadow.sample.host-tXgX3vZIGlZxM6yNcDzx3A==/base.apk&quot;],nativeLibraryDirectories=[/data/app/~~ENGi6EgoGsbDZ8Ntp66PEg==/com.tencent.shadow.sample.host-tXgX3vZIGlZxM6yNcDzx3A==/lib/x86_64, /system/lib64, /system_ext/lib64]]]</span><br><span class="line">RuntimeClassLoader[DexPathList[[zip file &quot;/data/user/0/com.tencent.shadow.sample.host/files/ShadowPluginManager/UnpackedPlugin/test-dynamic-manager/696fd64a75befe2ff6a0c9e9f2e317e4/plugin-debug.zip/sample-runtime-debug.apk&quot;],nativeLibraryDirectories=[/system/lib64, /system_ext/lib64]]]</span><br><span class="line">java.lang.BootClassLoader@d43cbf0</span><br></pre></td></tr></table></figure>

<h3 id="加载Loader"><a href="#加载Loader" class="headerlink" title="加载Loader"></a>加载Loader</h3><p>loader和runtime一样都是在PluginProcessService中进行加载。</p>
<pre class="mermaid">

zenuml
PluginProcessService.&quot;☝② (binder)loadPluginLoader&quot; {
    PluginProcessService.&quot;InstalledApk &#x3D; BinderUuidManager.getPluginLoader&quot;
    PluginLoaderImpl &#x3D; LoaderImplLoader.load {
        &quot;ApkClassLoader.loadClass(LoaderFactoryImpl)&quot;
        LoaderFactoryImpl.buildLoader {
            new DynamicPluginLoader
            new PluginLoaderBinder(DynamicPluginLoader)
        }
    }
    PluginLoaderBinder.setUuidManager
}
</pre>

<h3 id="加载插件"><a href="#加载插件" class="headerlink" title="加载插件"></a>加载插件</h3><pre class="mermaid">

zenuml
DynamicPluginLoader.&quot;☝③ loadPlugin(binder)&quot; {
    SamplePluginLoader.loadPlugin {
        &quot;ShadowPluginLoader#loadPlugin&quot; {
            &quot;new PluginServiceManager&quot;
            LoadPluginBloc.loadPlugin {
                PluginClassLoader &#x3D; LoadApkBloc.loadPlugin
                &quot;PluginManifest &#x3D; PluginClassLoader.loadPluginManifest&quot;
                &quot;ApplicationInfo &#x3D; CreatePluginApplicationInfoBloc.create&quot;
                &quot;new PluginPackageManagerImpl&quot;
                &quot;Resources &#x3D; CreateResourceBloc.create&quot;
                &quot;new ShadowAppComponentFactory&quot;
                &quot;ShadowApplication &#x3D; CreateApplicationBloc.createShadowApplication&quot;
                ComponentManager.addPluginApkInfo
                &quot;PluginParts注册到map&quot;
                PluginPartInfoManager.addPluginInfo
            }
        }
    }
}
</pre>

<p>每个插件包中都包含一个<code>com.tencent.shadow.core.manifest_parser.PluginManifest</code>类，用户记录当前插件包中有那些activity、service、receiver、provider，加载插件后这些信息会被注册到<code>ComponentManager</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">  activities = <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo[] &#123; </span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.activity.TestActivityReCreate&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>), <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.activity.TestActivitySetTheme&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>), <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.activity.TestActivityOptionMenu&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>), <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.activity.TestActivityOnCreate&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>), <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.activity.TestActivityOrientation&quot;</span>, <span class="number">0</span>, <span class="number">1073742976</span>, <span class="number">16</span>, <span class="number">0</span>), <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.activity.TestActivityWindowSoftMode&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">4</span>, -<span class="number">1</span>), <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.provider.TestDBContentProviderActivity&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>), <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.activity.TestActivityReCreateBySystem&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>), <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.receiver.TestReceiverActivity&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>), <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.receiver.TestDynamicReceiverActivity&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>), </span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.fragment.TestDynamicFragmentActivity&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>), <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.fragment.TestXmlFragmentActivity&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>), <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.dialog.TestDialogActivity&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>), <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.packagemanager.TestPackageManagerActivity&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>), <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.provider.TestFileProviderActivity&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>), <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.application.TestApplicationActivity&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>), <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.context.ActivityContextSubDirTestActivity&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>), <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.context.ApplicationContextSubDirTestActivity&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>), <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.host_communication.PluginUseHostClassActivity&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>), <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.webview.WebViewActivity&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>), </span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ActivityInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.fragment.TestDialogFragmentActivity&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span>) &#125;;</span><br><span class="line">  services = <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ServiceInfo[] &#123; <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ServiceInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.service.HostAddPluginViewService&quot;</span>) &#125;;</span><br><span class="line">  receivers = <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ReceiverInfo[] &#123; <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ReceiverInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.receiver.MyReceiver&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; <span class="string">&quot;com.tencent.test.action&quot;</span> &#125;) &#125;;</span><br><span class="line">  providers = <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ProviderInfo[] &#123; <span class="keyword">new</span> <span class="title class_">PluginManifest</span>.ProviderInfo(<span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.usecases.provider.TestProvider&quot;</span>, <span class="string">&quot;com.tencent.shadow.sample.host.provider.test&quot;</span>, <span class="literal">false</span>) &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="359px" preserveAspectRatio="none" style="width:731px;height:359px;background:#FFFFFF;" version="1.1" viewBox="0 0 731 359" width="731px" zoomAndPan="magnify"><defs/><g><!--class ShadowPluginLoader--><g id="elem_ShadowPluginLoader"><rect codeLine="1" fill="#F1F1F1" height="64.2969" id="ShadowPluginLoader" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="179" x="270" y="147.5"/><ellipse cx="285" cy="163.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M287.3438,159.1719 C286.4063,158.7344 285.8125,158.5938 284.9375,158.5938 C282.3125,158.5938 280.3125,160.6719 280.3125,163.3906 L280.3125,164.5156 C280.3125,167.0938 282.4219,168.9844 285.3125,168.9844 C286.5313,168.9844 287.6875,168.6875 288.4375,168.1406 C289.0156,167.7344 289.3438,167.2813 289.3438,166.8906 C289.3438,166.4375 288.9531,166.0469 288.4844,166.0469 C288.2656,166.0469 288.0625,166.125 287.875,166.3125 C287.4219,166.7969 287.4219,166.7969 287.2344,166.8906 C286.8125,167.1563 286.125,167.2813 285.3594,167.2813 C283.3125,167.2813 282.0156,166.1875 282.0156,164.4844 L282.0156,163.3906 C282.0156,161.6094 283.2656,160.2969 285,160.2969 C285.5781,160.2969 286.1875,160.4531 286.6563,160.7031 C287.1406,160.9844 287.3125,161.2031 287.4063,161.6094 C287.4688,162.0156 287.5,162.1406 287.6406,162.2656 C287.7813,162.4063 288.0156,162.5156 288.2344,162.5156 C288.5,162.5156 288.7656,162.375 288.9375,162.1563 C289.0469,162 289.0781,161.8125 289.0781,161.3906 L289.0781,159.9688 C289.0781,159.5313 289.0625,159.4063 288.9688,159.25 C288.8125,158.9844 288.5313,158.8438 288.2344,158.8438 C287.9375,158.8438 287.7344,158.9375 287.5156,159.25 L287.3438,159.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="299" y="168.3467">ShadowPluginLoader</text><line style="stroke:#181818;stroke-width:0.5;" x1="271" x2="448" y1="179.5" y2="179.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="278" y="190.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="290" y="196.4951">mPluginPartsMap</text><line style="stroke:#181818;stroke-width:0.5;" x1="271" x2="448" y1="203.7969" y2="203.7969"/></g><!--class ComponentManager--><g id="elem_ComponentManager"><rect codeLine="20" fill="#F1F1F1" height="48" id="ComponentManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="178" x="522.5" y="304"/><ellipse cx="537.5" cy="320" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M539.5781,321.8125 L539.9688,322.7969 L539.5781,322.7969 C539.125,322.7969 539.0156,322.8125 538.8594,322.9219 C538.6094,323.0781 538.4531,323.3594 538.4531,323.6563 C538.4531,323.9219 538.5938,324.1719 538.8125,324.3281 C538.9531,324.4531 539.1563,324.5 539.5781,324.5 L541.9375,324.5 C542.2969,324.5 542.5156,324.4688 542.6563,324.375 C542.9063,324.2344 543.0625,323.9375 543.0625,323.6563 C543.0625,323.375 542.9219,323.125 542.7031,322.9688 C542.5313,322.8281 542.375,322.7969 541.9063,322.7969 L538.5156,314.5938 L534.8438,314.5938 C534.3906,314.5938 534.2656,314.6094 534.1094,314.7031 C533.8594,314.875 533.7031,315.1563 533.7031,315.4375 C533.7031,315.7188 533.8438,315.9688 534.0625,316.1406 C534.2344,316.25 534.4063,316.2813 534.8438,316.2813 L535.9219,316.2813 L533.2813,322.7969 C532.8594,322.7969 532.7031,322.8125 532.5469,322.9219 C532.2969,323.0781 532.1406,323.3594 532.1406,323.6563 C532.1406,324.2188 532.5156,324.5 533.2656,324.5 L535.5313,324.5 C535.8906,324.5 536.1094,324.4688 536.2344,324.375 C536.5,324.2344 536.6406,323.9375 536.6406,323.6563 C536.6406,323.375 536.5156,323.125 536.2969,322.9531 C536.125,322.8281 535.9844,322.7969 535.5313,322.7969 L535.1406,322.7969 L535.5313,321.8125 L539.5781,321.8125 Z M538.875,320.1094 L536.2031,320.1094 L537.5469,316.8438 L538.875,320.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="146" x="551.5" y="324.8467">ComponentManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="523.5" x2="699.5" y1="336" y2="336"/><line style="stroke:#181818;stroke-width:0.5;" x1="523.5" x2="699.5" y1="344" y2="344"/></g><!--class PluginServiceManager--><g id="elem_PluginServiceManager"><rect fill="#F1F1F1" height="48" id="PluginServiceManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="189" x="7" y="304"/><ellipse cx="22" cy="320" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,315.6719 C23.4063,315.2344 22.8125,315.0938 21.9375,315.0938 C19.3125,315.0938 17.3125,317.1719 17.3125,319.8906 L17.3125,321.0156 C17.3125,323.5938 19.4219,325.4844 22.3125,325.4844 C23.5313,325.4844 24.6875,325.1875 25.4375,324.6406 C26.0156,324.2344 26.3438,323.7813 26.3438,323.3906 C26.3438,322.9375 25.9531,322.5469 25.4844,322.5469 C25.2656,322.5469 25.0625,322.625 24.875,322.8125 C24.4219,323.2969 24.4219,323.2969 24.2344,323.3906 C23.8125,323.6563 23.125,323.7813 22.3594,323.7813 C20.3125,323.7813 19.0156,322.6875 19.0156,320.9844 L19.0156,319.8906 C19.0156,318.1094 20.2656,316.7969 22,316.7969 C22.5781,316.7969 23.1875,316.9531 23.6563,317.2031 C24.1406,317.4844 24.3125,317.7031 24.4063,318.1094 C24.4688,318.5156 24.5,318.6406 24.6406,318.7656 C24.7813,318.9063 25.0156,319.0156 25.2344,319.0156 C25.5,319.0156 25.7656,318.875 25.9375,318.6563 C26.0469,318.5 26.0781,318.3125 26.0781,317.8906 L26.0781,316.4688 C26.0781,316.0313 26.0625,315.9063 25.9688,315.75 C25.8125,315.4844 25.5313,315.3438 25.2344,315.3438 C24.9375,315.3438 24.7344,315.4375 24.5156,315.75 L24.3438,315.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="36" y="324.8467">PluginServiceManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="195" y1="336" y2="336"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="195" y1="344" y2="344"/></g><!--class PluginContentProviderManager--><g id="elem_PluginContentProviderManager"><rect fill="#F1F1F1" height="48" id="PluginContentProviderManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="256" x="231.5" y="304"/><ellipse cx="246.5" cy="320" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M248.8438,315.6719 C247.9063,315.2344 247.3125,315.0938 246.4375,315.0938 C243.8125,315.0938 241.8125,317.1719 241.8125,319.8906 L241.8125,321.0156 C241.8125,323.5938 243.9219,325.4844 246.8125,325.4844 C248.0313,325.4844 249.1875,325.1875 249.9375,324.6406 C250.5156,324.2344 250.8438,323.7813 250.8438,323.3906 C250.8438,322.9375 250.4531,322.5469 249.9844,322.5469 C249.7656,322.5469 249.5625,322.625 249.375,322.8125 C248.9219,323.2969 248.9219,323.2969 248.7344,323.3906 C248.3125,323.6563 247.625,323.7813 246.8594,323.7813 C244.8125,323.7813 243.5156,322.6875 243.5156,320.9844 L243.5156,319.8906 C243.5156,318.1094 244.7656,316.7969 246.5,316.7969 C247.0781,316.7969 247.6875,316.9531 248.1563,317.2031 C248.6406,317.4844 248.8125,317.7031 248.9063,318.1094 C248.9688,318.5156 249,318.6406 249.1406,318.7656 C249.2813,318.9063 249.5156,319.0156 249.7344,319.0156 C250,319.0156 250.2656,318.875 250.4375,318.6563 C250.5469,318.5 250.5781,318.3125 250.5781,317.8906 L250.5781,316.4688 C250.5781,316.0313 250.5625,315.9063 250.4688,315.75 C250.3125,315.4844 250.0313,315.3438 249.7344,315.3438 C249.4375,315.3438 249.2344,315.4375 249.0156,315.75 L248.8438,315.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="260.5" y="324.8467">PluginContentProviderManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="232.5" x2="486.5" y1="336" y2="336"/><line style="stroke:#181818;stroke-width:0.5;" x1="232.5" x2="486.5" y1="344" y2="344"/></g><!--class SamplePluginLoader--><g id="elem_SamplePluginLoader"><rect fill="#F1F1F1" height="48" id="SamplePluginLoader" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="178" x="56.5" y="155.5"/><ellipse cx="71.5" cy="171.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M73.8438,167.1719 C72.9063,166.7344 72.3125,166.5938 71.4375,166.5938 C68.8125,166.5938 66.8125,168.6719 66.8125,171.3906 L66.8125,172.5156 C66.8125,175.0938 68.9219,176.9844 71.8125,176.9844 C73.0313,176.9844 74.1875,176.6875 74.9375,176.1406 C75.5156,175.7344 75.8438,175.2813 75.8438,174.8906 C75.8438,174.4375 75.4531,174.0469 74.9844,174.0469 C74.7656,174.0469 74.5625,174.125 74.375,174.3125 C73.9219,174.7969 73.9219,174.7969 73.7344,174.8906 C73.3125,175.1563 72.625,175.2813 71.8594,175.2813 C69.8125,175.2813 68.5156,174.1875 68.5156,172.4844 L68.5156,171.3906 C68.5156,169.6094 69.7656,168.2969 71.5,168.2969 C72.0781,168.2969 72.6875,168.4531 73.1563,168.7031 C73.6406,168.9844 73.8125,169.2031 73.9063,169.6094 C73.9688,170.0156 74,170.1406 74.1406,170.2656 C74.2813,170.4063 74.5156,170.5156 74.7344,170.5156 C75,170.5156 75.2656,170.375 75.4375,170.1563 C75.5469,170 75.5781,169.8125 75.5781,169.3906 L75.5781,167.9688 C75.5781,167.5313 75.5625,167.4063 75.4688,167.25 C75.3125,166.9844 75.0313,166.8438 74.7344,166.8438 C74.4375,166.8438 74.2344,166.9375 74.0156,167.25 L73.8438,167.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="85.5" y="176.3467">SamplePluginLoader</text><line style="stroke:#181818;stroke-width:0.5;" x1="57.5" x2="233.5" y1="187.5" y2="187.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="57.5" x2="233.5" y1="195.5" y2="195.5"/></g><!--class PluginComponentLauncher--><g id="elem_PluginComponentLauncher"><rect codeLine="18" fill="#F1F1F1" height="129.4844" id="PluginComponentLauncher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="225" x="499" y="115"/><ellipse cx="514" cy="131" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M514.9531,127.7813 L516.6719,127.7813 C517.0625,127.7813 517.25,127.75 517.375,127.6719 C517.6406,127.5156 517.7813,127.2344 517.7813,126.9375 C517.7813,126.6719 517.6719,126.4063 517.4375,126.2344 C517.2656,126.125 517.125,126.0938 516.6719,126.0938 L511.5313,126.0938 C511.0938,126.0938 510.9688,126.1094 510.8125,126.2031 C510.5625,126.3594 510.4063,126.6563 510.4063,126.9375 C510.4063,127.2188 510.5469,127.4688 510.7656,127.6406 C510.9219,127.75 511.1094,127.7813 511.5313,127.7813 L513.25,127.7813 L513.25,134.2969 L511.5313,134.2969 C511.0938,134.2969 510.9688,134.3125 510.8125,134.4219 C510.5625,134.5781 510.4063,134.8594 510.4063,135.1563 C510.4063,135.4063 510.5469,135.6719 510.7656,135.8281 C510.9219,135.9531 511.125,136 511.5313,136 L516.6719,136 C517.4219,136 517.7813,135.7188 517.7813,135.1563 C517.7813,134.875 517.6719,134.625 517.4375,134.4531 C517.2656,134.3281 517.125,134.2969 516.6719,134.2969 L514.9531,134.2969 L514.9531,127.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="193" x="528" y="135.8467">PluginComponentLauncher</text><line style="stroke:#181818;stroke-width:0.5;" x1="500" x2="723" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="500" x2="723" y1="155" y2="155"/><ellipse cx="510" cy="168.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="519" y="171.9951">startActivity(...)</text><ellipse cx="510" cy="184.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="519" y="188.292">startActivityForResult(...)</text><ellipse cx="510" cy="201.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="519" y="204.5889">startService(...)</text><ellipse cx="510" cy="217.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="519" y="220.8857">stopService(...)</text><ellipse cx="510" cy="233.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="519" y="237.1826">bindService(...)</text></g><!--class ShadowContext--><g id="elem_ShadowContext"><rect fill="#F1F1F1" height="48" id="ShadowContext" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="538.5" y="7"/><ellipse cx="553.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M555.8438,18.6719 C554.9063,18.2344 554.3125,18.0938 553.4375,18.0938 C550.8125,18.0938 548.8125,20.1719 548.8125,22.8906 L548.8125,24.0156 C548.8125,26.5938 550.9219,28.4844 553.8125,28.4844 C555.0313,28.4844 556.1875,28.1875 556.9375,27.6406 C557.5156,27.2344 557.8438,26.7813 557.8438,26.3906 C557.8438,25.9375 557.4531,25.5469 556.9844,25.5469 C556.7656,25.5469 556.5625,25.625 556.375,25.8125 C555.9219,26.2969 555.9219,26.2969 555.7344,26.3906 C555.3125,26.6563 554.625,26.7813 553.8594,26.7813 C551.8125,26.7813 550.5156,25.6875 550.5156,23.9844 L550.5156,22.8906 C550.5156,21.1094 551.7656,19.7969 553.5,19.7969 C554.0781,19.7969 554.6875,19.9531 555.1563,20.2031 C555.6406,20.4844 555.8125,20.7031 555.9063,21.1094 C555.9688,21.5156 556,21.6406 556.1406,21.7656 C556.2813,21.9063 556.5156,22.0156 556.7344,22.0156 C557,22.0156 557.2656,21.875 557.4375,21.6563 C557.5469,21.5 557.5781,21.3125 557.5781,20.8906 L557.5781,19.4688 C557.5781,19.0313 557.5625,18.9063 557.4688,18.75 C557.3125,18.4844 557.0313,18.3438 556.7344,18.3438 C556.4375,18.3438 556.2344,18.4375 556.0156,18.75 L555.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="567.5" y="27.8467">ShadowContext</text><line style="stroke:#181818;stroke-width:0.5;" x1="539.5" x2="683.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="539.5" x2="683.5" y1="47" y2="47"/></g><!--reverse link ShadowPluginLoader to ComponentManager--><g id="link_ShadowPluginLoader_ComponentManager"><path codeLine="4" d="M423.3173,217.6 C470.8503,245.233 528.907,278.9846 571.752,303.8927 " fill="none" id="ShadowPluginLoader-backto-ComponentManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="412.943,211.569,416.1198,218.0426,423.3173,217.6,420.1405,211.1264,412.943,211.569" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ShadowPluginLoader to PluginServiceManager--><g id="link_ShadowPluginLoader_PluginServiceManager"><path codeLine="5" d="M296.8621,217.7143 C279.2261,228.1093 269.731,233.599 251.5,244 C215.438,264.5743 174.137,287.3719 144.015,303.8603 " fill="none" id="ShadowPluginLoader-backto-PluginServiceManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="307.2,211.621,300,211.2217,296.8621,217.7143,304.0622,218.1136,307.2,211.621" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ShadowPluginLoader to PluginContentProviderManager--><g id="link_ShadowPluginLoader_PluginContentProviderManager"><path codeLine="6" d="M359.5,223.569 C359.5,251.118 359.5,278.7429 359.5,303.6652 " fill="none" id="ShadowPluginLoader-backto-PluginContentProviderManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="359.5,211.569,355.5,217.569,359.5,223.569,363.5,217.569,359.5,211.569" style="stroke:#181818;stroke-width:1.0;"/></g><!--link SamplePluginLoader to ShadowPluginLoader--><g id="link_SamplePluginLoader_ShadowPluginLoader"><path codeLine="7" d="M234.527,179.5 C246.244,179.5 239.96,179.5 251.676,179.5 " fill="none" id="SamplePluginLoader-to-ShadowPluginLoader" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="269.676,179.5,251.676,173.5,251.676,185.5,269.676,179.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link PluginComponentLauncher to ComponentManager--><g id="link_PluginComponentLauncher_ComponentManager"><path codeLine="16" d="M598.4828,262.3274 C598.0588,283.4546 599.431,287.6484 601.877,303.7133 " fill="none" id="PluginComponentLauncher-backto-ComponentManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="598.844,244.331,592.484,262.207,604.4816,262.4478,598.844,244.331" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link PluginComponentLauncher to ComponentManager--><g id="link_PluginComponentLauncher_ComponentManager"><path codeLine="21" d="M625.2833,262.3269 C625.7333,283.4541 624.279,287.6484 621.689,303.7133 " fill="none" id="PluginComponentLauncher-backto-ComponentManager-1" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="624.9,244.331,619.2847,262.4547,631.2819,262.1991,624.9,244.331" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ShadowContext to PluginComponentLauncher--><g id="link_ShadowContext_PluginComponentLauncher"><path codeLine="19" d="M611.5,67.213 C611.5,83.35 611.5,93.692 611.5,114.929 " fill="none" id="ShadowContext-backto-PluginComponentLauncher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="611.5,55.213,607.5,61.213,611.5,67.213,615.5,61.213,611.5,55.213" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[bLBB2eCm4BpdAtBi0_s2KYX2JnQaVi4QKmre8ibgMwh_tg0YM2DjSvoTdSmComemXiOvfEeU5NKcPAWWvPg-2BNFe-M0Hg3HNA0Y7N6GTvv70rLMIdA95v2GSRt66u2OwqOm_XCtK1AjRgHL8-nase6oAlXinskFZYo422kWRy3uf3Xw3Q6MB9_Yxgb16_J4K3G2dnlVzxUkmLdfApTrWGl6c6kEgye19qAcCxWZQ-OEhQlVxwd6Mll-7ZXhz9C9YK4D32dh3sBnsL_MtW00]--></g></svg>

<h2 id="宿主进程和插件进程binder"><a href="#宿主进程和插件进程binder" class="headerlink" title="宿主进程和插件进程binder"></a>宿主进程和插件进程binder</h2><p><img src="/images/Shadow/PluginLoaderBinder.drawio.svg" alt="Shadow Binder"></p>
<pre class="mermaid">

zenuml
BinderPluginLoader.startActivityInPluginProcess {
    PluginLoaderBinder.&quot;binder onTransact&quot; {
        DynamicPluginLoader.startActivityInPluginProcess
    }
}
</pre>

<h2 id="Activity插件方案"><a href="#Activity插件方案" class="headerlink" title="Activity插件方案"></a>Activity插件方案</h2><p><a href="https://juejin.cn/post/6844903876655579150">Shadow解决Activity等组件生命周期的方法解析</a>这篇文章是插件框架作者对于Activity生命周期的介绍。</p>
<p>比如插件中有个MainActivity，如下：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="62px" preserveAspectRatio="none" style="width:415px;height:62px;background:#FFFFFF;" version="1.1" viewBox="0 0 415 62" width="415px" zoomAndPan="magnify"><defs/><g><!--class Activity--><g id="elem_Activity"><rect fill="#F1F1F1" height="48" id="Activity" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="88" x="7" y="7"/><ellipse cx="22" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,18.6719 C23.4063,18.2344 22.8125,18.0938 21.9375,18.0938 C19.3125,18.0938 17.3125,20.1719 17.3125,22.8906 L17.3125,24.0156 C17.3125,26.5938 19.4219,28.4844 22.3125,28.4844 C23.5313,28.4844 24.6875,28.1875 25.4375,27.6406 C26.0156,27.2344 26.3438,26.7813 26.3438,26.3906 C26.3438,25.9375 25.9531,25.5469 25.4844,25.5469 C25.2656,25.5469 25.0625,25.625 24.875,25.8125 C24.4219,26.2969 24.4219,26.2969 24.2344,26.3906 C23.8125,26.6563 23.125,26.7813 22.3594,26.7813 C20.3125,26.7813 19.0156,25.6875 19.0156,23.9844 L19.0156,22.8906 C19.0156,21.1094 20.2656,19.7969 22,19.7969 C22.5781,19.7969 23.1875,19.9531 23.6563,20.2031 C24.1406,20.4844 24.3125,20.7031 24.4063,21.1094 C24.4688,21.5156 24.5,21.6406 24.6406,21.7656 C24.7813,21.9063 25.0156,22.0156 25.2344,22.0156 C25.5,22.0156 25.7656,21.875 25.9375,21.6563 C26.0469,21.5 26.0781,21.3125 26.0781,20.8906 L26.0781,19.4688 C26.0781,19.0313 26.0625,18.9063 25.9688,18.75 C25.8125,18.4844 25.5313,18.3438 25.2344,18.3438 C24.9375,18.3438 24.7344,18.4375 24.5156,18.75 L24.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="36" y="27.8467">Activity</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="94" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="94" y1="47" y2="47"/></g><!--class BaseActivity--><g id="elem_BaseActivity"><rect fill="#F1F1F1" height="48" id="BaseActivity" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="122" x="130" y="7"/><ellipse cx="145" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M147.3438,18.6719 C146.4063,18.2344 145.8125,18.0938 144.9375,18.0938 C142.3125,18.0938 140.3125,20.1719 140.3125,22.8906 L140.3125,24.0156 C140.3125,26.5938 142.4219,28.4844 145.3125,28.4844 C146.5313,28.4844 147.6875,28.1875 148.4375,27.6406 C149.0156,27.2344 149.3438,26.7813 149.3438,26.3906 C149.3438,25.9375 148.9531,25.5469 148.4844,25.5469 C148.2656,25.5469 148.0625,25.625 147.875,25.8125 C147.4219,26.2969 147.4219,26.2969 147.2344,26.3906 C146.8125,26.6563 146.125,26.7813 145.3594,26.7813 C143.3125,26.7813 142.0156,25.6875 142.0156,23.9844 L142.0156,22.8906 C142.0156,21.1094 143.2656,19.7969 145,19.7969 C145.5781,19.7969 146.1875,19.9531 146.6563,20.2031 C147.1406,20.4844 147.3125,20.7031 147.4063,21.1094 C147.4688,21.5156 147.5,21.6406 147.6406,21.7656 C147.7813,21.9063 148.0156,22.0156 148.2344,22.0156 C148.5,22.0156 148.7656,21.875 148.9375,21.6563 C149.0469,21.5 149.0781,21.3125 149.0781,20.8906 L149.0781,19.4688 C149.0781,19.0313 149.0625,18.9063 148.9688,18.75 C148.8125,18.4844 148.5313,18.3438 148.2344,18.3438 C147.9375,18.3438 147.7344,18.4375 147.5156,18.75 L147.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="159" y="27.8467">BaseActivity</text><line style="stroke:#181818;stroke-width:0.5;" x1="131" x2="251" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="131" x2="251" y1="47" y2="47"/></g><!--class MainActivity--><g id="elem_MainActivity"><rect fill="#F1F1F1" height="48" id="MainActivity" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="287.5" y="7"/><ellipse cx="302.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M304.8438,18.6719 C303.9063,18.2344 303.3125,18.0938 302.4375,18.0938 C299.8125,18.0938 297.8125,20.1719 297.8125,22.8906 L297.8125,24.0156 C297.8125,26.5938 299.9219,28.4844 302.8125,28.4844 C304.0313,28.4844 305.1875,28.1875 305.9375,27.6406 C306.5156,27.2344 306.8438,26.7813 306.8438,26.3906 C306.8438,25.9375 306.4531,25.5469 305.9844,25.5469 C305.7656,25.5469 305.5625,25.625 305.375,25.8125 C304.9219,26.2969 304.9219,26.2969 304.7344,26.3906 C304.3125,26.6563 303.625,26.7813 302.8594,26.7813 C300.8125,26.7813 299.5156,25.6875 299.5156,23.9844 L299.5156,22.8906 C299.5156,21.1094 300.7656,19.7969 302.5,19.7969 C303.0781,19.7969 303.6875,19.9531 304.1563,20.2031 C304.6406,20.4844 304.8125,20.7031 304.9063,21.1094 C304.9688,21.5156 305,21.6406 305.1406,21.7656 C305.2813,21.9063 305.5156,22.0156 305.7344,22.0156 C306,22.0156 306.2656,21.875 306.4375,21.6563 C306.5469,21.5 306.5781,21.3125 306.5781,20.8906 L306.5781,19.4688 C306.5781,19.0313 306.5625,18.9063 306.4688,18.75 C306.3125,18.4844 306.0313,18.3438 305.7344,18.3438 C305.4375,18.3438 305.2344,18.4375 305.0156,18.75 L304.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="316.5" y="27.8467">MainActivity</text><line style="stroke:#181818;stroke-width:0.5;" x1="288.5" x2="407.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="288.5" x2="407.5" y1="47" y2="47"/></g><!--reverse link Activity to BaseActivity--><g id="link_Activity_BaseActivity"><path codeLine="1" d="M113.0234,31 C124.6456,31 118.268,31 129.89,31 " fill="none" id="Activity-backto-BaseActivity" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="95.0234,31,113.0234,37,113.0234,25,95.0234,31" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BaseActivity to MainActivity--><g id="link_BaseActivity_MainActivity"><path codeLine="2" d="M270.021,31 C281.769,31 275.516,31 287.264,31 " fill="none" id="BaseActivity-backto-MainActivity" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="252.021,31,270.021,37,270.021,25,252.021,31" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[SqmkoIpBBAbKiAdHLN1AB4vrX0fm8NF0ihw9cNam0G00]--></g></svg>

<p>经过<code>Javassist</code>处理后类图结构(替换代码实现在<code>com.tencent.shadow.core.transform.specific.ActivityTransform</code>)：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="62px" preserveAspectRatio="none" style="width:471px;height:62px;background:#FFFFFF;" version="1.1" viewBox="0 0 471 62" width="471px" zoomAndPan="magnify"><defs/><g><!--class ShadowActivity--><g id="elem_ShadowActivity"><rect fill="#F1F1F1" height="48" id="ShadowActivity" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="143" x="7" y="7"/><ellipse cx="22" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,18.6719 C23.4063,18.2344 22.8125,18.0938 21.9375,18.0938 C19.3125,18.0938 17.3125,20.1719 17.3125,22.8906 L17.3125,24.0156 C17.3125,26.5938 19.4219,28.4844 22.3125,28.4844 C23.5313,28.4844 24.6875,28.1875 25.4375,27.6406 C26.0156,27.2344 26.3438,26.7813 26.3438,26.3906 C26.3438,25.9375 25.9531,25.5469 25.4844,25.5469 C25.2656,25.5469 25.0625,25.625 24.875,25.8125 C24.4219,26.2969 24.4219,26.2969 24.2344,26.3906 C23.8125,26.6563 23.125,26.7813 22.3594,26.7813 C20.3125,26.7813 19.0156,25.6875 19.0156,23.9844 L19.0156,22.8906 C19.0156,21.1094 20.2656,19.7969 22,19.7969 C22.5781,19.7969 23.1875,19.9531 23.6563,20.2031 C24.1406,20.4844 24.3125,20.7031 24.4063,21.1094 C24.4688,21.5156 24.5,21.6406 24.6406,21.7656 C24.7813,21.9063 25.0156,22.0156 25.2344,22.0156 C25.5,22.0156 25.7656,21.875 25.9375,21.6563 C26.0469,21.5 26.0781,21.3125 26.0781,20.8906 L26.0781,19.4688 C26.0781,19.0313 26.0625,18.9063 25.9688,18.75 C25.8125,18.4844 25.5313,18.3438 25.2344,18.3438 C24.9375,18.3438 24.7344,18.4375 24.5156,18.75 L24.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="36" y="27.8467">ShadowActivity</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="149" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="149" y1="47" y2="47"/></g><!--class BaseActivity--><g id="elem_BaseActivity"><rect fill="#F1F1F1" height="48" id="BaseActivity" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="122" x="185.5" y="7"/><ellipse cx="200.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M202.8438,18.6719 C201.9063,18.2344 201.3125,18.0938 200.4375,18.0938 C197.8125,18.0938 195.8125,20.1719 195.8125,22.8906 L195.8125,24.0156 C195.8125,26.5938 197.9219,28.4844 200.8125,28.4844 C202.0313,28.4844 203.1875,28.1875 203.9375,27.6406 C204.5156,27.2344 204.8438,26.7813 204.8438,26.3906 C204.8438,25.9375 204.4531,25.5469 203.9844,25.5469 C203.7656,25.5469 203.5625,25.625 203.375,25.8125 C202.9219,26.2969 202.9219,26.2969 202.7344,26.3906 C202.3125,26.6563 201.625,26.7813 200.8594,26.7813 C198.8125,26.7813 197.5156,25.6875 197.5156,23.9844 L197.5156,22.8906 C197.5156,21.1094 198.7656,19.7969 200.5,19.7969 C201.0781,19.7969 201.6875,19.9531 202.1563,20.2031 C202.6406,20.4844 202.8125,20.7031 202.9063,21.1094 C202.9688,21.5156 203,21.6406 203.1406,21.7656 C203.2813,21.9063 203.5156,22.0156 203.7344,22.0156 C204,22.0156 204.2656,21.875 204.4375,21.6563 C204.5469,21.5 204.5781,21.3125 204.5781,20.8906 L204.5781,19.4688 C204.5781,19.0313 204.5625,18.9063 204.4688,18.75 C204.3125,18.4844 204.0313,18.3438 203.7344,18.3438 C203.4375,18.3438 203.2344,18.4375 203.0156,18.75 L202.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="214.5" y="27.8467">BaseActivity</text><line style="stroke:#181818;stroke-width:0.5;" x1="186.5" x2="306.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="186.5" x2="306.5" y1="47" y2="47"/></g><!--class MainActivity--><g id="elem_MainActivity"><rect fill="#F1F1F1" height="48" id="MainActivity" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="343" y="7"/><ellipse cx="358" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M360.3438,18.6719 C359.4063,18.2344 358.8125,18.0938 357.9375,18.0938 C355.3125,18.0938 353.3125,20.1719 353.3125,22.8906 L353.3125,24.0156 C353.3125,26.5938 355.4219,28.4844 358.3125,28.4844 C359.5313,28.4844 360.6875,28.1875 361.4375,27.6406 C362.0156,27.2344 362.3438,26.7813 362.3438,26.3906 C362.3438,25.9375 361.9531,25.5469 361.4844,25.5469 C361.2656,25.5469 361.0625,25.625 360.875,25.8125 C360.4219,26.2969 360.4219,26.2969 360.2344,26.3906 C359.8125,26.6563 359.125,26.7813 358.3594,26.7813 C356.3125,26.7813 355.0156,25.6875 355.0156,23.9844 L355.0156,22.8906 C355.0156,21.1094 356.2656,19.7969 358,19.7969 C358.5781,19.7969 359.1875,19.9531 359.6563,20.2031 C360.1406,20.4844 360.3125,20.7031 360.4063,21.1094 C360.4688,21.5156 360.5,21.6406 360.6406,21.7656 C360.7813,21.9063 361.0156,22.0156 361.2344,22.0156 C361.5,22.0156 361.7656,21.875 361.9375,21.6563 C362.0469,21.5 362.0781,21.3125 362.0781,20.8906 L362.0781,19.4688 C362.0781,19.0313 362.0625,18.9063 361.9688,18.75 C361.8125,18.4844 361.5313,18.3438 361.2344,18.3438 C360.9375,18.3438 360.7344,18.4375 360.5156,18.75 L360.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="372" y="27.8467">MainActivity</text><line style="stroke:#181818;stroke-width:0.5;" x1="344" x2="463" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="344" x2="463" y1="47" y2="47"/></g><!--reverse link ShadowActivity to BaseActivity--><g id="link_ShadowActivity_BaseActivity"><path codeLine="1" d="M168.031,31 C179.839,31 173.646,31 185.453,31 " fill="none" id="ShadowActivity-backto-BaseActivity" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="150.031,31,168.031,37,168.031,25,150.031,31" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BaseActivity to MainActivity--><g id="link_BaseActivity_MainActivity"><path codeLine="2" d="M325.521,31 C337.269,31 331.016,31 342.764,31 " fill="none" id="BaseActivity-backto-MainActivity" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="307.521,31,325.521,37,325.521,25,307.521,31" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[2yv8JCalTqmkoIpBBAbKiAdHLN1AB4w52N0XSy2olecPUJ010000]--></g></svg>

<p>下面看下整个Activity的详细继承关系，包括插件Activity与壳子Activity的关系：</p>
<p><img src="/images/Shadow/%E6%8F%92%E4%BB%B6Activity%E7%BB%A7%E6%89%BF%E5%85%B3%E7%B3%BB.drawio.svg" alt="插件Activity继承关系"></p>
<h3 id="启动其他插件Activity"><a href="#启动其他插件Activity" class="headerlink" title="启动其他插件Activity"></a>启动其他插件Activity</h3><p><code>com.tencent.shadow.core.runtime.ShadowContext#startActivity</code></p>
<pre class="mermaid">

zenuml
ShadowContext.startActivity {
    ComponentManager.startActivity {
        &quot;pluginIntent.toActivityContainerIntent&quot;
        ShadowContext.superStartActivity
    }
}
</pre>

<p>Activity的启动时会把目标Activity替换成<code>PluginDefaultProxyActivity</code>，即<code>PluginContainerActivity</code>。比如，我们通过如下方式启动一个插件中的Activity：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">intent.setClassName(<span class="built_in">this</span>, <span class="string">&quot;com.tencent.shadow.sample.plugin.app.lib.gallery.splash.SplashActivity&quot;</span>);</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure>

<p>经过ComponentManager转换后的Intent是：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">Intent &#123; cmp=com.tencent.shadow.sample.host/com.tencent.shadow.sample.plugin.runtime.PluginDefaultProxyActivity (has extras) &#125;</span><br></pre></td></tr></table></figure>

<h2 id="资源的处理"><a href="#资源的处理" class="headerlink" title="资源的处理"></a>资源的处理</h2><p>资源的生成逻辑在<code>com.tencent.shadow.core.loader.blocs.CreateResourceBloc#create</code>中。<br>当Android版本高于8.1时，ApplicationInfo#sharedLibraryFiles添加了插件apk路径来实现：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sharedLibraryFiles=[</span><br><span class="line">    /system/framework/android.test.base.jar,</span><br><span class="line">    /product/app/WebViewGoogle/WebViewGoogle.apk,</span><br><span class="line">    /product/app/TrichromeLibrary/TrichromeLibrary.apk, </span><br><span class="line">    /product/overlay/EmulationPixel6/EmulationPixel6Overlay.apk, </span><br><span class="line">    /product/overlay/NavigationBarModeGestural/NavigationBarModeGesturalOverlay.apk,</span><br><span class="line">    /data/user/0/com.tencent.shadow.sample.host/files/ShadowPluginManager/UnpackedPlugin/test-dynamic-manager/c9329f69c23a75baeb87a9adb567fafe/plugin-debug.zip/sample-base-plugin-debug.apk]</span><br><span class="line">sourceDir=/data/app/~~tt8RnZsUIq-XZDgF1_e6Gw==/com.tencent.shadow.sample.host-IUAuR_XOsVpJONVyM0Z26w==/base.apk</span><br><span class="line">publicSourceDir=/data/app/~~tt8RnZsUIq-XZDgF1_e6Gw==/com.tencent.shadow.sample.host-IUAuR_XOsVpJONVyM0Z26w==/base.apk</span><br></pre></td></tr></table></figure>

<p>然后通过<code>packageManager.getResourcesForApplication(applicationInfo)</code>来生成新的Resources。</p>
<p>如果Android版本<strong>不</strong>高于8.1，则通过自定义<code>MixResources</code>同时持有宿主和插件的资源，当获取资源时首先获取宿主的，当获取不到时再从插件中获取。</p>
<p>资源句柄最终会赋值给<code>com.tencent.shadow.core.runtime.ShadowContext#mPluginResources</code>。</p>
<p>为了解决合并资源后资源ID的冲突，Shadow把插件的资源ID的package-id字段给位了0x7E，可以看下sample-app项目下面的的build.gradle的配置：</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 将插件的资源ID分区改为和宿主0x7F不同的值</span></span><br><span class="line">aaptOptions &#123;</span><br><span class="line">    additionalParameters <span class="string">&quot;--package-id&quot;</span>, <span class="string">&quot;0x7E&quot;</span>, <span class="string">&quot;--allow-reserved-package-id&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="在Sample中添加插件"><a href="#在Sample中添加插件" class="headerlink" title="在Sample中添加插件"></a>在Sample中添加插件</h2><p>插件目录<code>projects/sample/source/sample-plugin/my-plugin-app</code>。需要注意的一点是shadow字段不要添加到<code>my-plugin-app/build.gradle</code>，而是要添加到<code>projects/sample/source/sample-plugin/sample-app/build.gradle</code>中，如下：</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">shadow &#123;</span><br><span class="line">    packagePlugin &#123;</span><br><span class="line">        pluginTypes &#123;</span><br><span class="line">            debug &#123;</span><br><span class="line">                loaderApkConfig = <span class="keyword">new</span> Tuple2(<span class="string">&#x27;sample-loader-debug.apk&#x27;</span>, <span class="string">&#x27;:sample-loader:assembleDebug&#x27;</span>)</span><br><span class="line">                runtimeApkConfig = <span class="keyword">new</span> Tuple2(<span class="string">&#x27;sample-runtime-debug.apk&#x27;</span>, <span class="string">&#x27;:sample-runtime:assembleDebug&#x27;</span>)</span><br><span class="line">                pluginApks &#123;</span><br><span class="line">                    pluginApk1 &#123;</span><br><span class="line">                        businessName = <span class="string">&#x27;sample-plugin-app&#x27;</span></span><br><span class="line">                        partKey = <span class="string">&#x27;sample-plugin-app&#x27;</span></span><br><span class="line">                        buildTask = <span class="string">&#x27;:sample-app:assemblePluginDebug&#x27;</span></span><br><span class="line">                        apkPath = <span class="string">&#x27;projects/sample/source/sample-plugin/sample-app/build/outputs/apk/plugin/debug/sample-app-plugin-debug.apk&#x27;</span></span><br><span class="line">                        hostWhiteList = [<span class="string">&quot;com.tencent.shadow.sample.host.lib&quot;</span>]</span><br><span class="line">                        dependsOn = [<span class="string">&#x27;sample-base&#x27;</span>]</span><br><span class="line">                    &#125;</span><br><span class="line">                    ......</span><br><span class="line">                    pluginApk3 &#123; <span class="comment">//这是我添加的插件</span></span><br><span class="line">                        businessName = <span class="string">&#x27;my-plugin-app&#x27;</span></span><br><span class="line">                        partKey = <span class="string">&#x27;my-plugin-app&#x27;</span></span><br><span class="line">                        buildTask = <span class="string">&#x27;:my-plugin-app:assemblePluginDebug&#x27;</span></span><br><span class="line">                        apkPath = <span class="string">&#x27;projects/sample/source/sample-plugin/my-plugin-app/build/outputs/apk/plugin/debug/my-plugin-app-plugin-debug.apk&#x27;</span></span><br><span class="line">                        hostWhiteList = [<span class="string">&quot;com.tencent.shadow.sample.host.lib&quot;</span>]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            release &#123;</span><br><span class="line">                ......</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        loaderApkProjectPath = <span class="string">&#x27;projects/sample/source/sample-plugin/sample-loader&#x27;</span></span><br><span class="line">        runtimeApkProjectPath = <span class="string">&#x27;projects/sample/source/sample-plugin/sample-runtime&#x27;</span></span><br><span class="line"></span><br><span class="line">        archiveSuffix = System.getenv(<span class="string">&quot;PluginSuffix&quot;</span>) ?: <span class="string">&quot;&quot;</span></span><br><span class="line">        archivePrefix = <span class="string">&#x27;plugin&#x27;</span></span><br><span class="line">        <span class="keyword">destinationDir</span> = <span class="string">&quot;$&#123;getRootProject().getBuildDir()&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">        version = <span class="number">4</span></span><br><span class="line">        compactVersion = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">        uuidNickName = <span class="string">&quot;1.1.5&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>插件apk的applicationId的配置：</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">&#x27;me.rjy.android.shadow.app&#x27;</span> <span class="comment">//可以与宿主不同</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 将插件applicationId设置为和宿主相同</span></span><br><span class="line">    productFlavors &#123;</span><br><span class="line">        plugin &#123;</span><br><span class="line">            applicationId <span class="keyword">project</span>.SAMPLE_HOST_APP_APPLICATION_ID  <span class="comment">//必须与宿主相同</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br></pre></td></tr></table></figure>

<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://github.com/Tencent/Shadow/wiki">Home Wiki</a><br><a href="https://github.com/Tencent/Shadow/blob/master/projects/sample/README.md">Sample Readme</a><br><a href="https://juejin.cn/post/6844903876655579150">Shadow解决Activity等组件生命周期的方法解析</a><br><a href="https://juejin.cn/post/7244810003576324157">Android插件化框架-Shadow原理解析</a><br><a href="https://juejin.cn/post/6844903975381270536">腾讯插件框架Shadow解析之动态化和插件加载</a><br><a href="https://juejin.cn/post/7160545636280958983">Shadow的接入记录</a><br><a href="https://www.jianshu.com/p/f00dc837227f">Android Tencent Shadow 插件接入指南</a></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>插件化</tag>
      </tags>
  </entry>
  <entry>
    <title>Excel常用函数算法</title>
    <url>/posts/62746.html</url>
    <content><![CDATA[<h2 id="字符串截取"><a href="#字符串截取" class="headerlink" title="字符串截取"></a>字符串截取</h2><h3 id="IP格式字符串截取前两段"><a href="#IP格式字符串截取前两段" class="headerlink" title="IP格式字符串截取前两段"></a>IP格式字符串截取前两段</h3><p>本算法可以适用于192.178.1.1或者1.20.0.7557等格式字符串</p>
<figure class="highlight excel"><table><tr><td class="code"><pre><span class="line">=<span class="built_in">LEFT</span>(<span class="symbol">C1</span>,<span class="built_in">IFERROR</span>(<span class="built_in">FIND</span>(<span class="string">&quot;.&quot;</span>,<span class="symbol">C1</span>,<span class="built_in">FIND</span>(<span class="string">&quot;.&quot;</span>,<span class="symbol">C1</span>)+<span class="number">1</span>)-<span class="number">1</span>,<span class="number">100</span>))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Office</category>
      </categories>
      <tags>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title>ANR分析</title>
    <url>/posts/45980.html</url>
    <content><![CDATA[<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul>
<li><a href="https://developer.android.com/topic/performance/vitals/anr">ANRs (Google)</a></li>
<li><a href="http://zenandroid.io/deadlocks-and-anrs/">Deadlocks and ANRs</a></li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Android调试</tag>
      </tags>
  </entry>
  <entry>
    <title>APK 反编译</title>
    <url>/posts/24313.html</url>
    <content><![CDATA[<h2 id="使用的工具"><a href="#使用的工具" class="headerlink" title="使用的工具"></a>使用的工具</h2><ul>
<li><a href="https://ibotpeaches.github.io/Apktool/">apktool</a></li>
<li><a href="https://github.com/pxb1988/dex2jar">dex2jar</a></li>
<li><a href="https://github.com/java-decompiler/jd-gui">JD-GUI</a></li>
</ul>
<h2 id="dex转换为jar"><a href="#dex转换为jar" class="headerlink" title="dex转换为jar"></a>dex转换为jar</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">d2j-dex2jar.sh -f ~/path/to/apk_to_decompile.apk</span><br></pre></td></tr></table></figure>

<p>生成jar包后，需要使用<a href="https://github.com/java-decompiler/jd-gui">JD-GUI</a>打开查看</p>
<p>在macos上打开JD-GUI可能会报下面错误：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">No suitable Java version found on your system!</span><br><span class="line">This program requires Java 1.8+</span><br><span class="line">Make sure you install the required Java version.</span><br></pre></td></tr></table></figure>

<p>解决方案：在JD-GUI应用程序右击，然后选择“显示包内容”，然后打开<code>Contents/MacOS/universalJavaApplicationStub.sh</code>文件，找到这个报错的打印位置，把JAVA_HOME赋值为jdk home路径即可。</p>
<h2 id="反编译为Smali"><a href="#反编译为Smali" class="headerlink" title="反编译为Smali"></a>反编译为Smali</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">java -jar apktool_2.8.1.jar decode -o apk_smali app.apk</span><br></pre></td></tr></table></figure>

<h2 id="提取APK中的资源文件"><a href="#提取APK中的资源文件" class="headerlink" title="提取APK中的资源文件"></a>提取APK中的资源文件</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">java -jar apktool_2.8.1.jar decode app.apk</span><br></pre></td></tr></table></figure>

<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://segmentfault.com/a/1190000004703783">apk包的破解与反编译</a></li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Android调试</tag>
      </tags>
  </entry>
  <entry>
    <title>Android应用进程启动流程</title>
    <url>/posts/60405.html</url>
    <content><![CDATA[<p>本文基于Android8.0源码。</p>
<h2 id="启动流程图"><a href="#启动流程图" class="headerlink" title="启动流程图"></a>启动流程图</h2><p>点击可以看大图</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="2035px" preserveAspectRatio="none" style="width:2278px;height:2035px;background:#FFFFFF;" version="1.1" viewBox="0 0 2278 2035" width="2278px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="169.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="152" y="1770.0625"/><rect fill="#FFFFFF" height="936.5156" style="stroke:#181818;stroke-width:1.0;" width="10" x="345" y="351.6563"/><rect fill="#FFFFFF" height="878.25" style="stroke:#181818;stroke-width:1.0;" width="10" x="543" y="380.7891"/><rect fill="#FFFFFF" height="841.1172" style="stroke:#181818;stroke-width:1.0;" width="10" x="548" y="417.9219"/><rect fill="#FFFFFF" height="432.5234" style="stroke:#181818;stroke-width:1.0;" width="10" x="553" y="502.1875"/><rect fill="#FFFFFF" height="280.1953" style="stroke:#181818;stroke-width:1.0;" width="10" x="553" y="978.8438"/><rect fill="#FFFFFF" height="378.3906" style="stroke:#181818;stroke-width:1.0;" width="10" x="765" y="536.3203"/><rect fill="#FFFFFF" height="236.6953" style="stroke:#181818;stroke-width:1.0;" width="10" x="948" y="648.8828"/><rect fill="#FFFFFF" height="338.2266" style="stroke:#181818;stroke-width:1.0;" width="10" x="1069" y="1652.5"/><rect fill="#FFFFFF" height="203.6641" style="stroke:#181818;stroke-width:1.0;" width="10" x="1074" y="1735.9297"/><rect fill="#FFFFFF" height="631.2891" style="stroke:#181818;stroke-width:1.0;" width="10" x="1392.5" y="1359.4375"/><rect fill="#FFFFFF" height="883.25" style="stroke:#181818;stroke-width:1.0;" width="10" x="1550.5" y="246.2578"/><rect fill="#FFFFFF" height="193.5625" style="stroke:#181818;stroke-width:1.0;" width="10" x="1555.5" y="678.0156"/><rect fill="#FFFFFF" height="135.4297" style="stroke:#181818;stroke-width:1.0;" width="10" x="1560.5" y="715.1484"/><rect fill="#FFFFFF" height="66.2969" style="stroke:#181818;stroke-width:1.0;" width="10" x="1565.5" y="757.2813"/><rect fill="#FFFFFF" height="158.6641" style="stroke:#181818;stroke-width:1.0;" width="10" x="1725.5" y="1071.2422"/><rect fill="#FFFFFF" height="63.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="1730.5" y="1166.6406"/><rect fill="#FFFFFF" height="665.4219" style="stroke:#181818;stroke-width:1.0;" width="10" x="1725.5" y="1325.3047"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="1925.5" y="1100.375"/><rect fill="#FFFFFF" height="113.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="2018" y="1430.7031"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="157" x2="157" y1="36.2969" y2="1999.7266"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="349.5" x2="349.5" y1="36.2969" y2="1999.7266"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="547.5" x2="547.5" y1="36.2969" y2="1999.7266"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="770" x2="770" y1="36.2969" y2="1999.7266"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="953" x2="953" y1="574.9688" y2="1999.7266"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="1074" x2="1074" y1="36.2969" y2="1999.7266"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="1268.5" x2="1268.5" y1="1696.1484" y2="1999.7266"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="1397.5" x2="1397.5" y1="36.2969" y2="1999.7266"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="1555" x2="1555" y1="106.0781" y2="1999.7266"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="1730" x2="1730" y1="800.9297" y2="1999.7266"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="1930.5" x2="1930.5" y1="36.2969" y2="1999.7266"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="2022.5" x2="2022.5" y1="36.2969" y2="1999.7266"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="184" x="65" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="72" y="24.9951">ActivityManagerService</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="184" x="65" y="1998.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="72" y="2018.7217">ActivityManagerService</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="69" x="315.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="55" x="322.5" y="24.9951">Process</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="69" x="315.5" y="1998.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="55" x="322.5" y="2018.7217">Process</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="487.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="494.5" y="24.9951">ZygoteProcess</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="487.5" y="1998.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="494.5" y="2018.7217">ZygoteProcess</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="106" x="717" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="724" y="24.9951">ZygoteState</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="106" x="717" y="1998.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="724" y="2018.7217">ZygoteState</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="102" x="902" y="1998.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="909" y="2018.7217">LocalSocket</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="120" x="1014" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="1021" y="24.9951">ActivityThread</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="120" x="1014" y="1998.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="1021" y="2018.7217">ActivityThread</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="147" x="1195.5" y="1998.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="1202.5" y="2018.7217">ApplicationThread</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="90" x="1352.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="1359.5" y="24.9951">ZygoteInit</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="90" x="1352.5" y="1998.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="1359.5" y="2018.7217">ZygoteInit</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="113" x="1499" y="1998.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="1506" y="2018.7217">ZygoteServer</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="149" x="1656" y="1998.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="1663" y="2018.7217">ZygoteConnection</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="66" x="1897.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="1904.5" y="24.9951">Zygote</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="66" x="1897.5" y="1998.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="1904.5" y="2018.7217">Zygote</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="99" x="1973.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="1980.5" y="24.9951">RuntimeInit</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="99" x="1973.5" y="1998.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="1980.5" y="2018.7217">RuntimeInit</text><rect fill="#FFFFFF" height="169.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="152" y="1770.0625"/><rect fill="#FFFFFF" height="936.5156" style="stroke:#181818;stroke-width:1.0;" width="10" x="345" y="351.6563"/><rect fill="#FFFFFF" height="878.25" style="stroke:#181818;stroke-width:1.0;" width="10" x="543" y="380.7891"/><rect fill="#FFFFFF" height="841.1172" style="stroke:#181818;stroke-width:1.0;" width="10" x="548" y="417.9219"/><rect fill="#FFFFFF" height="432.5234" style="stroke:#181818;stroke-width:1.0;" width="10" x="553" y="502.1875"/><rect fill="#FFFFFF" height="280.1953" style="stroke:#181818;stroke-width:1.0;" width="10" x="553" y="978.8438"/><rect fill="#FFFFFF" height="378.3906" style="stroke:#181818;stroke-width:1.0;" width="10" x="765" y="536.3203"/><rect fill="#FFFFFF" height="236.6953" style="stroke:#181818;stroke-width:1.0;" width="10" x="948" y="648.8828"/><rect fill="#FFFFFF" height="338.2266" style="stroke:#181818;stroke-width:1.0;" width="10" x="1069" y="1652.5"/><rect fill="#FFFFFF" height="203.6641" style="stroke:#181818;stroke-width:1.0;" width="10" x="1074" y="1735.9297"/><rect fill="#FFFFFF" height="631.2891" style="stroke:#181818;stroke-width:1.0;" width="10" x="1392.5" y="1359.4375"/><rect fill="#FFFFFF" height="883.25" style="stroke:#181818;stroke-width:1.0;" width="10" x="1550.5" y="246.2578"/><rect fill="#FFFFFF" height="193.5625" style="stroke:#181818;stroke-width:1.0;" width="10" x="1555.5" y="678.0156"/><rect fill="#FFFFFF" height="135.4297" style="stroke:#181818;stroke-width:1.0;" width="10" x="1560.5" y="715.1484"/><rect fill="#FFFFFF" height="66.2969" style="stroke:#181818;stroke-width:1.0;" width="10" x="1565.5" y="757.2813"/><rect fill="#FFFFFF" height="158.6641" style="stroke:#181818;stroke-width:1.0;" width="10" x="1725.5" y="1071.2422"/><rect fill="#FFFFFF" height="63.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="1730.5" y="1166.6406"/><rect fill="#FFFFFF" height="665.4219" style="stroke:#181818;stroke-width:1.0;" width="10" x="1725.5" y="1325.3047"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="1925.5" y="1100.375"/><rect fill="#FFFFFF" height="113.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="2018" y="1430.7031"/><ellipse cx="7.5" cy="66.6797" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="1385.5,63.4297,1395.5,67.4297,1385.5,71.4297,1389.5,67.4297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="1391.5" y1="67.4297" y2="67.4297"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="32" x="15" y="62.3638">main</text><polygon fill="#181818" points="1487,77.4297,1497,81.4297,1487,85.4297,1491,81.4297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1397.5" x2="1493" y1="81.4297" y2="81.4297"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="113" x="1499" y="75.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="1506" y="95.4248">ZygoteServer</text><polygon fill="#181818" points="1543.5,133.8594,1553.5,137.8594,1543.5,141.8594,1547.5,137.8594" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1397.5" x2="1549.5" y1="137.8594" y2="137.8594"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="134" x="1404.5" y="132.7935">registerServerSocket</text><line style="stroke:#181818;stroke-width:1.0;" x1="1555.5" x2="1597.5" y1="166.9922" y2="166.9922"/><line style="stroke:#181818;stroke-width:1.0;" x1="1597.5" x2="1597.5" y1="166.9922" y2="179.9922"/><line style="stroke:#181818;stroke-width:1.0;" x1="1556.5" x2="1597.5" y1="179.9922" y2="179.9922"/><polygon fill="#181818" points="1566.5,175.9922,1556.5,179.9922,1566.5,183.9922,1562.5,179.9922" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="159" x="1562.5" y="161.9263">new LocalServerSocket()</text><polygon fill="#181818" points="1543.5,205.125,1553.5,209.125,1543.5,213.125,1547.5,209.125" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1397.5" x2="1549.5" y1="209.125" y2="209.125"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="91" x="1404.5" y="204.0591">runSelectLoop</text><line style="stroke:#181818;stroke-width:1.0;" x1="1555.5" x2="1602.5" y1="233.2578" y2="233.2578"/><line style="stroke:#181818;stroke-width:1.0;" x1="1602.5" x2="1602.5" y1="233.2578" y2="246.2578"/><line style="stroke:#181818;stroke-width:1.0;" x1="1561.5" x2="1602.5" y1="246.2578" y2="246.2578"/><polygon fill="#181818" points="1571.5,242.2578,1561.5,246.2578,1571.5,250.2578,1567.5,246.2578" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="69" x="1567.5" y="228.1919">while(true)</text><line style="stroke:#181818;stroke-width:1.0;" x1="1560.5" x2="1602.5" y1="280.3906" y2="280.3906"/><line style="stroke:#181818;stroke-width:1.0;" x1="1602.5" x2="1602.5" y1="280.3906" y2="293.3906"/><line style="stroke:#181818;stroke-width:1.0;" x1="1561.5" x2="1602.5" y1="293.3906" y2="293.3906"/><polygon fill="#181818" points="1571.5,289.3906,1561.5,293.3906,1571.5,297.3906,1567.5,293.3906" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="53" x="1567.5" y="275.3247">Os.poll()</text><ellipse cx="7.5" cy="321.7734" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="145,318.5234,155,322.5234,145,326.5234,149,322.5234" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="151" y1="322.5234" y2="322.5234"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="125" x="15" y="317.4575">startProcessLocked</text><polygon fill="#181818" points="333,347.6563,343,351.6563,333,355.6563,337,351.6563" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="157" x2="339" y1="351.6563" y2="351.6563"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="30" x="164" y="346.5903">start</text><polygon fill="#181818" points="531,376.7891,541,380.7891,531,384.7891,535,380.7891" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="355" x2="537" y1="380.7891" y2="380.7891"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="30" x="362" y="375.7231">start</text><line style="stroke:#181818;stroke-width:1.0;" x1="553" x2="600" y1="404.9219" y2="404.9219"/><line style="stroke:#181818;stroke-width:1.0;" x1="600" x2="600" y1="404.9219" y2="417.9219"/><line style="stroke:#181818;stroke-width:1.0;" x1="559" x2="600" y1="417.9219" y2="417.9219"/><polygon fill="#181818" points="569,413.9219,559,417.9219,569,421.9219,565,417.9219" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="97" x="565" y="399.856">startViaZygote</text><line style="stroke:#181818;stroke-width:1.0;" x1="558" x2="600" y1="452.0547" y2="452.0547"/><line style="stroke:#181818;stroke-width:1.0;" x1="600" x2="600" y1="452.0547" y2="465.0547"/><line style="stroke:#181818;stroke-width:1.0;" x1="559" x2="600" y1="465.0547" y2="465.0547"/><polygon fill="#181818" points="569,461.0547,559,465.0547,569,469.0547,565,465.0547" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="96" x="565" y="446.9888">&#32452;&#35013;zygote&#21442;&#25968;</text><line style="stroke:#181818;stroke-width:1.0;" x1="558" x2="605" y1="489.1875" y2="489.1875"/><line style="stroke:#181818;stroke-width:1.0;" x1="605" x2="605" y1="489.1875" y2="502.1875"/><line style="stroke:#181818;stroke-width:1.0;" x1="564" x2="605" y1="502.1875" y2="502.1875"/><polygon fill="#181818" points="574,498.1875,564,502.1875,574,506.1875,570,502.1875" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="179" x="570" y="484.1216">openZygoteSocketIfNeeded</text><polygon fill="#181818" points="753,532.3203,763,536.3203,753,540.3203,757,536.3203" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="563" x2="759" y1="536.3203" y2="536.3203"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="570" y="531.2544">connect</text><polygon fill="#181818" points="890,546.3203,900,550.3203,890,554.3203,894,550.3203" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="775" x2="896" y1="550.3203" y2="550.3203"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="102" x="902" y="544.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="909" y="564.3154">LocalSocket</text><line style="stroke:#181818;stroke-width:1.0;" x1="775" x2="817" y1="606.75" y2="606.75"/><line style="stroke:#181818;stroke-width:1.0;" x1="817" x2="817" y1="606.75" y2="619.75"/><line style="stroke:#181818;stroke-width:1.0;" x1="776" x2="817" y1="619.75" y2="619.75"/><polygon fill="#181818" points="786,615.75,776,619.75,786,623.75,782,619.75" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="159" x="782" y="601.6841">new LocalSocketAddress</text><polygon fill="#181818" points="936,644.8828,946,648.8828,936,652.8828,940,648.8828" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="775" x2="942" y1="648.8828" y2="648.8828"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="782" y="643.8169">connect</text><polygon fill="#181818" points="1543.5,674.0156,1553.5,678.0156,1543.5,682.0156,1547.5,678.0156" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="958" x2="1549.5" y1="678.0156" y2="678.0156"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="965" y="672.9497">connect</text><line style="stroke:#181818;stroke-width:1.0;" x1="1565.5" x2="1612.5" y1="702.1484" y2="702.1484"/><line style="stroke:#181818;stroke-width:1.0;" x1="1612.5" x2="1612.5" y1="702.1484" y2="715.1484"/><line style="stroke:#181818;stroke-width:1.0;" x1="1571.5" x2="1612.5" y1="715.1484" y2="715.1484"/><polygon fill="#181818" points="1581.5,711.1484,1571.5,715.1484,1581.5,719.1484,1577.5,715.1484" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="139" x="1577.5" y="697.0825">acceptCommandPeer</text><line style="stroke:#181818;stroke-width:1.0;" x1="1570.5" x2="1617.5" y1="744.2813" y2="744.2813"/><line style="stroke:#181818;stroke-width:1.0;" x1="1617.5" x2="1617.5" y1="744.2813" y2="757.2813"/><line style="stroke:#181818;stroke-width:1.0;" x1="1576.5" x2="1617.5" y1="757.2813" y2="757.2813"/><polygon fill="#181818" points="1586.5,753.2813,1576.5,757.2813,1586.5,761.2813,1582.5,757.2813" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="141" x="1582.5" y="739.2153">createNewConnection</text><polygon fill="#181818" points="1644,772.2813,1654,776.2813,1644,780.2813,1648,776.2813" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1575.5" x2="1650" y1="776.2813" y2="776.2813"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="149" x="1656" y="770.2813"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="1663" y="790.2764">ZygoteConnection</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1575.5" x2="1617.5" y1="822.5781" y2="822.5781"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1617.5" x2="1617.5" y1="822.5781" y2="835.5781"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1570.5" x2="1617.5" y1="835.5781" y2="835.5781"/><polygon fill="#181818" points="1580.5,831.5781,1570.5,835.5781,1580.5,839.5781,1576.5,835.5781" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1570.5" x2="1612.5" y1="849.5781" y2="849.5781"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1612.5" x2="1612.5" y1="849.5781" y2="862.5781"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1565.5" x2="1612.5" y1="862.5781" y2="862.5781"/><polygon fill="#181818" points="1575.5,858.5781,1565.5,862.5781,1575.5,866.5781,1571.5,862.5781" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="969,867.5781,959,871.5781,969,875.5781,965,871.5781" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="963" x2="1549.5" y1="871.5781" y2="871.5781"/><polygon fill="#181818" points="786,881.5781,776,885.5781,786,889.5781,782,885.5781" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="780" x2="952" y1="885.5781" y2="885.5781"/><polygon fill="#181818" points="574,910.7109,564,914.7109,574,918.7109,570,914.7109" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="568" x2="769" y1="914.7109" y2="914.7109"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="81" x="580" y="909.645">ZygoteState</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="563" x2="605" y1="933.7109" y2="933.7109"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="605" x2="605" y1="933.7109" y2="946.7109"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="558" x2="605" y1="946.7109" y2="946.7109"/><polygon fill="#181818" points="568,942.7109,558,946.7109,568,950.7109,564,946.7109" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="558" x2="605" y1="965.8438" y2="965.8438"/><line style="stroke:#181818;stroke-width:1.0;" x1="605" x2="605" y1="965.8438" y2="978.8438"/><line style="stroke:#181818;stroke-width:1.0;" x1="564" x2="605" y1="978.8438" y2="978.8438"/><polygon fill="#181818" points="574,974.8438,564,978.8438,574,982.8438,570,978.8438" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="193" x="570" y="960.7778">zygoteSendArgsAndGetResult</text><polygon fill="#181818" points="941,1008.9766,951,1012.9766,941,1016.9766,945,1012.9766" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="563" x2="947" y1="1012.9766" y2="1012.9766"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="167" x="570" y="1007.9106">(BufferedWriter)write(arg)</text><polygon fill="#181818" points="1538.5,1038.1094,1548.5,1042.1094,1538.5,1046.1094,1542.5,1042.1094" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="953" x2="1544.5" y1="1042.1094" y2="1042.1094"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="75" x="960" y="1037.0435">read socket</text><polygon fill="#181818" points="1713.5,1067.2422,1723.5,1071.2422,1713.5,1075.2422,1717.5,1071.2422" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1560.5" x2="1719.5" y1="1071.2422" y2="1071.2422"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="54" x="1567.5" y="1066.1763">runOnce</text><polygon fill="#181818" points="1913.5,1096.375,1923.5,1100.375,1913.5,1104.375,1917.5,1100.375" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1735.5" x2="1919.5" y1="1100.375" y2="1100.375"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="113" x="1742.5" y="1095.3091">forkAndSpecialize</text><polygon fill="#181818" points="1746.5,1125.5078,1736.5,1129.5078,1746.5,1133.5078,1742.5,1129.5078" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1740.5" x2="1929.5" y1="1129.5078" y2="1129.5078"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="19" x="1752.5" y="1124.4419">pid</text><line style="stroke:#181818;stroke-width:1.0;" x1="1735.5" x2="1782.5" y1="1153.6406" y2="1153.6406"/><line style="stroke:#181818;stroke-width:1.0;" x1="1782.5" x2="1782.5" y1="1153.6406" y2="1166.6406"/><line style="stroke:#181818;stroke-width:1.0;" x1="1741.5" x2="1782.5" y1="1166.6406" y2="1166.6406"/><polygon fill="#181818" points="1751.5,1162.6406,1741.5,1166.6406,1751.5,1170.6406,1747.5,1166.6406" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="176" x="1747.5" y="1148.5747">if (pid&gt;0) handleParentProc</text><polygon fill="#181818" points="964,1196.7734,954,1200.7734,964,1204.7734,960,1200.7734" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="958" x2="1729.5" y1="1200.7734" y2="1200.7734"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="55" x="970" y="1195.7075">write pid</text><polygon fill="#181818" points="574,1225.9063,564,1229.9063,574,1233.9063,570,1229.9063" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="568" x2="952" y1="1229.9063" y2="1229.9063"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="580" y="1224.8403">read pid</text><polygon fill="#181818" points="366,1255.0391,356,1259.0391,366,1263.0391,362,1259.0391" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="360" x2="547" y1="1259.0391" y2="1259.0391"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="164" x="372" y="1253.9731">return ProcessStartResult</text><polygon fill="#181818" points="168,1284.1719,158,1288.1719,168,1292.1719,164,1288.1719" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="162" x2="349" y1="1288.1719" y2="1288.1719"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="164" x="174" y="1283.106">return ProcessStartResult</text><line style="stroke:#181818;stroke-width:1.0;" x1="1730.5" x2="1777.5" y1="1312.3047" y2="1312.3047"/><line style="stroke:#181818;stroke-width:1.0;" x1="1777.5" x2="1777.5" y1="1312.3047" y2="1325.3047"/><line style="stroke:#181818;stroke-width:1.0;" x1="1736.5" x2="1777.5" y1="1325.3047" y2="1325.3047"/><polygon fill="#181818" points="1746.5,1321.3047,1736.5,1325.3047,1746.5,1329.3047,1742.5,1325.3047" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="175" x="1742.5" y="1307.2388">if (pid==0) handleChildProc</text><polygon fill="#181818" points="1413.5,1355.4375,1403.5,1359.4375,1413.5,1363.4375,1409.5,1359.4375" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1407.5" x2="1724.5" y1="1359.4375" y2="1359.4375"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="63" x="1419.5" y="1354.3716">zygoteInit</text><line style="stroke:#181818;stroke-width:1.0;" x1="1402.5" x2="1444.5" y1="1388.5703" y2="1388.5703"/><line style="stroke:#181818;stroke-width:1.0;" x1="1444.5" x2="1444.5" y1="1388.5703" y2="1401.5703"/><line style="stroke:#181818;stroke-width:1.0;" x1="1403.5" x2="1444.5" y1="1401.5703" y2="1401.5703"/><polygon fill="#181818" points="1413.5,1397.5703,1403.5,1401.5703,1413.5,1405.5703,1409.5,1401.5703" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="106" x="1409.5" y="1383.5044">nativeZygoteInit</text><polygon fill="#181818" points="2006,1426.7031,2016,1430.7031,2006,1434.7031,2010,1430.7031" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1402.5" x2="2012" y1="1430.7031" y2="1430.7031"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="88" x="1409.5" y="1425.6372">applicationInit</text><line style="stroke:#181818;stroke-width:1.0;" x1="2028" x2="2070" y1="1459.8359" y2="1459.8359"/><line style="stroke:#181818;stroke-width:1.0;" x1="2070" x2="2070" y1="1459.8359" y2="1472.8359"/><line style="stroke:#181818;stroke-width:1.0;" x1="2029" x2="2070" y1="1472.8359" y2="1472.8359"/><polygon fill="#181818" points="2039,1468.8359,2029,1472.8359,2039,1476.8359,2035,1472.8359" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="107" x="2035" y="1454.77">invokeStaticMain</text><line style="stroke:#181818;stroke-width:1.0;" x1="2028" x2="2070" y1="1501.9688" y2="1501.9688"/><line style="stroke:#181818;stroke-width:1.0;" x1="2070" x2="2070" y1="1501.9688" y2="1514.9688"/><line style="stroke:#181818;stroke-width:1.0;" x1="2029" x2="2070" y1="1514.9688" y2="1514.9688"/><polygon fill="#181818" points="2039,1510.9688,2029,1514.9688,2039,1518.9688,2035,1514.9688" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="236" x="2035" y="1496.9028">throws Zygote.MethodAndArgsCaller</text><polygon fill="#181818" points="1413.5,1540.1016,1403.5,1544.1016,1413.5,1548.1016,1409.5,1544.1016" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="1407.5" x2="2022" y1="1544.1016" y2="1544.1016"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="148" x="1419.5" y="1539.0356">main() catch Exception</text><polygon fill="#181818" points="1085,1569.2344,1075,1573.2344,1085,1577.2344,1081,1573.2344" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1079" x2="1391.5" y1="1573.2344" y2="1573.2344"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="32" x="1091" y="1568.1685">main</text><line style="stroke:#181818;stroke-width:1.0;" x1="1074" x2="1116" y1="1602.3672" y2="1602.3672"/><line style="stroke:#181818;stroke-width:1.0;" x1="1116" x2="1116" y1="1602.3672" y2="1615.3672"/><line style="stroke:#181818;stroke-width:1.0;" x1="1075" x2="1116" y1="1615.3672" y2="1615.3672"/><polygon fill="#181818" points="1085,1611.3672,1075,1615.3672,1085,1619.3672,1081,1615.3672" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="181" x="1081" y="1597.3013">Looper.prepareMainLooper()</text><line style="stroke:#181818;stroke-width:1.0;" x1="1074" x2="1121" y1="1639.5" y2="1639.5"/><line style="stroke:#181818;stroke-width:1.0;" x1="1121" x2="1121" y1="1639.5" y2="1652.5"/><line style="stroke:#181818;stroke-width:1.0;" x1="1080" x2="1121" y1="1652.5" y2="1652.5"/><polygon fill="#181818" points="1090,1648.5,1080,1652.5,1090,1656.5,1086,1652.5" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="134" x="1086" y="1634.4341">new ActivityThread()</text><polygon fill="#181818" points="1183.5,1667.5,1193.5,1671.5,1183.5,1675.5,1187.5,1671.5" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1079" x2="1189.5" y1="1671.5" y2="1671.5"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="147" x="1195.5" y="1665.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="1202.5" y="1685.4951">ApplicationThread</text><line style="stroke:#181818;stroke-width:1.0;" x1="1079" x2="1126" y1="1722.9297" y2="1722.9297"/><line style="stroke:#181818;stroke-width:1.0;" x1="1126" x2="1126" y1="1722.9297" y2="1735.9297"/><line style="stroke:#181818;stroke-width:1.0;" x1="1085" x2="1126" y1="1735.9297" y2="1735.9297"/><polygon fill="#181818" points="1095,1731.9297,1085,1735.9297,1095,1739.9297,1091,1735.9297" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="169" x="1091" y="1717.8638">attach(IApplicationThread)</text><polygon fill="#181818" points="173,1766.0625,163,1770.0625,173,1774.0625,169,1770.0625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="167" x2="1073" y1="1770.0625" y2="1770.0625"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="111" x="179" y="1764.9966">attachApplication</text><line style="stroke:#181818;stroke-width:1.0;" x1="162" x2="204" y1="1799.1953" y2="1799.1953"/><line style="stroke:#181818;stroke-width:1.0;" x1="204" x2="204" y1="1799.1953" y2="1812.1953"/><line style="stroke:#181818;stroke-width:1.0;" x1="163" x2="204" y1="1812.1953" y2="1812.1953"/><polygon fill="#181818" points="173,1808.1953,163,1812.1953,173,1816.1953,169,1812.1953" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="136" x="169" y="1794.1294">Binder.getCallingPid()</text><line style="stroke:#181818;stroke-width:1.0;" x1="162" x2="204" y1="1841.3281" y2="1841.3281"/><line style="stroke:#181818;stroke-width:1.0;" x1="204" x2="204" y1="1841.3281" y2="1854.3281"/><line style="stroke:#181818;stroke-width:1.0;" x1="163" x2="204" y1="1854.3281" y2="1854.3281"/><polygon fill="#181818" points="173,1850.3281,163,1854.3281,173,1858.3281,169,1854.3281" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="156" x="169" y="1836.2622">attachApplicationLocked</text><line style="stroke:#181818;stroke-width:1.0;" x1="162" x2="204" y1="1883.4609" y2="1883.4609"/><line style="stroke:#181818;stroke-width:1.0;" x1="204" x2="204" y1="1883.4609" y2="1896.4609"/><line style="stroke:#181818;stroke-width:1.0;" x1="163" x2="204" y1="1896.4609" y2="1896.4609"/><polygon fill="#181818" points="173,1892.4609,163,1896.4609,173,1900.4609,169,1896.4609" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="166" x="169" y="1878.395">find ProcessRecord by pid</text><polygon fill="#181818" points="1257,1921.5938,1267,1925.5938,1257,1929.5938,1261,1925.5938" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="162" x2="1263" y1="1925.5938" y2="1925.5938"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="97" x="169" y="1920.5278">bindApplication</text><polygon fill="#181818" points="1057,1935.5938,1067,1939.5938,1057,1943.5938,1061,1939.5938" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="157" x2="1063" y1="1939.5938" y2="1939.5938"/><line style="stroke:#181818;stroke-width:1.0;" x1="1079" x2="1121" y1="1968.7266" y2="1968.7266"/><line style="stroke:#181818;stroke-width:1.0;" x1="1121" x2="1121" y1="1968.7266" y2="1981.7266"/><line style="stroke:#181818;stroke-width:1.0;" x1="1080" x2="1121" y1="1981.7266" y2="1981.7266"/><polygon fill="#181818" points="1090,1977.7266,1080,1981.7266,1090,1985.7266,1086,1981.7266" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="85" x="1086" y="1963.6606">Looper.loop()</text><!--SRC=[bLR9Rjim4BthAtYBd216qlPa804SeoW2P37YeWNI4qEEBI8oAL1qdEHOjEUU-WNzWTxxFLq-eqEAacbhiNEIFVDcuUCit2E9u42cIfaxzHXbL1l1H4Qb8RTFCsNWN0f3bEQWoV7HKGDW0le1bINak04oKb82CqB92lQg0LOfNwyfRnRIYFbw8c-YJ-hmD4nnGEPKo2YGL7gVuVv-btP0DCn4Ra0NWebYzs2YDKpTHiAIN2X6qz0excq9j90JI96G2wMoxWW71uXV9YA5sEW5zBRbSvttCvMccC4UdiSij8mAfeP8_uCmJvTKqbbnHi40BNA3L8-rOf3d5pPz7hLWqOl7OLhUC2ebLIfroBgy7VX1q4AppM90_lxwyk_7rsSd_Vtjyv_lFtU9eZAGdYztJ-VJAm2E1swndHYAHMajML70KIX7M77ppjUgkYfj-3Ui58SVSgunM9V7C70ehzT8BS6EOgACGMP6QZwdaey1z0usJ0FcTmNBLIEtM0MTZeJu2kpuX2ILcbskyjb7btoeP_bGydTWRY1Vf0tb5d8t8F7POZe53VoZ5jZilQNzn5JFUfqas_50EScBgS21sXwnbnOORUV4fexTVorPMUI1iZ9miAdIztYkIGPCq5Gyb_IGJF0mVXYpLTuUQoCvCIKn1ZWzwf44woE5CTKWtNneTBBEhUFI9TX8vQf_7PUD1magh4jNk-Jgvw5pxvZoieaTBhuuQZuzfbqHn6YRYzqXNqp-oKd5_WWdFsybFrWogvwmVnlNZz-Iak8XuBOD6ovRwvHcMIeOjI4TEjHlmF40ya7TksOMxD9kuqwqIRHQvZwx_YMOHF5XqT0ZcgPOjfvKkzZZ7i4iM4BUFjhvjQg1qdTvEUyJLrp-ER0XRSBP9Gowdsd0HmVOj0i9xj2jrfOXEzZNnSsMAoAz40VaJW6eCPGbyNdDGrU26pMwyXDuwLZqhS-5Co7n1TQVWR5t9EHiBCBpli1JBPsjhuzMLrDCgcoz6s3uI2HtJsw-T3YhtSU0tA6Va1-_a8BPi4xu2yehnK_S-my0]--></g></svg>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
  </entry>
  <entry>
    <title>Android Activity启动流程</title>
    <url>/posts/11962.html</url>
    <content><![CDATA[<h2 id="startActivity流程"><a href="#startActivity流程" class="headerlink" title="startActivity流程"></a>startActivity流程</h2><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="862px" preserveAspectRatio="none" style="width:1908px;height:862px;background:#FFFFFF;" version="1.1" viewBox="0 0 1908 862" width="1908px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="751.0859" style="stroke:#181818;stroke-width:1.0;" width="10" x="105" y="67.4297"/><rect fill="#FFFFFF" height="713.9531" style="stroke:#181818;stroke-width:1.0;" width="10" x="110" y="104.5625"/><rect fill="#FFFFFF" height="679.8203" style="stroke:#181818;stroke-width:1.0;" width="10" x="267" y="138.6953"/><rect fill="#FFFFFF" height="650.6875" style="stroke:#181818;stroke-width:1.0;" width="10" x="410" y="167.8281"/><rect fill="#FFFFFF" height="561.2891" style="stroke:#181818;stroke-width:1.0;" width="10" x="517" y="196.9609"/><rect fill="#FFFFFF" height="524.1563" style="stroke:#181818;stroke-width:1.0;" width="10" x="522" y="234.0938"/><rect fill="#FFFFFF" height="9" style="stroke:#181818;stroke-width:1.0;" width="10" x="517" y="809.5156"/><rect fill="#FFFFFF" height="490.0234" style="stroke:#181818;stroke-width:1.0;" width="10" x="684" y="268.2266"/><rect fill="#FFFFFF" height="452.8906" style="stroke:#181818;stroke-width:1.0;" width="10" x="689" y="305.3594"/><rect fill="#FFFFFF" height="410.7578" style="stroke:#181818;stroke-width:1.0;" width="10" x="694" y="347.4922"/><rect fill="#FFFFFF" height="327.3281" style="stroke:#181818;stroke-width:1.0;" width="10" x="699" y="430.9219"/><rect fill="#FFFFFF" height="285.1953" style="stroke:#181818;stroke-width:1.0;" width="10" x="704" y="473.0547"/><rect fill="#FFFFFF" height="251.0625" style="stroke:#181818;stroke-width:1.0;" width="10" x="1035" y="507.1875"/><rect fill="#FFFFFF" height="98.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="1040" y="659.8516"/><rect fill="#FFFFFF" height="86.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="1300" y="536.3203"/><rect fill="#FFFFFF" height="49.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="1305" y="573.4531"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="1522" y="693.9844"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="110" x2="110" y1="36.2969" y2="827.5156"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="271.5" x2="271.5" y1="36.2969" y2="827.5156"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="414.5" x2="414.5" y1="36.2969" y2="827.5156"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="521.5" x2="521.5" y1="36.2969" y2="827.5156"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="689" x2="689" y1="36.2969" y2="827.5156"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="875.5" x2="875.5" y1="391.1406" y2="827.5156"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="1039.5" x2="1039.5" y1="36.2969" y2="827.5156"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="1304.5" x2="1304.5" y1="36.2969" y2="827.5156"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="1526.5" x2="1526.5" y1="36.2969" y2="827.5156"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="1795" x2="1795" y1="36.2969" y2="827.5156"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="70" x="75" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="82" y="24.9951">Activity</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="70" x="75" y="826.5156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="82" y="846.5107">Activity</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="131" x="206.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="213.5" y="24.9951">Instrumentation</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="131" x="206.5" y="826.5156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="213.5" y="846.5107">Instrumentation</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="135" x="347.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="354.5" y="24.9951">IActivityManager</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="135" x="347.5" y="826.5156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="354.5" y="846.5107">IActivityManager</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="45" x="499.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="31" x="506.5" y="24.9951">AMS</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="45" x="499.5" y="826.5156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="31" x="506.5" y="846.5107">AMS</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="122" x="628" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="635" y="24.9951">ActivityStarter</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="122" x="628" y="826.5156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="635" y="846.5107">ActivityStarter</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="815.5" y="826.5156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="822.5" y="846.5107">ActivityRecord</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="187" x="946.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="953.5" y="24.9951">ActivityStackSupervisor</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="187" x="946.5" y="826.5156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="953.5" y="846.5107">ActivityStackSupervisor</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="111" x="1249.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="1256.5" y="24.9951">ActivityStack</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="111" x="1249.5" y="826.5156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="1256.5" y="846.5107">ActivityStack</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="147" x="1453.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="1460.5" y="24.9951">ApplicationThread</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="147" x="1453.5" y="826.5156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="1460.5" y="846.5107">ApplicationThread</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="120" x="1735" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="1742" y="24.9951">ActivityThread</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="120" x="1735" y="826.5156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="1742" y="846.5107">ActivityThread</text><rect fill="#FFFFFF" height="751.0859" style="stroke:#181818;stroke-width:1.0;" width="10" x="105" y="67.4297"/><rect fill="#FFFFFF" height="713.9531" style="stroke:#181818;stroke-width:1.0;" width="10" x="110" y="104.5625"/><rect fill="#FFFFFF" height="679.8203" style="stroke:#181818;stroke-width:1.0;" width="10" x="267" y="138.6953"/><rect fill="#FFFFFF" height="650.6875" style="stroke:#181818;stroke-width:1.0;" width="10" x="410" y="167.8281"/><rect fill="#FFFFFF" height="561.2891" style="stroke:#181818;stroke-width:1.0;" width="10" x="517" y="196.9609"/><rect fill="#FFFFFF" height="524.1563" style="stroke:#181818;stroke-width:1.0;" width="10" x="522" y="234.0938"/><rect fill="#FFFFFF" height="9" style="stroke:#181818;stroke-width:1.0;" width="10" x="517" y="809.5156"/><rect fill="#FFFFFF" height="490.0234" style="stroke:#181818;stroke-width:1.0;" width="10" x="684" y="268.2266"/><rect fill="#FFFFFF" height="452.8906" style="stroke:#181818;stroke-width:1.0;" width="10" x="689" y="305.3594"/><rect fill="#FFFFFF" height="410.7578" style="stroke:#181818;stroke-width:1.0;" width="10" x="694" y="347.4922"/><rect fill="#FFFFFF" height="327.3281" style="stroke:#181818;stroke-width:1.0;" width="10" x="699" y="430.9219"/><rect fill="#FFFFFF" height="285.1953" style="stroke:#181818;stroke-width:1.0;" width="10" x="704" y="473.0547"/><rect fill="#FFFFFF" height="251.0625" style="stroke:#181818;stroke-width:1.0;" width="10" x="1035" y="507.1875"/><rect fill="#FFFFFF" height="98.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="1040" y="659.8516"/><rect fill="#FFFFFF" height="86.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="1300" y="536.3203"/><rect fill="#FFFFFF" height="49.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="1305" y="573.4531"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="1522" y="693.9844"/><ellipse cx="7.5" cy="66.6797" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="93,63.4297,103,67.4297,93,71.4297,97,67.4297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="99" y1="67.4297" y2="67.4297"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="15" y="62.3638">startActivity</text><line style="stroke:#181818;stroke-width:1.0;" x1="115" x2="162" y1="91.5625" y2="91.5625"/><line style="stroke:#181818;stroke-width:1.0;" x1="162" x2="162" y1="91.5625" y2="104.5625"/><line style="stroke:#181818;stroke-width:1.0;" x1="121" x2="162" y1="104.5625" y2="104.5625"/><polygon fill="#181818" points="131,100.5625,121,104.5625,131,108.5625,127,104.5625" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="138" x="127" y="86.4966">startActivityForResult</text><polygon fill="#181818" points="255,134.6953,265,138.6953,255,142.6953,259,138.6953" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="120" x2="261" y1="138.6953" y2="138.6953"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="110" x="127" y="133.6294">execStartActivity</text><polygon fill="#181818" points="398,163.8281,408,167.8281,398,171.8281,402,167.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="277" x2="404" y1="167.8281" y2="167.8281"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="284" y="162.7622">startActivity</text><polygon fill="#181818" points="505,192.9609,515,196.9609,505,200.9609,509,196.9609" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="420" x2="511" y1="196.9609" y2="196.9609"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="427" y="191.895">startActivity</text><line style="stroke:#181818;stroke-width:1.0;" x1="527" x2="574" y1="221.0938" y2="221.0938"/><line style="stroke:#181818;stroke-width:1.0;" x1="574" x2="574" y1="221.0938" y2="234.0938"/><line style="stroke:#181818;stroke-width:1.0;" x1="533" x2="574" y1="234.0938" y2="234.0938"/><polygon fill="#181818" points="543,230.0938,533,234.0938,543,238.0938,539,234.0938" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="123" x="539" y="216.0278">startActivityAsUser</text><polygon fill="#181818" points="672,264.2266,682,268.2266,672,272.2266,676,268.2266" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="532" x2="678" y1="268.2266" y2="268.2266"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="133" x="539" y="263.1606">startActivityMayWait</text><line style="stroke:#181818;stroke-width:1.0;" x1="694" x2="741" y1="292.3594" y2="292.3594"/><line style="stroke:#181818;stroke-width:1.0;" x1="741" x2="741" y1="292.3594" y2="305.3594"/><line style="stroke:#181818;stroke-width:1.0;" x1="700" x2="741" y1="305.3594" y2="305.3594"/><polygon fill="#181818" points="710,301.3594,700,305.3594,710,309.3594,706,305.3594" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="123" x="706" y="287.2935">startActivityLocked</text><line style="stroke:#181818;stroke-width:1.0;" x1="699" x2="746" y1="334.4922" y2="334.4922"/><line style="stroke:#181818;stroke-width:1.0;" x1="746" x2="746" y1="334.4922" y2="347.4922"/><line style="stroke:#181818;stroke-width:1.0;" x1="705" x2="746" y1="347.4922" y2="347.4922"/><polygon fill="#181818" points="715,343.4922,705,347.4922,715,351.4922,711,347.4922" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="711" y="329.4263">startActivity</text><polygon fill="#181818" points="803.5,362.4922,813.5,366.4922,803.5,370.4922,807.5,366.4922" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="704" x2="809.5" y1="366.4922" y2="366.4922"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="815.5" y="360.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="822.5" y="380.4873">ActivityRecord</text><line style="stroke:#181818;stroke-width:1.0;" x1="704" x2="751" y1="417.9219" y2="417.9219"/><line style="stroke:#181818;stroke-width:1.0;" x1="751" x2="751" y1="417.9219" y2="430.9219"/><line style="stroke:#181818;stroke-width:1.0;" x1="710" x2="751" y1="430.9219" y2="430.9219"/><polygon fill="#181818" points="720,426.9219,710,430.9219,720,434.9219,716,430.9219" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="716" y="412.856">startActivity</text><line style="stroke:#181818;stroke-width:1.0;" x1="709" x2="756" y1="460.0547" y2="460.0547"/><line style="stroke:#181818;stroke-width:1.0;" x1="756" x2="756" y1="460.0547" y2="473.0547"/><line style="stroke:#181818;stroke-width:1.0;" x1="715" x2="756" y1="473.0547" y2="473.0547"/><polygon fill="#181818" points="725,469.0547,715,473.0547,725,477.0547,721,473.0547" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="148" x="721" y="454.9888">startActivityUnchecked</text><polygon fill="#181818" points="1023,503.1875,1033,507.1875,1023,511.1875,1027,507.1875" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="714" x2="1029" y1="507.1875" y2="507.1875"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="254" x="721" y="502.1216">resumeFocusedStackTopActivityLocked</text><polygon fill="#181818" points="1288,532.3203,1298,536.3203,1288,540.3203,1292,536.3203" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1045" x2="1294" y1="536.3203" y2="536.3203"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="236" x="1052" y="531.2544">resumeTopActivityUncheckedLocked</text><line style="stroke:#181818;stroke-width:1.0;" x1="1310" x2="1357" y1="560.4531" y2="560.4531"/><line style="stroke:#181818;stroke-width:1.0;" x1="1357" x2="1357" y1="560.4531" y2="573.4531"/><line style="stroke:#181818;stroke-width:1.0;" x1="1316" x2="1357" y1="573.4531" y2="573.4531"/><polygon fill="#181818" points="1326,569.4531,1316,573.4531,1326,577.4531,1322,573.4531" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="198" x="1322" y="555.3872">resumeTopActivityInnerLocked</text><polygon fill="#181818" points="1056,618.7188,1046,622.7188,1056,626.7188,1052,622.7188" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1050" x2="1304" y1="622.7188" y2="622.7188"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="172" x="1062" y="602.52">startSpecificActivityLocked</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="143" x="1062" y="617.6528">&#20250;&#21028;&#26029;&#26159;&#21542;&#21551;&#21160;&#26032;&#30340;&#36827;&#31243;</text><line style="stroke:#181818;stroke-width:1.0;" x1="1045" x2="1092" y1="646.8516" y2="646.8516"/><line style="stroke:#181818;stroke-width:1.0;" x1="1092" x2="1092" y1="646.8516" y2="659.8516"/><line style="stroke:#181818;stroke-width:1.0;" x1="1051" x2="1092" y1="659.8516" y2="659.8516"/><polygon fill="#181818" points="1061,655.8516,1051,659.8516,1061,663.8516,1057,659.8516" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="148" x="1057" y="641.7856">realStartActivityLocked</text><polygon fill="#181818" points="1510,689.9844,1520,693.9844,1510,697.9844,1514,693.9844" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1050" x2="1516" y1="693.9844" y2="693.9844"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="151" x="1057" y="688.9185">scheduleLaunchActivity</text><polygon fill="#181818" points="1783,719.1172,1793,723.1172,1783,727.1172,1787,723.1172" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1527" x2="1789" y1="723.1172" y2="723.1172"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="239" x="1534" y="718.0513">sendMessage(H.LAUNCH_ACTIVITY, r)</text><line style="stroke:#181818;stroke-width:1.0;" x1="1795" x2="1837" y1="757.25" y2="757.25"/><line style="stroke:#181818;stroke-width:1.0;" x1="1837" x2="1837" y1="757.25" y2="770.25"/><line style="stroke:#181818;stroke-width:1.0;" x1="1790" x2="1837" y1="770.25" y2="770.25"/><polygon fill="#181818" points="1800,766.25,1790,770.25,1800,774.25,1796,770.25" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="99" x="1802" y="752.1841">handleMessage</text><polygon fill="#181818" points="538,805.5156,528,809.5156,538,813.5156,534,809.5156" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="532" x2="1039" y1="809.5156" y2="809.5156"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="125" x="544" y="789.3169">startProcessLocked</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="544" y="804.4497">&#38656;&#35201;&#21551;&#21160;&#36827;&#31243;</text><!--SRC=[nLJDIiGm4BxtANBptmVm82o2R64hOdSLKP2OZ6wm9YL9HMyA7aGldaJKeuWNqGSGV1btrRSmhUtQRRPbMGHlpSptVJFpPT8nr6OKq8uGUbiSEiw6c9b7DQBP0TD7Q6fg3YcDfSuYJYzL2LiKSWLK5EW-lCkLbj4-S8qr4poXmI4Glw_2c8NBbV8mnxiW4-ekQ1_a0IDWE19q93bo2q1dW9PhYw7Yc1Ocxi7p1nbYecN9ccefqqC6IQF9k0FBUlXe3RDVqpBaKEI687j0H-DMiLQ024dHvEJVIvUpMfoqOOXvo9uVXV4IA26DXZHBjm-BWaGAQ99kYh1W48wFM4EPZ5CcNwpSgvUhqUkxibX_2LiuySFITZa7QT_o085yqpEfitu8XEqmqk_69dz_lUcStNUldhhNpvtBXyxbS-VyiNlryd5p-lbs-_5uuL0OPeeAetAfT38S-DMhQ-c5OS18yeIRRSEdwSuOjsaKG0D7nlZVbRFGkPQoI6mCSEg1KkQ5ZzTd6xNMqa9zgxRGT5VTvleqaXDEaMJ9pA4svZI0LARKhDn-ZGo9z__VKfvVF5PTL_8tp1xriXJ4sFDposYJVzqTVpwS_6nQkcFP3toqZsy0]--></g></svg>

<h2 id="Activity启动流程"><a href="#Activity启动流程" class="headerlink" title="Activity启动流程"></a>Activity启动流程</h2><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1451px" preserveAspectRatio="none" style="width:1495px;height:1451px;background:#FFFFFF;" version="1.1" viewBox="0 0 1495 1451" width="1495px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="1287.6406" style="stroke:#181818;stroke-width:1.0;" width="10" x="143" y="119.6953"/><rect fill="#FFBBBB" height="648.4844" style="stroke:#181818;stroke-width:1.0;" width="10" x="148" y="247.0938"/><rect fill="#FFBBBB" height="467.625" style="stroke:#181818;stroke-width:1.0;" width="10" x="148" y="939.7109"/><rect fill="#FFFFFF" height="126.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="153" y="981.8438"/><rect fill="#FFFFFF" height="97.4297" style="stroke:#181818;stroke-width:1.0;" width="10" x="325" y="281.2266"/><rect fill="#FFFFFF" height="252.8281" style="stroke:#181818;stroke-width:1.0;" width="10" x="325" y="521.3516"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="325" y="832.4453"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="325" y="1045.1094"/><rect fill="#FFFFFF" height="84.4297" style="stroke:#181818;stroke-width:1.0;" width="10" x="494" y="407.7891"/><rect fill="#FFFFFF" height="209.6953" style="stroke:#181818;stroke-width:1.0;" width="10" x="494" y="550.4844"/><rect fill="#FFFFFF" height="151.5625" style="stroke:#181818;stroke-width:1.0;" width="10" x="499" y="587.6172"/><rect fill="#FFFFFF" height="72.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="494" y="803.3125"/><rect fill="#FFFFFF" height="72.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="494" y="1015.9766"/><rect fill="#FFFFFF" height="97.4297" style="stroke:#181818;stroke-width:1.0;" width="10" x="649" y="621.75"/><rect fill="#FFFFFF" height="253.9609" style="stroke:#181818;stroke-width:1.0;" width="10" x="975" y="1144.375"/><rect fill="#FFFFFF" height="56.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="1155" y="153.8281"/><rect fill="#FFFFFF" height="210.8281" style="stroke:#181818;stroke-width:1.0;" width="10" x="1155" y="1173.5078"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="148" x2="148" y1="36.2969" y2="1416.3359"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="329.5" x2="329.5" y1="36.2969" y2="1416.3359"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="499" x2="499" y1="362.0078" y2="1416.3359"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="653.5" x2="653.5" y1="446.4375" y2="1416.3359"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="842.5" x2="842.5" y1="660.3984" y2="1416.3359"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="979.5" x2="979.5" y1="36.2969" y2="1416.3359"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="1159.5" x2="1159.5" y1="36.2969" y2="1416.3359"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="1431.5" x2="1431.5" y1="1212.1563" y2="1416.3359"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="120" x="88" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="95" y="24.9951">ActivityThread</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="120" x="88" y="1415.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="95" y="1435.3311">ActivityThread</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="131" x="264.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="271.5" y="24.9951">Instrumentation</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="131" x="264.5" y="1415.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="271.5" y="1435.3311">Instrumentation</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="70" x="464" y="1415.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="471" y="1435.3311">Activity</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="115" x="596.5" y="1415.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="603.5" y="1435.3311">PhoneWindow</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="91" x="797.5" y="1415.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="804.5" y="1435.3311">DecorView</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="163" x="898.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="905.5" y="24.9951">WindowManagerImpl</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="163" x="898.5" y="1415.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="905.5" y="1435.3311">WindowManagerImpl</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="177" x="1071.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="1078.5" y="24.9951">WindowManagerGlobal</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="177" x="1071.5" y="1415.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="1078.5" y="1435.3311">WindowManagerGlobal</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="115" x="1374.5" y="1415.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="1381.5" y="1435.3311">ViewRootImpl</text><rect fill="#FFFFFF" height="1287.6406" style="stroke:#181818;stroke-width:1.0;" width="10" x="143" y="119.6953"/><rect fill="#FFBBBB" height="648.4844" style="stroke:#181818;stroke-width:1.0;" width="10" x="148" y="247.0938"/><rect fill="#FFBBBB" height="467.625" style="stroke:#181818;stroke-width:1.0;" width="10" x="148" y="939.7109"/><rect fill="#FFFFFF" height="126.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="153" y="981.8438"/><rect fill="#FFFFFF" height="97.4297" style="stroke:#181818;stroke-width:1.0;" width="10" x="325" y="281.2266"/><rect fill="#FFFFFF" height="252.8281" style="stroke:#181818;stroke-width:1.0;" width="10" x="325" y="521.3516"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="325" y="832.4453"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="325" y="1045.1094"/><rect fill="#FFFFFF" height="84.4297" style="stroke:#181818;stroke-width:1.0;" width="10" x="494" y="407.7891"/><rect fill="#FFFFFF" height="209.6953" style="stroke:#181818;stroke-width:1.0;" width="10" x="494" y="550.4844"/><rect fill="#FFFFFF" height="151.5625" style="stroke:#181818;stroke-width:1.0;" width="10" x="499" y="587.6172"/><rect fill="#FFFFFF" height="72.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="494" y="803.3125"/><rect fill="#FFFFFF" height="72.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="494" y="1015.9766"/><rect fill="#FFFFFF" height="97.4297" style="stroke:#181818;stroke-width:1.0;" width="10" x="649" y="621.75"/><rect fill="#FFFFFF" height="253.9609" style="stroke:#181818;stroke-width:1.0;" width="10" x="975" y="1144.375"/><rect fill="#FFFFFF" height="56.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="1155" y="153.8281"/><rect fill="#FFFFFF" height="210.8281" style="stroke:#181818;stroke-width:1.0;" width="10" x="1155" y="1173.5078"/><ellipse cx="7.5" cy="81.8125" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="136,78.5625,146,82.5625,136,86.5625,140,82.5625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="142" y1="82.5625" y2="82.5625"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="103" x="15" y="62.3638">handleMessage.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="116" x="15" y="77.4966">LAUNCH_ACTIVITY</text><line style="stroke:#181818;stroke-width:1.0;" x1="148" x2="195" y1="106.6953" y2="106.6953"/><line style="stroke:#181818;stroke-width:1.0;" x1="195" x2="195" y1="106.6953" y2="119.6953"/><line style="stroke:#181818;stroke-width:1.0;" x1="154" x2="195" y1="119.6953" y2="119.6953"/><polygon fill="#181818" points="164,115.6953,154,119.6953,164,123.6953,160,119.6953" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="137" x="160" y="101.6294">handleLaunchActivity</text><polygon fill="#181818" points="1143,149.8281,1153,153.8281,1143,157.8281,1147,153.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="153" x2="1149" y1="153.8281" y2="153.8281"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="160" y="148.7622">initialize</text><line style="stroke:#181818;stroke-width:1.0;" x1="1165" x2="1207" y1="182.9609" y2="182.9609"/><line style="stroke:#181818;stroke-width:1.0;" x1="1207" x2="1207" y1="182.9609" y2="195.9609"/><line style="stroke:#181818;stroke-width:1.0;" x1="1166" x2="1207" y1="195.9609" y2="195.9609"/><polygon fill="#181818" points="1176,191.9609,1166,195.9609,1176,199.9609,1172,195.9609" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="248" x="1172" y="177.895">ServiceManager.getService("window"))</text><polygon fill="#181818" points="164,205.9609,154,209.9609,164,213.9609,160,209.9609" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="158" x2="1159" y1="209.9609" y2="209.9609"/><line style="stroke:#181818;stroke-width:1.0;" x1="153" x2="200" y1="234.0938" y2="234.0938"/><line style="stroke:#181818;stroke-width:1.0;" x1="200" x2="200" y1="234.0938" y2="247.0938"/><line style="stroke:#181818;stroke-width:1.0;" x1="159" x2="200" y1="247.0938" y2="247.0938"/><polygon fill="#181818" points="169,243.0938,159,247.0938,169,251.0938,165,247.0938" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="146" x="165" y="229.0278">performLaunchActivity</text><polygon fill="#181818" points="313,277.2266,323,281.2266,313,285.2266,317,281.2266" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="158" x2="319" y1="281.2266" y2="281.2266"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="75" x="165" y="276.1606">newActivity</text><line style="stroke:#181818;stroke-width:1.0;" x1="335" x2="377" y1="310.3594" y2="310.3594"/><line style="stroke:#181818;stroke-width:1.0;" x1="377" x2="377" y1="310.3594" y2="323.3594"/><line style="stroke:#181818;stroke-width:1.0;" x1="336" x2="377" y1="323.3594" y2="323.3594"/><polygon fill="#181818" points="346,319.3594,336,323.3594,346,327.3594,342,323.3594" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="143" x="342" y="305.2935">ClassLoader.loadClass</text><polygon fill="#181818" points="452,348.4922,462,352.4922,452,356.4922,456,352.4922" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="335" x2="458" y1="352.4922" y2="352.4922"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="81" x="342" y="347.4263">newInstance</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="70" x="464" y="331.3594"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="471" y="351.3545">Activity</text><polygon fill="#181818" points="169,374.6563,159,378.6563,169,382.6563,165,378.6563" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="163" x2="329" y1="378.6563" y2="378.6563"/><polygon fill="#181818" points="482,403.7891,492,407.7891,482,411.7891,486,407.7891" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="158" x2="488" y1="407.7891" y2="407.7891"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="41" x="165" y="402.7231">attach</text><polygon fill="#181818" points="584.5,432.9219,594.5,436.9219,584.5,440.9219,588.5,436.9219" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="504" x2="590.5" y1="436.9219" y2="436.9219"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="64" x="511" y="431.856">mWindow</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="115" x="596.5" y="415.7891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="603.5" y="435.7842">PhoneWindow</text><polygon fill="#181818" points="642,474.2188,652,478.2188,642,482.2188,646,478.2188" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="504" x2="648" y1="478.2188" y2="478.2188"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="126" x="511" y="473.1528">setWindowManager</text><polygon fill="#181818" points="169,488.2188,159,492.2188,169,496.2188,165,492.2188" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="163" x2="498" y1="492.2188" y2="492.2188"/><polygon fill="#181818" points="313,517.3516,323,521.3516,313,525.3516,317,521.3516" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="158" x2="319" y1="521.3516" y2="521.3516"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="130" x="165" y="516.2856">callActivityOnCreate</text><polygon fill="#181818" points="482,546.4844,492,550.4844,482,554.4844,486,550.4844" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="335" x2="488" y1="550.4844" y2="550.4844"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="95" x="342" y="545.4185">performCreate</text><line style="stroke:#181818;stroke-width:1.0;" x1="504" x2="551" y1="574.6172" y2="574.6172"/><line style="stroke:#181818;stroke-width:1.0;" x1="551" x2="551" y1="574.6172" y2="587.6172"/><line style="stroke:#181818;stroke-width:1.0;" x1="510" x2="551" y1="587.6172" y2="587.6172"/><polygon fill="#181818" points="520,583.6172,510,587.6172,520,591.6172,516,587.6172" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="59" x="516" y="569.5513">onCreate</text><polygon fill="#181818" points="637,617.75,647,621.75,637,625.75,641,621.75" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="509" x2="643" y1="621.75" y2="621.75"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="102" x="516" y="616.6841">setContentView</text><polygon fill="#181818" points="785.5,631.75,795.5,635.75,785.5,639.75,789.5,635.75" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="659" x2="791.5" y1="635.75" y2="635.75"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="91" x="797.5" y="629.75"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="804.5" y="649.7451">DecorView</text><line style="stroke:#181818;stroke-width:1.0;" x1="659" x2="701" y1="692.1797" y2="692.1797"/><line style="stroke:#181818;stroke-width:1.0;" x1="701" x2="701" y1="692.1797" y2="705.1797"/><line style="stroke:#181818;stroke-width:1.0;" x1="660" x2="701" y1="705.1797" y2="705.1797"/><polygon fill="#181818" points="670,701.1797,660,705.1797,670,709.1797,666,705.1797" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="165" x="666" y="687.1138">mContentParent.addView</text><polygon fill="#181818" points="520,715.1797,510,719.1797,520,723.1797,516,719.1797" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="514" x2="653" y1="719.1797" y2="719.1797"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="509" x2="551" y1="738.1797" y2="738.1797"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="551" x2="551" y1="738.1797" y2="751.1797"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="504" x2="551" y1="751.1797" y2="751.1797"/><polygon fill="#181818" points="514,747.1797,504,751.1797,514,755.1797,510,751.1797" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="346,756.1797,336,760.1797,346,764.1797,342,760.1797" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="340" x2="498" y1="760.1797" y2="760.1797"/><polygon fill="#181818" points="169,770.1797,159,774.1797,169,778.1797,165,774.1797" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="163" x2="329" y1="774.1797" y2="774.1797"/><polygon fill="#181818" points="482,799.3125,492,803.3125,482,807.3125,486,803.3125" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="158" x2="488" y1="803.3125" y2="803.3125"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="83" x="165" y="798.2466">performStart</text><polygon fill="#181818" points="346,828.4453,336,832.4453,346,836.4453,342,832.4453" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="340" x2="493" y1="832.4453" y2="832.4453"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="118" x="352" y="827.3794">callActivityOnStart</text><polygon fill="#181818" points="482,857.5781,492,861.5781,482,865.5781,486,861.5781" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="330" x2="488" y1="861.5781" y2="861.5781"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="47" x="337" y="856.5122">onStart</text><polygon fill="#181818" points="169,871.5781,159,875.5781,169,879.5781,165,875.5781" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="163" x2="498" y1="875.5781" y2="875.5781"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="158" x2="200" y1="894.5781" y2="894.5781"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="200" x2="200" y1="894.5781" y2="907.5781"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="153" x2="200" y1="907.5781" y2="907.5781"/><polygon fill="#181818" points="163,903.5781,153,907.5781,163,911.5781,159,907.5781" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="153" x2="200" y1="926.7109" y2="926.7109"/><line style="stroke:#181818;stroke-width:1.0;" x1="200" x2="200" y1="926.7109" y2="939.7109"/><line style="stroke:#181818;stroke-width:1.0;" x1="159" x2="200" y1="939.7109" y2="939.7109"/><polygon fill="#181818" points="169,935.7109,159,939.7109,169,943.7109,165,939.7109" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="144" x="165" y="921.645">handleResumeActivity</text><line style="stroke:#181818;stroke-width:1.0;" x1="158" x2="205" y1="968.8438" y2="968.8438"/><line style="stroke:#181818;stroke-width:1.0;" x1="205" x2="205" y1="968.8438" y2="981.8438"/><line style="stroke:#181818;stroke-width:1.0;" x1="164" x2="205" y1="981.8438" y2="981.8438"/><polygon fill="#181818" points="174,977.8438,164,981.8438,174,985.8438,170,981.8438" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="153" x="170" y="963.7778">performResumeActivity</text><polygon fill="#181818" points="482,1011.9766,492,1015.9766,482,1019.9766,486,1015.9766" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="163" x2="488" y1="1015.9766" y2="1015.9766"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="105" x="170" y="1010.9106">performResume</text><polygon fill="#181818" points="346,1041.1094,336,1045.1094,346,1049.1094,342,1045.1094" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="340" x2="493" y1="1045.1094" y2="1045.1094"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="140" x="352" y="1040.0435">callActivityOnResume</text><polygon fill="#181818" points="482,1070.2422,492,1074.2422,482,1078.2422,486,1074.2422" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="330" x2="488" y1="1074.2422" y2="1074.2422"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="69" x="337" y="1069.1763">onResume</text><polygon fill="#181818" points="174,1084.2422,164,1088.2422,174,1092.2422,170,1088.2422" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="168" x2="498" y1="1088.2422" y2="1088.2422"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="163" x2="205" y1="1107.2422" y2="1107.2422"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="205" x2="205" y1="1107.2422" y2="1120.2422"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="158" x2="205" y1="1120.2422" y2="1120.2422"/><polygon fill="#181818" points="168,1116.2422,158,1120.2422,168,1124.2422,164,1120.2422" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="963,1140.375,973,1144.375,963,1148.375,967,1144.375" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="158" x2="969" y1="1144.375" y2="1144.375"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="132" x="165" y="1139.3091">addView(decorView)</text><polygon fill="#181818" points="1143,1169.5078,1153,1173.5078,1143,1177.5078,1147,1173.5078" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="985" x2="1149" y1="1173.5078" y2="1173.5078"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="55" x="992" y="1168.4419">addView</text><polygon fill="#181818" points="1362.5,1183.5078,1372.5,1187.5078,1362.5,1191.5078,1366.5,1187.5078" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1165" x2="1368.5" y1="1187.5078" y2="1187.5078"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="115" x="1374.5" y="1181.5078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="1381.5" y="1201.5029">ViewRootImpl</text><line style="stroke:#181818;stroke-width:1.0;" x1="1165" x2="1207" y1="1243.9375" y2="1243.9375"/><line style="stroke:#181818;stroke-width:1.0;" x1="1207" x2="1207" y1="1243.9375" y2="1256.9375"/><line style="stroke:#181818;stroke-width:1.0;" x1="1166" x2="1207" y1="1256.9375" y2="1256.9375"/><polygon fill="#181818" points="1176,1252.9375,1166,1256.9375,1176,1260.9375,1172,1256.9375" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="119" x="1172" y="1238.8716">mViews.add(view)</text><line style="stroke:#181818;stroke-width:1.0;" x1="1165" x2="1207" y1="1286.0703" y2="1286.0703"/><line style="stroke:#181818;stroke-width:1.0;" x1="1207" x2="1207" y1="1286.0703" y2="1299.0703"/><line style="stroke:#181818;stroke-width:1.0;" x1="1166" x2="1207" y1="1299.0703" y2="1299.0703"/><polygon fill="#181818" points="1176,1295.0703,1166,1299.0703,1176,1303.0703,1172,1299.0703" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="114" x="1172" y="1281.0044">mRoots.add(root)</text><line style="stroke:#181818;stroke-width:1.0;" x1="1165" x2="1207" y1="1328.2031" y2="1328.2031"/><line style="stroke:#181818;stroke-width:1.0;" x1="1207" x2="1207" y1="1328.2031" y2="1341.2031"/><line style="stroke:#181818;stroke-width:1.0;" x1="1166" x2="1207" y1="1341.2031" y2="1341.2031"/><polygon fill="#181818" points="1176,1337.2031,1166,1341.2031,1176,1345.2031,1172,1341.2031" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="160" x="1172" y="1323.1372">mParams.add(wparams)</text><polygon fill="#181818" points="1420,1366.3359,1430,1370.3359,1420,1374.3359,1424,1370.3359" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1165" x2="1426" y1="1370.3359" y2="1370.3359"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="1172" y="1365.27">setView</text><polygon fill="#181818" points="996,1380.3359,986,1384.3359,996,1388.3359,992,1384.3359" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="990" x2="1159" y1="1384.3359" y2="1384.3359"/><polygon fill="#181818" points="169,1394.3359,159,1398.3359,169,1402.3359,165,1398.3359" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="163" x2="979" y1="1398.3359" y2="1398.3359"/><!--SRC=[bLHHRvim47xdLvpQXoQD4dMFvM5IojGrKjfLRTffMgNg2jTY2MnadB3jryzWWq8mWUOXWFrzT_TzzjqPn2mYU1T2lOa_NePIiP1bo1NyP3mInIro_23vFH5lc82G4Kcul6m1dnaL3ph0Airgn9UB2y_xBUPVOHagjcFgxoQMX17u42EF4hgbFDTn5ozylNow2svUby5czRpQ_F8E2DqGiraJPOrR7iRrleFgqZ2R-S0uKmmJzeyy5wI7wGCyajonaEpwueEKNPcS51NZP3hr9AcjvAEKd5vVN-cV3nd9To7JGKKhdYkvJOahL4nmumQdeg4S0XmS7u84ytmjK9_L8j6Fwjj5hSF2-Rd9KsAGXpGiqfI6Ic4ODx0IS1yBJiPV4pOr7xqW7t9IhGFfpzxrnuSGawH6_k21XYewAhQgt9w8XU_NriO9xe3ibr-Me0K4WYkThUmMRtzRexzHA6IveVqut6iRaTeezoZr_mAZg8fdxN0-Xax8wdnKkgLR6fnNhUsb8HspSZwlB3B0Cp0rDGjZAtKqZ9a03vJhn4VwnJKyhEBHN0ThmAX3donfX54MEMHCgnkgmLicjTTX4jNtQUfrWRrZ4Pe0VKEnDUdrLVtKx4nBTbvUsSckMzeWkynhs5A_VPQj-mLJGo-owdqwIcJLkTqM-my0]--></g></svg>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="203px" preserveAspectRatio="none" style="width:372px;height:203px;background:#FFFFFF;" version="1.1" viewBox="0 0 372 203" width="372px" zoomAndPan="magnify"><defs/><g><!--class WindowManagerGlobal--><g id="elem_WindowManagerGlobal"><rect codeLine="1" fill="#F1F1F1" height="80.5938" id="WindowManagerGlobal" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="259" x="101.5" y="7"/><ellipse cx="145.3" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M147.6438,18.6719 C146.7063,18.2344 146.1125,18.0938 145.2375,18.0938 C142.6125,18.0938 140.6125,20.1719 140.6125,22.8906 L140.6125,24.0156 C140.6125,26.5938 142.7219,28.4844 145.6125,28.4844 C146.8313,28.4844 147.9875,28.1875 148.7375,27.6406 C149.3156,27.2344 149.6438,26.7813 149.6438,26.3906 C149.6438,25.9375 149.2531,25.5469 148.7844,25.5469 C148.5656,25.5469 148.3625,25.625 148.175,25.8125 C147.7219,26.2969 147.7219,26.2969 147.5344,26.3906 C147.1125,26.6563 146.425,26.7813 145.6594,26.7813 C143.6125,26.7813 142.3156,25.6875 142.3156,23.9844 L142.3156,22.8906 C142.3156,21.1094 143.5656,19.7969 145.3,19.7969 C145.8781,19.7969 146.4875,19.9531 146.9563,20.2031 C147.4406,20.4844 147.6125,20.7031 147.7063,21.1094 C147.7688,21.5156 147.8,21.6406 147.9406,21.7656 C148.0813,21.9063 148.3156,22.0156 148.5344,22.0156 C148.8,22.0156 149.0656,21.875 149.2375,21.6563 C149.3469,21.5 149.3781,21.3125 149.3781,20.8906 L149.3781,19.4688 C149.3781,19.0313 149.3625,18.9063 149.2688,18.75 C149.1125,18.4844 148.8313,18.3438 148.5344,18.3438 C148.2375,18.3438 148.0344,18.4375 147.8156,18.75 L147.6438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="165.7" y="27.8467">WindowManagerGlobal</text><line style="stroke:#181818;stroke-width:0.5;" x1="102.5" x2="359.5" y1="39" y2="39"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="107.5" y="55.9951">ArrayList&lt;View&gt; mViews;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="247" x="107.5" y="72.292">ArrayList&lt;ViewRootImpl&gt; mRoots</text><line style="stroke:#181818;stroke-width:0.5;" x1="102.5" x2="359.5" y1="79.5938" y2="79.5938"/></g><!--class View--><g id="elem_View"><rect fill="#F1F1F1" height="48" id="View" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="66" x="131" y="148"/><ellipse cx="146" cy="164" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M148.3438,159.6719 C147.4063,159.2344 146.8125,159.0938 145.9375,159.0938 C143.3125,159.0938 141.3125,161.1719 141.3125,163.8906 L141.3125,165.0156 C141.3125,167.5938 143.4219,169.4844 146.3125,169.4844 C147.5313,169.4844 148.6875,169.1875 149.4375,168.6406 C150.0156,168.2344 150.3438,167.7813 150.3438,167.3906 C150.3438,166.9375 149.9531,166.5469 149.4844,166.5469 C149.2656,166.5469 149.0625,166.625 148.875,166.8125 C148.4219,167.2969 148.4219,167.2969 148.2344,167.3906 C147.8125,167.6563 147.125,167.7813 146.3594,167.7813 C144.3125,167.7813 143.0156,166.6875 143.0156,164.9844 L143.0156,163.8906 C143.0156,162.1094 144.2656,160.7969 146,160.7969 C146.5781,160.7969 147.1875,160.9531 147.6563,161.2031 C148.1406,161.4844 148.3125,161.7031 148.4063,162.1094 C148.4688,162.5156 148.5,162.6406 148.6406,162.7656 C148.7813,162.9063 149.0156,163.0156 149.2344,163.0156 C149.5,163.0156 149.7656,162.875 149.9375,162.6563 C150.0469,162.5 150.0781,162.3125 150.0781,161.8906 L150.0781,160.4688 C150.0781,160.0313 150.0625,159.9063 149.9688,159.75 C149.8125,159.4844 149.5313,159.3438 149.2344,159.3438 C148.9375,159.3438 148.7344,159.4375 148.5156,159.75 L148.3438,159.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="160" y="168.8467">View</text><line style="stroke:#181818;stroke-width:0.5;" x1="132" x2="196" y1="180" y2="180"/><line style="stroke:#181818;stroke-width:0.5;" x1="132" x2="196" y1="188" y2="188"/></g><g id="elem_GMN5"><path d="M6,159.5 L6,184.6328 A0,0 0 0 0 6,184.6328 L96,184.6328 A0,0 0 0 0 96,184.6328 L96,177.5 L130.808,172 L96,169.5 L96,169.5 L86,159.5 L6,159.5 A0,0 0 0 0 6,159.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M86,159.5 L86,169.5 L96,169.5 L86,159.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="69" x="12" y="176.5669">DecorView</text></g><!--class ViewRootImpl--><g id="elem_ViewRootImpl"><rect fill="#F1F1F1" height="48" id="ViewRootImpl" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="232.5" y="148"/><ellipse cx="247.5" cy="164" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M249.8438,159.6719 C248.9063,159.2344 248.3125,159.0938 247.4375,159.0938 C244.8125,159.0938 242.8125,161.1719 242.8125,163.8906 L242.8125,165.0156 C242.8125,167.5938 244.9219,169.4844 247.8125,169.4844 C249.0313,169.4844 250.1875,169.1875 250.9375,168.6406 C251.5156,168.2344 251.8438,167.7813 251.8438,167.3906 C251.8438,166.9375 251.4531,166.5469 250.9844,166.5469 C250.7656,166.5469 250.5625,166.625 250.375,166.8125 C249.9219,167.2969 249.9219,167.2969 249.7344,167.3906 C249.3125,167.6563 248.625,167.7813 247.8594,167.7813 C245.8125,167.7813 244.5156,166.6875 244.5156,164.9844 L244.5156,163.8906 C244.5156,162.1094 245.7656,160.7969 247.5,160.7969 C248.0781,160.7969 248.6875,160.9531 249.1563,161.2031 C249.6406,161.4844 249.8125,161.7031 249.9063,162.1094 C249.9688,162.5156 250,162.6406 250.1406,162.7656 C250.2813,162.9063 250.5156,163.0156 250.7344,163.0156 C251,163.0156 251.2656,162.875 251.4375,162.6563 C251.5469,162.5 251.5781,162.3125 251.5781,161.8906 L251.5781,160.4688 C251.5781,160.0313 251.5625,159.9063 251.4688,159.75 C251.3125,159.4844 251.0313,159.3438 250.7344,159.3438 C250.4375,159.3438 250.2344,159.4375 250.0156,159.75 L249.8438,159.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="261.5" y="168.8467">ViewRootImpl</text><line style="stroke:#181818;stroke-width:0.5;" x1="233.5" x2="364.5" y1="180" y2="180"/><line style="stroke:#181818;stroke-width:0.5;" x1="233.5" x2="364.5" y1="188" y2="188"/></g><!--reverse link WindowManagerGlobal to View--><g id="link_WindowManagerGlobal_View"><path codeLine="5" d="M203.4889,98.8002 C192.7139,118.5014 185.84,131.0687 176.666,147.8428 " fill="none" id="WindowManagerGlobal-backto-View" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="209.247,88.272,202.8585,91.6168,203.4889,98.8002,209.8774,95.4555,209.247,88.272" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="197.3036" y="107.7718">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="170.8867" y="136.8146">n</text></g><!--reverse link WindowManagerGlobal to ViewRootImpl--><g id="link_WindowManagerGlobal_ViewRootImpl"><path codeLine="7" d="M258.902,98.7639 C269.838,118.4651 276.834,131.0687 286.145,147.8428 " fill="none" id="WindowManagerGlobal-backto-ViewRootImpl" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="253.078,88.272,252.4927,95.4593,258.902,98.7639,259.4873,91.5766,253.078,88.272" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="247.8462" y="107.7718">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="273.8259" y="136.8146">n</text></g><!--SRC=[Iyv9B2vM2C_CIyalzqtCIqnFBNBFoKzAp56evb800iUYeiHAdypY4fkmpDHoEuLS45LiZKKkA3-_n3Et80Ue1iGivghbmcQiag6IWfQkhe9Idf82I1jNNdv9ga9EQbg9GduQM4J1Ii4bDJc_22nBZ14mcm40]--></g></svg>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
  </entry>
  <entry>
    <title>ARouter源码分析</title>
    <url>/posts/23659d3d.html</url>
    <content><![CDATA[<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="70px" preserveAspectRatio="none" style="width:247px;height:70px;background:#FFFFFF;" version="1.1" viewBox="0 0 247 70" width="247px" zoomAndPan="magnify"><defs/><g><!--class ARouter--><g id="elem_ARouter"><rect codeLine="1" fill="#F1F1F1" height="56.2656" id="ARouter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="99" x="7" y="7"/><ellipse cx="22" cy="27.1328" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M25.7813,23.1016 C25.7813,22.6641 25.7656,22.5234 25.6719,22.3672 C25.5313,22.1328 25.25,21.9766 24.9531,21.9766 C24.6094,21.9766 24.4688,22.1172 24.2969,22.5391 C23.7031,22.1641 22.9531,21.9766 22.0781,21.9766 C19.9688,21.9766 18.3906,23.2734 18.3906,24.9922 C18.3906,25.9609 18.9219,26.8672 19.7813,27.3516 C20.3281,27.6641 20.875,27.8359 21.9844,28.0234 C23.1406,28.2266 23.4063,28.2891 23.7656,28.4766 C24.1406,28.6797 24.375,29.0234 24.375,29.3828 C24.375,30.1172 23.3906,30.6641 22.1406,30.6641 C21.0156,30.6641 19.9375,30.1797 19.7656,29.5703 C19.6406,29.1016 19.6406,29.1016 19.5156,28.9922 C19.3594,28.8359 19.1406,28.7422 18.9063,28.7422 C18.625,28.7422 18.375,28.8672 18.2031,29.0859 C18.0938,29.2578 18.0469,29.4453 18.0469,29.8672 L18.0469,30.9922 C18.0469,31.7578 18.3281,32.1172 18.9219,32.1172 C19.1875,32.1172 19.3125,32.0547 19.5938,31.7109 C20.4375,32.1484 21.3281,32.3672 22.25,32.3672 C24.5781,32.3672 26.1406,31.1797 26.1406,29.4141 C26.1406,28.5234 25.8281,27.8359 25.1406,27.2891 C24.6094,26.8672 23.9688,26.6172 22.4844,26.3516 C21.2188,26.1172 21.125,26.0859 20.7969,25.9141 C20.4219,25.7266 20.1563,25.3359 20.1563,24.9766 C20.1563,24.2422 21.0156,23.6797 22.0781,23.6797 C23.1406,23.6797 23.9531,24.1484 24.1094,24.8203 C24.2188,25.3672 24.2188,25.3672 24.3438,25.5078 C24.4844,25.6328 24.7188,25.7422 24.9531,25.7422 C25.2188,25.7422 25.4688,25.6016 25.6406,25.3828 C25.75,25.2109 25.7813,25.0703 25.7813,24.6016 L25.7813,23.1016 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="71" x="34" y="23.1387">&#171;Singleton&#187;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="40" y="38.9639">ARouter</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="105" y1="47.2656" y2="47.2656"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="105" y1="55.2656" y2="55.2656"/></g><!--class _ARouter--><g id="elem__ARouter"><rect codeLine="2" fill="#F1F1F1" height="56.2656" id="_ARouter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="99" x="141" y="7"/><ellipse cx="156" cy="27.1328" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M159.7813,23.1016 C159.7813,22.6641 159.7656,22.5234 159.6719,22.3672 C159.5313,22.1328 159.25,21.9766 158.9531,21.9766 C158.6094,21.9766 158.4688,22.1172 158.2969,22.5391 C157.7031,22.1641 156.9531,21.9766 156.0781,21.9766 C153.9688,21.9766 152.3906,23.2734 152.3906,24.9922 C152.3906,25.9609 152.9219,26.8672 153.7813,27.3516 C154.3281,27.6641 154.875,27.8359 155.9844,28.0234 C157.1406,28.2266 157.4063,28.2891 157.7656,28.4766 C158.1406,28.6797 158.375,29.0234 158.375,29.3828 C158.375,30.1172 157.3906,30.6641 156.1406,30.6641 C155.0156,30.6641 153.9375,30.1797 153.7656,29.5703 C153.6406,29.1016 153.6406,29.1016 153.5156,28.9922 C153.3594,28.8359 153.1406,28.7422 152.9063,28.7422 C152.625,28.7422 152.375,28.8672 152.2031,29.0859 C152.0938,29.2578 152.0469,29.4453 152.0469,29.8672 L152.0469,30.9922 C152.0469,31.7578 152.3281,32.1172 152.9219,32.1172 C153.1875,32.1172 153.3125,32.0547 153.5938,31.7109 C154.4375,32.1484 155.3281,32.3672 156.25,32.3672 C158.5781,32.3672 160.1406,31.1797 160.1406,29.4141 C160.1406,28.5234 159.8281,27.8359 159.1406,27.2891 C158.6094,26.8672 157.9688,26.6172 156.4844,26.3516 C155.2188,26.1172 155.125,26.0859 154.7969,25.9141 C154.4219,25.7266 154.1563,25.3359 154.1563,24.9766 C154.1563,24.2422 155.0156,23.6797 156.0781,23.6797 C157.1406,23.6797 157.9531,24.1484 158.1094,24.8203 C158.2188,25.3672 158.2188,25.3672 158.3438,25.5078 C158.4844,25.6328 158.7188,25.7422 158.9531,25.7422 C159.2188,25.7422 159.4688,25.6016 159.6406,25.3828 C159.75,25.2109 159.7813,25.0703 159.7813,24.6016 L159.7813,23.1016 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="71" x="168" y="23.1387">&#171;Singleton&#187;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="170.5" y="38.9639">_ARouter</text><line style="stroke:#181818;stroke-width:0.5;" x1="142" x2="239" y1="47.2656" y2="47.2656"/><line style="stroke:#181818;stroke-width:0.5;" x1="142" x2="239" y1="55.2656" y2="55.2656"/></g><!--link ARouter to _ARouter--><g id="link_ARouter__ARouter"><path codeLine="3" d="M106.2266,35 C117.748,35 123.27,35 134.792,35 " fill="none" id="ARouter-to-_ARouter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="140.792,35,131.792,31,135.792,35,131.792,39,140.792,35" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[Iyv9B2vMS0pABor9BLAmiL7G2DPHTdCpDpSmq5G8pinBpqajoSzJiBFZIWQhZ2T6AKoDhXrSFG00]--></g></svg>

<p>初始化调用时序</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="250px" preserveAspectRatio="none" style="width:366px;height:250px;background:#FFFFFF;" version="1.1" viewBox="0 0 366 250" width="366px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="138.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="46" y="67.4297"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="132.5" y="96.5625"/><rect fill="#FFFFFF" height="80.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="246" y="125.6953"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="50.5" x2="50.5" y1="36.2969" y2="214.9609"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="137.5" x2="137.5" y1="36.2969" y2="214.9609"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="250.5" x2="250.5" y1="36.2969" y2="214.9609"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="73" x="14.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="21.5" y="24.9951">ARouter</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="73" x="14.5" y="213.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="21.5" y="233.9561">ARouter</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="80" x="97.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="104.5" y="24.9951">_ARouter</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="80" x="97.5" y="213.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="104.5" y="233.9561">_ARouter</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="127" x="187.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="194.5" y="24.9951">LogisticsCenter</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="127" x="187.5" y="213.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="194.5" y="233.9561">LogisticsCenter</text><rect fill="#FFFFFF" height="138.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="46" y="67.4297"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="132.5" y="96.5625"/><rect fill="#FFFFFF" height="80.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="246" y="125.6953"/><ellipse cx="7.5" cy="66.6797" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="34,63.4297,44,67.4297,34,71.4297,38,67.4297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="40" y1="67.4297" y2="67.4297"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="19" x="15" y="62.3638">init</text><polygon fill="#181818" points="120.5,92.5625,130.5,96.5625,120.5,100.5625,124.5,96.5625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="56" x2="126.5" y1="96.5625" y2="96.5625"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="19" x="63" y="91.4966">init</text><polygon fill="#181818" points="234,121.6953,244,125.6953,234,129.6953,238,125.6953" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="137.5" x2="240" y1="125.6953" y2="125.6953"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="19" x="144.5" y="120.6294">init</text><line style="stroke:#181818;stroke-width:1.0;" x1="256" x2="298" y1="154.8281" y2="154.8281"/><line style="stroke:#181818;stroke-width:1.0;" x1="298" x2="298" y1="154.8281" y2="167.8281"/><line style="stroke:#181818;stroke-width:1.0;" x1="257" x2="298" y1="167.8281" y2="167.8281"/><polygon fill="#181818" points="267,163.8281,257,167.8281,267,171.8281,263,167.8281" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="96" x="263" y="149.7622">loadRouterMap</text><polygon fill="#181818" points="125.5,192.9609,135.5,196.9609,125.5,200.9609,129.5,196.9609" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="56" x2="131.5" y1="196.9609" y2="196.9609"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="50" x="63" y="191.895">afterInit</text><!--SRC=[YyxNjLDm3CelBKajKj3MjbB8pCiiuO890ENYCIJZaMHzyjCpYqioaukTK_F0GhfmPHXIcAgj57Bo4rCWflac5c2praeXCGr8UG9D1000]--></g></svg>

<h2 id="生成路由表"><a href="#生成路由表" class="headerlink" title="生成路由表"></a>生成路由表</h2><p>ARouter是通过在编译阶段使用<a href="https://kotlinlang.org/docs/kapt.html">kapt</a>解析Route注解，再通过<a href="https://github.com/square/javapoet">javapoet</a>来生成路由表相关代码。注解处理器在<code>arouter-compiler/src/main/java/com/alibaba/android/arouter/compiler/processor/RouteProcessor.java</code>。</p>
<p>比如<code>module-kotlin</code>模块有三个activity，路由分别是：</p>
<ul>
<li>/one/first</li>
<li>/one/second</li>
<li>/two/test</li>
</ul>
<p>生成的路由表如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//生成目录位于module-kotlin/build/generated/source/kapt/debug/com/alibaba/android/arouter/routes</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ARouter$$Root$$modulekotlin</span> <span class="keyword">implements</span> <span class="title class_">IRouteRoot</span> &#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">loadInto</span><span class="params">(Map&lt;String, Class&lt;? extends IRouteGroup&gt;&gt; routes)</span> &#123;</span><br><span class="line">    routes.put(<span class="string">&quot;one&quot;</span>, ARouter$$Group$$one.class);</span><br><span class="line">    routes.put(<span class="string">&quot;two&quot;</span>, ARouter$$Group$$two.class);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ARouter$$Group$$one</span> <span class="keyword">implements</span> <span class="title class_">IRouteGroup</span> &#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">loadInto</span><span class="params">(Map&lt;String, RouteMeta&gt; atlas)</span> &#123;</span><br><span class="line">    atlas.put(<span class="string">&quot;/one/first&quot;</span>, RouteMeta.build(RouteType.ACTIVITY, FistActivity.class, <span class="string">&quot;/one/first&quot;</span>, <span class="string">&quot;one&quot;</span>, <span class="literal">null</span>, -<span class="number">1</span>, -<span class="number">2147483648</span>));</span><br><span class="line">    atlas.put(<span class="string">&quot;/one/second&quot;</span>, RouteMeta.build(RouteType.ACTIVITY, SecondActivity.class, <span class="string">&quot;/one/second&quot;</span>, <span class="string">&quot;two&quot;</span>, <span class="literal">null</span>, -<span class="number">1</span>, -<span class="number">2147483648</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ARouter$$Group$$two</span> <span class="keyword">implements</span> <span class="title class_">IRouteGroup</span> &#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">loadInto</span><span class="params">(Map&lt;String, RouteMeta&gt; atlas)</span> &#123;</span><br><span class="line">    atlas.put(<span class="string">&quot;/two/test&quot;</span>, RouteMeta.build(RouteType.ACTIVITY, TestActivity.class, <span class="string">&quot;/two/test&quot;</span>, <span class="string">&quot;two&quot;</span>, <span class="literal">null</span>, -<span class="number">1</span>, -<span class="number">2147483648</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>编译自动生成的代码包含一个Root（<code>IRouteRoot</code>）和两个Group（<code>IRouteGroup</code>）。Root是module模块下路由表入口类，使用模块名称命名生成类<code>ARouter$$Root$$modulekotlin</code>。Group是二级路由路径的第一级<small>（/one/first中的one）</small>，本例中分别是one和two，分别对应类<code>ARouter$$Group$$one</code>和<code>ARouter$$Group$$two</code>，每个Group类下面才是真正的路由。</p>
<p>从代码中可以看出来<code>ARouter$$Root$$modulekotlin</code>会把两个Group对应的class添加到group列表中。那么，<code>com.alibaba.android.arouter.routes.ARouter$$Root$$modulekotlin#loadInto</code>方法什么时候被执行呢？代码中找不到调用的地方，实际上是在<code>LogisticsCenter#loadRouterMap</code>方法中调用，这个方法会在编译期间动态插入代码。见<a href="#asm%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5">下一节</a>介绍。</p>
<p>备注：<a href="https://kotlinlang.org/docs/kapt.html">kapt</a>相当于java apt，kapt同时支持kotlin和java代码的注解。kapt生成的代码在<code>module-kotlin/build/generated/source/kapt</code>目录下，apt生成的代码在<code>module-java/build/generated/ap_generated_sources</code>目录下。</p>
<h2 id="ASM代码注入"><a href="#ASM代码注入" class="headerlink" title="ASM代码注入"></a>ASM代码注入</h2><p>在ARouter初始化流程中会调用<code>com.alibaba.android.arouter.core.LogisticsCenter#loadRouterMap</code>方法，该方法负责填充Group表。原始代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//LogisticsCenter.java</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">loadRouterMap</span><span class="params">()</span> &#123;</span><br><span class="line">        registerByPlugin = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">// auto generate register code by gradle plugin: arouter-auto-register</span></span><br><span class="line">        <span class="comment">// looks like below:</span></span><br><span class="line">        <span class="comment">// registerRouteRoot(new ARouter..Root..modulejava());</span></span><br><span class="line">        <span class="comment">// registerRouteRoot(new ARouter..Root..modulekotlin());</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>方法中没有任何注册逻辑。实际上这个方法会在编译期间通过<a href="https://asm.ow2.io/asm4-guide.pdf">ASM</a>来修改方法的实现。ASM注入代码后：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//LogisticsCenter.class</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">loadRouterMap</span><span class="params">()</span> &#123;</span><br><span class="line">    registerByPlugin = <span class="literal">false</span>;</span><br><span class="line">    register(<span class="string">&quot;com.alibaba.android.arouter.routes.ARouter$$Root$$modulejava&quot;</span>);</span><br><span class="line">    register(<span class="string">&quot;com.alibaba.android.arouter.routes.ARouter$$Root$$modulekotlin&quot;</span>);</span><br><span class="line">    register(<span class="string">&quot;com.alibaba.android.arouter.routes.ARouter$$Root$$arouterapi&quot;</span>);</span><br><span class="line">    register(<span class="string">&quot;com.alibaba.android.arouter.routes.ARouter$$Interceptors$$modulejava&quot;</span>);</span><br><span class="line">    register(<span class="string">&quot;com.alibaba.android.arouter.routes.ARouter$$Providers$$modulejava&quot;</span>);</span><br><span class="line">    register(<span class="string">&quot;com.alibaba.android.arouter.routes.ARouter$$Providers$$modulekotlin&quot;</span>);</span><br><span class="line">    register(<span class="string">&quot;com.alibaba.android.arouter.routes.ARouter$$Providers$$arouterapi&quot;</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>代码注入在arouter-gradle-plugin插件中实现，代码对应在<code>arouter-gradle-plugin/src/main/groovy/com/alibaba/android/arouter/register/launch/PluginLaunch.groovy</code>文件中，插件会注册一个RegisterTransform，这个Transform会在<code>*.class</code>转换成dex文件之前运行。</p>
<p>注入的代码是调用register函数，定义如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//LogisticsCenter.java</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">(String className)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(className)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Class&lt;?&gt; clazz = Class.forName(className);</span><br><span class="line">                <span class="comment">//1.通过反射调用类构造方法</span></span><br><span class="line">                <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> clazz.getConstructor().newInstance(); </span><br><span class="line">                <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> IRouteRoot) &#123;</span><br><span class="line">                    registerRouteRoot((IRouteRoot) obj);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> IProviderGroup) &#123;</span><br><span class="line">                    registerProvider((IProviderGroup) obj);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> IInterceptorGroup) &#123;</span><br><span class="line">                    registerInterceptor((IInterceptorGroup) obj);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    logger.info(TAG, <span class="string">&quot;register failed, class name: &quot;</span> + className</span><br><span class="line">                            + <span class="string">&quot; should implements one of IRouteRoot/IProviderGroup/IInterceptorGroup.&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                logger.error(TAG,<span class="string">&quot;register class error:&quot;</span> + className, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">registerRouteRoot</span><span class="params">(IRouteRoot routeRoot)</span> &#123;</span><br><span class="line">        markRegisteredByPlugin();</span><br><span class="line">        <span class="keyword">if</span> (routeRoot != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">//2.调用loadInto方法</span></span><br><span class="line">            routeRoot.loadInto(Warehouse.groupsIndex);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>从上述代码可以看到先通过反射方式创建<code>com.alibaba.android.arouter.routes.ARouter$$Root$$modulekotlin</code>类的实例对象，然后调用它的loadInto方法。最终效果是group被注册到<code>Warehouse.groupsIndex</code>这个map中，相当于下面这段代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Warehouse.groupsIndex.put(<span class="string">&quot;kotlin&quot;</span>, ARouter$$Group$$kotlin.class)</span><br></pre></td></tr></table></figure>

<p><strong>备注：</strong> 如果期望编译时打印代码注入相关的日志，可以使用下面命令行进行编译</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./gradlew clean &amp;&amp; ./gradlew -i :app:assembleDebug | tee build_log.txt</span><br></pre></td></tr></table></figure>

<h2 id="路由查找"><a href="#路由查找" class="headerlink" title="路由查找"></a>路由查找</h2><p>ARouter初始化完成之后，如果没有发生路由跳转，路由表就还是空的，但group表是有数据。当发生路由跳转时，会首先查找路由表，由于是首次跳转，路由表中找不到路由，就会在group表中查找路由对应的group类，把这个group下面的所有路由注册到路由表，然后再进行跳转。当下次再跳转时路由表中就存在对应的路由了。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="548px" preserveAspectRatio="none" style="width:833px;height:548px;background:#FFFFFF;" version="1.1" viewBox="0 0 833 548" width="833px" zoomAndPan="magnify"><defs/><g><ellipse cx="224" cy="20" fill="#222222" rx="10" ry="10" style="stroke:#222222;stroke-width:1.0;"/><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="139" x="154.5" y="50"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="119" x="164.5" y="71.1387">&#36339;&#36716;&#39029;&#38754;navigation()</text><path d="M366,181.6987 L366,312.7612 L821,312.7612 L821,191.6987 L811,181.6987 L366,181.6987 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M811,181.6987 L811,191.6987 L821,191.6987 L811,181.6987 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="122" x="372" y="198.7656">class Warehouse {</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="88" x="388" y="213.8984">// &#12304;group&#34920;&#12305;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="414" x="388" y="229.0313">static Map&lt;String, Class&lt;? extends IRouteGroup&gt;&gt; groupsIndex</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="138" x="628" y="244.1641">= new HashMap&lt;&gt;();</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="77" x="388" y="259.2969">// &#12304;&#36335;&#30001;&#34920;&#12305;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="386" x="388" y="274.4297">static Map&lt;String, RouteMeta&gt; routes = new HashMap&lt;&gt;();</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="24" x="388" y="289.5625">......</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="9" x="372" y="304.6953">}</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="164" x="142" y="159.6792"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="144" x="152" y="180.8179">&#22312;group&#34920;&#20013;&#26597;&#25214;group&#31867;</text><polygon fill="#F1F1F1" points="197,228.6479,251,228.6479,263,240.6479,251,252.6479,197,252.6479,185,240.6479,197,228.6479" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="54" x="197" y="244.4561">&#23384;&#22312;group</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="164" y="238.0537">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="14" x="263" y="238.0537">no</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="151" x="68.5" y="262.6479"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="131" x="78.5" y="283.7866">&#21453;&#23556;&#21021;&#22987;&#21270;group class</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="212" x="38" y="331.6167"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="192" x="48" y="352.7554">group&#19979;&#30340;&#25152;&#26377;&#36335;&#30001;&#28155;&#21152;&#21040;&#36335;&#30001;&#34920;&#20013;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="68" x="270" y="262.6479"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="48" x="280" y="283.7866">&#25243;&#20986;&#24322;&#24120;</text><ellipse cx="304" cy="342.6167" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="304" cy="342.6167" fill="#222222" rx="6" ry="6" style="stroke:#222222;stroke-width:1.0;"/><polygon fill="#F1F1F1" points="174.5,103.9688,273.5,103.9688,285.5,115.9688,273.5,127.9688,174.5,127.9688,162.5,115.9688,174.5,103.9688" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="33" x="228" y="138.1792">&#19981;&#23384;&#22312;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="174.5" y="119.7769">&#36335;&#30001;&#34920;&#20013;&#23384;&#22312;&#36335;&#30001;&#65311;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="22" x="140.5" y="113.3745">&#23384;&#22312;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="144" x="152" y="407.5854"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="124" x="162" y="428.7241">&#36335;&#30001;&#20449;&#24687;&#22635;&#20805;Postcard</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="128" x="160" y="461.5542"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="108" x="170" y="482.6929">&#25191;&#34892;&#25318;&#25130;&#21644;&#36339;&#36716;&#36923;&#36753;</text><ellipse cx="224" cy="526.5229" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="224" cy="526.5229" fill="#222222" rx="6" ry="6" style="stroke:#222222;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="224" x2="224" y1="30" y2="50"/><polygon fill="#181818" points="220,40,224,50,228,40,224,44" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="144" x2="144" y1="296.6167" y2="331.6167"/><polygon fill="#181818" points="140,321.6167,144,331.6167,148,321.6167,144,325.6167" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="304" x2="304" y1="296.6167" y2="331.6167"/><polygon fill="#181818" points="300,321.6167,304,331.6167,308,321.6167,304,325.6167" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="185" x2="144" y1="240.6479" y2="240.6479"/><line style="stroke:#181818;stroke-width:1.0;" x1="144" x2="144" y1="240.6479" y2="262.6479"/><polygon fill="#181818" points="140,252.6479,144,262.6479,148,252.6479,144,256.6479" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="263" x2="304" y1="240.6479" y2="240.6479"/><line style="stroke:#181818;stroke-width:1.0;" x1="304" x2="304" y1="240.6479" y2="262.6479"/><polygon fill="#181818" points="300,252.6479,304,262.6479,308,252.6479,304,256.6479" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="144" x2="144" y1="365.5854" y2="370.5854"/><line style="stroke:#181818;stroke-width:1.0;" x1="144" x2="352" y1="370.5854" y2="370.5854"/><polygon fill="#181818" points="348,251.23,352,241.23,356,251.23,352,247.23" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="352" x2="352" y1="115.9688" y2="370.5854"/><line style="stroke:#181818;stroke-width:1.0;" x1="352" x2="285.5" y1="115.9688" y2="115.9688"/><polygon fill="#181818" points="295.5,111.9688,285.5,115.9688,295.5,119.9688,291.5,115.9688" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="224" x2="224" y1="193.6479" y2="228.6479"/><polygon fill="#181818" points="220,218.6479,224,228.6479,228,218.6479,224,222.6479" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="224" x2="224" y1="127.9688" y2="159.6792"/><polygon fill="#181818" points="220,149.6792,224,159.6792,228,149.6792,224,153.6792" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="162.5" x2="24" y1="115.9688" y2="115.9688"/><polygon fill="#181818" points="20,243.23,24,253.23,28,243.23,24,247.23" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="24" x2="24" y1="115.9688" y2="387.5854"/><line style="stroke:#181818;stroke-width:1.0;" x1="24" x2="224" y1="387.5854" y2="387.5854"/><line style="stroke:#181818;stroke-width:1.0;" x1="224" x2="224" y1="387.5854" y2="407.5854"/><polygon fill="#181818" points="220,397.5854,224,407.5854,228,397.5854,224,401.5854" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="224" x2="224" y1="83.9688" y2="103.9688"/><polygon fill="#181818" points="220,93.9688,224,103.9688,228,93.9688,224,97.9688" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="224" x2="224" y1="441.5542" y2="461.5542"/><polygon fill="#181818" points="220,451.5542,224,461.5542,228,451.5542,224,455.5542" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="224" x2="224" y1="495.5229" y2="515.5229"/><polygon fill="#181818" points="220,505.5229,224,515.5229,228,505.5229,224,509.5229" style="stroke:#181818;stroke-width:1.0;"/><!--SRC=[fP9DIoCn6CVlyocUump8Uf_Mxi63UX143tiERTePA4cPfDf55hgBOcihwh8ieYrr15_m1IqY7RPTzyFOfEF9hs2IqU9UTWy-Xv3ya-UNvurn573BZNktyU_Bn_3kiNr4qB9VGDodn7PIrehd5x4Tzwv7FxfnU3QChiJLdcYT9ShJeEE0p-nXj9N8ZWMGBrBbJWf0ACSG-0MFAnKWMqICmISKO8-M6OPLesgRd8I7wauXeEMI-kEXkZk-OLoXiZ2FIkab7YZe14nhJFeZu0h79CTWRf6MEPxHpfaC60YR8pbSWJ7bFJO51A_0B6AU3YAZQ_9tsEFQ_2Tk4-OyvYW3WTwoVw4_63F7BsfLYPfgggshglnQATKDsJcMzNiZZBfz3V3pO2VDCAe3tCF4_eoPOt2ksDuIDskYrXQd3T7yQHublKc-TuqoZ1gZ_JLPhyfMFSbGzlfYyr3KRjuEWtR1HTLCcz0Nljmy41k_nE2RYAA4o3Wj9KduUKkjPgPUWtJqz6dWy4yelrwBy4AihozGnhCeoAKiLzPFux0f6oUoTYw-DrycjTgFxtTJbYO_0m00]--></g></svg>

<p>我们通过跳转路由名为<code>/kotlin/test</code>的activity来介绍一下源码实现。使用下面方法打开activity：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ARouter.getInstance().build(<span class="string">&quot;/kotlin/test&quot;</span>).navigation();</span><br></pre></td></tr></table></figure>

<p>navigation有好几个重载方法，最终都会走到下面的方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">ARouter</span> &#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">navigation</span><span class="params">(Context mContext, Postcard postcard, <span class="type">int</span> requestCode, NavigationCallback callback)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> _ARouter.getInstance().navigation(mContext, postcard, requestCode, callback);</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//_ARouter.java</span></span><br><span class="line">    <span class="keyword">protected</span> Object <span class="title function_">navigation</span><span class="params">(<span class="keyword">final</span> Context context, <span class="keyword">final</span> Postcard postcard, <span class="keyword">final</span> <span class="type">int</span> requestCode, <span class="keyword">final</span> NavigationCallback callback)</span> &#123;</span><br><span class="line">        ......</span><br><span class="line">        <span class="comment">// Set context to postcard.</span></span><br><span class="line">        postcard.setContext(<span class="literal">null</span> == context ? mContext : context);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            LogisticsCenter.completion(postcard); <span class="comment">//执行上面流程图的逻辑，代码就不贴了</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoRouteFoundException ex) &#123;</span><br><span class="line">            ......</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != callback) &#123;</span><br><span class="line">            callback.onFound(postcard);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!postcard.isGreenChannel()) &#123;   <span class="comment">// It must be run in async thread, maybe interceptor cost too mush time made ANR.</span></span><br><span class="line">            interceptorService.doInterceptions(postcard, <span class="keyword">new</span> <span class="title class_">InterceptorCallback</span>() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onContinue</span><span class="params">(Postcard postcard)</span> &#123;</span><br><span class="line">                    _navigation(postcard, requestCode, callback);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onInterrupt</span><span class="params">(Throwable exception)</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="literal">null</span> != callback) &#123;</span><br><span class="line">                        callback.onInterrupt(postcard);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    logger.info(Consts.TAG, <span class="string">&quot;Navigation failed, termination by interceptor : &quot;</span> + exception.getMessage());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> _navigation(postcard, requestCode, callback);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Object <span class="title function_">_navigation</span><span class="params">(<span class="keyword">final</span> Postcard postcard, <span class="keyword">final</span> <span class="type">int</span> requestCode, <span class="keyword">final</span> NavigationCallback callback)</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Context</span> <span class="variable">currentContext</span> <span class="operator">=</span> postcard.getContext();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (postcard.getType()) &#123;</span><br><span class="line">            <span class="keyword">case</span> ACTIVITY:</span><br><span class="line">                <span class="comment">// Build intent</span></span><br><span class="line">                <span class="keyword">final</span> <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(currentContext, postcard.getDestination());</span><br><span class="line">                intent.putExtras(postcard.getExtras());</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Set flags.</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">flags</span> <span class="operator">=</span> postcard.getFlags();</span><br><span class="line">                <span class="keyword">if</span> (<span class="number">0</span> != flags) &#123;</span><br><span class="line">                    intent.setFlags(flags);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Non activity, need FLAG_ACTIVITY_NEW_TASK</span></span><br><span class="line">                <span class="keyword">if</span> (!(currentContext <span class="keyword">instanceof</span> Activity)) &#123;</span><br><span class="line">                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Set Actions</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> postcard.getAction();</span><br><span class="line">                <span class="keyword">if</span> (!TextUtils.isEmpty(action)) &#123;</span><br><span class="line">                    intent.setAction(action);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Navigation in main looper.</span></span><br><span class="line">                runInMainThread(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                        startActivity(requestCode, currentContext, intent, postcard, callback);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            ......</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>找到路由<code>/kotlin/test</code>对应的group类后（本例中对应<code>ARouter$$Group$$kotlin.class</code>），就会利用反射调用group类的初始化，然后调用其loadInto方法将路由注册到路由表<code>Warehouse#routes</code>中，源码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogisticsCenter</span> &#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="comment">//本例中groupName=&quot;kotlin&quot;，group=null</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addRouteGroupDynamic</span><span class="params">(String groupName, IRouteGroup group)</span> <span class="keyword">throws</span> NoSuchMethodException, IllegalAccessException, InvocationTargetException, InstantiationException &#123;</span><br><span class="line">        <span class="keyword">if</span> (Warehouse.groupsIndex.containsKey(groupName))&#123;</span><br><span class="line">            <span class="comment">//利用反射调用group类的构造方法，然后调用loadInto方法</span></span><br><span class="line">            Warehouse.groupsIndex.get(groupName).getConstructor().newInstance().loadInto(Warehouse.routes);</span><br><span class="line">            <span class="comment">//将对应的group类在group表中删除，因为路由注册到路由表后，group类就可以回收了</span></span><br><span class="line">            Warehouse.groupsIndex.remove(groupName);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// cover old group.</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != group) &#123;</span><br><span class="line">            group.loadInto(Warehouse.routes);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://juejin.cn/post/6914485867029463054">一文学会Android Gradle Transform基础使用</a><br><a href="https://cloud.tencent.com/developer/article/1920027">Android APK编译流程</a><br><a href="https://zhuanlan.zhihu.com/p/263806589">AOP 利器 ——ASM 基础入门</a></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>ARouter</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Jni开发指南</title>
    <url>/posts/936e646.html</url>
    <content><![CDATA[<h2 id="现有项目添加C-C-源码"><a href="#现有项目添加C-C-源码" class="headerlink" title="现有项目添加C/C++源码"></a>现有项目添加C/C++源码</h2><p>如果现有项目还不支持C/C++，则可以通过如下步骤来加入C/C++</p>
<p><img src="/images/Android/Android-Jni%E6%8C%87%E5%8D%97_2023-10-19-19-01-13.png" alt="Add C++ to Module"></p>
<p>然后按照步骤操作即可。添加完成后打开<code>app\src\main\cpp\CMakeLists.txt</code>文件，修改项目名称</p>
<h2 id="Java-Kotlin代码声明native函数"><a href="#Java-Kotlin代码声明native函数" class="headerlink" title="Java/Kotlin代码声明native函数"></a>Java/Kotlin代码声明native函数</h2><p>我们在<code>me.rjy.android.demo.MainActivity</code>中定义一个native函数，并加载native库。</p>
<p>Java代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> String <span class="title function_">stringFromJNI</span><span class="params">()</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">&quot;demo&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Kotlin代码：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">ComponentActivity</span>() &#123;</span><br><span class="line">    <span class="keyword">external</span> <span class="function"><span class="keyword">fun</span> <span class="title">stringFromJNI</span><span class="params">()</span></span>: String</span><br><span class="line"></span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> &#123;</span><br><span class="line">        <span class="keyword">init</span> &#123;</span><br><span class="line">            System.loadLibrary(<span class="string">&quot;demo&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="定义jni函数"><a href="#定义jni函数" class="headerlink" title="定义jni函数"></a>定义jni函数</h2><p>当Java代码中执行native函数时，虚拟机需要找到so库中相对应的函数符号。因此，我们在定义jni函数时，需要将函数注册到虚拟机中。</p>
<h3 id="静态注册"><a href="#静态注册" class="headerlink" title="静态注册"></a>静态注册</h3><p>静态注册会严格限制jni函数的命名。jni函数命名规则：<code>Java_包名_类名_方法名</code>，其中包名中的<code>.</code>要替换为下滑杠<code>_</code>。如果函数名称不符合规范，在运行时就会抛出<code>java.lang.UnsatisfiedLinkError: No implementation found for ...</code>的异常。</p>
<p>因为<code>stringFromJNI</code>函数在<code>me.rjy.android.demo.MainActivity</code>进行声明，所以定义的native函数如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;jni.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> <span class="function">JNIEXPORT </span></span><br><span class="line"><span class="function">jstring JNICALL <span class="title">Java_me_rjy_android_demo_MainActivity_stringFromJNI</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        JNIEnv* env,</span></span></span><br><span class="line"><span class="params"><span class="function">        jobject <span class="comment">/* this */</span>)</span> </span>&#123;</span><br><span class="line">    std::string hello = <span class="string">&quot;Hello from C++&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> env-&gt;<span class="built_in">NewStringUTF</span>(hello.<span class="built_in">c_str</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过<code>JNIEXPORT</code>和<code>JNICALL</code>两个宏定义，虚拟机在加载so库时，就会把该函数与java代码的native函数进行绑定。</p>
<p>静态注册的优点时代码量很少，缺点是要严格遵守命名规范，而且函数命名很长。</p>
<h3 id="动态注册"><a href="#动态注册" class="headerlink" title="动态注册"></a>动态注册</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;jni.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NELEM(x) ((int) (sizeof(x) / sizeof((x)[0])))</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> jstring <span class="title">stringFromJNI</span><span class="params">(JNIEnv *env, jobject thiz)</span> </span>&#123;</span><br><span class="line">    std::string hello = <span class="string">&quot;Hello from C++&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> env-&gt;<span class="built_in">NewStringUTF</span>(hello.<span class="built_in">c_str</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//可以同时在数组中注册多个jni函数</span></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> JNINativeMethod sMethods[] = &#123;</span><br><span class="line">        &#123;<span class="string">&quot;stringFromJNI&quot;</span>, <span class="string">&quot;()Ljava/lang/String;&quot;</span>, (<span class="type">void</span> *) stringFromJNI&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">registerNativeMethods</span><span class="params">(JNIEnv *env, <span class="type">const</span> <span class="type">char</span> *className,</span></span></span><br><span class="line"><span class="params"><span class="function">                                 <span class="type">const</span> JNINativeMethod *gMethods, <span class="type">int</span> numMethods)</span> </span>&#123;</span><br><span class="line">    jclass clazz = env-&gt;<span class="built_in">FindClass</span>(className);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (clazz == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (env-&gt;<span class="built_in">RegisterNatives</span>(clazz, gMethods, numMethods) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> JNI_TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">jint <span class="title">JNI_OnLoad</span><span class="params">(JavaVM *jvm, <span class="type">void</span> *)</span> </span>&#123;</span><br><span class="line">    JNIEnv *env = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (jvm-&gt;<span class="built_in">GetEnv</span>((<span class="type">void</span> **) &amp;env, JNI_VERSION_1_6)) &#123;</span><br><span class="line">        <span class="keyword">return</span> JNI_ERR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">registerNativeMethods</span>(env, <span class="string">&quot;me/rjy/android/demo/MainActivity&quot;</span>,</span><br><span class="line">                              sMethods, <span class="built_in">NELEM</span>(sMethods)) == JNI_FALSE) &#123;</span><br><span class="line">        <span class="keyword">return</span> JNI_ERR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> JNI_VERSION_1_6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>动态注册的代码要比静态注册多很多，这是动态注册的缺点。优点是灵活，比如根据条件注册不同的实现。动态注册的一个关键点是函数的签名，这个非常容易出错，有一个直观的方法可以直接拿到函数签名：通过<a href="/posts/24313.html" title="APK 反编译">APK 反编译</a>介绍的方法，把apk中的类反编译为smali，然后找到对应的<code>MainActivity.smali</code>，smali文件中就可以找到对应的函数定义：</p>
<figure class="highlight smali"><table><tr><td class="code"><pre><span class="line"><span class="keyword">.method</span><span class="keyword"> public</span><span class="keyword"> final</span> native stringFromJNI()<span class="class">Ljava/lang/String;</span><span class="keyword"></span></span><br><span class="line"><span class="keyword">.end method</span></span><br></pre></td></tr></table></figure>

<p>其中<code>()Ljava/lang/String;</code>就是函数签名，<code>()</code>表示无参函数，<code>Ljava/lang/String;</code>表示返回一个String类型。也可以在AndroidStudio的 Build &gt; Analyze APK 功能打开apk，然后找到native函数定义的java类，右击选择“Show Bytecode”就可以看到类的字节码文件，在字节码文件中就能找到native函数的定义和签名。</p>
<h2 id="JavaVM"><a href="#JavaVM" class="headerlink" title="JavaVM"></a>JavaVM</h2><p>JavaVM是虚拟机对外提供能力的入口。一个JVM只有一个JavaVM对象，这个对象是线程共享的。理论上，每个进程可以有多个 JavaVM，但 Android 只允许有一个。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">_JavaVM</span> &#123;</span><br><span class="line">    <span class="type">const</span> <span class="keyword">struct</span> <span class="title class_">JNIInvokeInterface</span>* functions;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined(__cplusplus)</span></span><br><span class="line">    <span class="function">jint <span class="title">DestroyJavaVM</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123; <span class="keyword">return</span> functions-&gt;<span class="built_in">DestroyJavaVM</span>(<span class="keyword">this</span>); &#125;</span><br><span class="line">    <span class="function">jint <span class="title">AttachCurrentThread</span><span class="params">(JNIEnv** p_env, <span class="type">void</span>* thr_args)</span></span></span><br><span class="line"><span class="function">    </span>&#123; <span class="keyword">return</span> functions-&gt;<span class="built_in">AttachCurrentThread</span>(<span class="keyword">this</span>, p_env, thr_args); &#125;</span><br><span class="line">    <span class="function">jint <span class="title">DetachCurrentThread</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123; <span class="keyword">return</span> functions-&gt;<span class="built_in">DetachCurrentThread</span>(<span class="keyword">this</span>); &#125;</span><br><span class="line">    <span class="function">jint <span class="title">GetEnv</span><span class="params">(<span class="type">void</span>** env, jint version)</span></span></span><br><span class="line"><span class="function">    </span>&#123; <span class="keyword">return</span> functions-&gt;<span class="built_in">GetEnv</span>(<span class="keyword">this</span>, env, version); &#125;</span><br><span class="line">    <span class="function">jint <span class="title">AttachCurrentThreadAsDaemon</span><span class="params">(JNIEnv** p_env, <span class="type">void</span>* thr_args)</span></span></span><br><span class="line"><span class="function">    </span>&#123; <span class="keyword">return</span> functions-&gt;<span class="built_in">AttachCurrentThreadAsDaemon</span>(<span class="keyword">this</span>, p_env, thr_args); &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">/*__cplusplus*/</span></span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="JNIEnv"><a href="#JNIEnv" class="headerlink" title="JNIEnv"></a>JNIEnv</h2><p>JNIEnv 提供了大部分 JNI 函数。您的原生函数都会收到 JNIEnv 作为第一个参数。JNIEnv是线程独享的。如果一段代码无法通过其他方法获取自己的 JNIEnv，您应该共享相应 JavaVM，然后使用 GetEnv 发现线程的 JNIEnv，如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">JNIEnv *env = <span class="literal">NULL</span>;</span><br><span class="line">gJavaVM-&gt;<span class="built_in">GetEnv</span>((<span class="type">void</span> **) &amp;env, JNI_VERSION_1_6);</span><br></pre></td></tr></table></figure>

<p>但是，如果是通过native的<code>pthread_create()</code>或者<code>std::thread</code>来启动线程，线程中的代码是不附带JNIEnv的。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span>* <span class="title">say_hello</span><span class="params">(<span class="type">void</span>* args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    JNIEnv *env = <span class="literal">NULL</span>;</span><br><span class="line">    gJavaVM-&gt;<span class="built_in">GetEnv</span>((<span class="type">void</span> **) &amp;env, JNI_VERSION_1_6);</span><br><span class="line">    <span class="keyword">if</span> (env == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">logD</span>(<span class="string">&quot;Jni&quot;</span>, <span class="string">&quot;env is null&quot;</span>); <span class="comment">//会走到这里</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">testNativeThread</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">pthread_t</span> thread;</span><br><span class="line">    <span class="type">int</span> ret = <span class="built_in">pthread_create</span>(&amp;thread, <span class="literal">NULL</span>, say_hello, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="built_in">pthread_join</span>(thread, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上述代码获取的env是空，所以需要通过<code>AttachCurrentThread()</code>来进行绑定：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span>* <span class="title">say_hello</span><span class="params">(<span class="type">void</span>* args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    JNIEnv *env = <span class="literal">NULL</span>;</span><br><span class="line">    gJavaVM-&gt;<span class="built_in">AttachCurrentThread</span>(&amp;env, <span class="literal">NULL</span>); <span class="comment">//获取JNIEnv</span></span><br><span class="line">    <span class="keyword">if</span> (env == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">ALOGD</span>(<span class="string">&quot;Jni&quot;</span>, <span class="string">&quot;[rjy] env is null&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    jclass mapClz = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;java/util/Map&quot;</span>); <span class="comment">//可以获取到jdk中的class</span></span><br><span class="line">    <span class="built_in">ALOGD</span>(<span class="string">&quot;Jni&quot;</span>, <span class="string">&quot;[rjy] mapClz %s\n&quot;</span>, mapClz == <span class="literal">NULL</span>? <span class="string">&quot;is null&quot;</span> : <span class="string">&quot;not null&quot;</span>);</span><br><span class="line">    jclass appClz = env-&gt;<span class="built_in">FindClass</span>(<span class="string">&quot;me/rjy/android/demo/MainActivity&quot;</span>); <span class="comment">//获取不到app中定义的class</span></span><br><span class="line">    <span class="built_in">ALOGD</span>(<span class="string">&quot;Jni&quot;</span>, <span class="string">&quot;[rjy] activity class %s&quot;</span>, appClz == <span class="literal">NULL</span>? <span class="string">&quot;is null&quot;</span> : <span class="string">&quot;not null&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">testNativeThread</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">pthread_t</span> thread;</span><br><span class="line">    <span class="type">int</span> ret = <span class="built_in">pthread_create</span>(&amp;thread, <span class="literal">NULL</span>, say_hello, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="built_in">pthread_join</span>(thread, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上述代码可以获取到Map类，是因为native创建的线程对应的classLoader是bootclassloader。</p>
<p>通过 JNI 附加的线程在退出之前必须调用 DetachCurrentThread()。如果直接对此进行编码会很棘手，在 Android 2.0 (Eclair) 及更高版本中，您可以先使用 pthread_key_create() 定义将在线程退出之前调用的析构函数，之后再调用 DetachCurrentThread()。（将该键与 pthread_setspecific() 搭配使用，将 JNIEnv 存储在线程本地存储中；这样一来，该键将作为参数传递到您的析构函数中。）（参考：<a href="https://developer.android.google.cn/training/articles/perf-jni?hl=zh-cn#threads">线程</a>）</p>
<h2 id="Android-JNI打印logcat日志"><a href="#Android-JNI打印logcat日志" class="headerlink" title="Android JNI打印logcat日志"></a>Android JNI打印logcat日志</h2><p>在c/c++文件中引入头文件：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;android/log.h&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>然后在需要打印日志的地方通过<code>__android_log_print</code>来打印日志即可，函数定义如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> __android_log_print(<span class="type">int</span> prio, <span class="type">const</span> <span class="type">char</span>* tag, <span class="type">const</span> <span class="type">char</span>* fmt, ...)</span><br></pre></td></tr></table></figure>

<p>prio表示日志级别，常用的是这四个，其他的日志级别可以在头文件中找到</p>
<ul>
<li>ANDROID_LOG_DEBUG</li>
<li>ANDROID_LOG_INFO</li>
<li>ANDROID_LOG_WARN</li>
<li>ANDROID_LOG_ERROR</li>
</ul>
<p>示例：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">__android_log_print(ANDROID_LOG_DEBUG, <span class="string">&quot;tag&quot;</span>, <span class="string">&quot;value=%d&quot;</span>, value);</span><br></pre></td></tr></table></figure>

<p>可以对<code>__android_log_print</code>进行封装，在使用的时候会更加便捷：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> ALOGD(tag, ...) __android_log_print(ANDROID_LOG_DEBUG, tag, __VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ALOGI(tag, ...) __android_log_print(ANDROID_LOG_INFO, tag, __VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ALOGE(tag, ...) __android_log_print(ANDROID_LOG_ERROR, tag, __VA_ARGS__)</span></span><br></pre></td></tr></table></figure>

<p>使用方法：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ALOGD</span>(<span class="string">&quot;JniTag&quot;</span>, <span class="string">&quot;%s: Hello World!&quot;</span>, name);</span><br></pre></td></tr></table></figure>

<h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><p>Jni相关类接口在<code>libnativehelper\include_jni\jni.h</code>头文件中定义。</p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://developer.android.google.cn/training/articles/perf-jni?hl=zh-cn">Android JNI 提示</a><br><a href="https://docs.oracle.com/javase/8/docs/technotes/guides/jni/spec/jniTOC.html">Java Native Interface Specification Contents</a><br><a href="https://www.baeldung.com/jni">Guide to JNI (Java Native Interface)</a><br><a href="https://zhuanlan.zhihu.com/p/157890838">深入理解JNI</a></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Jni</tag>
      </tags>
  </entry>
  <entry>
    <title>Android View Measure源码分析</title>
    <url>/posts/d01e7370.html</url>
    <content><![CDATA[<p>在<a href="/posts/11962.html" title="Android Activity启动流程">Android Activity启动流程</a>文章中已经介绍了，在activity的onResume之后，<code>ViewRootImpl#setView(View view, WindowManager.LayoutParams attrs, ...)</code>，其中view就是DecorView，ViewRootImpl#setView中就会调用<code>requestLayout</code>，然后调用<code>scheduleTraversals</code>。这是首次调用，后续view的改动都会调用到<code>scheduleTraversals</code>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//android-12.1.0_r27\frameworks\base\core\java\android\view\ViewRootImpl.java</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">scheduleTraversals</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!mTraversalScheduled) &#123;</span><br><span class="line">            mTraversalScheduled = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//添加同步屏障，主线程的同步消息都会进制执行，保证vsync信号到来时TraversalRunnable能够立刻被执行</span></span><br><span class="line">            mTraversalBarrier = mHandler.getLooper().getQueue().postSyncBarrier();</span><br><span class="line">            mChoreographer.postCallback(</span><br><span class="line">                    Choreographer.CALLBACK_TRAVERSAL, mTraversalRunnable, <span class="literal">null</span>);</span><br><span class="line">            notifyRendererOfFramePending();</span><br><span class="line">            pokeDrawLockIfNeeded();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="type">TraversalRunnable</span> <span class="variable">mTraversalRunnable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TraversalRunnable</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">TraversalRunnable</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            doTraversal();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">doTraversal</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (mTraversalScheduled) &#123;</span><br><span class="line">            mTraversalScheduled = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//删除同步屏障</span></span><br><span class="line">            mHandler.getLooper().getQueue().removeSyncBarrier(mTraversalBarrier);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (mProfile) &#123;</span><br><span class="line">                Debug.startMethodTracing(<span class="string">&quot;ViewAncestor&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            performTraversals();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (mProfile) &#123;</span><br><span class="line">                Debug.stopMethodTracing();</span><br><span class="line">                mProfile = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android UI 绘制流程</title>
    <url>/posts/c09f2087.html</url>
    <content><![CDATA[<p>Android View的整个绘制流程包含了3个阶段，分别是measure、layout、draw。measure用于计算View的宽高，结果放在<code>mMeasuredWidth</code>和<code>mMeasuredHeight</code>中；layout的作用是计算view及其子view的位置；draw的作用就是将View真正的绘制到显示屏上。</p>
<p>当activity首次启动，或者更新View(如TextView重新设置text)时，都会走到<code>ViewRootImpl.scheduleTraversals</code>来触发View的渲染流程。</p>
<pre class="mermaid">

zenuml
ViewRootImpl.scheduleTraversals {
    &quot;主线程消息循环插入同步屏障&quot;
    Choreographer.&quot;postCallback：mTraversalRunnable&quot; {
        scheduleFrameLocked {
            scheduleVsyncLocked {
                FrameDisplayEventReceiver.scheduleVsync()
            }
        }
    }
}
FrameDisplayEventReceiver.onVsync {
    Looper.&quot;发布一个同步消息&quot;
}
Looper.run {
    Choreographer.doFrame {
        &quot;doCallbacks(Choreographer.CALLBACK_INPUT, ...)&quot;
        &quot;doCallbacks(Choreographer.CALLBACK_ANIMATION,...)&quot;
        &quot;doCallbacks(Choreographer.CALLBACK_INSETS_ANIMATION,...)&quot;
        &quot;doCallbacks(Choreographer.CALLBACK_TRAVERSAL,...)&quot; {
            ViewRootImpl.&quot;mTraversalBarrier.run&quot; {
                ViewRootImpl.doTraversal {
                    &quot;删除同步屏障&quot;
                    performTraversals
                }
            }
        }
        &quot;doCallbacks(Choreographer.CALLBACK_COMMIT,...)&quot;
    }
}
</pre>

<pre class="mermaid">

zenuml
ViewRootImpl.performTraversals {
    measureHierarchy {
        performMeasure {
            DecorView.measure
        }
    }
    relayoutWindow {
        IWindowSession.relayout
        updateBlastSurfaceIfNeeded {
            new BLASTBufferQueue
            blastSurface &#x3D; BLASTBufferQueue.createSurface
            &quot;mSurface.transferFrom(blastSurface)&quot;
        }
        ThreadedRenderer.setSurfaceControl
        ThreadedRenderer.setBlastBufferQueue
    }
    ThreadedRenderer.initialize {
        &quot;HardwareRenderer.setSurface&quot;
    }
    ThreadedRenderer.allocateBuffers
    ThreadedRenderer.setup
    performMeasure {
        DecorView.measure
    }
    performLayout {
        DecorView.layout
    }
    performDraw {
        draw {
            ThreadedRenderer.draw
        }
    }
}
</pre>

<p>关于relayoutWindow的调用流程可参考<a href="/posts/90f60c72.html" title="Android WindowManager与Window">Android WindowManager与Window</a></p>
<p>参考：</p>
<ul>
<li><a href="https://blog.csdn.net/tyyj90/article/details/107134945">Android 源码 图形系统之请求布局</a></li>
<li><a href="https://blog.csdn.net/zuguorui/article/details/70160323">Android自定义view之measure、layout、draw三大流程</a></li>
</ul>
<h2 id="draw-流程"><a href="#draw-流程" class="headerlink" title="draw() 流程"></a>draw() 流程</h2><p>在自定义View中一般都会用到onDraw这个函数：</p>
<pre class="mermaid">

zenuml
ViewRootImpl.draw {
    if (isHardwareEnabled()) {
        ThreadedRenderer.draw
    } else {
        drawSoftware
    }
}
</pre>

<p>当开启硬件加速后，会使用ThreadedRenderer进行绘制，否则调用drawSoftware。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="386px" preserveAspectRatio="none" style="width:537px;height:386px;background:#FFFFFF;" version="1.1" viewBox="0 0 537 386" width="537px" zoomAndPan="magnify"><defs/><g><!--class ViewRootImpl--><g id="elem_ViewRootImpl"><rect fill="#F1F1F1" height="48" id="ViewRootImpl" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="219" y="7"/><ellipse cx="234" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M236.3438,18.6719 C235.4063,18.2344 234.8125,18.0938 233.9375,18.0938 C231.3125,18.0938 229.3125,20.1719 229.3125,22.8906 L229.3125,24.0156 C229.3125,26.5938 231.4219,28.4844 234.3125,28.4844 C235.5313,28.4844 236.6875,28.1875 237.4375,27.6406 C238.0156,27.2344 238.3438,26.7813 238.3438,26.3906 C238.3438,25.9375 237.9531,25.5469 237.4844,25.5469 C237.2656,25.5469 237.0625,25.625 236.875,25.8125 C236.4219,26.2969 236.4219,26.2969 236.2344,26.3906 C235.8125,26.6563 235.125,26.7813 234.3594,26.7813 C232.3125,26.7813 231.0156,25.6875 231.0156,23.9844 L231.0156,22.8906 C231.0156,21.1094 232.2656,19.7969 234,19.7969 C234.5781,19.7969 235.1875,19.9531 235.6563,20.2031 C236.1406,20.4844 236.3125,20.7031 236.4063,21.1094 C236.4688,21.5156 236.5,21.6406 236.6406,21.7656 C236.7813,21.9063 237.0156,22.0156 237.2344,22.0156 C237.5,22.0156 237.7656,21.875 237.9375,21.6563 C238.0469,21.5 238.0781,21.3125 238.0781,20.8906 L238.0781,19.4688 C238.0781,19.0313 238.0625,18.9063 237.9688,18.75 C237.8125,18.4844 237.5313,18.3438 237.2344,18.3438 C236.9375,18.3438 236.7344,18.4375 236.5156,18.75 L236.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="248" y="27.8467">ViewRootImpl</text><line style="stroke:#181818;stroke-width:0.5;" x1="220" x2="351" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="220" x2="351" y1="47" y2="47"/></g><!--class Surface--><g id="elem_Surface"><rect fill="#F1F1F1" height="48" id="Surface" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="86" x="94.5" y="115"/><ellipse cx="109.5" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M111.8438,126.6719 C110.9063,126.2344 110.3125,126.0938 109.4375,126.0938 C106.8125,126.0938 104.8125,128.1719 104.8125,130.8906 L104.8125,132.0156 C104.8125,134.5938 106.9219,136.4844 109.8125,136.4844 C111.0313,136.4844 112.1875,136.1875 112.9375,135.6406 C113.5156,135.2344 113.8438,134.7813 113.8438,134.3906 C113.8438,133.9375 113.4531,133.5469 112.9844,133.5469 C112.7656,133.5469 112.5625,133.625 112.375,133.8125 C111.9219,134.2969 111.9219,134.2969 111.7344,134.3906 C111.3125,134.6563 110.625,134.7813 109.8594,134.7813 C107.8125,134.7813 106.5156,133.6875 106.5156,131.9844 L106.5156,130.8906 C106.5156,129.1094 107.7656,127.7969 109.5,127.7969 C110.0781,127.7969 110.6875,127.9531 111.1563,128.2031 C111.6406,128.4844 111.8125,128.7031 111.9063,129.1094 C111.9688,129.5156 112,129.6406 112.1406,129.7656 C112.2813,129.9063 112.5156,130.0156 112.7344,130.0156 C113,130.0156 113.2656,129.875 113.4375,129.6563 C113.5469,129.5 113.5781,129.3125 113.5781,128.8906 L113.5781,127.4688 C113.5781,127.0313 113.5625,126.9063 113.4688,126.75 C113.3125,126.4844 113.0313,126.3438 112.7344,126.3438 C112.4375,126.3438 112.2344,126.4375 112.0156,126.75 L111.8438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="123.5" y="135.8467">Surface</text><line style="stroke:#181818;stroke-width:0.5;" x1="95.5" x2="179.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="95.5" x2="179.5" y1="155" y2="155"/></g><!--class SurfaceControl--><g id="elem_SurfaceControl"><rect fill="#F1F1F1" height="48" id="SurfaceControl" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="140" x="215.5" y="115"/><ellipse cx="230.5" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M232.8438,126.6719 C231.9063,126.2344 231.3125,126.0938 230.4375,126.0938 C227.8125,126.0938 225.8125,128.1719 225.8125,130.8906 L225.8125,132.0156 C225.8125,134.5938 227.9219,136.4844 230.8125,136.4844 C232.0313,136.4844 233.1875,136.1875 233.9375,135.6406 C234.5156,135.2344 234.8438,134.7813 234.8438,134.3906 C234.8438,133.9375 234.4531,133.5469 233.9844,133.5469 C233.7656,133.5469 233.5625,133.625 233.375,133.8125 C232.9219,134.2969 232.9219,134.2969 232.7344,134.3906 C232.3125,134.6563 231.625,134.7813 230.8594,134.7813 C228.8125,134.7813 227.5156,133.6875 227.5156,131.9844 L227.5156,130.8906 C227.5156,129.1094 228.7656,127.7969 230.5,127.7969 C231.0781,127.7969 231.6875,127.9531 232.1563,128.2031 C232.6406,128.4844 232.8125,128.7031 232.9063,129.1094 C232.9688,129.5156 233,129.6406 233.1406,129.7656 C233.2813,129.9063 233.5156,130.0156 233.7344,130.0156 C234,130.0156 234.2656,129.875 234.4375,129.6563 C234.5469,129.5 234.5781,129.3125 234.5781,128.8906 L234.5781,127.4688 C234.5781,127.0313 234.5625,126.9063 234.4688,126.75 C234.3125,126.4844 234.0313,126.3438 233.7344,126.3438 C233.4375,126.3438 233.2344,126.4375 233.0156,126.75 L232.8438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="244.5" y="135.8467">SurfaceControl</text><line style="stroke:#181818;stroke-width:0.5;" x1="216.5" x2="354.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="216.5" x2="354.5" y1="155" y2="155"/></g><!--class SurfaceSession--><g id="elem_SurfaceSession"><rect fill="#F1F1F1" height="48" id="SurfaceSession" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="140" x="390.5" y="115"/><ellipse cx="405.5" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M407.8438,126.6719 C406.9063,126.2344 406.3125,126.0938 405.4375,126.0938 C402.8125,126.0938 400.8125,128.1719 400.8125,130.8906 L400.8125,132.0156 C400.8125,134.5938 402.9219,136.4844 405.8125,136.4844 C407.0313,136.4844 408.1875,136.1875 408.9375,135.6406 C409.5156,135.2344 409.8438,134.7813 409.8438,134.3906 C409.8438,133.9375 409.4531,133.5469 408.9844,133.5469 C408.7656,133.5469 408.5625,133.625 408.375,133.8125 C407.9219,134.2969 407.9219,134.2969 407.7344,134.3906 C407.3125,134.6563 406.625,134.7813 405.8594,134.7813 C403.8125,134.7813 402.5156,133.6875 402.5156,131.9844 L402.5156,130.8906 C402.5156,129.1094 403.7656,127.7969 405.5,127.7969 C406.0781,127.7969 406.6875,127.9531 407.1563,128.2031 C407.6406,128.4844 407.8125,128.7031 407.9063,129.1094 C407.9688,129.5156 408,129.6406 408.1406,129.7656 C408.2813,129.9063 408.5156,130.0156 408.7344,130.0156 C409,130.0156 409.2656,129.875 409.4375,129.6563 C409.5469,129.5 409.5781,129.3125 409.5781,128.8906 L409.5781,127.4688 C409.5781,127.0313 409.5625,126.9063 409.4688,126.75 C409.3125,126.4844 409.0313,126.3438 408.7344,126.3438 C408.4375,126.3438 408.2344,126.4375 408.0156,126.75 L407.8438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="419.5" y="135.8467">SurfaceSession</text><line style="stroke:#181818;stroke-width:0.5;" x1="391.5" x2="529.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="391.5" x2="529.5" y1="155" y2="155"/></g><!--class Canvas--><g id="elem_Canvas"><rect fill="#F1F1F1" height="48" id="Canvas" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="82" x="8.5" y="223"/><ellipse cx="23.5" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M25.8438,234.6719 C24.9063,234.2344 24.3125,234.0938 23.4375,234.0938 C20.8125,234.0938 18.8125,236.1719 18.8125,238.8906 L18.8125,240.0156 C18.8125,242.5938 20.9219,244.4844 23.8125,244.4844 C25.0313,244.4844 26.1875,244.1875 26.9375,243.6406 C27.5156,243.2344 27.8438,242.7813 27.8438,242.3906 C27.8438,241.9375 27.4531,241.5469 26.9844,241.5469 C26.7656,241.5469 26.5625,241.625 26.375,241.8125 C25.9219,242.2969 25.9219,242.2969 25.7344,242.3906 C25.3125,242.6563 24.625,242.7813 23.8594,242.7813 C21.8125,242.7813 20.5156,241.6875 20.5156,239.9844 L20.5156,238.8906 C20.5156,237.1094 21.7656,235.7969 23.5,235.7969 C24.0781,235.7969 24.6875,235.9531 25.1563,236.2031 C25.6406,236.4844 25.8125,236.7031 25.9063,237.1094 C25.9688,237.5156 26,237.6406 26.1406,237.7656 C26.2813,237.9063 26.5156,238.0156 26.7344,238.0156 C27,238.0156 27.2656,237.875 27.4375,237.6563 C27.5469,237.5 27.5781,237.3125 27.5781,236.8906 L27.5781,235.4688 C27.5781,235.0313 27.5625,234.9063 27.4688,234.75 C27.3125,234.4844 27.0313,234.3438 26.7344,234.3438 C26.4375,234.3438 26.2344,234.4375 26.0156,234.75 L25.8438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="37.5" y="243.8467">Canvas</text><line style="stroke:#181818;stroke-width:0.5;" x1="9.5" x2="89.5" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="9.5" x2="89.5" y1="263" y2="263"/></g><!--class Bitmap--><g id="elem_Bitmap"><rect fill="#F1F1F1" height="48" id="Bitmap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="85" x="7" y="331"/><ellipse cx="22" cy="347" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,342.6719 C23.4063,342.2344 22.8125,342.0938 21.9375,342.0938 C19.3125,342.0938 17.3125,344.1719 17.3125,346.8906 L17.3125,348.0156 C17.3125,350.5938 19.4219,352.4844 22.3125,352.4844 C23.5313,352.4844 24.6875,352.1875 25.4375,351.6406 C26.0156,351.2344 26.3438,350.7813 26.3438,350.3906 C26.3438,349.9375 25.9531,349.5469 25.4844,349.5469 C25.2656,349.5469 25.0625,349.625 24.875,349.8125 C24.4219,350.2969 24.4219,350.2969 24.2344,350.3906 C23.8125,350.6563 23.125,350.7813 22.3594,350.7813 C20.3125,350.7813 19.0156,349.6875 19.0156,347.9844 L19.0156,346.8906 C19.0156,345.1094 20.2656,343.7969 22,343.7969 C22.5781,343.7969 23.1875,343.9531 23.6563,344.2031 C24.1406,344.4844 24.3125,344.7031 24.4063,345.1094 C24.4688,345.5156 24.5,345.6406 24.6406,345.7656 C24.7813,345.9063 25.0156,346.0156 25.2344,346.0156 C25.5,346.0156 25.7656,345.875 25.9375,345.6563 C26.0469,345.5 26.0781,345.3125 26.0781,344.8906 L26.0781,343.4688 C26.0781,343.0313 26.0625,342.9063 25.9688,342.75 C25.8125,342.4844 25.5313,342.3438 25.2344,342.3438 C24.9375,342.3438 24.7344,342.4375 24.5156,342.75 L24.3438,342.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="36" y="351.8467">Bitmap</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="91" y1="363" y2="363"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="91" y1="371" y2="371"/></g><!--class IGraphicBufferProducer--><g id="elem_IGraphicBufferProducer"><rect fill="#F1F1F1" height="48" id="IGraphicBufferProducer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="201" x="126" y="223"/><ellipse cx="141" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M143.3438,234.6719 C142.4063,234.2344 141.8125,234.0938 140.9375,234.0938 C138.3125,234.0938 136.3125,236.1719 136.3125,238.8906 L136.3125,240.0156 C136.3125,242.5938 138.4219,244.4844 141.3125,244.4844 C142.5313,244.4844 143.6875,244.1875 144.4375,243.6406 C145.0156,243.2344 145.3438,242.7813 145.3438,242.3906 C145.3438,241.9375 144.9531,241.5469 144.4844,241.5469 C144.2656,241.5469 144.0625,241.625 143.875,241.8125 C143.4219,242.2969 143.4219,242.2969 143.2344,242.3906 C142.8125,242.6563 142.125,242.7813 141.3594,242.7813 C139.3125,242.7813 138.0156,241.6875 138.0156,239.9844 L138.0156,238.8906 C138.0156,237.1094 139.2656,235.7969 141,235.7969 C141.5781,235.7969 142.1875,235.9531 142.6563,236.2031 C143.1406,236.4844 143.3125,236.7031 143.4063,237.1094 C143.4688,237.5156 143.5,237.6406 143.6406,237.7656 C143.7813,237.9063 144.0156,238.0156 144.2344,238.0156 C144.5,238.0156 144.7656,237.875 144.9375,237.6563 C145.0469,237.5 145.0781,237.3125 145.0781,236.8906 L145.0781,235.4688 C145.0781,235.0313 145.0625,234.9063 144.9688,234.75 C144.8125,234.4844 144.5313,234.3438 144.2344,234.3438 C143.9375,234.3438 143.7344,234.4375 143.5156,234.75 L143.3438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="155" y="243.8467">IGraphicBufferProducer</text><line style="stroke:#181818;stroke-width:0.5;" x1="127" x2="326" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="127" x2="326" y1="263" y2="263"/></g><!--reverse link ViewRootImpl to Surface--><g id="link_ViewRootImpl_Surface"><path codeLine="1" d="M243.6302,61.9875 C218.8912,79.7065 194.594,97.108 169.806,114.862 " fill="none" id="ViewRootImpl-backto-Surface" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="253.386,55,246.179,55.2418,243.6302,61.9875,250.8373,61.7457,253.386,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ViewRootImpl to SurfaceControl--><g id="link_ViewRootImpl_SurfaceControl"><path codeLine="2" d="M285.5,67 C285.5,84.658 285.5,96.941 285.5,114.678 " fill="none" id="ViewRootImpl-backto-SurfaceControl" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="285.5,55,281.5,61,285.5,67,289.5,61,285.5,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ViewRootImpl to SurfaceSession--><g id="link_ViewRootImpl_SurfaceSession"><path codeLine="3" d="M333.7359,61.217 C362.9889,78.936 392.99,97.108 422.3,114.862 " fill="none" id="ViewRootImpl-backto-SurfaceSession" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="323.472,55,326.5316,61.5298,333.7359,61.217,330.6763,54.6872,323.472,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Surface to Canvas--><g id="link_Surface_Canvas"><path codeLine="4" d="M110.7401,172.233 C96.081,189.891 83.5869,204.941 68.8613,222.678 " fill="none" id="Surface-backto-Canvas" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="118.405,163,111.4949,165.0615,110.7401,172.233,117.6502,170.1715,118.405,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Canvas to Bitmap--><g id="link_Canvas_Bitmap"><path codeLine="5" d="M49.5,283 C49.5,300.6584 49.5,312.9408 49.5,330.6784 " fill="none" id="Canvas-backto-Bitmap" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="49.5,271,45.5,277,49.5,283,53.5,277,49.5,271" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Surface to IGraphicBufferProducer--><g id="link_Surface_IGraphicBufferProducer"><path codeLine="7" d="M164.5283,172.1902 C179.3543,189.8482 192.026,204.941 206.919,222.678 " fill="none" id="Surface-backto-IGraphicBufferProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="156.812,163,157.6067,170.1672,164.5283,172.1902,163.7335,165.023,156.812,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[2yjCBG_Apo_np2t8KT3IrLK8BYrAIqnEvGh38U6SdrTIb9-3KpuujRWuCp-F2ye5IpadvfKb5dD1AB28KsP9Rc815uegJ_UYn8ACp6IdqhIqrAA0eloKqkJK8W00]--></g></svg>

<p><a href="https://source.android.google.cn/docs/core/graphics/arch-sh?hl=zh-cn#surface">Surface</a>是一个接口，供生产方与消耗方交换缓冲区。用于显示 Surface 的 BufferQueue 通常配置为三重缓冲。缓冲区是按需分配的，因此，如果生产方足够缓慢地生成缓冲区（例如在 60 fps 的显示屏上以 30 fps 的速度缓冲），队列中可能只有两个分配的缓冲区。</p>
<h3 id="软件渲染"><a href="#软件渲染" class="headerlink" title="软件渲染"></a>软件渲染</h3><p>执行<code>ViewRootImpl#drawSoftware</code>方法。</p>
<ol>
<li>获取Canvas：canvas = mSurface.lockCanvas(dirty);</li>
<li>执行View#draw：mView.draw(canvas);</li>
<li>surface.unlockCanvasAndPost(canvas);</li>
</ol>
<p>执行<code>android-12.1.0_r27\frameworks\base\core\jni\android_view_Surface.cpp</code>的nativeUnlockCanvasAndPost方法。</p>
<p>Client连接的是BufferQueue的生成端，而消费端则是SurfaceFlinger。</p>
<pre class="mermaid">

zenuml
group Java {
    &lt;&lt;Java&gt;&gt; Surface
}
group cpp {
    Jni
    &lt;&lt;Cpp&gt;&gt; sfc as Surface
    &lt;&lt;Cpp&gt;&gt; cvs as Canvas
    &lt;&lt;Cpp&gt;&gt; IGraphicBufferProducer
}
Surface.lockCanvas {
    Jni.nativeLockCanvas {
        sfc.lock {
            dequeueBuffer {
                IGraphicBufferProducer.dequeueBuffer
            }
        }
        new cvs() {

        }
        cvs.setBuffer
    }
}
</pre>

<p>非硬件加速的场景，通过<code>lockCanvas()</code>来获取一个画布，锁定一个缓冲区用于在CPU上进行渲染。而<code>unlockCanvasAndPost()</code> 可解锁缓冲区并将其发送到合成器。</p>
<pre class="mermaid">

zenuml
group Java {
    &lt;&lt;Java&gt;&gt; Surface
}
group cpp {
    Jni
    &lt;&lt;Cpp&gt;&gt; sfc as Surface
    &lt;&lt;Cpp&gt;&gt; cvs as Canvas
}

Surface.unlockCanvasAndPost {
    unlockSwCanvasAndPost {
        Jni.nativeUnlockCanvasAndPost {
            cvs.setBuffer(nullptr)
            sfc.unlockAndPost {
                queueBuffer {
                    IGraphicBufferProducer.queueBuffer
                }
            }
        }
    }
}
</pre>

<h3 id="硬件渲染（硬件加速）"><a href="#硬件渲染（硬件加速）" class="headerlink" title="硬件渲染（硬件加速）"></a>硬件渲染（硬件加速）</h3><p>最终会通过RenderThread进行渲染<code>ViewRootImpl#draw</code>中调用<code>mAttachInfo.mThreadedRenderer.draw(mView, mAttachInfo, this);</code></p>
<p><img src="/images/Android/RenderThread%E7%B1%BB%E5%9B%BE.drawio.svg" alt="RenderThread类图"></p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="623px" preserveAspectRatio="none" style="width:939px;height:623px;background:#FFFFFF;" version="1.1" viewBox="0 0 939 623" width="939px" zoomAndPan="magnify"><defs/><g><!--class RenderProxy--><g id="elem_RenderProxy"><rect fill="#F1F1F1" height="48" id="RenderProxy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="124" x="479.5" y="7"/><ellipse cx="494.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M496.8438,18.6719 C495.9063,18.2344 495.3125,18.0938 494.4375,18.0938 C491.8125,18.0938 489.8125,20.1719 489.8125,22.8906 L489.8125,24.0156 C489.8125,26.5938 491.9219,28.4844 494.8125,28.4844 C496.0313,28.4844 497.1875,28.1875 497.9375,27.6406 C498.5156,27.2344 498.8438,26.7813 498.8438,26.3906 C498.8438,25.9375 498.4531,25.5469 497.9844,25.5469 C497.7656,25.5469 497.5625,25.625 497.375,25.8125 C496.9219,26.2969 496.9219,26.2969 496.7344,26.3906 C496.3125,26.6563 495.625,26.7813 494.8594,26.7813 C492.8125,26.7813 491.5156,25.6875 491.5156,23.9844 L491.5156,22.8906 C491.5156,21.1094 492.7656,19.7969 494.5,19.7969 C495.0781,19.7969 495.6875,19.9531 496.1563,20.2031 C496.6406,20.4844 496.8125,20.7031 496.9063,21.1094 C496.9688,21.5156 497,21.6406 497.1406,21.7656 C497.2813,21.9063 497.5156,22.0156 497.7344,22.0156 C498,22.0156 498.2656,21.875 498.4375,21.6563 C498.5469,21.5 498.5781,21.3125 498.5781,20.8906 L498.5781,19.4688 C498.5781,19.0313 498.5625,18.9063 498.4688,18.75 C498.3125,18.4844 498.0313,18.3438 497.7344,18.3438 C497.4375,18.3438 497.2344,18.4375 497.0156,18.75 L496.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="508.5" y="27.8467">RenderProxy</text><line style="stroke:#181818;stroke-width:0.5;" x1="480.5" x2="602.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="480.5" x2="602.5" y1="47" y2="47"/></g><!--class DrawFrameTask--><g id="elem_DrawFrameTask"><rect fill="#F1F1F1" height="48" id="DrawFrameTask" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="468.5" y="132"/><ellipse cx="483.5" cy="148" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M485.8438,143.6719 C484.9063,143.2344 484.3125,143.0938 483.4375,143.0938 C480.8125,143.0938 478.8125,145.1719 478.8125,147.8906 L478.8125,149.0156 C478.8125,151.5938 480.9219,153.4844 483.8125,153.4844 C485.0313,153.4844 486.1875,153.1875 486.9375,152.6406 C487.5156,152.2344 487.8438,151.7813 487.8438,151.3906 C487.8438,150.9375 487.4531,150.5469 486.9844,150.5469 C486.7656,150.5469 486.5625,150.625 486.375,150.8125 C485.9219,151.2969 485.9219,151.2969 485.7344,151.3906 C485.3125,151.6563 484.625,151.7813 483.8594,151.7813 C481.8125,151.7813 480.5156,150.6875 480.5156,148.9844 L480.5156,147.8906 C480.5156,146.1094 481.7656,144.7969 483.5,144.7969 C484.0781,144.7969 484.6875,144.9531 485.1563,145.2031 C485.6406,145.4844 485.8125,145.7031 485.9063,146.1094 C485.9688,146.5156 486,146.6406 486.1406,146.7656 C486.2813,146.9063 486.5156,147.0156 486.7344,147.0156 C487,147.0156 487.2656,146.875 487.4375,146.6563 C487.5469,146.5 487.5781,146.3125 487.5781,145.8906 L487.5781,144.4688 C487.5781,144.0313 487.5625,143.9063 487.4688,143.75 C487.3125,143.4844 487.0313,143.3438 486.7344,143.3438 C486.4375,143.3438 486.2344,143.4375 486.0156,143.75 L485.8438,143.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="497.5" y="152.8467">DrawFrameTask</text><line style="stroke:#181818;stroke-width:0.5;" x1="469.5" x2="613.5" y1="164" y2="164"/><line style="stroke:#181818;stroke-width:0.5;" x1="469.5" x2="613.5" y1="172" y2="172"/></g><!--class RenderThread--><g id="elem_RenderThread"><rect fill="#F1F1F1" height="48" id="RenderThread" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="134" x="275.5" y="241"/><ellipse cx="290.5" cy="257" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M292.8438,252.6719 C291.9063,252.2344 291.3125,252.0938 290.4375,252.0938 C287.8125,252.0938 285.8125,254.1719 285.8125,256.8906 L285.8125,258.0156 C285.8125,260.5938 287.9219,262.4844 290.8125,262.4844 C292.0313,262.4844 293.1875,262.1875 293.9375,261.6406 C294.5156,261.2344 294.8438,260.7813 294.8438,260.3906 C294.8438,259.9375 294.4531,259.5469 293.9844,259.5469 C293.7656,259.5469 293.5625,259.625 293.375,259.8125 C292.9219,260.2969 292.9219,260.2969 292.7344,260.3906 C292.3125,260.6563 291.625,260.7813 290.8594,260.7813 C288.8125,260.7813 287.5156,259.6875 287.5156,257.9844 L287.5156,256.8906 C287.5156,255.1094 288.7656,253.7969 290.5,253.7969 C291.0781,253.7969 291.6875,253.9531 292.1563,254.2031 C292.6406,254.4844 292.8125,254.7031 292.9063,255.1094 C292.9688,255.5156 293,255.6406 293.1406,255.7656 C293.2813,255.9063 293.5156,256.0156 293.7344,256.0156 C294,256.0156 294.2656,255.875 294.4375,255.6563 C294.5469,255.5 294.5781,255.3125 294.5781,254.8906 L294.5781,253.4688 C294.5781,253.0313 294.5625,252.9063 294.4688,252.75 C294.3125,252.4844 294.0313,252.3438 293.7344,252.3438 C293.4375,252.3438 293.2344,252.4375 293.0156,252.75 L292.8438,252.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="304.5" y="261.8467">RenderThread</text><line style="stroke:#181818;stroke-width:0.5;" x1="276.5" x2="408.5" y1="273" y2="273"/><line style="stroke:#181818;stroke-width:0.5;" x1="276.5" x2="408.5" y1="281" y2="281"/></g><!--class CanvasContext--><g id="elem_CanvasContext"><rect fill="#F1F1F1" height="48" id="CanvasContext" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="141" x="674" y="241"/><ellipse cx="689" cy="257" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M691.3438,252.6719 C690.4063,252.2344 689.8125,252.0938 688.9375,252.0938 C686.3125,252.0938 684.3125,254.1719 684.3125,256.8906 L684.3125,258.0156 C684.3125,260.5938 686.4219,262.4844 689.3125,262.4844 C690.5313,262.4844 691.6875,262.1875 692.4375,261.6406 C693.0156,261.2344 693.3438,260.7813 693.3438,260.3906 C693.3438,259.9375 692.9531,259.5469 692.4844,259.5469 C692.2656,259.5469 692.0625,259.625 691.875,259.8125 C691.4219,260.2969 691.4219,260.2969 691.2344,260.3906 C690.8125,260.6563 690.125,260.7813 689.3594,260.7813 C687.3125,260.7813 686.0156,259.6875 686.0156,257.9844 L686.0156,256.8906 C686.0156,255.1094 687.2656,253.7969 689,253.7969 C689.5781,253.7969 690.1875,253.9531 690.6563,254.2031 C691.1406,254.4844 691.3125,254.7031 691.4063,255.1094 C691.4688,255.5156 691.5,255.6406 691.6406,255.7656 C691.7813,255.9063 692.0156,256.0156 692.2344,256.0156 C692.5,256.0156 692.7656,255.875 692.9375,255.6563 C693.0469,255.5 693.0781,255.3125 693.0781,254.8906 L693.0781,253.4688 C693.0781,253.0313 693.0625,252.9063 692.9688,252.75 C692.8125,252.4844 692.5313,252.3438 692.2344,252.3438 C691.9375,252.3438 691.7344,252.4375 691.5156,252.75 L691.3438,252.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="703" y="261.8467">CanvasContext</text><line style="stroke:#181818;stroke-width:0.5;" x1="675" x2="814" y1="273" y2="273"/><line style="stroke:#181818;stroke-width:0.5;" x1="675" x2="814" y1="281" y2="281"/></g><!--class IRenderPipeline--><g id="elem_IRenderPipeline"><rect codeLine="5" fill="#F1F1F1" height="48" id="IRenderPipeline" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="144" x="672.5" y="350"/><ellipse cx="687.5" cy="366" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M688.4531,362.7813 L690.1719,362.7813 C690.5625,362.7813 690.75,362.75 690.875,362.6719 C691.1406,362.5156 691.2813,362.2344 691.2813,361.9375 C691.2813,361.6719 691.1719,361.4063 690.9375,361.2344 C690.7656,361.125 690.625,361.0938 690.1719,361.0938 L685.0313,361.0938 C684.5938,361.0938 684.4688,361.1094 684.3125,361.2031 C684.0625,361.3594 683.9063,361.6563 683.9063,361.9375 C683.9063,362.2188 684.0469,362.4688 684.2656,362.6406 C684.4219,362.75 684.6094,362.7813 685.0313,362.7813 L686.75,362.7813 L686.75,369.2969 L685.0313,369.2969 C684.5938,369.2969 684.4688,369.3125 684.3125,369.4219 C684.0625,369.5781 683.9063,369.8594 683.9063,370.1563 C683.9063,370.4063 684.0469,370.6719 684.2656,370.8281 C684.4219,370.9531 684.625,371 685.0313,371 L690.1719,371 C690.9219,371 691.2813,370.7188 691.2813,370.1563 C691.2813,369.875 691.1719,369.625 690.9375,369.4531 C690.7656,369.3281 690.625,369.2969 690.1719,369.2969 L688.4531,369.2969 L688.4531,362.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="112" x="701.5" y="370.8467">IRenderPipeline</text><line style="stroke:#181818;stroke-width:0.5;" x1="673.5" x2="815.5" y1="382" y2="382"/><line style="stroke:#181818;stroke-width:0.5;" x1="673.5" x2="815.5" y1="390" y2="390"/></g><!--class SkiaPipeline--><g id="elem_SkiaPipeline"><rect fill="#F1F1F1" height="48" id="SkiaPipeline" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="120" x="684.5" y="459"/><ellipse cx="699.5" cy="475" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M701.8438,470.6719 C700.9063,470.2344 700.3125,470.0938 699.4375,470.0938 C696.8125,470.0938 694.8125,472.1719 694.8125,474.8906 L694.8125,476.0156 C694.8125,478.5938 696.9219,480.4844 699.8125,480.4844 C701.0313,480.4844 702.1875,480.1875 702.9375,479.6406 C703.5156,479.2344 703.8438,478.7813 703.8438,478.3906 C703.8438,477.9375 703.4531,477.5469 702.9844,477.5469 C702.7656,477.5469 702.5625,477.625 702.375,477.8125 C701.9219,478.2969 701.9219,478.2969 701.7344,478.3906 C701.3125,478.6563 700.625,478.7813 699.8594,478.7813 C697.8125,478.7813 696.5156,477.6875 696.5156,475.9844 L696.5156,474.8906 C696.5156,473.1094 697.7656,471.7969 699.5,471.7969 C700.0781,471.7969 700.6875,471.9531 701.1563,472.2031 C701.6406,472.4844 701.8125,472.7031 701.9063,473.1094 C701.9688,473.5156 702,473.6406 702.1406,473.7656 C702.2813,473.9063 702.5156,474.0156 702.7344,474.0156 C703,474.0156 703.2656,473.875 703.4375,473.6563 C703.5469,473.5 703.5781,473.3125 703.5781,472.8906 L703.5781,471.4688 C703.5781,471.0313 703.5625,470.9063 703.4688,470.75 C703.3125,470.4844 703.0313,470.3438 702.7344,470.3438 C702.4375,470.3438 702.2344,470.4375 702.0156,470.75 L701.8438,470.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="713.5" y="479.8467">SkiaPipeline</text><line style="stroke:#181818;stroke-width:0.5;" x1="685.5" x2="803.5" y1="491" y2="491"/><line style="stroke:#181818;stroke-width:0.5;" x1="685.5" x2="803.5" y1="499" y2="499"/></g><!--class SkiaOpenGLPipeline--><g id="elem_SkiaOpenGLPipeline"><rect fill="#F1F1F1" height="48" id="SkiaOpenGLPipeline" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="178" x="551.5" y="568"/><ellipse cx="566.5" cy="584" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M568.8438,579.6719 C567.9063,579.2344 567.3125,579.0938 566.4375,579.0938 C563.8125,579.0938 561.8125,581.1719 561.8125,583.8906 L561.8125,585.0156 C561.8125,587.5938 563.9219,589.4844 566.8125,589.4844 C568.0313,589.4844 569.1875,589.1875 569.9375,588.6406 C570.5156,588.2344 570.8438,587.7813 570.8438,587.3906 C570.8438,586.9375 570.4531,586.5469 569.9844,586.5469 C569.7656,586.5469 569.5625,586.625 569.375,586.8125 C568.9219,587.2969 568.9219,587.2969 568.7344,587.3906 C568.3125,587.6563 567.625,587.7813 566.8594,587.7813 C564.8125,587.7813 563.5156,586.6875 563.5156,584.9844 L563.5156,583.8906 C563.5156,582.1094 564.7656,580.7969 566.5,580.7969 C567.0781,580.7969 567.6875,580.9531 568.1563,581.2031 C568.6406,581.4844 568.8125,581.7031 568.9063,582.1094 C568.9688,582.5156 569,582.6406 569.1406,582.7656 C569.2813,582.9063 569.5156,583.0156 569.7344,583.0156 C570,583.0156 570.2656,582.875 570.4375,582.6563 C570.5469,582.5 570.5781,582.3125 570.5781,581.8906 L570.5781,580.4688 C570.5781,580.0313 570.5625,579.9063 570.4688,579.75 C570.3125,579.4844 570.0313,579.3438 569.7344,579.3438 C569.4375,579.3438 569.2344,579.4375 569.0156,579.75 L568.8438,579.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="580.5" y="588.8467">SkiaOpenGLPipeline</text><line style="stroke:#181818;stroke-width:0.5;" x1="552.5" x2="728.5" y1="600" y2="600"/><line style="stroke:#181818;stroke-width:0.5;" x1="552.5" x2="728.5" y1="608" y2="608"/></g><!--class SkiaVulkanPipeline--><g id="elem_SkiaVulkanPipeline"><rect fill="#F1F1F1" height="48" id="SkiaVulkanPipeline" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="168" x="764.5" y="568"/><ellipse cx="779.5" cy="584" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M781.8438,579.6719 C780.9063,579.2344 780.3125,579.0938 779.4375,579.0938 C776.8125,579.0938 774.8125,581.1719 774.8125,583.8906 L774.8125,585.0156 C774.8125,587.5938 776.9219,589.4844 779.8125,589.4844 C781.0313,589.4844 782.1875,589.1875 782.9375,588.6406 C783.5156,588.2344 783.8438,587.7813 783.8438,587.3906 C783.8438,586.9375 783.4531,586.5469 782.9844,586.5469 C782.7656,586.5469 782.5625,586.625 782.375,586.8125 C781.9219,587.2969 781.9219,587.2969 781.7344,587.3906 C781.3125,587.6563 780.625,587.7813 779.8594,587.7813 C777.8125,587.7813 776.5156,586.6875 776.5156,584.9844 L776.5156,583.8906 C776.5156,582.1094 777.7656,580.7969 779.5,580.7969 C780.0781,580.7969 780.6875,580.9531 781.1563,581.2031 C781.6406,581.4844 781.8125,581.7031 781.9063,582.1094 C781.9688,582.5156 782,582.6406 782.1406,582.7656 C782.2813,582.9063 782.5156,583.0156 782.7344,583.0156 C783,583.0156 783.2656,582.875 783.4375,582.6563 C783.5469,582.5 783.5781,582.3125 783.5781,581.8906 L783.5781,580.4688 C783.5781,580.0313 783.5625,579.9063 783.4688,579.75 C783.3125,579.4844 783.0313,579.3438 782.7344,579.3438 C782.4375,579.3438 782.2344,579.4375 782.0156,579.75 L781.8438,579.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="793.5" y="588.8467">SkiaVulkanPipeline</text><line style="stroke:#181818;stroke-width:0.5;" x1="765.5" x2="931.5" y1="600" y2="600"/><line style="stroke:#181818;stroke-width:0.5;" x1="765.5" x2="931.5" y1="608" y2="608"/></g><!--class DeferredLayerUpdater--><g id="elem_DeferredLayerUpdater"><rect fill="#F1F1F1" height="48" id="DeferredLayerUpdater" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="194" x="444.5" y="241"/><ellipse cx="459.5" cy="257" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M461.8438,252.6719 C460.9063,252.2344 460.3125,252.0938 459.4375,252.0938 C456.8125,252.0938 454.8125,254.1719 454.8125,256.8906 L454.8125,258.0156 C454.8125,260.5938 456.9219,262.4844 459.8125,262.4844 C461.0313,262.4844 462.1875,262.1875 462.9375,261.6406 C463.5156,261.2344 463.8438,260.7813 463.8438,260.3906 C463.8438,259.9375 463.4531,259.5469 462.9844,259.5469 C462.7656,259.5469 462.5625,259.625 462.375,259.8125 C461.9219,260.2969 461.9219,260.2969 461.7344,260.3906 C461.3125,260.6563 460.625,260.7813 459.8594,260.7813 C457.8125,260.7813 456.5156,259.6875 456.5156,257.9844 L456.5156,256.8906 C456.5156,255.1094 457.7656,253.7969 459.5,253.7969 C460.0781,253.7969 460.6875,253.9531 461.1563,254.2031 C461.6406,254.4844 461.8125,254.7031 461.9063,255.1094 C461.9688,255.5156 462,255.6406 462.1406,255.7656 C462.2813,255.9063 462.5156,256.0156 462.7344,256.0156 C463,256.0156 463.2656,255.875 463.4375,255.6563 C463.5469,255.5 463.5781,255.3125 463.5781,254.8906 L463.5781,253.4688 C463.5781,253.0313 463.5625,252.9063 463.4688,252.75 C463.3125,252.4844 463.0313,252.3438 462.7344,252.3438 C462.4375,252.3438 462.2344,252.4375 462.0156,252.75 L461.8438,252.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="473.5" y="261.8467">DeferredLayerUpdater</text><line style="stroke:#181818;stroke-width:0.5;" x1="445.5" x2="637.5" y1="273" y2="273"/><line style="stroke:#181818;stroke-width:0.5;" x1="445.5" x2="637.5" y1="281" y2="281"/></g><!--class ThreadBase--><g id="elem_ThreadBase"><rect fill="#F1F1F1" height="48" id="ThreadBase" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="140.5" y="132"/><ellipse cx="155.5" cy="148" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M157.8438,143.6719 C156.9063,143.2344 156.3125,143.0938 155.4375,143.0938 C152.8125,143.0938 150.8125,145.1719 150.8125,147.8906 L150.8125,149.0156 C150.8125,151.5938 152.9219,153.4844 155.8125,153.4844 C157.0313,153.4844 158.1875,153.1875 158.9375,152.6406 C159.5156,152.2344 159.8438,151.7813 159.8438,151.3906 C159.8438,150.9375 159.4531,150.5469 158.9844,150.5469 C158.7656,150.5469 158.5625,150.625 158.375,150.8125 C157.9219,151.2969 157.9219,151.2969 157.7344,151.3906 C157.3125,151.6563 156.625,151.7813 155.8594,151.7813 C153.8125,151.7813 152.5156,150.6875 152.5156,148.9844 L152.5156,147.8906 C152.5156,146.1094 153.7656,144.7969 155.5,144.7969 C156.0781,144.7969 156.6875,144.9531 157.1563,145.2031 C157.6406,145.4844 157.8125,145.7031 157.9063,146.1094 C157.9688,146.5156 158,146.6406 158.1406,146.7656 C158.2813,146.9063 158.5156,147.0156 158.7344,147.0156 C159,147.0156 159.2656,146.875 159.4375,146.6563 C159.5469,146.5 159.5781,146.3125 159.5781,145.8906 L159.5781,144.4688 C159.5781,144.0313 159.5625,143.9063 159.4688,143.75 C159.3125,143.4844 159.0313,143.3438 158.7344,143.3438 C158.4375,143.3438 158.2344,143.4375 158.0156,143.75 L157.8438,143.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="169.5" y="152.8467">ThreadBase</text><line style="stroke:#181818;stroke-width:0.5;" x1="141.5" x2="255.5" y1="164" y2="164"/><line style="stroke:#181818;stroke-width:0.5;" x1="141.5" x2="255.5" y1="172" y2="172"/></g><!--class WorkQueue--><g id="elem_WorkQueue"><rect fill="#F1F1F1" height="48" id="WorkQueue" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="115" x="7" y="241"/><ellipse cx="22" cy="257" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,252.6719 C23.4063,252.2344 22.8125,252.0938 21.9375,252.0938 C19.3125,252.0938 17.3125,254.1719 17.3125,256.8906 L17.3125,258.0156 C17.3125,260.5938 19.4219,262.4844 22.3125,262.4844 C23.5313,262.4844 24.6875,262.1875 25.4375,261.6406 C26.0156,261.2344 26.3438,260.7813 26.3438,260.3906 C26.3438,259.9375 25.9531,259.5469 25.4844,259.5469 C25.2656,259.5469 25.0625,259.625 24.875,259.8125 C24.4219,260.2969 24.4219,260.2969 24.2344,260.3906 C23.8125,260.6563 23.125,260.7813 22.3594,260.7813 C20.3125,260.7813 19.0156,259.6875 19.0156,257.9844 L19.0156,256.8906 C19.0156,255.1094 20.2656,253.7969 22,253.7969 C22.5781,253.7969 23.1875,253.9531 23.6563,254.2031 C24.1406,254.4844 24.3125,254.7031 24.4063,255.1094 C24.4688,255.5156 24.5,255.6406 24.6406,255.7656 C24.7813,255.9063 25.0156,256.0156 25.2344,256.0156 C25.5,256.0156 25.7656,255.875 25.9375,255.6563 C26.0469,255.5 26.0781,255.3125 26.0781,254.8906 L26.0781,253.4688 C26.0781,253.0313 26.0625,252.9063 25.9688,252.75 C25.8125,252.4844 25.5313,252.3438 25.2344,252.3438 C24.9375,252.3438 24.7344,252.4375 24.5156,252.75 L24.3438,252.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="36" y="261.8467">WorkQueue</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="121" y1="273" y2="273"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="121" y1="281" y2="281"/></g><!--class Looper--><g id="elem_Looper"><rect fill="#F1F1F1" height="48" id="Looper" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="83" x="157" y="241"/><ellipse cx="172" cy="257" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M174.3438,252.6719 C173.4063,252.2344 172.8125,252.0938 171.9375,252.0938 C169.3125,252.0938 167.3125,254.1719 167.3125,256.8906 L167.3125,258.0156 C167.3125,260.5938 169.4219,262.4844 172.3125,262.4844 C173.5313,262.4844 174.6875,262.1875 175.4375,261.6406 C176.0156,261.2344 176.3438,260.7813 176.3438,260.3906 C176.3438,259.9375 175.9531,259.5469 175.4844,259.5469 C175.2656,259.5469 175.0625,259.625 174.875,259.8125 C174.4219,260.2969 174.4219,260.2969 174.2344,260.3906 C173.8125,260.6563 173.125,260.7813 172.3594,260.7813 C170.3125,260.7813 169.0156,259.6875 169.0156,257.9844 L169.0156,256.8906 C169.0156,255.1094 170.2656,253.7969 172,253.7969 C172.5781,253.7969 173.1875,253.9531 173.6563,254.2031 C174.1406,254.4844 174.3125,254.7031 174.4063,255.1094 C174.4688,255.5156 174.5,255.6406 174.6406,255.7656 C174.7813,255.9063 175.0156,256.0156 175.2344,256.0156 C175.5,256.0156 175.7656,255.875 175.9375,255.6563 C176.0469,255.5 176.0781,255.3125 176.0781,254.8906 L176.0781,253.4688 C176.0781,253.0313 176.0625,252.9063 175.9688,252.75 C175.8125,252.4844 175.5313,252.3438 175.2344,252.3438 C174.9375,252.3438 174.7344,252.4375 174.5156,252.75 L174.3438,252.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="186" y="261.8467">Looper</text><line style="stroke:#181818;stroke-width:0.5;" x1="158" x2="239" y1="273" y2="273"/><line style="stroke:#181818;stroke-width:0.5;" x1="158" x2="239" y1="281" y2="281"/></g><!--reverse link RenderProxy to DrawFrameTask--><g id="link_RenderProxy_DrawFrameTask"><path codeLine="1" d="M541.5,67.135 C541.5,89.126 541.5,110.012 541.5,131.968 " fill="none" id="RenderProxy-backto-DrawFrameTask" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="541.5,55.135,537.5,61.135,541.5,67.135,545.5,61.135,541.5,55.135" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="542.5" y="98.0669">new</text></g><!--reverse link RenderProxy to RenderThread--><g id="link_RenderProxy_RenderThread"><path codeLine="2" d="M484.1953,60.8389 C452.8293,78.2729 423.055,99.006 396.5,132 C369.953,164.984 354.778,212.799 347.626,240.916 " fill="none" id="RenderProxy-backto-RenderThread" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="494.684,55.009,487.4964,54.4277,484.1953,60.8389,491.3829,61.4202,494.684,55.009" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="397.5" y="160.5669">&#33719;&#21462;&#21333;&#20363;</text></g><!--reverse link RenderProxy to CanvasContext--><g id="link_RenderProxy_CanvasContext"><path codeLine="3" d="M571.1991,64.0489 C589.7851,84.1849 609.102,105.375 632.5,132 C665.631,169.702 703.198,214.387 725.315,240.901 " fill="none" id="RenderProxy-backto-CanvasContext" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="563.06,55.231,564.1903,62.353,571.1991,64.0489,570.0688,56.9269,563.06,55.231" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="672.5" y="160.5669">new</text></g><!--reverse link CanvasContext to IRenderPipeline--><g id="link_CanvasContext_IRenderPipeline"><path codeLine="4" d="M744.5,301.217 C744.5,319.165 744.5,331.892 744.5,349.828 " fill="none" id="CanvasContext-backto-IRenderPipeline" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="744.5,289.217,740.5,295.217,744.5,301.217,748.5,295.217,744.5,289.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link IRenderPipeline to SkiaPipeline--><g id="link_IRenderPipeline_SkiaPipeline"><path codeLine="6" d="M744.5,416.217 C744.5,434.165 744.5,440.892 744.5,458.828 " fill="none" id="IRenderPipeline-backto-SkiaPipeline" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="744.5,398.217,738.5,416.217,750.5,416.217,744.5,398.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link SkiaPipeline to SkiaOpenGLPipeline--><g id="link_SkiaPipeline_SkiaOpenGLPipeline"><path codeLine="7" d="M709.3882,520.1245 C691.9432,538.0724 680.456,549.8918 663.022,567.8279 " fill="none" id="SkiaPipeline-backto-SkiaOpenGLPipeline" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="721.934,507.217,705.0857,515.9425,713.6907,524.3064,721.934,507.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link SkiaPipeline to SkiaVulkanPipeline--><g id="link_SkiaPipeline_SkiaVulkanPipeline"><path codeLine="8" d="M779.6118,520.1245 C797.0568,538.0724 808.544,549.8918 825.978,567.8279 " fill="none" id="SkiaPipeline-backto-SkiaVulkanPipeline" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="767.066,507.217,775.3093,524.3064,783.9143,515.9425,767.066,507.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DrawFrameTask to CanvasContext--><g id="link_DrawFrameTask_CanvasContext"><path codeLine="9" d="M596.1636,185.8125 C630.2136,203.7605 666.51,222.892 700.538,240.828 " fill="none" id="DrawFrameTask-backto-CanvasContext" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="585.548,180.217,588.9906,186.5533,596.1636,185.8125,592.721,179.4762,585.548,180.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DrawFrameTask to RenderThread--><g id="link_DrawFrameTask_RenderThread"><path codeLine="10" d="M487.751,185.9 C454.372,203.848 418.953,222.892 385.596,240.828 " fill="none" id="DrawFrameTask-backto-RenderThread" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="498.32,180.217,491.1412,179.5355,487.751,185.9,494.9298,186.5815,498.32,180.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DrawFrameTask to DeferredLayerUpdater--><g id="link_DrawFrameTask_DeferredLayerUpdater"><path codeLine="11" d="M541.5,192.217 C541.5,210.165 541.5,222.892 541.5,240.828 " fill="none" id="DrawFrameTask-backto-DeferredLayerUpdater" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="541.5,180.217,537.5,186.217,541.5,192.217,545.5,186.217,541.5,180.217" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="532.525" y="200.0311">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="532.475" y="229.796">n</text></g><!--reverse link ThreadBase to RenderThread--><g id="link_ThreadBase_RenderThread"><path codeLine="13" d="M244.1937,190.9531 C268.3467,208.9011 287.177,222.892 311.315,240.828 " fill="none" id="ThreadBase-backto-RenderThread" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="229.746,180.217,240.6151,195.769,247.7724,186.1371,229.746,180.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ThreadBase to WorkQueue--><g id="link_ThreadBase_WorkQueue"><path codeLine="14" d="M160.0469,187.705 C137.5709,205.653 115.981,222.892 93.5193,240.828 " fill="none" id="ThreadBase-backto-WorkQueue" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="169.424,180.217,162.2395,180.8353,160.0469,187.705,167.2314,187.0867,169.424,180.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ThreadBase to Looper--><g id="link_ThreadBase_Looper"><path codeLine="15" d="M198.5,192.217 C198.5,210.165 198.5,222.892 198.5,240.828 " fill="none" id="ThreadBase-backto-Looper" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="198.5,180.217,194.5,186.217,198.5,192.217,202.5,186.217,198.5,180.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[XP2x2i9044NxVCMIKaXXArOQ527WM-l1N354TyF4-03_GDHAVyNEhp7WPnWrn3m4ozbpxcLdUf0skCDginKbmn0cqxh1jC20V5TKXCHQw-MSppoOCSYEbCVn6fukuU5yl-qBRftaYlowaajibd5VzkrbjUAOus7kI6XEX7XA4nH8RXRLNHJlkmubHdhuuhO7sRJ-IADWxf9CfEmj2jlyuEdBvB1Urj-ABdLXOWfcs1PjmKFFfcXRJVl4QkJ7FygKfU2hPQpOxGO8a0UMKXxu2G00]--></g></svg>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="366px" preserveAspectRatio="none" style="width:974px;height:366px;background:#FFFFFF;" version="1.1" viewBox="0 0 974 366" width="974px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="634.5" y="226.0938"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="79" x2="79" y1="36.2969" y2="331.4922"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="273.5" x2="273.5" y1="36.2969" y2="331.4922"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="400.5" x2="400.5" y1="36.2969" y2="331.4922"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="522.5" x2="522.5" y1="36.2969" y2="331.4922"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="639.5" x2="639.5" y1="36.2969" y2="331.4922"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="768.5" x2="768.5" y1="36.2969" y2="331.4922"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="904.5" x2="904.5" y1="36.2969" y2="331.4922"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="149" x="5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="12" y="24.9951">ThreadedRenderer</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="149" x="5" y="330.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="12" y="350.4873">ThreadedRenderer</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="106" x="220.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="227.5" y="24.9951">RenderProxy</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="106" x="220.5" y="330.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="227.5" y="350.4873">RenderProxy</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="128" x="336.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="343.5" y="24.9951">DrawFrameTask</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="128" x="336.5" y="330.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="343.5" y="350.4873">DrawFrameTask</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="97" x="474.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="481.5" y="24.9951">WorkQueue</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="97" x="474.5" y="330.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="481.5" y="350.4873">WorkQueue</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="581.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="588.5" y="24.9951">RenderThread</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="581.5" y="330.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="588.5" y="350.4873">RenderThread</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="123" x="707.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="714.5" y="24.9951">CanvasContext</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="123" x="707.5" y="330.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="714.5" y="350.4873">CanvasContext</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="128" x="840.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="847.5" y="24.9951">IRenderPipeline</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="128" x="840.5" y="330.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="847.5" y="350.4873">IRenderPipeline</text><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="634.5" y="226.0938"/><ellipse cx="7.5" cy="66.6797" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="67.5,63.4297,77.5,67.4297,67.5,71.4297,71.5,67.4297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="73.5" y1="67.4297" y2="67.4297"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="32" x="15" y="62.3638">draw</text><polygon fill="#181818" points="261.5,92.5625,271.5,96.5625,261.5,100.5625,265.5,96.5625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="79.5" x2="267.5" y1="96.5625" y2="96.5625"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="170" x="86.5" y="91.4966">jni&#35843;&#29992;syncAndDrawFrame</text><polygon fill="#181818" points="388.5,121.6953,398.5,125.6953,388.5,129.6953,392.5,125.6953" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="273.5" x2="394.5" y1="125.6953" y2="125.6953"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="73" x="280.5" y="120.6294">drawFrame</text><line style="stroke:#181818;stroke-width:1.0;" x1="400.5" x2="442.5" y1="154.8281" y2="154.8281"/><line style="stroke:#181818;stroke-width:1.0;" x1="442.5" x2="442.5" y1="154.8281" y2="167.8281"/><line style="stroke:#181818;stroke-width:1.0;" x1="401.5" x2="442.5" y1="167.8281" y2="167.8281"/><polygon fill="#181818" points="411.5,163.8281,401.5,167.8281,411.5,171.8281,407.5,167.8281" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="82" x="407.5" y="149.7622">postAndWait</text><polygon fill="#181818" points="511,192.9609,521,196.9609,511,200.9609,515,196.9609" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="400.5" x2="517" y1="196.9609" y2="196.9609"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="28" x="407.5" y="191.895">post</text><polygon fill="#181818" points="534,222.0938,524,226.0938,534,230.0938,530,226.0938" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="528" x2="633.5" y1="226.0938" y2="226.0938"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="540" y="221.0278">&#33719;&#21462;&#20219;&#21153;</text><polygon fill="#181818" points="411.5,251.2266,401.5,255.2266,411.5,259.2266,407.5,255.2266" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="405.5" x2="638.5" y1="255.2266" y2="255.2266"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="417.5" y="250.1606">run</text><polygon fill="#181818" points="757,280.3594,767,284.3594,757,288.3594,761,284.3594" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="400.5" x2="763" y1="284.3594" y2="284.3594"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="32" x="407.5" y="279.2935">draw</text><polygon fill="#181818" points="892.5,309.4922,902.5,313.4922,892.5,317.4922,896.5,313.4922" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="769" x2="898.5" y1="313.4922" y2="313.4922"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="32" x="776" y="308.4263">draw</text><!--SRC=[YyxNjLC8oIXAJKn9JGbApKj9BKejKh1II2bABEV240UgXR03Yl8hAe7Ail8oNsneVZvbHN5bNh9ZNeeBK9jRKM9kAXUoEg0sk4H8Od4sr7o8GbGPB4eByejBW4Q79sQMO2eEpo_A3YnDBKs5AeJQ2t4vke8NVTkVzazxidltqww5N8d99PbbYIMf2iWwCBIZEwQeD8yh9HMxNWp7EIVcbIKME-VdbQHMbC025LKGgCeJ6bIP1QavcNcfK7K0]--></g></svg>

<h3 id="RenderThread如何启动运行"><a href="#RenderThread如何启动运行" class="headerlink" title="RenderThread如何启动运行"></a>RenderThread如何启动运行</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">RenderThread&amp; <span class="title">RenderThread::getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    [[clang::no_destroy]] <span class="type">static</span> sp&lt;RenderThread&gt; sInstance = []() &#123;</span><br><span class="line">        sp&lt;RenderThread&gt; thread = sp&lt;RenderThread&gt;::<span class="built_in">make</span>();</span><br><span class="line">        thread-&gt;<span class="built_in">start</span>(<span class="string">&quot;RenderThread&quot;</span>);  <span class="comment">//开始执行threadLoop</span></span><br><span class="line">        <span class="keyword">return</span> thread;</span><br><span class="line">    &#125;();</span><br><span class="line">    gHasRenderThreadInstance = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> *sInstance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">RenderThread::threadLoop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">setpriority</span>(PRIO_PROCESS, <span class="number">0</span>, PRIORITY_DISPLAY);</span><br><span class="line">    Looper::<span class="built_in">setForThread</span>(mLooper);</span><br><span class="line">    <span class="keyword">if</span> (gOnStartHook) &#123;</span><br><span class="line">        <span class="built_in">gOnStartHook</span>(<span class="string">&quot;RenderThread&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">initThreadLocals</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123; <span class="comment">//loop forever</span></span><br><span class="line">        <span class="built_in">waitForWork</span>();</span><br><span class="line">        <span class="built_in">processQueue</span>(); <span class="comment">//执行WorkQueue中的任务</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mPendingRegistrationFrameCallbacks.<span class="built_in">size</span>() &amp;&amp; !mFrameCallbackTaskPending) &#123;</span><br><span class="line">            mVsyncSource-&gt;<span class="built_in">drainPendingEvents</span>();</span><br><span class="line">            mFrameCallbacks.<span class="built_in">insert</span>(mPendingRegistrationFrameCallbacks.<span class="built_in">begin</span>(),</span><br><span class="line">                                   mPendingRegistrationFrameCallbacks.<span class="built_in">end</span>());</span><br><span class="line">            mPendingRegistrationFrameCallbacks.<span class="built_in">clear</span>();</span><br><span class="line">            <span class="built_in">requestVsync</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!mFrameCallbackTaskPending &amp;&amp; !mVsyncRequested &amp;&amp; mFrameCallbacks.<span class="built_in">size</span>()) &#123;</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> Clean this up. This is working around an issue where a combination</span></span><br><span class="line">            <span class="comment">// of bad timing and slow drawing can result in dropping a stale vsync</span></span><br><span class="line">            <span class="comment">// on the floor (correct!) but fails to schedule to listen for the</span></span><br><span class="line">            <span class="comment">// next vsync (oops), so none of the callbacks are run.</span></span><br><span class="line">            <span class="built_in">requestVsync</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>会生成一个RecordingCanvas来记录所有的绘制步骤：</p>
<p><img src="/images/Android/Canvas%E7%B1%BB%E5%9B%BE.drawio.svg" alt="Canvas类图"></p>
<p>在使用硬件加速时，onDraw的canvas实际上是RecordingCanvas。RecordingCanvas最终的产物是DisplayList，然后交给RenderThread去执行真正的绘制流程。</p>
<h2 id="Surface的生成过程"><a href="#Surface的生成过程" class="headerlink" title="Surface的生成过程"></a>Surface的生成过程</h2><p>ViewRootImpl中通过Surface的无参构造函数创建了一个空的Surface。在<code>ViewRootImpl.relayoutWindow</code>中会调用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="title function_">relayoutWindow</span><span class="params">(WindowManager.LayoutParams params, <span class="type">int</span> viewVisibility,</span></span><br><span class="line"><span class="params">        <span class="type">boolean</span> insetsPending)</span> <span class="keyword">throws</span> RemoteException &#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">if</span> (mSurfaceControl.isValid()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!useBLAST()) &#123;</span><br><span class="line">            mSurface.copyFrom(mSurfaceControl);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            updateBlastSurfaceIfNeeded();</span><br><span class="line">        &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">updateBlastSurfaceIfNeeded</span><span class="params">()</span> &#123;</span><br><span class="line">    ......</span><br><span class="line">    mBlastBufferQueue = <span class="keyword">new</span> <span class="title class_">BLASTBufferQueue</span>(mTag, mSurfaceControl,</span><br><span class="line">            mSurfaceSize.x, mSurfaceSize.y, mWindowAttributes.format);</span><br><span class="line">    mBlastBufferQueue.setTransactionHangCallback(sTransactionHangCallback);</span><br><span class="line">    <span class="comment">//BlastBufferQueue.createSurface在native层生成一个BBQSurface类返回给java层</span></span><br><span class="line">    <span class="type">Surface</span> <span class="variable">blastSurface</span> <span class="operator">=</span> mBlastBufferQueue.createSurface();</span><br><span class="line">    <span class="comment">//将native Surface对象迁移到mSurface对象中</span></span><br><span class="line">    mSurface.transferFrom(blastSurface);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>BlastBufferQueue.createSurface在native层生成一个BBQSurface对象返回给java层</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//c++</span></span><br><span class="line"><span class="function">sp&lt;Surface&gt; <span class="title">BLASTBufferQueue::getSurface</span><span class="params">(<span class="type">bool</span> includeSurfaceControlHandle)</span> </span>&#123;</span><br><span class="line">    std::unique_lock _lock&#123;mMutex&#125;;</span><br><span class="line">    sp&lt;IBinder&gt; scHandle = <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="keyword">if</span> (includeSurfaceControlHandle &amp;&amp; mSurfaceControl) &#123;</span><br><span class="line">        scHandle = mSurfaceControl-&gt;<span class="built_in">getHandle</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">BBQSurface</span>(mProducer, <span class="literal">true</span>, scHandle, <span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>BlastBufferQueue.createSurface返回给java层的对象是在jni层调用了下面这个Surface构造函数，因此这个Surface就关联了native的Surface了：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Surface.java</span></span><br><span class="line"><span class="keyword">private</span> <span class="title function_">Surface</span><span class="params">(<span class="type">long</span> nativeObject)</span> &#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (mLock) &#123;</span><br><span class="line">        setNativeObjectLocked(nativeObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/images/Android/Surface%E6%9E%84%E5%BB%BA%E5%92%8C%E5%A1%AB%E5%85%85.drawio.svg" alt="Surface构建和填充"></p>
<p><code>CanvasContext</code>是在<code>RenderProxy</code>的构造函数中构造的。</p>
<h3 id="Surface分配内存"><a href="#Surface分配内存" class="headerlink" title="Surface分配内存"></a>Surface分配内存</h3><p>内存分配是在ViewRootImpl.performTraversals中执行<code>mAttachInfo.mThreadedRenderer.allocateBuffers();</code>类为surface申请内存。allocateBuffers在HardwareRenderer中实现，会调用native端的<code>RenderProxy.allocateBuffers</code>来发起内存申请。</p>
<pre class="mermaid">

zenuml
RenderProxy.allocateBuffers {
    CanvasContext.allocateBuffers {
        &#x2F;&#x2F;NATIVE_WINDOW_ALLOCATE_BUFFERS
        Surface.&quot;perform&quot; {
            Surface.allocateBuffers {
                BufferQueueProducer.allocateBuffers {
                    new GraphicBuffer {
                        initWithSize {
                            GraphicBufferAllocator.allocate
                        }
                    }
                }
            }
        }
    }
}
</pre>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="195px" preserveAspectRatio="none" style="width:784px;height:195px;background:#FFFFFF;" version="1.1" viewBox="0 0 784 195" width="784px" zoomAndPan="magnify"><defs/><g><!--class GraphicBufferAllocator--><g id="elem_GraphicBufferAllocator"><rect codeLine="1" fill="#F1F1F1" height="72.5625" id="GraphicBufferAllocator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="224" x="175.5" y="7"/><ellipse cx="202.2" cy="27.1328" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M205.9813,23.1016 C205.9813,22.6641 205.9656,22.5234 205.8719,22.3672 C205.7313,22.1328 205.45,21.9766 205.1531,21.9766 C204.8094,21.9766 204.6688,22.1172 204.4969,22.5391 C203.9031,22.1641 203.1531,21.9766 202.2781,21.9766 C200.1688,21.9766 198.5906,23.2734 198.5906,24.9922 C198.5906,25.9609 199.1219,26.8672 199.9813,27.3516 C200.5281,27.6641 201.075,27.8359 202.1844,28.0234 C203.3406,28.2266 203.6063,28.2891 203.9656,28.4766 C204.3406,28.6797 204.575,29.0234 204.575,29.3828 C204.575,30.1172 203.5906,30.6641 202.3406,30.6641 C201.2156,30.6641 200.1375,30.1797 199.9656,29.5703 C199.8406,29.1016 199.8406,29.1016 199.7156,28.9922 C199.5594,28.8359 199.3406,28.7422 199.1063,28.7422 C198.825,28.7422 198.575,28.8672 198.4031,29.0859 C198.2938,29.2578 198.2469,29.4453 198.2469,29.8672 L198.2469,30.9922 C198.2469,31.7578 198.5281,32.1172 199.1219,32.1172 C199.3875,32.1172 199.5125,32.0547 199.7938,31.7109 C200.6375,32.1484 201.5281,32.3672 202.45,32.3672 C204.7781,32.3672 206.3406,31.1797 206.3406,29.4141 C206.3406,28.5234 206.0281,27.8359 205.3406,27.2891 C204.8094,26.8672 204.1688,26.6172 202.6844,26.3516 C201.4188,26.1172 201.325,26.0859 200.9969,25.9141 C200.6219,25.7266 200.3563,25.3359 200.3563,24.9766 C200.3563,24.2422 201.2156,23.6797 202.2781,23.6797 C203.3406,23.6797 204.1531,24.1484 204.3094,24.8203 C204.4188,25.3672 204.4188,25.3672 204.5438,25.5078 C204.6844,25.6328 204.9188,25.7422 205.1531,25.7422 C205.4188,25.7422 205.6688,25.6016 205.8406,25.3828 C205.95,25.2109 205.9813,25.0703 205.9813,24.6016 L205.9813,23.1016 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="71" x="266.3" y="23.1387">&#171;Singleton&#187;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="218.8" y="38.9639">GraphicBufferAllocator</text><line style="stroke:#181818;stroke-width:0.5;" x1="176.5" x2="398.5" y1="47.2656" y2="47.2656"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="183.5" y="57.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198" x="195.5" y="64.2607">GrallocAllocator mAllocator</text><line style="stroke:#181818;stroke-width:0.5;" x1="176.5" x2="398.5" y1="71.5625" y2="71.5625"/></g><!--class GraphicBuffer--><g id="elem_GraphicBuffer"><rect fill="#F1F1F1" height="48" id="GraphicBuffer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="7" y="19.5"/><ellipse cx="22" cy="35.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,31.1719 C23.4063,30.7344 22.8125,30.5938 21.9375,30.5938 C19.3125,30.5938 17.3125,32.6719 17.3125,35.3906 L17.3125,36.5156 C17.3125,39.0938 19.4219,40.9844 22.3125,40.9844 C23.5313,40.9844 24.6875,40.6875 25.4375,40.1406 C26.0156,39.7344 26.3438,39.2813 26.3438,38.8906 C26.3438,38.4375 25.9531,38.0469 25.4844,38.0469 C25.2656,38.0469 25.0625,38.125 24.875,38.3125 C24.4219,38.7969 24.4219,38.7969 24.2344,38.8906 C23.8125,39.1563 23.125,39.2813 22.3594,39.2813 C20.3125,39.2813 19.0156,38.1875 19.0156,36.4844 L19.0156,35.3906 C19.0156,33.6094 20.2656,32.2969 22,32.2969 C22.5781,32.2969 23.1875,32.4531 23.6563,32.7031 C24.1406,32.9844 24.3125,33.2031 24.4063,33.6094 C24.4688,34.0156 24.5,34.1406 24.6406,34.2656 C24.7813,34.4063 25.0156,34.5156 25.2344,34.5156 C25.5,34.5156 25.7656,34.375 25.9375,34.1563 C26.0469,34 26.0781,33.8125 26.0781,33.3906 L26.0781,31.9688 C26.0781,31.5313 26.0625,31.4063 25.9688,31.25 C25.8125,30.9844 25.5313,30.8438 25.2344,30.8438 C24.9375,30.8438 24.7344,30.9375 24.5156,31.25 L24.3438,31.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="36" y="40.3467">GraphicBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="139" y1="51.5" y2="51.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="139" y1="59.5" y2="59.5"/></g><!--class GrallocAllocator--><g id="elem_GrallocAllocator"><rect fill="#F1F1F1" height="48" id="GrallocAllocator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="147" x="435" y="19.5"/><ellipse cx="450" cy="35.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M452.3438,31.1719 C451.4063,30.7344 450.8125,30.5938 449.9375,30.5938 C447.3125,30.5938 445.3125,32.6719 445.3125,35.3906 L445.3125,36.5156 C445.3125,39.0938 447.4219,40.9844 450.3125,40.9844 C451.5313,40.9844 452.6875,40.6875 453.4375,40.1406 C454.0156,39.7344 454.3438,39.2813 454.3438,38.8906 C454.3438,38.4375 453.9531,38.0469 453.4844,38.0469 C453.2656,38.0469 453.0625,38.125 452.875,38.3125 C452.4219,38.7969 452.4219,38.7969 452.2344,38.8906 C451.8125,39.1563 451.125,39.2813 450.3594,39.2813 C448.3125,39.2813 447.0156,38.1875 447.0156,36.4844 L447.0156,35.3906 C447.0156,33.6094 448.2656,32.2969 450,32.2969 C450.5781,32.2969 451.1875,32.4531 451.6563,32.7031 C452.1406,32.9844 452.3125,33.2031 452.4063,33.6094 C452.4688,34.0156 452.5,34.1406 452.6406,34.2656 C452.7813,34.4063 453.0156,34.5156 453.2344,34.5156 C453.5,34.5156 453.7656,34.375 453.9375,34.1563 C454.0469,34 454.0781,33.8125 454.0781,33.3906 L454.0781,31.9688 C454.0781,31.5313 454.0625,31.4063 453.9688,31.25 C453.8125,30.9844 453.5313,30.8438 453.2344,30.8438 C452.9375,30.8438 452.7344,30.9375 452.5156,31.25 L452.3438,31.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="464" y="40.3467">GrallocAllocator</text><line style="stroke:#181818;stroke-width:0.5;" x1="436" x2="581" y1="51.5" y2="51.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="436" x2="581" y1="59.5" y2="59.5"/></g><!--class Gralloc4Allocator--><g id="elem_Gralloc4Allocator"><rect fill="#F1F1F1" height="48" id="Gralloc4Allocator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="155" x="240" y="140"/><ellipse cx="255" cy="156" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M257.3438,151.6719 C256.4063,151.2344 255.8125,151.0938 254.9375,151.0938 C252.3125,151.0938 250.3125,153.1719 250.3125,155.8906 L250.3125,157.0156 C250.3125,159.5938 252.4219,161.4844 255.3125,161.4844 C256.5313,161.4844 257.6875,161.1875 258.4375,160.6406 C259.0156,160.2344 259.3438,159.7813 259.3438,159.3906 C259.3438,158.9375 258.9531,158.5469 258.4844,158.5469 C258.2656,158.5469 258.0625,158.625 257.875,158.8125 C257.4219,159.2969 257.4219,159.2969 257.2344,159.3906 C256.8125,159.6563 256.125,159.7813 255.3594,159.7813 C253.3125,159.7813 252.0156,158.6875 252.0156,156.9844 L252.0156,155.8906 C252.0156,154.1094 253.2656,152.7969 255,152.7969 C255.5781,152.7969 256.1875,152.9531 256.6563,153.2031 C257.1406,153.4844 257.3125,153.7031 257.4063,154.1094 C257.4688,154.5156 257.5,154.6406 257.6406,154.7656 C257.7813,154.9063 258.0156,155.0156 258.2344,155.0156 C258.5,155.0156 258.7656,154.875 258.9375,154.6563 C259.0469,154.5 259.0781,154.3125 259.0781,153.8906 L259.0781,152.4688 C259.0781,152.0313 259.0625,151.9063 258.9688,151.75 C258.8125,151.4844 258.5313,151.3438 258.2344,151.3438 C257.9375,151.3438 257.7344,151.4375 257.5156,151.75 L257.3438,151.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="269" y="160.8467">Gralloc4Allocator</text><line style="stroke:#181818;stroke-width:0.5;" x1="241" x2="394" y1="172" y2="172"/><line style="stroke:#181818;stroke-width:0.5;" x1="241" x2="394" y1="180" y2="180"/></g><!--class Gralloc3Allocator--><g id="elem_Gralloc3Allocator"><rect fill="#F1F1F1" height="48" id="Gralloc3Allocator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="156" x="430.5" y="140"/><ellipse cx="445.5" cy="156" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M447.8438,151.6719 C446.9063,151.2344 446.3125,151.0938 445.4375,151.0938 C442.8125,151.0938 440.8125,153.1719 440.8125,155.8906 L440.8125,157.0156 C440.8125,159.5938 442.9219,161.4844 445.8125,161.4844 C447.0313,161.4844 448.1875,161.1875 448.9375,160.6406 C449.5156,160.2344 449.8438,159.7813 449.8438,159.3906 C449.8438,158.9375 449.4531,158.5469 448.9844,158.5469 C448.7656,158.5469 448.5625,158.625 448.375,158.8125 C447.9219,159.2969 447.9219,159.2969 447.7344,159.3906 C447.3125,159.6563 446.625,159.7813 445.8594,159.7813 C443.8125,159.7813 442.5156,158.6875 442.5156,156.9844 L442.5156,155.8906 C442.5156,154.1094 443.7656,152.7969 445.5,152.7969 C446.0781,152.7969 446.6875,152.9531 447.1563,153.2031 C447.6406,153.4844 447.8125,153.7031 447.9063,154.1094 C447.9688,154.5156 448,154.6406 448.1406,154.7656 C448.2813,154.9063 448.5156,155.0156 448.7344,155.0156 C449,155.0156 449.2656,154.875 449.4375,154.6563 C449.5469,154.5 449.5781,154.3125 449.5781,153.8906 L449.5781,152.4688 C449.5781,152.0313 449.5625,151.9063 449.4688,151.75 C449.3125,151.4844 449.0313,151.3438 448.7344,151.3438 C448.4375,151.3438 448.2344,151.4375 448.0156,151.75 L447.8438,151.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="459.5" y="160.8467">Gralloc3Allocator</text><line style="stroke:#181818;stroke-width:0.5;" x1="431.5" x2="585.5" y1="172" y2="172"/><line style="stroke:#181818;stroke-width:0.5;" x1="431.5" x2="585.5" y1="180" y2="180"/></g><!--class Gralloc2Allocator--><g id="elem_Gralloc2Allocator"><rect fill="#F1F1F1" height="48" id="Gralloc2Allocator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="155" x="622" y="140"/><ellipse cx="637" cy="156" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M639.3438,151.6719 C638.4063,151.2344 637.8125,151.0938 636.9375,151.0938 C634.3125,151.0938 632.3125,153.1719 632.3125,155.8906 L632.3125,157.0156 C632.3125,159.5938 634.4219,161.4844 637.3125,161.4844 C638.5313,161.4844 639.6875,161.1875 640.4375,160.6406 C641.0156,160.2344 641.3438,159.7813 641.3438,159.3906 C641.3438,158.9375 640.9531,158.5469 640.4844,158.5469 C640.2656,158.5469 640.0625,158.625 639.875,158.8125 C639.4219,159.2969 639.4219,159.2969 639.2344,159.3906 C638.8125,159.6563 638.125,159.7813 637.3594,159.7813 C635.3125,159.7813 634.0156,158.6875 634.0156,156.9844 L634.0156,155.8906 C634.0156,154.1094 635.2656,152.7969 637,152.7969 C637.5781,152.7969 638.1875,152.9531 638.6563,153.2031 C639.1406,153.4844 639.3125,153.7031 639.4063,154.1094 C639.4688,154.5156 639.5,154.6406 639.6406,154.7656 C639.7813,154.9063 640.0156,155.0156 640.2344,155.0156 C640.5,155.0156 640.7656,154.875 640.9375,154.6563 C641.0469,154.5 641.0781,154.3125 641.0781,153.8906 L641.0781,152.4688 C641.0781,152.0313 641.0625,151.9063 640.9688,151.75 C640.8125,151.4844 640.5313,151.3438 640.2344,151.3438 C639.9375,151.3438 639.7344,151.4375 639.5156,151.75 L639.3438,151.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="651" y="160.8467">Gralloc2Allocator</text><line style="stroke:#181818;stroke-width:0.5;" x1="623" x2="776" y1="172" y2="172"/><line style="stroke:#181818;stroke-width:0.5;" x1="623" x2="776" y1="180" y2="180"/></g><!--link GraphicBuffer to GraphicBufferAllocator--><g id="link_GraphicBuffer_GraphicBufferAllocator"><path codeLine="4" d="M140.375,43.5 C152.061,43.5 157.746,43.5 169.432,43.5 " fill="none" id="GraphicBuffer-to-GraphicBufferAllocator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="175.432,43.5,166.432,39.5,170.432,43.5,166.432,47.5,175.432,43.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link GraphicBufferAllocator to GrallocAllocator--><g id="link_GraphicBufferAllocator_GrallocAllocator"><path codeLine="5" d="M411.727,43.5 C423.482,43.5 423.237,43.5 434.993,43.5 " fill="none" id="GraphicBufferAllocator-backto-GrallocAllocator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="399.727,43.5,405.727,47.5,411.727,43.5,405.727,39.5,399.727,43.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link GrallocAllocator to Gralloc4Allocator--><g id="link_GrallocAllocator_Gralloc4Allocator"><path codeLine="6" d="M455.9246,77.1186 C422.2696,97.9989 388.312,119.0671 354.686,139.929 " fill="none" id="GrallocAllocator-backto-Gralloc4Allocator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="471.22,67.629,452.7615,72.0201,459.0878,82.217,471.22,67.629" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link GrallocAllocator to Gralloc3Allocator--><g id="link_GrallocAllocator_Gralloc3Allocator"><path codeLine="7" d="M508.5,85.629 C508.5,106.5093 508.5,119.0671 508.5,139.929 " fill="none" id="GrallocAllocator-backto-Gralloc3Allocator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="508.5,67.629,502.5,85.629,514.5,85.629,508.5,67.629" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link GrallocAllocator to Gralloc2Allocator--><g id="link_GrallocAllocator_Gralloc2Allocator"><path codeLine="8" d="M561.0754,77.1186 C594.7304,97.9989 628.688,119.0671 662.314,139.929 " fill="none" id="GrallocAllocator-backto-Gralloc2Allocator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="545.78,67.629,557.9122,82.217,564.2385,72.0201,545.78,67.629" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[Iyv9B2vMS2zABCZ8J7OgJKjBBNBCoSbFJYp9BrAmiL7G2DPHTdCpDpSmq5G8pinBpqajoSzJiBDJgEPI009Ta5QGUeIcN3YJgvOBnM05NJiSDd7XS80MflbS61RQrEZ2bPaGgSwOI7L6S640]--></g></svg>

<p>实际分配内存是在SurfaceFlinger进程中，通过hal层的Gralloc来分配内存。可以使用<code>adb shell dumpsys SurfaceFlinger</code>命令查看内存分配情况，如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">GraphicBufferAllocator buffers:</span><br><span class="line">    Handle |        Size |     W (Stride) x H | Layers |   Format |      Usage | Requestor</span><br><span class="line">0x716ff921acd0 | 10125.00 KiB | 1080 (1080) x 2400 |      1 |        1 | 0x    1b00 | FramebufferSurface</span><br><span class="line">0x716ff921b300 | 10125.00 KiB | 1080 (1080) x 2400 |      1 |        1 | 0x    1b00 | FramebufferSurface</span><br><span class="line">0x716ff9226430 |   82.69 KiB |  336 ( 336) x   63 |      1 |        1 | 0x     303 | RegionSamplingThread</span><br><span class="line">Total allocated by GraphicBufferAllocator (estimate): 20332.69 KB</span><br></pre></td></tr></table></figure>

<p>参考资料：</p>
<ul>
<li><a href="https://juejin.cn/post/6844904025851166734">Android图形系统系统篇之Gralloc</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/253055674">Android图像显示系统（二）GraphicBuffer和Gralloc分析</a></li>
<li><a href="https://juejin.cn/post/7033402333128032286">解读SurfaceFlinger中的BufferQueue</a></li>
</ul>
<h2 id="BufferQueue生产者和消费者"><a href="#BufferQueue生产者和消费者" class="headerlink" title="BufferQueue生产者和消费者"></a>BufferQueue生产者和消费者</h2><p>BufferQueue的生产者端连着app，消费者端连接的是SurfaceFligger。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="710px" preserveAspectRatio="none" style="width:606px;height:710px;background:#FFFFFF;" version="1.1" viewBox="0 0 606 710" width="606px" zoomAndPan="magnify"><defs/><g><!--class IGraphicBufferProducer--><g id="elem_IGraphicBufferProducer"><rect codeLine="1" fill="#F1F1F1" height="48" id="IGraphicBufferProducer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="200" x="12" y="115"/><ellipse cx="27" cy="131" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M27.9531,127.7813 L29.6719,127.7813 C30.0625,127.7813 30.25,127.75 30.375,127.6719 C30.6406,127.5156 30.7813,127.2344 30.7813,126.9375 C30.7813,126.6719 30.6719,126.4063 30.4375,126.2344 C30.2656,126.125 30.125,126.0938 29.6719,126.0938 L24.5313,126.0938 C24.0938,126.0938 23.9688,126.1094 23.8125,126.2031 C23.5625,126.3594 23.4063,126.6563 23.4063,126.9375 C23.4063,127.2188 23.5469,127.4688 23.7656,127.6406 C23.9219,127.75 24.1094,127.7813 24.5313,127.7813 L26.25,127.7813 L26.25,134.2969 L24.5313,134.2969 C24.0938,134.2969 23.9688,134.3125 23.8125,134.4219 C23.5625,134.5781 23.4063,134.8594 23.4063,135.1563 C23.4063,135.4063 23.5469,135.6719 23.7656,135.8281 C23.9219,135.9531 24.125,136 24.5313,136 L29.6719,136 C30.4219,136 30.7813,135.7188 30.7813,135.1563 C30.7813,134.875 30.6719,134.625 30.4375,134.4531 C30.2656,134.3281 30.125,134.2969 29.6719,134.2969 L27.9531,134.2969 L27.9531,127.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="168" x="41" y="135.8467">IGraphicBufferProducer</text><line style="stroke:#181818;stroke-width:0.5;" x1="13" x2="211" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="13" x2="211" y1="155" y2="155"/></g><!--class IGraphicBufferConsumer--><g id="elem_IGraphicBufferConsumer"><rect codeLine="2" fill="#F1F1F1" height="48" id="IGraphicBufferConsumer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="209" x="371.5" y="115"/><ellipse cx="386.5" cy="131" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M387.4531,127.7813 L389.1719,127.7813 C389.5625,127.7813 389.75,127.75 389.875,127.6719 C390.1406,127.5156 390.2813,127.2344 390.2813,126.9375 C390.2813,126.6719 390.1719,126.4063 389.9375,126.2344 C389.7656,126.125 389.625,126.0938 389.1719,126.0938 L384.0313,126.0938 C383.5938,126.0938 383.4688,126.1094 383.3125,126.2031 C383.0625,126.3594 382.9063,126.6563 382.9063,126.9375 C382.9063,127.2188 383.0469,127.4688 383.2656,127.6406 C383.4219,127.75 383.6094,127.7813 384.0313,127.7813 L385.75,127.7813 L385.75,134.2969 L384.0313,134.2969 C383.5938,134.2969 383.4688,134.3125 383.3125,134.4219 C383.0625,134.5781 382.9063,134.8594 382.9063,135.1563 C382.9063,135.4063 383.0469,135.6719 383.2656,135.8281 C383.4219,135.9531 383.625,136 384.0313,136 L389.1719,136 C389.9219,136 390.2813,135.7188 390.2813,135.1563 C390.2813,134.875 390.1719,134.625 389.9375,134.4531 C389.7656,134.3281 389.625,134.2969 389.1719,134.2969 L387.4531,134.2969 L387.4531,127.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="177" x="400.5" y="135.8467">IGraphicBufferConsumer</text><line style="stroke:#181818;stroke-width:0.5;" x1="372.5" x2="579.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="372.5" x2="579.5" y1="155" y2="155"/></g><!--class BLASTBufferQueue--><g id="elem_BLASTBufferQueue"><rect fill="#F1F1F1" height="48" id="BLASTBufferQueue" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="168" x="210" y="7"/><ellipse cx="225" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M227.3438,18.6719 C226.4063,18.2344 225.8125,18.0938 224.9375,18.0938 C222.3125,18.0938 220.3125,20.1719 220.3125,22.8906 L220.3125,24.0156 C220.3125,26.5938 222.4219,28.4844 225.3125,28.4844 C226.5313,28.4844 227.6875,28.1875 228.4375,27.6406 C229.0156,27.2344 229.3438,26.7813 229.3438,26.3906 C229.3438,25.9375 228.9531,25.5469 228.4844,25.5469 C228.2656,25.5469 228.0625,25.625 227.875,25.8125 C227.4219,26.2969 227.4219,26.2969 227.2344,26.3906 C226.8125,26.6563 226.125,26.7813 225.3594,26.7813 C223.3125,26.7813 222.0156,25.6875 222.0156,23.9844 L222.0156,22.8906 C222.0156,21.1094 223.2656,19.7969 225,19.7969 C225.5781,19.7969 226.1875,19.9531 226.6563,20.2031 C227.1406,20.4844 227.3125,20.7031 227.4063,21.1094 C227.4688,21.5156 227.5,21.6406 227.6406,21.7656 C227.7813,21.9063 228.0156,22.0156 228.2344,22.0156 C228.5,22.0156 228.7656,21.875 228.9375,21.6563 C229.0469,21.5 229.0781,21.3125 229.0781,20.8906 L229.0781,19.4688 C229.0781,19.0313 229.0625,18.9063 228.9688,18.75 C228.8125,18.4844 228.5313,18.3438 228.2344,18.3438 C227.9375,18.3438 227.7344,18.4375 227.5156,18.75 L227.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="239" y="27.8467">BLASTBufferQueue</text><line style="stroke:#181818;stroke-width:0.5;" x1="211" x2="377" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="211" x2="377" y1="47" y2="47"/></g><!--class BufferQueueProducer--><g id="elem_BufferQueueProducer"><rect fill="#F1F1F1" height="48" id="BufferQueueProducer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="186" x="45" y="439"/><ellipse cx="60" cy="455" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M62.3438,450.6719 C61.4063,450.2344 60.8125,450.0938 59.9375,450.0938 C57.3125,450.0938 55.3125,452.1719 55.3125,454.8906 L55.3125,456.0156 C55.3125,458.5938 57.4219,460.4844 60.3125,460.4844 C61.5313,460.4844 62.6875,460.1875 63.4375,459.6406 C64.0156,459.2344 64.3438,458.7813 64.3438,458.3906 C64.3438,457.9375 63.9531,457.5469 63.4844,457.5469 C63.2656,457.5469 63.0625,457.625 62.875,457.8125 C62.4219,458.2969 62.4219,458.2969 62.2344,458.3906 C61.8125,458.6563 61.125,458.7813 60.3594,458.7813 C58.3125,458.7813 57.0156,457.6875 57.0156,455.9844 L57.0156,454.8906 C57.0156,453.1094 58.2656,451.7969 60,451.7969 C60.5781,451.7969 61.1875,451.9531 61.6563,452.2031 C62.1406,452.4844 62.3125,452.7031 62.4063,453.1094 C62.4688,453.5156 62.5,453.6406 62.6406,453.7656 C62.7813,453.9063 63.0156,454.0156 63.2344,454.0156 C63.5,454.0156 63.7656,453.875 63.9375,453.6563 C64.0469,453.5 64.0781,453.3125 64.0781,452.8906 L64.0781,451.4688 C64.0781,451.0313 64.0625,450.9063 63.9688,450.75 C63.8125,450.4844 63.5313,450.3438 63.2344,450.3438 C62.9375,450.3438 62.7344,450.4375 62.5156,450.75 L62.3438,450.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="74" y="459.8467">BufferQueueProducer</text><line style="stroke:#181818;stroke-width:0.5;" x1="46" x2="230" y1="471" y2="471"/><line style="stroke:#181818;stroke-width:0.5;" x1="46" x2="230" y1="479" y2="479"/></g><!--class BBQBufferQueueProducer--><g id="elem_BBQBufferQueueProducer"><rect fill="#F1F1F1" height="48" id="BBQBufferQueueProducer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="217" x="24.5" y="547"/><ellipse cx="39.5" cy="563" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M41.8438,558.6719 C40.9063,558.2344 40.3125,558.0938 39.4375,558.0938 C36.8125,558.0938 34.8125,560.1719 34.8125,562.8906 L34.8125,564.0156 C34.8125,566.5938 36.9219,568.4844 39.8125,568.4844 C41.0313,568.4844 42.1875,568.1875 42.9375,567.6406 C43.5156,567.2344 43.8438,566.7813 43.8438,566.3906 C43.8438,565.9375 43.4531,565.5469 42.9844,565.5469 C42.7656,565.5469 42.5625,565.625 42.375,565.8125 C41.9219,566.2969 41.9219,566.2969 41.7344,566.3906 C41.3125,566.6563 40.625,566.7813 39.8594,566.7813 C37.8125,566.7813 36.5156,565.6875 36.5156,563.9844 L36.5156,562.8906 C36.5156,561.1094 37.7656,559.7969 39.5,559.7969 C40.0781,559.7969 40.6875,559.9531 41.1563,560.2031 C41.6406,560.4844 41.8125,560.7031 41.9063,561.1094 C41.9688,561.5156 42,561.6406 42.1406,561.7656 C42.2813,561.9063 42.5156,562.0156 42.7344,562.0156 C43,562.0156 43.2656,561.875 43.4375,561.6563 C43.5469,561.5 43.5781,561.3125 43.5781,560.8906 L43.5781,559.4688 C43.5781,559.0313 43.5625,558.9063 43.4688,558.75 C43.3125,558.4844 43.0313,558.3438 42.7344,558.3438 C42.4375,558.3438 42.2344,558.4375 42.0156,558.75 L41.8438,558.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="53.5" y="567.8467">BBQBufferQueueProducer</text><line style="stroke:#181818;stroke-width:0.5;" x1="25.5" x2="240.5" y1="579" y2="579"/><line style="stroke:#181818;stroke-width:0.5;" x1="25.5" x2="240.5" y1="587" y2="587"/></g><!--class BufferQueueCore--><g id="elem_BufferQueueCore"><rect fill="#F1F1F1" height="48" id="BufferQueueCore" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="156" x="292" y="655"/><ellipse cx="307" cy="671" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M309.3438,666.6719 C308.4063,666.2344 307.8125,666.0938 306.9375,666.0938 C304.3125,666.0938 302.3125,668.1719 302.3125,670.8906 L302.3125,672.0156 C302.3125,674.5938 304.4219,676.4844 307.3125,676.4844 C308.5313,676.4844 309.6875,676.1875 310.4375,675.6406 C311.0156,675.2344 311.3438,674.7813 311.3438,674.3906 C311.3438,673.9375 310.9531,673.5469 310.4844,673.5469 C310.2656,673.5469 310.0625,673.625 309.875,673.8125 C309.4219,674.2969 309.4219,674.2969 309.2344,674.3906 C308.8125,674.6563 308.125,674.7813 307.3594,674.7813 C305.3125,674.7813 304.0156,673.6875 304.0156,671.9844 L304.0156,670.8906 C304.0156,669.1094 305.2656,667.7969 307,667.7969 C307.5781,667.7969 308.1875,667.9531 308.6563,668.2031 C309.1406,668.4844 309.3125,668.7031 309.4063,669.1094 C309.4688,669.5156 309.5,669.6406 309.6406,669.7656 C309.7813,669.9063 310.0156,670.0156 310.2344,670.0156 C310.5,670.0156 310.7656,669.875 310.9375,669.6563 C311.0469,669.5 311.0781,669.3125 311.0781,668.8906 L311.0781,667.4688 C311.0781,667.0313 311.0625,666.9063 310.9688,666.75 C310.8125,666.4844 310.5313,666.3438 310.2344,666.3438 C309.9375,666.3438 309.7344,666.4375 309.5156,666.75 L309.3438,666.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="321" y="675.8467">BufferQueueCore</text><line style="stroke:#181818;stroke-width:0.5;" x1="293" x2="447" y1="687" y2="687"/><line style="stroke:#181818;stroke-width:0.5;" x1="293" x2="447" y1="695" y2="695"/></g><!--class BnGraphicBufferProducer--><g id="elem_BnGraphicBufferProducer"><rect fill="#F1F1F1" height="48" id="BnGraphicBufferProducer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="216" x="30" y="331"/><ellipse cx="45" cy="347" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M47.3438,342.6719 C46.4063,342.2344 45.8125,342.0938 44.9375,342.0938 C42.3125,342.0938 40.3125,344.1719 40.3125,346.8906 L40.3125,348.0156 C40.3125,350.5938 42.4219,352.4844 45.3125,352.4844 C46.5313,352.4844 47.6875,352.1875 48.4375,351.6406 C49.0156,351.2344 49.3438,350.7813 49.3438,350.3906 C49.3438,349.9375 48.9531,349.5469 48.4844,349.5469 C48.2656,349.5469 48.0625,349.625 47.875,349.8125 C47.4219,350.2969 47.4219,350.2969 47.2344,350.3906 C46.8125,350.6563 46.125,350.7813 45.3594,350.7813 C43.3125,350.7813 42.0156,349.6875 42.0156,347.9844 L42.0156,346.8906 C42.0156,345.1094 43.2656,343.7969 45,343.7969 C45.5781,343.7969 46.1875,343.9531 46.6563,344.2031 C47.1406,344.4844 47.3125,344.7031 47.4063,345.1094 C47.4688,345.5156 47.5,345.6406 47.6406,345.7656 C47.7813,345.9063 48.0156,346.0156 48.2344,346.0156 C48.5,346.0156 48.7656,345.875 48.9375,345.6563 C49.0469,345.5 49.0781,345.3125 49.0781,344.8906 L49.0781,343.4688 C49.0781,343.0313 49.0625,342.9063 48.9688,342.75 C48.8125,342.4844 48.5313,342.3438 48.2344,342.3438 C47.9375,342.3438 47.7344,342.4375 47.5156,342.75 L47.3438,342.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="59" y="351.8467">BnGraphicBufferProducer</text><line style="stroke:#181818;stroke-width:0.5;" x1="31" x2="245" y1="363" y2="363"/><line style="stroke:#181818;stroke-width:0.5;" x1="31" x2="245" y1="371" y2="371"/></g><!--class BnInterface--><g id="elem_BnInterface"><rect codeLine="8" fill="#F1F1F1" height="48" id="BnInterface" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="262" x="7" y="223"/><ellipse cx="22" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,234.6719 C23.4063,234.2344 22.8125,234.0938 21.9375,234.0938 C19.3125,234.0938 17.3125,236.1719 17.3125,238.8906 L17.3125,240.0156 C17.3125,242.5938 19.4219,244.4844 22.3125,244.4844 C23.5313,244.4844 24.6875,244.1875 25.4375,243.6406 C26.0156,243.2344 26.3438,242.7813 26.3438,242.3906 C26.3438,241.9375 25.9531,241.5469 25.4844,241.5469 C25.2656,241.5469 25.0625,241.625 24.875,241.8125 C24.4219,242.2969 24.4219,242.2969 24.2344,242.3906 C23.8125,242.6563 23.125,242.7813 22.3594,242.7813 C20.3125,242.7813 19.0156,241.6875 19.0156,239.9844 L19.0156,238.8906 C19.0156,237.1094 20.2656,235.7969 22,235.7969 C22.5781,235.7969 23.1875,235.9531 23.6563,236.2031 C24.1406,236.4844 24.3125,236.7031 24.4063,237.1094 C24.4688,237.5156 24.5,237.6406 24.6406,237.7656 C24.7813,237.9063 25.0156,238.0156 25.2344,238.0156 C25.5,238.0156 25.7656,237.875 25.9375,237.6563 C26.0469,237.5 26.0781,237.3125 26.0781,236.8906 L26.0781,235.4688 C26.0781,235.0313 26.0625,234.9063 25.9688,234.75 C25.8125,234.4844 25.5313,234.3438 25.2344,234.3438 C24.9375,234.3438 24.7344,234.4375 24.5156,234.75 L24.3438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="36" y="243.8467">BnInterface</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="143" x="129" y="220"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="141" x="130" y="232.1387">IGraphicBufferProducer</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="268" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="268" y1="263" y2="263"/></g><!--class BBinder--><g id="elem_BBinder"><rect fill="#F1F1F1" height="48" id="BBinder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="89" x="247.5" y="115"/><ellipse cx="262.5" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M264.8438,126.6719 C263.9063,126.2344 263.3125,126.0938 262.4375,126.0938 C259.8125,126.0938 257.8125,128.1719 257.8125,130.8906 L257.8125,132.0156 C257.8125,134.5938 259.9219,136.4844 262.8125,136.4844 C264.0313,136.4844 265.1875,136.1875 265.9375,135.6406 C266.5156,135.2344 266.8438,134.7813 266.8438,134.3906 C266.8438,133.9375 266.4531,133.5469 265.9844,133.5469 C265.7656,133.5469 265.5625,133.625 265.375,133.8125 C264.9219,134.2969 264.9219,134.2969 264.7344,134.3906 C264.3125,134.6563 263.625,134.7813 262.8594,134.7813 C260.8125,134.7813 259.5156,133.6875 259.5156,131.9844 L259.5156,130.8906 C259.5156,129.1094 260.7656,127.7969 262.5,127.7969 C263.0781,127.7969 263.6875,127.9531 264.1563,128.2031 C264.6406,128.4844 264.8125,128.7031 264.9063,129.1094 C264.9688,129.5156 265,129.6406 265.1406,129.7656 C265.2813,129.9063 265.5156,130.0156 265.7344,130.0156 C266,130.0156 266.2656,129.875 266.4375,129.6563 C266.5469,129.5 266.5781,129.3125 266.5781,128.8906 L266.5781,127.4688 C266.5781,127.0313 266.5625,126.9063 266.4688,126.75 C266.3125,126.4844 266.0313,126.3438 265.7344,126.3438 C265.4375,126.3438 265.2344,126.4375 265.0156,126.75 L264.8438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="276.5" y="135.8467">BBinder</text><line style="stroke:#181818;stroke-width:0.5;" x1="248.5" x2="335.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="248.5" x2="335.5" y1="155" y2="155"/></g><!--class BnGraphicBufferConsumer--><g id="elem_BnGraphicBufferConsumer"><rect fill="#F1F1F1" height="48" id="BnGraphicBufferConsumer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="224" x="333" y="439"/><ellipse cx="348" cy="455" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M350.3438,450.6719 C349.4063,450.2344 348.8125,450.0938 347.9375,450.0938 C345.3125,450.0938 343.3125,452.1719 343.3125,454.8906 L343.3125,456.0156 C343.3125,458.5938 345.4219,460.4844 348.3125,460.4844 C349.5313,460.4844 350.6875,460.1875 351.4375,459.6406 C352.0156,459.2344 352.3438,458.7813 352.3438,458.3906 C352.3438,457.9375 351.9531,457.5469 351.4844,457.5469 C351.2656,457.5469 351.0625,457.625 350.875,457.8125 C350.4219,458.2969 350.4219,458.2969 350.2344,458.3906 C349.8125,458.6563 349.125,458.7813 348.3594,458.7813 C346.3125,458.7813 345.0156,457.6875 345.0156,455.9844 L345.0156,454.8906 C345.0156,453.1094 346.2656,451.7969 348,451.7969 C348.5781,451.7969 349.1875,451.9531 349.6563,452.2031 C350.1406,452.4844 350.3125,452.7031 350.4063,453.1094 C350.4688,453.5156 350.5,453.6406 350.6406,453.7656 C350.7813,453.9063 351.0156,454.0156 351.2344,454.0156 C351.5,454.0156 351.7656,453.875 351.9375,453.6563 C352.0469,453.5 352.0781,453.3125 352.0781,452.8906 L352.0781,451.4688 C352.0781,451.0313 352.0625,450.9063 351.9688,450.75 C351.8125,450.4844 351.5313,450.3438 351.2344,450.3438 C350.9375,450.3438 350.7344,450.4375 350.5156,450.75 L350.3438,450.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="362" y="459.8467">BnGraphicBufferConsumer</text><line style="stroke:#181818;stroke-width:0.5;" x1="334" x2="556" y1="471" y2="471"/><line style="stroke:#181818;stroke-width:0.5;" x1="334" x2="556" y1="479" y2="479"/></g><!--class BufferQueueConsumer--><g id="elem_BufferQueueConsumer"><rect fill="#F1F1F1" height="48" id="BufferQueueConsumer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="194" x="348" y="547"/><ellipse cx="363" cy="563" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M365.3438,558.6719 C364.4063,558.2344 363.8125,558.0938 362.9375,558.0938 C360.3125,558.0938 358.3125,560.1719 358.3125,562.8906 L358.3125,564.0156 C358.3125,566.5938 360.4219,568.4844 363.3125,568.4844 C364.5313,568.4844 365.6875,568.1875 366.4375,567.6406 C367.0156,567.2344 367.3438,566.7813 367.3438,566.3906 C367.3438,565.9375 366.9531,565.5469 366.4844,565.5469 C366.2656,565.5469 366.0625,565.625 365.875,565.8125 C365.4219,566.2969 365.4219,566.2969 365.2344,566.3906 C364.8125,566.6563 364.125,566.7813 363.3594,566.7813 C361.3125,566.7813 360.0156,565.6875 360.0156,563.9844 L360.0156,562.8906 C360.0156,561.1094 361.2656,559.7969 363,559.7969 C363.5781,559.7969 364.1875,559.9531 364.6563,560.2031 C365.1406,560.4844 365.3125,560.7031 365.4063,561.1094 C365.4688,561.5156 365.5,561.6406 365.6406,561.7656 C365.7813,561.9063 366.0156,562.0156 366.2344,562.0156 C366.5,562.0156 366.7656,561.875 366.9375,561.6563 C367.0469,561.5 367.0781,561.3125 367.0781,560.8906 L367.0781,559.4688 C367.0781,559.0313 367.0625,558.9063 366.9688,558.75 C366.8125,558.4844 366.5313,558.3438 366.2344,558.3438 C365.9375,558.3438 365.7344,558.4375 365.5156,558.75 L365.3438,558.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="377" y="567.8467">BufferQueueConsumer</text><line style="stroke:#181818;stroke-width:0.5;" x1="349" x2="541" y1="579" y2="579"/><line style="stroke:#181818;stroke-width:0.5;" x1="349" x2="541" y1="587" y2="587"/></g><!--class SafeBnInterface--><g id="elem_SafeBnInterface"><rect codeLine="13" fill="#F1F1F1" height="48" id="SafeBnInterface" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="301" x="294.5" y="331"/><ellipse cx="309.5" cy="347" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M311.8438,342.6719 C310.9063,342.2344 310.3125,342.0938 309.4375,342.0938 C306.8125,342.0938 304.8125,344.1719 304.8125,346.8906 L304.8125,348.0156 C304.8125,350.5938 306.9219,352.4844 309.8125,352.4844 C311.0313,352.4844 312.1875,352.1875 312.9375,351.6406 C313.5156,351.2344 313.8438,350.7813 313.8438,350.3906 C313.8438,349.9375 313.4531,349.5469 312.9844,349.5469 C312.7656,349.5469 312.5625,349.625 312.375,349.8125 C311.9219,350.2969 311.9219,350.2969 311.7344,350.3906 C311.3125,350.6563 310.625,350.7813 309.8594,350.7813 C307.8125,350.7813 306.5156,349.6875 306.5156,347.9844 L306.5156,346.8906 C306.5156,345.1094 307.7656,343.7969 309.5,343.7969 C310.0781,343.7969 310.6875,343.9531 311.1563,344.2031 C311.6406,344.4844 311.8125,344.7031 311.9063,345.1094 C311.9688,345.5156 312,345.6406 312.1406,345.7656 C312.2813,345.9063 312.5156,346.0156 312.7344,346.0156 C313,346.0156 313.2656,345.875 313.4375,345.6563 C313.5469,345.5 313.5781,345.3125 313.5781,344.8906 L313.5781,343.4688 C313.5781,343.0313 313.5625,342.9063 313.4688,342.75 C313.3125,342.4844 313.0313,342.3438 312.7344,342.3438 C312.4375,342.3438 312.2344,342.4375 312.0156,342.75 L311.8438,342.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="323.5" y="351.8467">SafeBnInterface</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="150" x="448.5" y="328"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="148" x="449.5" y="340.1387">IGraphicBufferConsumer</text><line style="stroke:#181818;stroke-width:0.5;" x1="295.5" x2="594.5" y1="363" y2="363"/><line style="stroke:#181818;stroke-width:0.5;" x1="295.5" x2="594.5" y1="371" y2="371"/></g><!--class BnInterface2--><g id="elem_BnInterface2"><rect codeLine="14" fill="#F1F1F1" height="48" id="BnInterface2" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="269" x="310.5" y="223"/><ellipse cx="325.5" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M327.8438,234.6719 C326.9063,234.2344 326.3125,234.0938 325.4375,234.0938 C322.8125,234.0938 320.8125,236.1719 320.8125,238.8906 L320.8125,240.0156 C320.8125,242.5938 322.9219,244.4844 325.8125,244.4844 C327.0313,244.4844 328.1875,244.1875 328.9375,243.6406 C329.5156,243.2344 329.8438,242.7813 329.8438,242.3906 C329.8438,241.9375 329.4531,241.5469 328.9844,241.5469 C328.7656,241.5469 328.5625,241.625 328.375,241.8125 C327.9219,242.2969 327.9219,242.2969 327.7344,242.3906 C327.3125,242.6563 326.625,242.7813 325.8594,242.7813 C323.8125,242.7813 322.5156,241.6875 322.5156,239.9844 L322.5156,238.8906 C322.5156,237.1094 323.7656,235.7969 325.5,235.7969 C326.0781,235.7969 326.6875,235.9531 327.1563,236.2031 C327.6406,236.4844 327.8125,236.7031 327.9063,237.1094 C327.9688,237.5156 328,237.6406 328.1406,237.7656 C328.2813,237.9063 328.5156,238.0156 328.7344,238.0156 C329,238.0156 329.2656,237.875 329.4375,237.6563 C329.5469,237.5 329.5781,237.3125 329.5781,236.8906 L329.5781,235.4688 C329.5781,235.0313 329.5625,234.9063 329.4688,234.75 C329.3125,234.4844 329.0313,234.3438 328.7344,234.3438 C328.4375,234.3438 328.2344,234.4375 328.0156,234.75 L327.8438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="339.5" y="243.8467">BnInterface</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="150" x="432.5" y="220"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="148" x="433.5" y="232.1387">IGraphicBufferConsumer</text><line style="stroke:#181818;stroke-width:0.5;" x1="311.5" x2="578.5" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="311.5" x2="578.5" y1="263" y2="263"/></g><!--class SurfaceControl--><g id="elem_SurfaceControl"><rect fill="#F1F1F1" height="48" id="SurfaceControl" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="140" x="413" y="7"/><ellipse cx="428" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M430.3438,18.6719 C429.4063,18.2344 428.8125,18.0938 427.9375,18.0938 C425.3125,18.0938 423.3125,20.1719 423.3125,22.8906 L423.3125,24.0156 C423.3125,26.5938 425.4219,28.4844 428.3125,28.4844 C429.5313,28.4844 430.6875,28.1875 431.4375,27.6406 C432.0156,27.2344 432.3438,26.7813 432.3438,26.3906 C432.3438,25.9375 431.9531,25.5469 431.4844,25.5469 C431.2656,25.5469 431.0625,25.625 430.875,25.8125 C430.4219,26.2969 430.4219,26.2969 430.2344,26.3906 C429.8125,26.6563 429.125,26.7813 428.3594,26.7813 C426.3125,26.7813 425.0156,25.6875 425.0156,23.9844 L425.0156,22.8906 C425.0156,21.1094 426.2656,19.7969 428,19.7969 C428.5781,19.7969 429.1875,19.9531 429.6563,20.2031 C430.1406,20.4844 430.3125,20.7031 430.4063,21.1094 C430.4688,21.5156 430.5,21.6406 430.6406,21.7656 C430.7813,21.9063 431.0156,22.0156 431.2344,22.0156 C431.5,22.0156 431.7656,21.875 431.9375,21.6563 C432.0469,21.5 432.0781,21.3125 432.0781,20.8906 L432.0781,19.4688 C432.0781,19.0313 432.0625,18.9063 431.9688,18.75 C431.8125,18.4844 431.5313,18.3438 431.2344,18.3438 C430.9375,18.3438 430.7344,18.4375 430.5156,18.75 L430.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="442" y="27.8467">SurfaceControl</text><line style="stroke:#181818;stroke-width:0.5;" x1="414" x2="552" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="414" x2="552" y1="47" y2="47"/></g><!--reverse link BLASTBufferQueue to IGraphicBufferProducer--><g id="link_BLASTBufferQueue_IGraphicBufferProducer"><path codeLine="3" d="M244.1395,61.0394 C213.7165,78.7584 182.21,97.108 151.728,114.862 " fill="none" id="BLASTBufferQueue-backto-IGraphicBufferProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="254.509,55,247.3111,54.5632,244.1395,61.0394,251.3374,61.4762,254.509,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BLASTBufferQueue to IGraphicBufferConsumer--><g id="link_BLASTBufferQueue_IGraphicBufferConsumer"><path codeLine="4" d="M343.8605,61.0394 C374.2835,78.7584 405.79,97.108 436.272,114.862 " fill="none" id="BLASTBufferQueue-backto-IGraphicBufferConsumer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="333.491,55,336.6626,61.4762,343.8605,61.0394,340.6889,54.5632,333.491,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BufferQueueProducer to BBQBufferQueueProducer--><g id="link_BufferQueueProducer_BBQBufferQueueProducer"><path codeLine="5" d="M136.0668,504.98 C135.2338,522.638 134.937,528.941 134.1,546.678 " fill="none" id="BufferQueueProducer-backto-BBQBufferQueueProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="136.915,487,130.0735,504.6973,142.0601,505.2627,136.915,487" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BufferQueueProducer to BufferQueueCore--><g id="link_BufferQueueProducer_BufferQueueCore"><path codeLine="6" d="M187.4376,493.536 C212.1116,508.981 233.761,524.206 259,547 C296.387,580.766 332.786,627.0409 353.208,654.5937 " fill="none" id="BufferQueueProducer-backto-BufferQueueCore" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="177.266,487.169,180.2294,493.743,187.4376,493.536,184.4741,486.962,177.266,487.169" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BnGraphicBufferProducer to BufferQueueProducer--><g id="link_BnGraphicBufferProducer_BufferQueueProducer"><path codeLine="7" d="M138,397 C138,414.658 138,420.941 138,438.678 " fill="none" id="BnGraphicBufferProducer-backto-BufferQueueProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="138,379,132,397,144,397,138,379" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link IGraphicBufferProducer to BnInterface--><g id="link_IGraphicBufferProducer_BnInterface"><path codeLine="9" d="M121.9298,180.4818 C126.2608,198.1398 127.929,204.941 132.28,222.678 " fill="none" id="IGraphicBufferProducer-backto-BnInterface" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="117.642,163,116.1025,181.9111,127.7571,179.0526,117.642,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BBinder to BnInterface--><g id="link_BBinder_BnInterface"><path codeLine="10" d="M243.757,173.2059 C218.015,190.9249 197.409,205.108 171.616,222.862 " fill="none" id="BBinder-backto-BnInterface" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="258.584,163,240.355,168.2635,247.159,178.1482,258.584,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BnInterface to BnGraphicBufferProducer--><g id="link_BnInterface_BnGraphicBufferProducer"><path codeLine="11" d="M138,289 C138,306.658 138,312.941 138,330.678 " fill="none" id="BnInterface-backto-BnGraphicBufferProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="138,271,132,289,144,289,138,271" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BnGraphicBufferConsumer to BufferQueueConsumer--><g id="link_BnGraphicBufferConsumer_BufferQueueConsumer"><path codeLine="12" d="M445,505 C445,522.658 445,528.941 445,546.678 " fill="none" id="BnGraphicBufferConsumer-backto-BufferQueueConsumer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="445,487,439,505,451,505,445,487" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BnInterface2 to SafeBnInterface--><g id="link_BnInterface2_SafeBnInterface"><path codeLine="15" d="M445,289 C445,306.658 445,312.941 445,330.678 " fill="none" id="BnInterface2-backto-SafeBnInterface" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="445,271,439,289,451,289,445,271" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link SafeBnInterface to BnGraphicBufferConsumer--><g id="link_SafeBnInterface_BnGraphicBufferConsumer"><path codeLine="16" d="M445,397 C445,414.658 445,420.941 445,438.678 " fill="none" id="SafeBnInterface-backto-BnGraphicBufferConsumer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="445,379,439,397,451,397,445,379" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link IGraphicBufferConsumer to BnInterface2--><g id="link_IGraphicBufferConsumer_BnInterface2"><path codeLine="17" d="M464.2206,180.2764 C459.0566,197.9344 457.008,204.941 451.82,222.678 " fill="none" id="IGraphicBufferConsumer-backto-BnInterface2" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="469.273,163,458.4618,178.5922,469.9794,181.9605,469.273,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BBinder to BnInterface2--><g id="link_BBinder_BnInterface2"><path codeLine="18" d="M339.9949,173.251 C365.5699,190.97 385.977,205.108 411.602,222.862 " fill="none" id="BBinder-backto-BnInterface2" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="325.199,163,336.5779,178.1829,343.4119,168.319,325.199,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BLASTBufferQueue to SurfaceControl--><g id="link_BLASTBufferQueue_SurfaceControl"><path codeLine="20" d="M390.164,31 C401.767,31 401.37,31 412.973,31 " fill="none" id="BLASTBufferQueue-backto-SurfaceControl" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="378.164,31,384.164,35,390.164,31,384.164,27,378.164,31" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BufferQueueConsumer to BufferQueueCore--><g id="link_BufferQueueConsumer_BufferQueueCore"><path codeLine="21" d="M421.795,604.796 C409.301,622.4544 399.051,636.9408 386.501,654.6784 " fill="none" id="BufferQueueConsumer-backto-BufferQueueCore" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="428.726,595,421.9952,597.5876,421.795,604.796,428.5258,602.2083,428.726,595" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[ZPAn3eCW48Ptde8uDd5nDYR5eI7fK6DVW22a91OQbAqFNrj5r1x63Uw- -xd_3qhtmah61QONoruFnOcJKjYRDOtZmY8L0KgZE_SS078zr_UnLZdX13wbQKpi01jq0-RdSVuUU48ge0VoN_b5lJHM8AB1tIPjG9YthEimqTGdaSFk2aJtbCCy8aJf1co4isz6WjHWQ7ycvZH74pMJ8cx4myL49mVG1BDLDjdIGpRkitaLRUwWqtbnkcTqzMuar0n1tmxNxjST17jhMWHa1lsU3m00]--></g></svg>

<h2 id="附录一：Canvas-Java层与Native源码对应关系"><a href="#附录一：Canvas-Java层与Native源码对应关系" class="headerlink" title="附录一：Canvas Java层与Native源码对应关系"></a>附录一：Canvas Java层与Native源码对应关系</h2><p>本节从源码角度说明了Java层的Canvas与Native层函数之间的对应关系。</p>
<ol>
<li><p><code>android.graphics.Canvas</code>、<code>android.graphics.BaseCanvas</code>、<code>android.graphics.BaseRecordingCanvas</code>这三个类中的jni方法都在<code>frameworks\base\libs\hwui\jni\android_graphics_Canvas.cpp</code>中定义：</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">register_android_graphics_Canvas</span><span class="params">(JNIEnv* env)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    ret |= <span class="built_in">RegisterMethodsOrDie</span>(env, <span class="string">&quot;android/graphics/Canvas&quot;</span>, gMethods, <span class="built_in">NELEM</span>(gMethods));</span><br><span class="line">    ret |= <span class="built_in">RegisterMethodsOrDie</span>(env, <span class="string">&quot;android/graphics/BaseCanvas&quot;</span>, gDrawMethods, <span class="built_in">NELEM</span>(gDrawMethods));</span><br><span class="line">    ret |= <span class="built_in">RegisterMethodsOrDie</span>(env, <span class="string">&quot;android/graphics/BaseRecordingCanvas&quot;</span>, gDrawMethods, <span class="built_in">NELEM</span>(gDrawMethods));</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>android.graphics.RecordingCanvas</code>对应的jni方法在<code>frameworks\base\libs\hwui\jni\android_graphics_DisplayListCanvas.cpp</code>中定义;</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">char</span>* <span class="type">const</span> kClassPathName = <span class="string">&quot;android/graphics/RecordingCanvas&quot;</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">register_android_view_DisplayListCanvas</span><span class="params">(JNIEnv* env)</span> </span>&#123;</span><br><span class="line">    jclass runnableClass = <span class="built_in">FindClassOrDie</span>(env, <span class="string">&quot;java/lang/Runnable&quot;</span>);</span><br><span class="line">    gRunnableMethodId = <span class="built_in">GetMethodIDOrDie</span>(env, runnableClass, <span class="string">&quot;run&quot;</span>, <span class="string">&quot;()V&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RegisterMethodsOrDie</span>(env, kClassPathName, gMethods, <span class="built_in">NELEM</span>(gMethods));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>native Canvas对应的是<code>SkiaRecordingCanvas</code>，创建代码对应：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//android-12.1.0_r27\frameworks\base\graphics\java\android\graphics\RecordingCanvas.java</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">RecordingCanvas</span><span class="params">(<span class="meta">@NonNull</span> RenderNode node, <span class="type">int</span> width, <span class="type">int</span> height)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(nCreateDisplayListCanvas(node.mNativeRenderNode, width, height));</span><br><span class="line">        mDensity = <span class="number">0</span>; <span class="comment">// disable bitmap density scaling</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@CriticalNative</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="type">long</span> <span class="title function_">nCreateDisplayListCanvas</span><span class="params">(<span class="type">long</span> node, <span class="type">int</span> width, <span class="type">int</span> height)</span>;</span><br></pre></td></tr></table></figure>

<p>RecordingCanvas构造函数中调用了native函数nCreateDisplayListCanvas，并最终将结果赋值给了父类<code>Canvas#mNativeCanvasWrapper</code>变量，这个变量存储的就是native层的Canvas对象指针，对应c++层<code>SkiaRecordingCanvas</code>类。<code>nCreateDisplayListCanvas</code>源码实现如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//android\android-12.1.0_r27\frameworks\base\libs\hwui\jni\android_graphics_DisplayListCanvas.cpp</span></span><br><span class="line"><span class="function"><span class="type">static</span> jlong <span class="title">android_view_DisplayListCanvas_createDisplayListCanvas</span><span class="params">(CRITICAL_JNI_PARAMS_COMMA jlong renderNodePtr,</span></span></span><br><span class="line"><span class="params"><span class="function">        jint width, jint height)</span> </span>&#123;</span><br><span class="line">    RenderNode* renderNode = <span class="built_in">reinterpret_cast</span>&lt;RenderNode*&gt;(renderNodePtr);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">reinterpret_cast</span>&lt;jlong&gt;(Canvas::<span class="built_in">create_recording_canvas</span>(width, height, renderNode));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//android\android-12.1.0_r27\frameworks\base\libs\hwui\hwui\Canvas.cpp</span></span><br><span class="line"><span class="function">Canvas* <span class="title">Canvas::create_recording_canvas</span><span class="params">(<span class="type">int</span> width, <span class="type">int</span> height, uirenderer::RenderNode* renderNode)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> uirenderer::skiapipeline::<span class="built_in">SkiaRecordingCanvas</span>(renderNode, width, height);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="示例：drawCircle"><a href="#示例：drawCircle" class="headerlink" title="示例：drawCircle"></a>示例：drawCircle</h3><p><strong>Java层drawCircle</strong></p>
<p>比如我们在View的onDraw函数中画一个圆，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDraw</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">   mPaint.setColor(getResources().getColor(R.color.red));</span><br><span class="line">   canvas.drawCircle(<span class="number">50f</span>, <span class="number">50f</span>, <span class="number">10f</span>, mPaint); <span class="comment">//void drawCircle(float cx, float cy, float radius, @NonNull Paint paint)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>onDraw函数的canvas参数实际上是<code>RecordingCanvas</code>类。因为RecordingCanvas没有重写这个drawCircle函数，所以调用的父类<code>BaseRecordingCanvas</code>的drawCircle函数及其对应的jni函数<code>nDrawCircle</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\base\graphics\java\android\graphics\BaseRecordingCanvas.java</span></span><br><span class="line"><span class="meta">@FastNative</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">nDrawCircle</span><span class="params">(<span class="type">long</span> nativeCanvas, <span class="type">float</span> cx, <span class="type">float</span> cy, <span class="type">float</span> radius, <span class="type">long</span> nativePaint)</span>;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">drawCircle</span><span class="params">(<span class="type">float</span> cx, <span class="type">float</span> cy, <span class="type">float</span> radius, <span class="meta">@NonNull</span> Paint paint)</span> &#123;</span><br><span class="line">    nDrawCircle(mNativeCanvasWrapper, cx, cy, radius, paint.getNativeInstance());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Native层drawCircle</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\base\libs\hwui\jni\android_graphics_Canvas.cpp</span></span><br><span class="line"><span class="function"><span class="type">static</span> Canvas* <span class="title">get_canvas</span><span class="params">(jlong canvasHandle)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">reinterpret_cast</span>&lt;Canvas*&gt;(canvasHandle);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">drawCircle</span><span class="params">(JNIEnv* env, jobject, jlong canvasHandle, jfloat cx, jfloat cy,</span></span></span><br><span class="line"><span class="params"><span class="function">                       jfloat radius, jlong paintHandle)</span> </span>&#123;</span><br><span class="line">    <span class="type">const</span> Paint* paint = <span class="built_in">reinterpret_cast</span>&lt;Paint*&gt;(paintHandle);</span><br><span class="line">    <span class="built_in">get_canvas</span>(canvasHandle)-&gt;<span class="built_in">drawCircle</span>(cx, cy, radius, *paint);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>canvasHandle就是mNativeCanvasWrapper，对应C++的<code>SkiaRecordingCanvas</code>类。SkiaRecordingCanvas中并没有复写drawCirle(其实也有一个drawCircle但是参数签名不匹配)，所以调用父类SkiaCanvas的drawCircle函数。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">SkiaCanvas::drawCircle</span><span class="params">(<span class="type">float</span> x, <span class="type">float</span> y, <span class="type">float</span> radius, <span class="type">const</span> Paint&amp; paint)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">CC_UNLIKELY</span>(radius &lt;= <span class="number">0</span> || paint.<span class="built_in">nothingToDraw</span>())) <span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">applyLooper</span>(&amp;paint, [&amp;](<span class="type">const</span> SkPaint&amp; p) &#123; mCanvas-&gt;<span class="built_in">drawCircle</span>(x, y, radius, p); &#125;); <span class="comment">//调用mCanvas-&gt;drawCircle</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>SkCanvas* SkiaCanvas::mCanvas</code>成员变量是在子类SkiaRecordingCanvas初始化过程中通过调用<code>SkiaCanvas::reset(&amp;mRecorder);</code>来设置，mCanvas是<code>RecordingCanvas</code>。也就是说RecordingCanvas是SkCanvas的子类。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">RecordingCanvas</span> <span class="keyword">final</span> : <span class="keyword">public</span> SkCanvasVirtualEnforcer&lt;SkNoDrawCanvas&gt; &#123; ...... &#125;</span><br></pre></td></tr></table></figure>

<p>SkCanvasVirtualEnforcer是一个模板类，在skia库中定义，RecordingCanvas实际上继承自SkNoDrawCanvas，SkNoDrawCanvas以同样的方式继承自SkCanvas。</p>
<p>RecordingCanvas和SkNoDrawCanvas都没有复写SkCanvas::drawCircle</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//external\skia\include\core\SkScalar.h</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">float</span> SkScalar;</span><br><span class="line"><span class="comment">//external\skia\src\core\SkCanvas.cpp</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SkCanvas::drawCircle</span><span class="params">(SkScalar cx, SkScalar cy, SkScalar radius, <span class="type">const</span> SkPaint&amp; paint)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (radius &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        radius = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SkRect  r;</span><br><span class="line">    r.<span class="built_in">setLTRB</span>(cx - radius, cy - radius, cx + radius, cy + radius);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">drawOval</span>(r, paint);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SkCanvas::drawOval</span><span class="params">(<span class="type">const</span> SkRect&amp; r, <span class="type">const</span> SkPaint&amp; paint)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">TRACE_EVENT0</span>(<span class="string">&quot;skia&quot;</span>, TRACE_FUNC);</span><br><span class="line">    <span class="comment">// To avoid redundant logic in our culling code and various backends, we always sort rects</span></span><br><span class="line">    <span class="comment">// before passing them along.</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">onDrawOval</span>(r.<span class="built_in">makeSorted</span>(), paint); <span class="comment">//最终调用的是子类的onDrawOval函数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\base\libs\hwui\RecordingCanvas.h</span></span><br><span class="line">DisplayListData* RecordingCanvas::fDL;</span><br><span class="line"><span class="comment">//F:\github\android\android-12.1.0_r27\frameworks\base\libs\hwui\RecordingCanvas.cpp</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">RecordingCanvas::onDrawOval</span><span class="params">(<span class="type">const</span> SkRect&amp; oval, <span class="type">const</span> SkPaint&amp; paint)</span> </span>&#123;</span><br><span class="line">    fDL-&gt;<span class="built_in">drawOval</span>(oval, paint);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DisplayListData::drawOval</span><span class="params">(<span class="type">const</span> SkRect&amp; oval, <span class="type">const</span> SkPaint&amp; paint)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">push</span>&lt;DrawOval&gt;(<span class="number">0</span>, oval, paint);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DrawOval</span> <span class="keyword">final</span> : Op &#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> <span class="keyword">auto</span> kType = Type::DrawOval;</span><br><span class="line">    <span class="built_in">DrawOval</span>(<span class="type">const</span> SkRect&amp; oval, <span class="type">const</span> SkPaint&amp; paint) : <span class="built_in">oval</span>(oval), <span class="built_in">paint</span>(paint) &#123;&#125;</span><br><span class="line">    SkRect oval;</span><br><span class="line">    SkPaint paint;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">draw</span><span class="params">(SkCanvas* c, <span class="type">const</span> SkMatrix&amp;)</span> <span class="type">const</span> </span>&#123; c-&gt;<span class="built_in">drawOval</span>(oval, paint); &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="待办"><a href="#待办" class="headerlink" title="待办"></a>待办</h3><ul>
<li><input disabled="" type="checkbox"> <code>View#buildLayer</code>的作用是什么？</li>
<li><input disabled="" type="checkbox"> RenderThread会使用surface.lockHardwareCanvas()吗？</li>
</ul>
<h2 id="SurfaceView"><a href="#SurfaceView" class="headerlink" title="SurfaceView"></a>SurfaceView</h2><p><a href="https://source.android.google.cn/docs/core/graphics/arch-sv-glsv?hl=zh-cn#surfaceview">SurfaceView</a>是一个组件，可用于在 View 层次结构中嵌入其他合成层。使用 SurfaceView 进行渲染时，SurfaceFlinger 会直接将缓冲区合成到屏幕上。如果没有 SurfaceView，您需要将缓冲区合成到屏幕外的 Surface，然后该 Surface 会合成到屏幕上，而使用 SurfaceView 进行渲染可以省去额外的工作。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://ljd1996.github.io/2020/11/09/Android-Surface%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/">Android-Surface原理解析</a><br><a href="https://juejin.cn/post/6897029276752625671"><strong>Android-Surface之双缓冲及SurfaceView解析</strong></a><br><a href="https://blog.csdn.net/xx326664162/article/details/108981453">Android 图形架构 之三—— 创建Layer、Surface、SurfaceControl</a><br><a href="https://zhuanlan.zhihu.com/p/78125846">Android图形显示系统（一）硬件合成HWC2</a><br><a href="https://blog.csdn.net/tyyj90/article/details/107134945">Android 源码 图形系统之请求布局</a><br><a href="https://blog.csdn.net/tyyj90/article/details/107989608">Android 源码 图形系统之 relayoutWindow</a><br><a href="https://www.jianshu.com/p/50a30fa6952e">BlastBufferQueue 机制介绍</a><br><a href="https://blog.csdn.net/suyimin2010/article/details/94970059">onMeasure() 方法多次调用的原因</a></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android WindowManager与Window</title>
    <url>/posts/90f60c72.html</url>
    <content><![CDATA[<p>先看下app端的类图结构：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="502px" preserveAspectRatio="none" style="width:831px;height:502px;background:#FFFFFF;" version="1.1" viewBox="0 0 831 502" width="831px" zoomAndPan="magnify"><defs/><g><!--class WindowManager--><g id="elem_WindowManager"><rect codeLine="2" fill="#F1F1F1" height="48" id="WindowManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="151" x="169" y="115"/><ellipse cx="184" cy="131" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M184.9531,127.7813 L186.6719,127.7813 C187.0625,127.7813 187.25,127.75 187.375,127.6719 C187.6406,127.5156 187.7813,127.2344 187.7813,126.9375 C187.7813,126.6719 187.6719,126.4063 187.4375,126.2344 C187.2656,126.125 187.125,126.0938 186.6719,126.0938 L181.5313,126.0938 C181.0938,126.0938 180.9688,126.1094 180.8125,126.2031 C180.5625,126.3594 180.4063,126.6563 180.4063,126.9375 C180.4063,127.2188 180.5469,127.4688 180.7656,127.6406 C180.9219,127.75 181.1094,127.7813 181.5313,127.7813 L183.25,127.7813 L183.25,134.2969 L181.5313,134.2969 C181.0938,134.2969 180.9688,134.3125 180.8125,134.4219 C180.5625,134.5781 180.4063,134.8594 180.4063,135.1563 C180.4063,135.4063 180.5469,135.6719 180.7656,135.8281 C180.9219,135.9531 181.125,136 181.5313,136 L186.6719,136 C187.4219,136 187.7813,135.7188 187.7813,135.1563 C187.7813,134.875 187.6719,134.625 187.4375,134.4531 C187.2656,134.3281 187.125,134.2969 186.6719,134.2969 L184.9531,134.2969 L184.9531,127.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="119" x="198" y="135.8467">WindowManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="170" x2="319" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="170" x2="319" y1="155" y2="155"/></g><!--class Window--><g id="elem_Window"><rect codeLine="3" fill="#F1F1F1" height="48" id="Window" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="88" x="288.5" y="7"/><ellipse cx="303.5" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M305.5781,24.8125 L305.9688,25.7969 L305.5781,25.7969 C305.125,25.7969 305.0156,25.8125 304.8594,25.9219 C304.6094,26.0781 304.4531,26.3594 304.4531,26.6563 C304.4531,26.9219 304.5938,27.1719 304.8125,27.3281 C304.9531,27.4531 305.1563,27.5 305.5781,27.5 L307.9375,27.5 C308.2969,27.5 308.5156,27.4688 308.6563,27.375 C308.9063,27.2344 309.0625,26.9375 309.0625,26.6563 C309.0625,26.375 308.9219,26.125 308.7031,25.9688 C308.5313,25.8281 308.375,25.7969 307.9063,25.7969 L304.5156,17.5938 L300.8438,17.5938 C300.3906,17.5938 300.2656,17.6094 300.1094,17.7031 C299.8594,17.875 299.7031,18.1563 299.7031,18.4375 C299.7031,18.7188 299.8438,18.9688 300.0625,19.1406 C300.2344,19.25 300.4063,19.2813 300.8438,19.2813 L301.9219,19.2813 L299.2813,25.7969 C298.8594,25.7969 298.7031,25.8125 298.5469,25.9219 C298.2969,26.0781 298.1406,26.3594 298.1406,26.6563 C298.1406,27.2188 298.5156,27.5 299.2656,27.5 L301.5313,27.5 C301.8906,27.5 302.1094,27.4688 302.2344,27.375 C302.5,27.2344 302.6406,26.9375 302.6406,26.6563 C302.6406,26.375 302.5156,26.125 302.2969,25.9531 C302.125,25.8281 301.9844,25.7969 301.5313,25.7969 L301.1406,25.7969 L301.5313,24.8125 L305.5781,24.8125 Z M304.875,23.1094 L302.2031,23.1094 L303.5469,19.8438 L304.875,23.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="56" x="317.5" y="27.8467">Window</text><line style="stroke:#181818;stroke-width:0.5;" x1="289.5" x2="375.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="289.5" x2="375.5" y1="47" y2="47"/></g><!--class Activity--><g id="elem_Activity"><rect fill="#F1F1F1" height="48" id="Activity" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="88" x="165.5" y="7"/><ellipse cx="180.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M182.8438,18.6719 C181.9063,18.2344 181.3125,18.0938 180.4375,18.0938 C177.8125,18.0938 175.8125,20.1719 175.8125,22.8906 L175.8125,24.0156 C175.8125,26.5938 177.9219,28.4844 180.8125,28.4844 C182.0313,28.4844 183.1875,28.1875 183.9375,27.6406 C184.5156,27.2344 184.8438,26.7813 184.8438,26.3906 C184.8438,25.9375 184.4531,25.5469 183.9844,25.5469 C183.7656,25.5469 183.5625,25.625 183.375,25.8125 C182.9219,26.2969 182.9219,26.2969 182.7344,26.3906 C182.3125,26.6563 181.625,26.7813 180.8594,26.7813 C178.8125,26.7813 177.5156,25.6875 177.5156,23.9844 L177.5156,22.8906 C177.5156,21.1094 178.7656,19.7969 180.5,19.7969 C181.0781,19.7969 181.6875,19.9531 182.1563,20.2031 C182.6406,20.4844 182.8125,20.7031 182.9063,21.1094 C182.9688,21.5156 183,21.6406 183.1406,21.7656 C183.2813,21.9063 183.5156,22.0156 183.7344,22.0156 C184,22.0156 184.2656,21.875 184.4375,21.6563 C184.5469,21.5 184.5781,21.3125 184.5781,20.8906 L184.5781,19.4688 C184.5781,19.0313 184.5625,18.9063 184.4688,18.75 C184.3125,18.4844 184.0313,18.3438 183.7344,18.3438 C183.4375,18.3438 183.2344,18.4375 183.0156,18.75 L182.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="194.5" y="27.8467">Activity</text><line style="stroke:#181818;stroke-width:0.5;" x1="166.5" x2="252.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="166.5" x2="252.5" y1="47" y2="47"/></g><!--class PhoneWindow--><g id="elem_PhoneWindow"><rect fill="#F1F1F1" height="48" id="PhoneWindow" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="355" y="115"/><ellipse cx="370" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M372.3438,126.6719 C371.4063,126.2344 370.8125,126.0938 369.9375,126.0938 C367.3125,126.0938 365.3125,128.1719 365.3125,130.8906 L365.3125,132.0156 C365.3125,134.5938 367.4219,136.4844 370.3125,136.4844 C371.5313,136.4844 372.6875,136.1875 373.4375,135.6406 C374.0156,135.2344 374.3438,134.7813 374.3438,134.3906 C374.3438,133.9375 373.9531,133.5469 373.4844,133.5469 C373.2656,133.5469 373.0625,133.625 372.875,133.8125 C372.4219,134.2969 372.4219,134.2969 372.2344,134.3906 C371.8125,134.6563 371.125,134.7813 370.3594,134.7813 C368.3125,134.7813 367.0156,133.6875 367.0156,131.9844 L367.0156,130.8906 C367.0156,129.1094 368.2656,127.7969 370,127.7969 C370.5781,127.7969 371.1875,127.9531 371.6563,128.2031 C372.1406,128.4844 372.3125,128.7031 372.4063,129.1094 C372.4688,129.5156 372.5,129.6406 372.6406,129.7656 C372.7813,129.9063 373.0156,130.0156 373.2344,130.0156 C373.5,130.0156 373.7656,129.875 373.9375,129.6563 C374.0469,129.5 374.0781,129.3125 374.0781,128.8906 L374.0781,127.4688 C374.0781,127.0313 374.0625,126.9063 373.9688,126.75 C373.8125,126.4844 373.5313,126.3438 373.2344,126.3438 C372.9375,126.3438 372.7344,126.4375 372.5156,126.75 L372.3438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="384" y="135.8467">PhoneWindow</text><line style="stroke:#181818;stroke-width:0.5;" x1="356" x2="487" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="356" x2="487" y1="155" y2="155"/></g><!--class WindowManagerImpl--><g id="elem_WindowManagerImpl"><rect fill="#F1F1F1" height="48" id="WindowManagerImpl" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="181" x="154" y="223"/><ellipse cx="169" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M171.3438,234.6719 C170.4063,234.2344 169.8125,234.0938 168.9375,234.0938 C166.3125,234.0938 164.3125,236.1719 164.3125,238.8906 L164.3125,240.0156 C164.3125,242.5938 166.4219,244.4844 169.3125,244.4844 C170.5313,244.4844 171.6875,244.1875 172.4375,243.6406 C173.0156,243.2344 173.3438,242.7813 173.3438,242.3906 C173.3438,241.9375 172.9531,241.5469 172.4844,241.5469 C172.2656,241.5469 172.0625,241.625 171.875,241.8125 C171.4219,242.2969 171.4219,242.2969 171.2344,242.3906 C170.8125,242.6563 170.125,242.7813 169.3594,242.7813 C167.3125,242.7813 166.0156,241.6875 166.0156,239.9844 L166.0156,238.8906 C166.0156,237.1094 167.2656,235.7969 169,235.7969 C169.5781,235.7969 170.1875,235.9531 170.6563,236.2031 C171.1406,236.4844 171.3125,236.7031 171.4063,237.1094 C171.4688,237.5156 171.5,237.6406 171.6406,237.7656 C171.7813,237.9063 172.0156,238.0156 172.2344,238.0156 C172.5,238.0156 172.7656,237.875 172.9375,237.6563 C173.0469,237.5 173.0781,237.3125 173.0781,236.8906 L173.0781,235.4688 C173.0781,235.0313 173.0625,234.9063 172.9688,234.75 C172.8125,234.4844 172.5313,234.3438 172.2344,234.3438 C171.9375,234.3438 171.7344,234.4375 171.5156,234.75 L171.3438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="183" y="243.8467">WindowManagerImpl</text><line style="stroke:#181818;stroke-width:0.5;" x1="155" x2="334" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="155" x2="334" y1="263" y2="263"/></g><!--class WindowManagerGlobal--><g id="elem_WindowManagerGlobal"><rect codeLine="8" fill="#F1F1F1" height="56.2656" id="WindowManagerGlobal" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="195" x="147" y="331"/><ellipse cx="162" cy="351.1328" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M165.7813,347.1016 C165.7813,346.6641 165.7656,346.5234 165.6719,346.3672 C165.5313,346.1328 165.25,345.9766 164.9531,345.9766 C164.6094,345.9766 164.4688,346.1172 164.2969,346.5391 C163.7031,346.1641 162.9531,345.9766 162.0781,345.9766 C159.9688,345.9766 158.3906,347.2734 158.3906,348.9922 C158.3906,349.9609 158.9219,350.8672 159.7813,351.3516 C160.3281,351.6641 160.875,351.8359 161.9844,352.0234 C163.1406,352.2266 163.4063,352.2891 163.7656,352.4766 C164.1406,352.6797 164.375,353.0234 164.375,353.3828 C164.375,354.1172 163.3906,354.6641 162.1406,354.6641 C161.0156,354.6641 159.9375,354.1797 159.7656,353.5703 C159.6406,353.1016 159.6406,353.1016 159.5156,352.9922 C159.3594,352.8359 159.1406,352.7422 158.9063,352.7422 C158.625,352.7422 158.375,352.8672 158.2031,353.0859 C158.0938,353.2578 158.0469,353.4453 158.0469,353.8672 L158.0469,354.9922 C158.0469,355.7578 158.3281,356.1172 158.9219,356.1172 C159.1875,356.1172 159.3125,356.0547 159.5938,355.7109 C160.4375,356.1484 161.3281,356.3672 162.25,356.3672 C164.5781,356.3672 166.1406,355.1797 166.1406,353.4141 C166.1406,352.5234 165.8281,351.8359 165.1406,351.2891 C164.6094,350.8672 163.9688,350.6172 162.4844,350.3516 C161.2188,350.1172 161.125,350.0859 160.7969,349.9141 C160.4219,349.7266 160.1563,349.3359 160.1563,348.9766 C160.1563,348.2422 161.0156,347.6797 162.0781,347.6797 C163.1406,347.6797 163.9531,348.1484 164.1094,348.8203 C164.2188,349.3672 164.2188,349.3672 164.3438,349.5078 C164.4844,349.6328 164.7188,349.7422 164.9531,349.7422 C165.2188,349.7422 165.4688,349.6016 165.6406,349.3828 C165.75,349.2109 165.7813,349.0703 165.7813,348.6016 L165.7813,347.1016 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="71" x="222" y="347.1387">&#171;Singleton&#187;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="176" y="362.9639">WindowManagerGlobal</text><line style="stroke:#181818;stroke-width:0.5;" x1="148" x2="341" y1="371.2656" y2="371.2656"/><line style="stroke:#181818;stroke-width:0.5;" x1="148" x2="341" y1="379.2656" y2="379.2656"/></g><!--class ViewParent--><g id="elem_ViewParent"><rect codeLine="10" fill="#F1F1F1" height="48" id="ViewParent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="112" x="387.5" y="223"/><ellipse cx="402.5" cy="239" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M403.4531,235.7813 L405.1719,235.7813 C405.5625,235.7813 405.75,235.75 405.875,235.6719 C406.1406,235.5156 406.2813,235.2344 406.2813,234.9375 C406.2813,234.6719 406.1719,234.4063 405.9375,234.2344 C405.7656,234.125 405.625,234.0938 405.1719,234.0938 L400.0313,234.0938 C399.5938,234.0938 399.4688,234.1094 399.3125,234.2031 C399.0625,234.3594 398.9063,234.6563 398.9063,234.9375 C398.9063,235.2188 399.0469,235.4688 399.2656,235.6406 C399.4219,235.75 399.6094,235.7813 400.0313,235.7813 L401.75,235.7813 L401.75,242.2969 L400.0313,242.2969 C399.5938,242.2969 399.4688,242.3125 399.3125,242.4219 C399.0625,242.5781 398.9063,242.8594 398.9063,243.1563 C398.9063,243.4063 399.0469,243.6719 399.2656,243.8281 C399.4219,243.9531 399.625,244 400.0313,244 L405.1719,244 C405.9219,244 406.2813,243.7188 406.2813,243.1563 C406.2813,242.875 406.1719,242.625 405.9375,242.4531 C405.7656,242.3281 405.625,242.2969 405.1719,242.2969 L403.4531,242.2969 L403.4531,235.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="80" x="416.5" y="243.8467">ViewParent</text><line style="stroke:#181818;stroke-width:0.5;" x1="388.5" x2="498.5" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="388.5" x2="498.5" y1="263" y2="263"/></g><!--class ViewRootImpl--><g id="elem_ViewRootImpl"><rect fill="#F1F1F1" height="48" id="ViewRootImpl" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="377" y="335"/><ellipse cx="392" cy="351" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M394.3438,346.6719 C393.4063,346.2344 392.8125,346.0938 391.9375,346.0938 C389.3125,346.0938 387.3125,348.1719 387.3125,350.8906 L387.3125,352.0156 C387.3125,354.5938 389.4219,356.4844 392.3125,356.4844 C393.5313,356.4844 394.6875,356.1875 395.4375,355.6406 C396.0156,355.2344 396.3438,354.7813 396.3438,354.3906 C396.3438,353.9375 395.9531,353.5469 395.4844,353.5469 C395.2656,353.5469 395.0625,353.625 394.875,353.8125 C394.4219,354.2969 394.4219,354.2969 394.2344,354.3906 C393.8125,354.6563 393.125,354.7813 392.3594,354.7813 C390.3125,354.7813 389.0156,353.6875 389.0156,351.9844 L389.0156,350.8906 C389.0156,349.1094 390.2656,347.7969 392,347.7969 C392.5781,347.7969 393.1875,347.9531 393.6563,348.2031 C394.1406,348.4844 394.3125,348.7031 394.4063,349.1094 C394.4688,349.5156 394.5,349.6406 394.6406,349.7656 C394.7813,349.9063 395.0156,350.0156 395.2344,350.0156 C395.5,350.0156 395.7656,349.875 395.9375,349.6563 C396.0469,349.5 396.0781,349.3125 396.0781,348.8906 L396.0781,347.4688 C396.0781,347.0313 396.0625,346.9063 395.9688,346.75 C395.8125,346.4844 395.5313,346.3438 395.2344,346.3438 C394.9375,346.3438 394.7344,346.4375 394.5156,346.75 L394.3438,346.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="406" y="355.8467">ViewRootImpl</text><line style="stroke:#181818;stroke-width:0.5;" x1="378" x2="509" y1="367" y2="367"/><line style="stroke:#181818;stroke-width:0.5;" x1="378" x2="509" y1="375" y2="375"/></g><!--class IWindowSession--><g id="elem_IWindowSession"><rect codeLine="12" fill="#F1F1F1" height="48" id="IWindowSession" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="195.5" y="447"/><ellipse cx="210.5" cy="463" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M211.4531,459.7813 L213.1719,459.7813 C213.5625,459.7813 213.75,459.75 213.875,459.6719 C214.1406,459.5156 214.2813,459.2344 214.2813,458.9375 C214.2813,458.6719 214.1719,458.4063 213.9375,458.2344 C213.7656,458.125 213.625,458.0938 213.1719,458.0938 L208.0313,458.0938 C207.5938,458.0938 207.4688,458.1094 207.3125,458.2031 C207.0625,458.3594 206.9063,458.6563 206.9063,458.9375 C206.9063,459.2188 207.0469,459.4688 207.2656,459.6406 C207.4219,459.75 207.6094,459.7813 208.0313,459.7813 L209.75,459.7813 L209.75,466.2969 L208.0313,466.2969 C207.5938,466.2969 207.4688,466.3125 207.3125,466.4219 C207.0625,466.5781 206.9063,466.8594 206.9063,467.1563 C206.9063,467.4063 207.0469,467.6719 207.2656,467.8281 C207.4219,467.9531 207.625,468 208.0313,468 L213.1719,468 C213.9219,468 214.2813,467.7188 214.2813,467.1563 C214.2813,466.875 214.1719,466.625 213.9375,466.4531 C213.7656,466.3281 213.625,466.2969 213.1719,466.2969 L211.4531,466.2969 L211.4531,459.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="114" x="224.5" y="467.8467">IWindowSession</text><line style="stroke:#181818;stroke-width:0.5;" x1="196.5" x2="340.5" y1="479" y2="479"/><line style="stroke:#181818;stroke-width:0.5;" x1="196.5" x2="340.5" y1="487" y2="487"/></g><!--class IWindow_Stub--><g id="elem_IWindow_Stub"><rect codeLine="15" fill="#F1F1F1" height="48" id="IWindow_Stub" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="128" x="684.5" y="335"/><ellipse cx="699.5" cy="351" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M701.5781,352.8125 L701.9688,353.7969 L701.5781,353.7969 C701.125,353.7969 701.0156,353.8125 700.8594,353.9219 C700.6094,354.0781 700.4531,354.3594 700.4531,354.6563 C700.4531,354.9219 700.5938,355.1719 700.8125,355.3281 C700.9531,355.4531 701.1563,355.5 701.5781,355.5 L703.9375,355.5 C704.2969,355.5 704.5156,355.4688 704.6563,355.375 C704.9063,355.2344 705.0625,354.9375 705.0625,354.6563 C705.0625,354.375 704.9219,354.125 704.7031,353.9688 C704.5313,353.8281 704.375,353.7969 703.9063,353.7969 L700.5156,345.5938 L696.8438,345.5938 C696.3906,345.5938 696.2656,345.6094 696.1094,345.7031 C695.8594,345.875 695.7031,346.1563 695.7031,346.4375 C695.7031,346.7188 695.8438,346.9688 696.0625,347.1406 C696.2344,347.25 696.4063,347.2813 696.8438,347.2813 L697.9219,347.2813 L695.2813,353.7969 C694.8594,353.7969 694.7031,353.8125 694.5469,353.9219 C694.2969,354.0781 694.1406,354.3594 694.1406,354.6563 C694.1406,355.2188 694.5156,355.5 695.2656,355.5 L697.5313,355.5 C697.8906,355.5 698.1094,355.4688 698.2344,355.375 C698.5,355.2344 698.6406,354.9375 698.6406,354.6563 C698.6406,354.375 698.5156,354.125 698.2969,353.9531 C698.125,353.8281 697.9844,353.7969 697.5313,353.7969 L697.1406,353.7969 L697.5313,352.8125 L701.5781,352.8125 Z M700.875,351.1094 L698.2031,351.1094 L699.5469,347.8438 L700.875,351.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="96" x="713.5" y="355.8467">IWindow.Stub</text><line style="stroke:#181818;stroke-width:0.5;" x1="685.5" x2="811.5" y1="367" y2="367"/><line style="stroke:#181818;stroke-width:0.5;" x1="685.5" x2="811.5" y1="375" y2="375"/></g><!--class w--><g id="elem_w"><rect codeLine="16" fill="#F1F1F1" height="48" id="w" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="152" x="672.5" y="447"/><ellipse cx="687.5" cy="463" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M689.8438,458.6719 C688.9063,458.2344 688.3125,458.0938 687.4375,458.0938 C684.8125,458.0938 682.8125,460.1719 682.8125,462.8906 L682.8125,464.0156 C682.8125,466.5938 684.9219,468.4844 687.8125,468.4844 C689.0313,468.4844 690.1875,468.1875 690.9375,467.6406 C691.5156,467.2344 691.8438,466.7813 691.8438,466.3906 C691.8438,465.9375 691.4531,465.5469 690.9844,465.5469 C690.7656,465.5469 690.5625,465.625 690.375,465.8125 C689.9219,466.2969 689.9219,466.2969 689.7344,466.3906 C689.3125,466.6563 688.625,466.7813 687.8594,466.7813 C685.8125,466.7813 684.5156,465.6875 684.5156,463.9844 L684.5156,462.8906 C684.5156,461.1094 685.7656,459.7969 687.5,459.7969 C688.0781,459.7969 688.6875,459.9531 689.1563,460.2031 C689.6406,460.4844 689.8125,460.7031 689.9063,461.1094 C689.9688,461.5156 690,461.6406 690.1406,461.7656 C690.2813,461.9063 690.5156,462.0156 690.7344,462.0156 C691,462.0156 691.2656,461.875 691.4375,461.6563 C691.5469,461.5 691.5781,461.3125 691.5781,460.8906 L691.5781,459.4688 C691.5781,459.0313 691.5625,458.9063 691.4688,458.75 C691.3125,458.4844 691.0313,458.3438 690.7344,458.3438 C690.4375,458.3438 690.2344,458.4375 690.0156,458.75 L689.8438,458.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="701.5" y="467.8467">ViewRootImpl.W</text><line style="stroke:#181818;stroke-width:0.5;" x1="673.5" x2="823.5" y1="479" y2="479"/><line style="stroke:#181818;stroke-width:0.5;" x1="673.5" x2="823.5" y1="487" y2="487"/></g><!--class IWindow--><g id="elem_IWindow"><rect codeLine="17" fill="#F1F1F1" height="48" id="IWindow" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="92" x="702.5" y="223"/><ellipse cx="717.5" cy="239" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M718.4531,235.7813 L720.1719,235.7813 C720.5625,235.7813 720.75,235.75 720.875,235.6719 C721.1406,235.5156 721.2813,235.2344 721.2813,234.9375 C721.2813,234.6719 721.1719,234.4063 720.9375,234.2344 C720.7656,234.125 720.625,234.0938 720.1719,234.0938 L715.0313,234.0938 C714.5938,234.0938 714.4688,234.1094 714.3125,234.2031 C714.0625,234.3594 713.9063,234.6563 713.9063,234.9375 C713.9063,235.2188 714.0469,235.4688 714.2656,235.6406 C714.4219,235.75 714.6094,235.7813 715.0313,235.7813 L716.75,235.7813 L716.75,242.2969 L715.0313,242.2969 C714.5938,242.2969 714.4688,242.3125 714.3125,242.4219 C714.0625,242.5781 713.9063,242.8594 713.9063,243.1563 C713.9063,243.4063 714.0469,243.6719 714.2656,243.8281 C714.4219,243.9531 714.625,244 715.0313,244 L720.1719,244 C720.9219,244 721.2813,243.7188 721.2813,243.1563 C721.2813,242.875 721.1719,242.625 720.9375,242.4531 C720.7656,242.3281 720.625,242.2969 720.1719,242.2969 L718.4531,242.2969 L718.4531,235.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="60" x="731.5" y="243.8467">IWindow</text><line style="stroke:#181818;stroke-width:0.5;" x1="703.5" x2="793.5" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="703.5" x2="793.5" y1="263" y2="263"/></g><!--class IWindowManager--><g id="elem_IWindowManager"><rect fill="#F1F1F1" height="48" id="IWindowManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="153" x="7" y="447"/><ellipse cx="22" cy="463" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,458.6719 C23.4063,458.2344 22.8125,458.0938 21.9375,458.0938 C19.3125,458.0938 17.3125,460.1719 17.3125,462.8906 L17.3125,464.0156 C17.3125,466.5938 19.4219,468.4844 22.3125,468.4844 C23.5313,468.4844 24.6875,468.1875 25.4375,467.6406 C26.0156,467.2344 26.3438,466.7813 26.3438,466.3906 C26.3438,465.9375 25.9531,465.5469 25.4844,465.5469 C25.2656,465.5469 25.0625,465.625 24.875,465.8125 C24.4219,466.2969 24.4219,466.2969 24.2344,466.3906 C23.8125,466.6563 23.125,466.7813 22.3594,466.7813 C20.3125,466.7813 19.0156,465.6875 19.0156,463.9844 L19.0156,462.8906 C19.0156,461.1094 20.2656,459.7969 22,459.7969 C22.5781,459.7969 23.1875,459.9531 23.6563,460.2031 C24.1406,460.4844 24.3125,460.7031 24.4063,461.1094 C24.4688,461.5156 24.5,461.6406 24.6406,461.7656 C24.7813,461.9063 25.0156,462.0156 25.2344,462.0156 C25.5,462.0156 25.7656,461.875 25.9375,461.6563 C26.0469,461.5 26.0781,461.3125 26.0781,460.8906 L26.0781,459.4688 C26.0781,459.0313 26.0625,458.9063 25.9688,458.75 C25.8125,458.4844 25.5313,458.3438 25.2344,458.3438 C24.9375,458.3438 24.7344,458.4375 24.5156,458.75 L24.3438,458.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="36" y="467.8467">IWindowManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="159" y1="479" y2="479"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="159" y1="487" y2="487"/></g><!--class Surface--><g id="elem_Surface"><rect fill="#F1F1F1" height="48" id="Surface" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="86" x="376.5" y="447"/><ellipse cx="391.5" cy="463" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M393.8438,458.6719 C392.9063,458.2344 392.3125,458.0938 391.4375,458.0938 C388.8125,458.0938 386.8125,460.1719 386.8125,462.8906 L386.8125,464.0156 C386.8125,466.5938 388.9219,468.4844 391.8125,468.4844 C393.0313,468.4844 394.1875,468.1875 394.9375,467.6406 C395.5156,467.2344 395.8438,466.7813 395.8438,466.3906 C395.8438,465.9375 395.4531,465.5469 394.9844,465.5469 C394.7656,465.5469 394.5625,465.625 394.375,465.8125 C393.9219,466.2969 393.9219,466.2969 393.7344,466.3906 C393.3125,466.6563 392.625,466.7813 391.8594,466.7813 C389.8125,466.7813 388.5156,465.6875 388.5156,463.9844 L388.5156,462.8906 C388.5156,461.1094 389.7656,459.7969 391.5,459.7969 C392.0781,459.7969 392.6875,459.9531 393.1563,460.2031 C393.6406,460.4844 393.8125,460.7031 393.9063,461.1094 C393.9688,461.5156 394,461.6406 394.1406,461.7656 C394.2813,461.9063 394.5156,462.0156 394.7344,462.0156 C395,462.0156 395.2656,461.875 395.4375,461.6563 C395.5469,461.5 395.5781,461.3125 395.5781,460.8906 L395.5781,459.4688 C395.5781,459.0313 395.5625,458.9063 395.4688,458.75 C395.3125,458.4844 395.0313,458.3438 394.7344,458.3438 C394.4375,458.3438 394.2344,458.4375 394.0156,458.75 L393.8438,458.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="405.5" y="467.8467">Surface</text><line style="stroke:#181818;stroke-width:0.5;" x1="377.5" x2="461.5" y1="479" y2="479"/><line style="stroke:#181818;stroke-width:0.5;" x1="377.5" x2="461.5" y1="487" y2="487"/></g><!--class SurfaceControl--><g id="elem_SurfaceControl"><rect fill="#F1F1F1" height="48" id="SurfaceControl" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="140" x="497.5" y="447"/><ellipse cx="512.5" cy="463" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M514.8438,458.6719 C513.9063,458.2344 513.3125,458.0938 512.4375,458.0938 C509.8125,458.0938 507.8125,460.1719 507.8125,462.8906 L507.8125,464.0156 C507.8125,466.5938 509.9219,468.4844 512.8125,468.4844 C514.0313,468.4844 515.1875,468.1875 515.9375,467.6406 C516.5156,467.2344 516.8438,466.7813 516.8438,466.3906 C516.8438,465.9375 516.4531,465.5469 515.9844,465.5469 C515.7656,465.5469 515.5625,465.625 515.375,465.8125 C514.9219,466.2969 514.9219,466.2969 514.7344,466.3906 C514.3125,466.6563 513.625,466.7813 512.8594,466.7813 C510.8125,466.7813 509.5156,465.6875 509.5156,463.9844 L509.5156,462.8906 C509.5156,461.1094 510.7656,459.7969 512.5,459.7969 C513.0781,459.7969 513.6875,459.9531 514.1563,460.2031 C514.6406,460.4844 514.8125,460.7031 514.9063,461.1094 C514.9688,461.5156 515,461.6406 515.1406,461.7656 C515.2813,461.9063 515.5156,462.0156 515.7344,462.0156 C516,462.0156 516.2656,461.875 516.4375,461.6563 C516.5469,461.5 516.5781,461.3125 516.5781,460.8906 L516.5781,459.4688 C516.5781,459.0313 516.5625,458.9063 516.4688,458.75 C516.3125,458.4844 516.0313,458.3438 515.7344,458.3438 C515.4375,458.3438 515.2344,458.4375 515.0156,458.75 L514.8438,458.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="526.5" y="467.8467">SurfaceControl</text><line style="stroke:#181818;stroke-width:0.5;" x1="498.5" x2="636.5" y1="479" y2="479"/><line style="stroke:#181818;stroke-width:0.5;" x1="498.5" x2="636.5" y1="487" y2="487"/></g><!--reverse link Activity to Window--><g id="link_Activity_Window"><path codeLine="4" d="M265.703,31 C277.297,31 276.891,31 288.485,31 " fill="none" id="Activity-backto-Window" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="253.703,31,259.703,35,265.703,31,259.703,27,253.703,31" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Window to PhoneWindow--><g id="link_Window_PhoneWindow"><path codeLine="5" d="M363.3864,68.7853 C378.2124,86.4433 387.026,96.941 401.919,114.678 " fill="none" id="Window-backto-PhoneWindow" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="351.812,55,358.7913,72.6434,367.9815,64.9271,351.812,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Window to WindowManager--><g id="link_Window_WindowManager"><path codeLine="6" d="M305.7401,64.233 C291.0811,81.891 278.587,96.941 263.861,114.678 " fill="none" id="Window-backto-WindowManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="313.405,55,306.4949,57.0615,305.7401,64.233,312.6502,62.1715,313.405,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link WindowManager to WindowManagerImpl--><g id="link_WindowManager_WindowManagerImpl"><path codeLine="7" d="M244.5,181 C244.5,198.658 244.5,204.941 244.5,222.678 " fill="none" id="WindowManager-backto-WindowManagerImpl" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="244.5,163,238.5,181,250.5,181,244.5,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link WindowManagerImpl to WindowManagerGlobal--><g id="link_WindowManagerImpl_WindowManagerGlobal"><path codeLine="9" d="M244.5,283.06 C244.5,300.447 244.5,312.353 244.5,330.696 " fill="none" id="WindowManagerImpl-backto-WindowManagerGlobal" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="244.5,271.06,240.5,277.06,244.5,283.06,248.5,277.06,244.5,271.06" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ViewParent to ViewRootImpl--><g id="link_ViewParent_ViewRootImpl"><path codeLine="11" d="M443.5,289.06 C443.5,307.833 443.5,316.205 443.5,334.971 " fill="none" id="ViewParent-backto-ViewRootImpl" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="443.5,271.06,437.5,289.06,449.5,289.06,443.5,271.06" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ViewRootImpl to IWindowSession--><g id="link_ViewRootImpl_IWindowSession"><path codeLine="13" d="M396.6543,389.446 C366.7873,408.2193 334.992,428.2052 305.137,446.9708 " fill="none" id="ViewRootImpl-backto-IWindowSession" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="406.814,383.06,399.6055,382.8664,396.6543,389.446,403.8628,389.6396,406.814,383.06" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link IWindow to IWindow_Stub--><g id="link_IWindow_IWindow_Stub"><path codeLine="18" d="M748.5,289.06 C748.5,307.833 748.5,316.205 748.5,334.971 " fill="none" id="IWindow-backto-IWindow_Stub" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="748.5,271.06,742.5,289.06,754.5,289.06,748.5,271.06" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link IWindow_Stub to w--><g id="link_IWindow_Stub_w"><path codeLine="19" d="M748.5,401.06 C748.5,419.8333 748.5,428.2052 748.5,446.9708 " fill="none" id="IWindow_Stub-backto-w" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="748.5,383.06,742.5,401.06,754.5,401.06,748.5,383.06" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ViewRootImpl to w--><g id="link_ViewRootImpl_w"><path codeLine="20" d="M518.7263,387.1311 C570.7803,405.9044 632.614,428.2052 684.646,446.9708 " fill="none" id="ViewRootImpl-backto-w" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="507.438,383.06,511.7251,388.8583,518.7263,387.1311,514.4392,381.3328,507.438,383.06" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link WindowManagerGlobal to ViewRootImpl--><g id="link_WindowManagerGlobal_ViewRootImpl"><path codeLine="22" d="M354.057,359 C365.68,359 365.304,359 376.928,359 " fill="none" id="WindowManagerGlobal-backto-ViewRootImpl" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="342.057,359,348.057,363,354.057,359,348.057,355,342.057,359" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="350.1498" y="355.4639">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="361.2092" y="355.2538">n</text></g><!--reverse link WindowManagerGlobal to IWindowManager--><g id="link_WindowManagerGlobal_IWindowManager"><path codeLine="23" d="M194.7938,393.9606 C167.9758,412.2836 142.887,429.4249 117.398,446.8398 " fill="none" id="WindowManagerGlobal-backto-IWindowManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="204.702,387.191,197.4914,387.2731,194.7938,393.9606,202.0044,393.8785,204.702,387.191" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link WindowManagerGlobal to IWindowSession--><g id="link_WindowManagerGlobal_IWindowSession"><path codeLine="24" d="M252.9905,398.9153 C256.9875,417.2383 259.647,429.4249 263.447,446.8398 " fill="none" id="WindowManagerGlobal-backto-IWindowSession" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="250.433,387.191,247.8037,393.9057,252.9905,398.9153,255.6199,392.2006,250.433,387.191" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ViewRootImpl to Surface--><g id="link_ViewRootImpl_Surface"><path codeLine="26" d="M435.911,394.7842 C431.815,413.5575 428.619,428.2052 424.525,446.9708 " fill="none" id="ViewRootImpl-backto-Surface" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="438.469,383.06,433.2819,388.0694,435.911,394.7842,441.0981,389.7748,438.469,383.06" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ViewRootImpl to SurfaceControl--><g id="link_ViewRootImpl_SurfaceControl"><path codeLine="27" d="M478.4712,391.0231 C499.6352,409.7964 520.386,428.2052 541.54,446.9708 " fill="none" id="ViewRootImpl-backto-SurfaceControl" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="469.494,383.06,471.3282,390.0339,478.4712,391.0231,476.6369,384.0492,469.494,383.06" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[TL71QiCm3BtxAuHtw5QMq9rw2OKjq973e2om7eUIUOd1iuljDWpsyLjYPtNgz6JhwUb9Ubh04ngMepoXWUmdIS3z2PUMwK-i6Uov_53T2qfic2PO6Qknjb0BDCOdoMDj-OdRRrWc8-GUfxbhbMHJV9aa5ygJoDLDeEBh84ZOrUFFGbKe8ClWjho_sMxNwzNg3aek6y6iah3Pa4WdRkzKWhNVEEjsg9cqvFnrO_Nngr9scEXSKJZ1aXd3bIGXQ-XtaLz0nCXRfPbgD1xQq6hgAzFI7YiAVvVom7iFU4zeg9Rk1reNJqUA_yEawLGd3DoYNRn4HyYS-_I1zhUdaaxTcUFsCcFdsUFFy4RJue7Aux3VrKIkfDLA_080]--></g></svg>

<h2 id="IWindowManager"><a href="#IWindowManager" class="headerlink" title="IWindowManager"></a>IWindowManager</h2><p>IWindowManager在<code>IWindowManager.aidl</code>文件中定义，是<code>WindowManagerService</code>的对外接口。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="278px" preserveAspectRatio="none" style="width:464px;height:278px;background:#FFFFFF;" version="1.1" viewBox="0 0 464 278" width="464px" zoomAndPan="magnify"><defs/><g><!--class IWindowManager--><g id="elem_IWindowManager"><rect codeLine="1" fill="#F1F1F1" height="48" id="IWindowManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="155" x="302.5" y="7"/><ellipse cx="317.5" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M318.4531,19.7813 L320.1719,19.7813 C320.5625,19.7813 320.75,19.75 320.875,19.6719 C321.1406,19.5156 321.2813,19.2344 321.2813,18.9375 C321.2813,18.6719 321.1719,18.4063 320.9375,18.2344 C320.7656,18.125 320.625,18.0938 320.1719,18.0938 L315.0313,18.0938 C314.5938,18.0938 314.4688,18.1094 314.3125,18.2031 C314.0625,18.3594 313.9063,18.6563 313.9063,18.9375 C313.9063,19.2188 314.0469,19.4688 314.2656,19.6406 C314.4219,19.75 314.6094,19.7813 315.0313,19.7813 L316.75,19.7813 L316.75,26.2969 L315.0313,26.2969 C314.5938,26.2969 314.4688,26.3125 314.3125,26.4219 C314.0625,26.5781 313.9063,26.8594 313.9063,27.1563 C313.9063,27.4063 314.0469,27.6719 314.2656,27.8281 C314.4219,27.9531 314.625,28 315.0313,28 L320.1719,28 C320.9219,28 321.2813,27.7188 321.2813,27.1563 C321.2813,26.875 321.1719,26.625 320.9375,26.4531 C320.7656,26.3281 320.625,26.2969 320.1719,26.2969 L318.4531,26.2969 L318.4531,19.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="123" x="331.5" y="27.8467">IWindowManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="303.5" x2="456.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="303.5" x2="456.5" y1="47" y2="47"/></g><!--class stub--><g id="elem_stub"><rect codeLine="2" fill="#F1F1F1" height="48" id="stub" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="191" x="245.5" y="115"/><ellipse cx="260.5" cy="131" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M262.5781,132.8125 L262.9688,133.7969 L262.5781,133.7969 C262.125,133.7969 262.0156,133.8125 261.8594,133.9219 C261.6094,134.0781 261.4531,134.3594 261.4531,134.6563 C261.4531,134.9219 261.5938,135.1719 261.8125,135.3281 C261.9531,135.4531 262.1563,135.5 262.5781,135.5 L264.9375,135.5 C265.2969,135.5 265.5156,135.4688 265.6563,135.375 C265.9063,135.2344 266.0625,134.9375 266.0625,134.6563 C266.0625,134.375 265.9219,134.125 265.7031,133.9688 C265.5313,133.8281 265.375,133.7969 264.9063,133.7969 L261.5156,125.5938 L257.8438,125.5938 C257.3906,125.5938 257.2656,125.6094 257.1094,125.7031 C256.8594,125.875 256.7031,126.1563 256.7031,126.4375 C256.7031,126.7188 256.8438,126.9688 257.0625,127.1406 C257.2344,127.25 257.4063,127.2813 257.8438,127.2813 L258.9219,127.2813 L256.2813,133.7969 C255.8594,133.7969 255.7031,133.8125 255.5469,133.9219 C255.2969,134.0781 255.1406,134.3594 255.1406,134.6563 C255.1406,135.2188 255.5156,135.5 256.2656,135.5 L258.5313,135.5 C258.8906,135.5 259.1094,135.4688 259.2344,135.375 C259.5,135.2344 259.6406,134.9375 259.6406,134.6563 C259.6406,134.375 259.5156,134.125 259.2969,133.9531 C259.125,133.8281 258.9844,133.7969 258.5313,133.7969 L258.1406,133.7969 L258.5313,132.8125 L262.5781,132.8125 Z M261.875,131.1094 L259.2031,131.1094 L260.5469,127.8438 L261.875,131.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="159" x="274.5" y="135.8467">IWindowManager.Stub</text><line style="stroke:#181818;stroke-width:0.5;" x1="246.5" x2="435.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="246.5" x2="435.5" y1="155" y2="155"/></g><!--class Binder--><g id="elem_Binder"><rect fill="#F1F1F1" height="48" id="Binder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="79" x="188.5" y="7"/><ellipse cx="203.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M205.8438,18.6719 C204.9063,18.2344 204.3125,18.0938 203.4375,18.0938 C200.8125,18.0938 198.8125,20.1719 198.8125,22.8906 L198.8125,24.0156 C198.8125,26.5938 200.9219,28.4844 203.8125,28.4844 C205.0313,28.4844 206.1875,28.1875 206.9375,27.6406 C207.5156,27.2344 207.8438,26.7813 207.8438,26.3906 C207.8438,25.9375 207.4531,25.5469 206.9844,25.5469 C206.7656,25.5469 206.5625,25.625 206.375,25.8125 C205.9219,26.2969 205.9219,26.2969 205.7344,26.3906 C205.3125,26.6563 204.625,26.7813 203.8594,26.7813 C201.8125,26.7813 200.5156,25.6875 200.5156,23.9844 L200.5156,22.8906 C200.5156,21.1094 201.7656,19.7969 203.5,19.7969 C204.0781,19.7969 204.6875,19.9531 205.1563,20.2031 C205.6406,20.4844 205.8125,20.7031 205.9063,21.1094 C205.9688,21.5156 206,21.6406 206.1406,21.7656 C206.2813,21.9063 206.5156,22.0156 206.7344,22.0156 C207,22.0156 207.2656,21.875 207.4375,21.6563 C207.5469,21.5 207.5781,21.3125 207.5781,20.8906 L207.5781,19.4688 C207.5781,19.0313 207.5625,18.9063 207.4688,18.75 C207.3125,18.4844 207.0313,18.3438 206.7344,18.3438 C206.4375,18.3438 206.2344,18.4375 206.0156,18.75 L205.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="217.5" y="27.8467">Binder</text><line style="stroke:#181818;stroke-width:0.5;" x1="189.5" x2="266.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="189.5" x2="266.5" y1="47" y2="47"/></g><!--class WindowManagerService--><g id="elem_WindowManagerService"><rect fill="#F1F1F1" height="48" id="WindowManagerService" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="202" x="229" y="223"/><ellipse cx="244" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M246.3438,234.6719 C245.4063,234.2344 244.8125,234.0938 243.9375,234.0938 C241.3125,234.0938 239.3125,236.1719 239.3125,238.8906 L239.3125,240.0156 C239.3125,242.5938 241.4219,244.4844 244.3125,244.4844 C245.5313,244.4844 246.6875,244.1875 247.4375,243.6406 C248.0156,243.2344 248.3438,242.7813 248.3438,242.3906 C248.3438,241.9375 247.9531,241.5469 247.4844,241.5469 C247.2656,241.5469 247.0625,241.625 246.875,241.8125 C246.4219,242.2969 246.4219,242.2969 246.2344,242.3906 C245.8125,242.6563 245.125,242.7813 244.3594,242.7813 C242.3125,242.7813 241.0156,241.6875 241.0156,239.9844 L241.0156,238.8906 C241.0156,237.1094 242.2656,235.7969 244,235.7969 C244.5781,235.7969 245.1875,235.9531 245.6563,236.2031 C246.1406,236.4844 246.3125,236.7031 246.4063,237.1094 C246.4688,237.5156 246.5,237.6406 246.6406,237.7656 C246.7813,237.9063 247.0156,238.0156 247.2344,238.0156 C247.5,238.0156 247.7656,237.875 247.9375,237.6563 C248.0469,237.5 248.0781,237.3125 248.0781,236.8906 L248.0781,235.4688 C248.0781,235.0313 248.0625,234.9063 247.9688,234.75 C247.8125,234.4844 247.5313,234.3438 247.2344,234.3438 C246.9375,234.3438 246.7344,234.4375 246.5156,234.75 L246.3438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="258" y="243.8467">WindowManagerService</text><line style="stroke:#181818;stroke-width:0.5;" x1="230" x2="430" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="230" x2="430" y1="263" y2="263"/></g><!--class IWindowSession--><g id="elem_IWindowSession"><rect codeLine="7" fill="#F1F1F1" height="48" id="IWindowSession" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="7" y="7"/><ellipse cx="22" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M22.9531,19.7813 L24.6719,19.7813 C25.0625,19.7813 25.25,19.75 25.375,19.6719 C25.6406,19.5156 25.7813,19.2344 25.7813,18.9375 C25.7813,18.6719 25.6719,18.4063 25.4375,18.2344 C25.2656,18.125 25.125,18.0938 24.6719,18.0938 L19.5313,18.0938 C19.0938,18.0938 18.9688,18.1094 18.8125,18.2031 C18.5625,18.3594 18.4063,18.6563 18.4063,18.9375 C18.4063,19.2188 18.5469,19.4688 18.7656,19.6406 C18.9219,19.75 19.1094,19.7813 19.5313,19.7813 L21.25,19.7813 L21.25,26.2969 L19.5313,26.2969 C19.0938,26.2969 18.9688,26.3125 18.8125,26.4219 C18.5625,26.5781 18.4063,26.8594 18.4063,27.1563 C18.4063,27.4063 18.5469,27.6719 18.7656,27.8281 C18.9219,27.9531 19.125,28 19.5313,28 L24.6719,28 C25.4219,28 25.7813,27.7188 25.7813,27.1563 C25.7813,26.875 25.6719,26.625 25.4375,26.4531 C25.2656,26.3281 25.125,26.2969 24.6719,26.2969 L22.9531,26.2969 L22.9531,19.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="114" x="36" y="27.8467">IWindowSession</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="152" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="152" y1="47" y2="47"/></g><!--class SessionStub--><g id="elem_SessionStub"><rect codeLine="8" fill="#F1F1F1" height="48" id="SessionStub" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="182" x="28" y="115"/><ellipse cx="43" cy="131" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M45.0781,132.8125 L45.4688,133.7969 L45.0781,133.7969 C44.625,133.7969 44.5156,133.8125 44.3594,133.9219 C44.1094,134.0781 43.9531,134.3594 43.9531,134.6563 C43.9531,134.9219 44.0938,135.1719 44.3125,135.3281 C44.4531,135.4531 44.6563,135.5 45.0781,135.5 L47.4375,135.5 C47.7969,135.5 48.0156,135.4688 48.1563,135.375 C48.4063,135.2344 48.5625,134.9375 48.5625,134.6563 C48.5625,134.375 48.4219,134.125 48.2031,133.9688 C48.0313,133.8281 47.875,133.7969 47.4063,133.7969 L44.0156,125.5938 L40.3438,125.5938 C39.8906,125.5938 39.7656,125.6094 39.6094,125.7031 C39.3594,125.875 39.2031,126.1563 39.2031,126.4375 C39.2031,126.7188 39.3438,126.9688 39.5625,127.1406 C39.7344,127.25 39.9063,127.2813 40.3438,127.2813 L41.4219,127.2813 L38.7813,133.7969 C38.3594,133.7969 38.2031,133.8125 38.0469,133.9219 C37.7969,134.0781 37.6406,134.3594 37.6406,134.6563 C37.6406,135.2188 38.0156,135.5 38.7656,135.5 L41.0313,135.5 C41.3906,135.5 41.6094,135.4688 41.7344,135.375 C42,135.2344 42.1406,134.9375 42.1406,134.6563 C42.1406,134.375 42.0156,134.125 41.7969,133.9531 C41.625,133.8281 41.4844,133.7969 41.0313,133.7969 L40.6406,133.7969 L41.0313,132.8125 L45.0781,132.8125 Z M44.375,131.1094 L41.7031,131.1094 L43.0469,127.8438 L44.375,131.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="150" x="57" y="135.8467">IWindowSession.Stub</text><line style="stroke:#181818;stroke-width:0.5;" x1="29" x2="209" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="29" x2="209" y1="155" y2="155"/></g><!--class Session--><g id="elem_Session"><rect fill="#F1F1F1" height="48" id="Session" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="86" x="97" y="223"/><ellipse cx="112" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M114.3438,234.6719 C113.4063,234.2344 112.8125,234.0938 111.9375,234.0938 C109.3125,234.0938 107.3125,236.1719 107.3125,238.8906 L107.3125,240.0156 C107.3125,242.5938 109.4219,244.4844 112.3125,244.4844 C113.5313,244.4844 114.6875,244.1875 115.4375,243.6406 C116.0156,243.2344 116.3438,242.7813 116.3438,242.3906 C116.3438,241.9375 115.9531,241.5469 115.4844,241.5469 C115.2656,241.5469 115.0625,241.625 114.875,241.8125 C114.4219,242.2969 114.4219,242.2969 114.2344,242.3906 C113.8125,242.6563 113.125,242.7813 112.3594,242.7813 C110.3125,242.7813 109.0156,241.6875 109.0156,239.9844 L109.0156,238.8906 C109.0156,237.1094 110.2656,235.7969 112,235.7969 C112.5781,235.7969 113.1875,235.9531 113.6563,236.2031 C114.1406,236.4844 114.3125,236.7031 114.4063,237.1094 C114.4688,237.5156 114.5,237.6406 114.6406,237.7656 C114.7813,237.9063 115.0156,238.0156 115.2344,238.0156 C115.5,238.0156 115.7656,237.875 115.9375,237.6563 C116.0469,237.5 116.0781,237.3125 116.0781,236.8906 L116.0781,235.4688 C116.0781,235.0313 116.0625,234.9063 115.9688,234.75 C115.8125,234.4844 115.5313,234.3438 115.2344,234.3438 C114.9375,234.3438 114.7344,234.4375 114.5156,234.75 L114.3438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="126" y="243.8467">Session</text><line style="stroke:#181818;stroke-width:0.5;" x1="98" x2="182" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="98" x2="182" y1="263" y2="263"/></g><!--reverse link IWindowManager to stub--><g id="link_IWindowManager_stub"><path codeLine="3" d="M365.3225,71.8928 C358.8255,89.5508 356.107,96.941 349.581,114.678 " fill="none" id="IWindowManager-backto-stub" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="371.538,55,359.6916,69.821,370.9535,73.9647,371.538,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Binder to stub--><g id="link_Binder_stub"><path codeLine="4" d="M265.647,67.3148 C284.471,84.9728 297.229,96.941 316.138,114.678 " fill="none" id="Binder-backto-stub" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="252.519,55,261.5421,71.6908,269.752,62.9388,252.519,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link stub to WindowManagerService--><g id="link_stub_WindowManagerService"><path codeLine="5" d="M336.7555,180.9039 C334.9235,198.5623 334.261,204.9408 332.42,222.6784 " fill="none" id="stub-backto-WindowManagerService" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="338.613,163,330.7876,180.2847,342.7235,181.5231,338.613,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link SessionStub to Session--><g id="link_SessionStub_Session"><path codeLine="9" d="M127.0547,180.6569 C130.5527,198.3153 131.866,204.9408 135.38,222.6784 " fill="none" id="SessionStub-backto-Session" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="123.557,163,121.1691,181.8228,132.9403,179.491,123.557,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Binder to SessionStub--><g id="link_Binder_SessionStub"><path codeLine="10" d="M191.4447,67.549 C173.2867,85.207 161.221,96.941 142.982,114.678 " fill="none" id="Binder-backto-SessionStub" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="204.349,55,187.2616,63.2476,195.6277,71.8505,204.349,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Session to WindowManagerService--><g id="link_Session_WindowManagerService"><path codeLine="11" d="M195.047,247 C210.354,247 213.662,247 228.97,247 " fill="none" id="Session-backto-WindowManagerService" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="183.047,247,189.047,251,195.047,247,189.047,243,183.047,247" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link IWindowSession to SessionStub--><g id="link_IWindowSession_SessionStub"><path codeLine="12" d="M94.6777,71.8929 C101.1745,89.5509 103.8933,96.941 110.419,114.678 " fill="none" id="IWindowSession-backto-SessionStub" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="88.4624,55,89.0467,73.9647,100.3087,69.8211,88.4624,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[oymhIIrAIqnELV0CpynBoI_tJSnBJ4yjuafCAYufIamkKL12bT0BBYbDKb98B5Oe1ZAuK2KLR6fqTI4IJa1n504G0U6YQ0bEBIhBJ4xbuif4TqbmQd5nPduUfakW4WYNG0L0V2uaDiGsc3783iAYGK4BXyDGBSNG3m00]--></g></svg>

<h2 id="IWindowSession"><a href="#IWindowSession" class="headerlink" title="IWindowSession"></a>IWindowSession</h2><p>每个app都会有一个Window Session用于与window manager进行交互。<code>IWindowSession</code>是通过aidl定义的binder接口，app通过IWindowSession与WMS进行交互。</p>
<pre class="mermaid">

zenuml
new ViewRootImpl() {
    WindowManagerGlobal.getWindowSession {
        &#x2F;&#x2F;sWindowSession是WindowManagerGlobal的静态类变量
        &#x2F;&#x2F;如果sWindowSession为空就通过WMS.openSession来打开一个
        if (sWindowSession &#x3D;&#x3D; null) {
            WindowManagerService.openSession {
                new Session()
            }
        }
        return sWindowSession
    }
}
</pre>

<h2 id="addWindow把IWindow加入到WMS"><a href="#addWindow把IWindow加入到WMS" class="headerlink" title="addWindow把IWindow加入到WMS"></a>addWindow把<code>IWindow</code>加入到WMS</h2><p>IWindow是一个binder接口，这个binder的service端是app，实现类是<code>ViewRootImpl.W</code>，client端是WMS。WMS会通过IWindow这个binder接口来通知app window相关的事件。先看下addWindow的调用时序：</p>
<pre class="mermaid">

zenuml
group App {
    &lt;&lt;App&gt;&gt; WindowManagerGlobal
    &lt;&lt;App&gt;&gt; ViewRootImpl
}
group WMS {
    &lt;&lt;WMS&gt;&gt; WindowManagerService
    &lt;&lt;WMS&gt;&gt; Session
}
WindowManagerGlobal.addView {
    new ViewRootImpl() {
        &quot;new Surface()&quot;
        &quot;new SurfaceControl()&quot;
        WindowManagerGlobal.getWindowSession {
            WindowManagerService.openSession {
                new Session()
            }
        }
        &quot;new W()&quot;
    }
    ViewRootImpl.setView {
        requestLayout
        Session.addToDisplayAsUser {
            WindowManagerService.addWindow
        }
    }
}
</pre>

<p>addToDisplayAsUser函数的第一个参数是<code>IWindow window</code>，它的实现类就是<code>ViewRootImpl.W</code>类型，W接收到的WMS的事件大部分都交给了<code>ViewRootImpl</code>来处理。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="497px" preserveAspectRatio="none" style="width:1116px;height:497px;background:#FFFFFF;" version="1.1" viewBox="0 0 1116 497" width="1116px" zoomAndPan="magnify"><defs/><g><!--class WindowContainer--><g id="elem_WindowContainer"><rect codeLine="1" fill="#F1F1F1" height="48" id="WindowContainer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="233" x="7" y="10"/><ellipse cx="22" cy="26" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,21.6719 C23.4063,21.2344 22.8125,21.0938 21.9375,21.0938 C19.3125,21.0938 17.3125,23.1719 17.3125,25.8906 L17.3125,27.0156 C17.3125,29.5938 19.4219,31.4844 22.3125,31.4844 C23.5313,31.4844 24.6875,31.1875 25.4375,30.6406 C26.0156,30.2344 26.3438,29.7813 26.3438,29.3906 C26.3438,28.9375 25.9531,28.5469 25.4844,28.5469 C25.2656,28.5469 25.0625,28.625 24.875,28.8125 C24.4219,29.2969 24.4219,29.2969 24.2344,29.3906 C23.8125,29.6563 23.125,29.7813 22.3594,29.7813 C20.3125,29.7813 19.0156,28.6875 19.0156,26.9844 L19.0156,25.8906 C19.0156,24.1094 20.2656,22.7969 22,22.7969 C22.5781,22.7969 23.1875,22.9531 23.6563,23.2031 C24.1406,23.4844 24.3125,23.7031 24.4063,24.1094 C24.4688,24.5156 24.5,24.6406 24.6406,24.7656 C24.7813,24.9063 25.0156,25.0156 25.2344,25.0156 C25.5,25.0156 25.7656,24.875 25.9375,24.6563 C26.0469,24.5 26.0781,24.3125 26.0781,23.8906 L26.0781,22.4688 C26.0781,22.0313 26.0625,21.9063 25.9688,21.75 C25.8125,21.4844 25.5313,21.3438 25.2344,21.3438 C24.9375,21.3438 24.7344,21.4375 24.5156,21.75 L24.3438,21.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="36" y="30.8467">WindowContainer</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="72" x="171" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="70" x="172" y="19.1387">DisplayArea</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="239" y1="42" y2="42"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="239" y1="50" y2="50"/></g><!--class DisplayArea--><g id="elem_DisplayArea"><rect codeLine="2" fill="#F1F1F1" height="48" id="DisplayArea" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="191" x="28" y="118"/><ellipse cx="43" cy="134" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M45.3438,129.6719 C44.4063,129.2344 43.8125,129.0938 42.9375,129.0938 C40.3125,129.0938 38.3125,131.1719 38.3125,133.8906 L38.3125,135.0156 C38.3125,137.5938 40.4219,139.4844 43.3125,139.4844 C44.5313,139.4844 45.6875,139.1875 46.4375,138.6406 C47.0156,138.2344 47.3438,137.7813 47.3438,137.3906 C47.3438,136.9375 46.9531,136.5469 46.4844,136.5469 C46.2656,136.5469 46.0625,136.625 45.875,136.8125 C45.4219,137.2969 45.4219,137.2969 45.2344,137.3906 C44.8125,137.6563 44.125,137.7813 43.3594,137.7813 C41.3125,137.7813 40.0156,136.6875 40.0156,134.9844 L40.0156,133.8906 C40.0156,132.1094 41.2656,130.7969 43,130.7969 C43.5781,130.7969 44.1875,130.9531 44.6563,131.2031 C45.1406,131.4844 45.3125,131.7031 45.4063,132.1094 C45.4688,132.5156 45.5,132.6406 45.6406,132.7656 C45.7813,132.9063 46.0156,133.0156 46.2344,133.0156 C46.5,133.0156 46.7656,132.875 46.9375,132.6563 C47.0469,132.5 47.0781,132.3125 47.0781,131.8906 L47.0781,130.4688 C47.0781,130.0313 47.0625,129.9063 46.9688,129.75 C46.8125,129.4844 46.5313,129.3438 46.2344,129.3438 C45.9375,129.3438 45.7344,129.4375 45.5156,129.75 L45.3438,129.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="57" y="138.8467">DisplayArea</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="72" x="150" y="115"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="70" x="151" y="127.1387">DisplayArea</text><line style="stroke:#181818;stroke-width:0.5;" x1="29" x2="218" y1="150" y2="150"/><line style="stroke:#181818;stroke-width:0.5;" x1="29" x2="218" y1="158" y2="158"/></g><!--class Dimmable--><g id="elem_Dimmable"><rect codeLine="4" fill="#F1F1F1" height="48" id="Dimmable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="196" x="34.5" y="226"/><ellipse cx="49.5" cy="242" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M51.8438,237.6719 C50.9063,237.2344 50.3125,237.0938 49.4375,237.0938 C46.8125,237.0938 44.8125,239.1719 44.8125,241.8906 L44.8125,243.0156 C44.8125,245.5938 46.9219,247.4844 49.8125,247.4844 C51.0313,247.4844 52.1875,247.1875 52.9375,246.6406 C53.5156,246.2344 53.8438,245.7813 53.8438,245.3906 C53.8438,244.9375 53.4531,244.5469 52.9844,244.5469 C52.7656,244.5469 52.5625,244.625 52.375,244.8125 C51.9219,245.2969 51.9219,245.2969 51.7344,245.3906 C51.3125,245.6563 50.625,245.7813 49.8594,245.7813 C47.8125,245.7813 46.5156,244.6875 46.5156,242.9844 L46.5156,241.8906 C46.5156,240.1094 47.7656,238.7969 49.5,238.7969 C50.0781,238.7969 50.6875,238.9531 51.1563,239.2031 C51.6406,239.4844 51.8125,239.7031 51.9063,240.1094 C51.9688,240.5156 52,240.6406 52.1406,240.7656 C52.2813,240.9063 52.5156,241.0156 52.7344,241.0156 C53,241.0156 53.2656,240.875 53.4375,240.6563 C53.5469,240.5 53.5781,240.3125 53.5781,239.8906 L53.5781,238.4688 C53.5781,238.0313 53.5625,237.9063 53.4688,237.75 C53.3125,237.4844 53.0313,237.3438 52.7344,237.3438 C52.4375,237.3438 52.2344,237.4375 52.0156,237.75 L51.8438,237.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="63.5" y="246.8467">DisplayArea.Dimmable</text><line style="stroke:#181818;stroke-width:0.5;" x1="35.5" x2="229.5" y1="258" y2="258"/><line style="stroke:#181818;stroke-width:0.5;" x1="35.5" x2="229.5" y1="266" y2="266"/></g><!--class RootDisplayArea--><g id="elem_RootDisplayArea"><rect fill="#F1F1F1" height="48" id="RootDisplayArea" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="152" x="87.5" y="334"/><ellipse cx="102.5" cy="350" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M104.8438,345.6719 C103.9063,345.2344 103.3125,345.0938 102.4375,345.0938 C99.8125,345.0938 97.8125,347.1719 97.8125,349.8906 L97.8125,351.0156 C97.8125,353.5938 99.9219,355.4844 102.8125,355.4844 C104.0313,355.4844 105.1875,355.1875 105.9375,354.6406 C106.5156,354.2344 106.8438,353.7813 106.8438,353.3906 C106.8438,352.9375 106.4531,352.5469 105.9844,352.5469 C105.7656,352.5469 105.5625,352.625 105.375,352.8125 C104.9219,353.2969 104.9219,353.2969 104.7344,353.3906 C104.3125,353.6563 103.625,353.7813 102.8594,353.7813 C100.8125,353.7813 99.5156,352.6875 99.5156,350.9844 L99.5156,349.8906 C99.5156,348.1094 100.7656,346.7969 102.5,346.7969 C103.0781,346.7969 103.6875,346.9531 104.1563,347.2031 C104.6406,347.4844 104.8125,347.7031 104.9063,348.1094 C104.9688,348.5156 105,348.6406 105.1406,348.7656 C105.2813,348.9063 105.5156,349.0156 105.7344,349.0156 C106,349.0156 106.2656,348.875 106.4375,348.6563 C106.5469,348.5 106.5781,348.3125 106.5781,347.8906 L106.5781,346.4688 C106.5781,346.0313 106.5625,345.9063 106.4688,345.75 C106.3125,345.4844 106.0313,345.3438 105.7344,345.3438 C105.4375,345.3438 105.2344,345.4375 105.0156,345.75 L104.8438,345.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="116.5" y="354.8467">RootDisplayArea</text><line style="stroke:#181818;stroke-width:0.5;" x1="88.5" x2="238.5" y1="366" y2="366"/><line style="stroke:#181818;stroke-width:0.5;" x1="88.5" x2="238.5" y1="374" y2="374"/></g><!--class DisplayContent--><g id="elem_DisplayContent"><rect fill="#F1F1F1" height="48" id="DisplayContent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="144" x="203.5" y="442"/><ellipse cx="218.5" cy="458" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M220.8438,453.6719 C219.9063,453.2344 219.3125,453.0938 218.4375,453.0938 C215.8125,453.0938 213.8125,455.1719 213.8125,457.8906 L213.8125,459.0156 C213.8125,461.5938 215.9219,463.4844 218.8125,463.4844 C220.0313,463.4844 221.1875,463.1875 221.9375,462.6406 C222.5156,462.2344 222.8438,461.7813 222.8438,461.3906 C222.8438,460.9375 222.4531,460.5469 221.9844,460.5469 C221.7656,460.5469 221.5625,460.625 221.375,460.8125 C220.9219,461.2969 220.9219,461.2969 220.7344,461.3906 C220.3125,461.6563 219.625,461.7813 218.8594,461.7813 C216.8125,461.7813 215.5156,460.6875 215.5156,458.9844 L215.5156,457.8906 C215.5156,456.1094 216.7656,454.7969 218.5,454.7969 C219.0781,454.7969 219.6875,454.9531 220.1563,455.2031 C220.6406,455.4844 220.8125,455.7031 220.9063,456.1094 C220.9688,456.5156 221,456.6406 221.1406,456.7656 C221.2813,456.9063 221.5156,457.0156 221.7344,457.0156 C222,457.0156 222.2656,456.875 222.4375,456.6563 C222.5469,456.5 222.5781,456.3125 222.5781,455.8906 L222.5781,454.4688 C222.5781,454.0313 222.5625,453.9063 222.4688,453.75 C222.3125,453.4844 222.0313,453.3438 221.7344,453.3438 C221.4375,453.3438 221.2344,453.4375 221.0156,453.75 L220.8438,453.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="232.5" y="462.8467">DisplayContent</text><line style="stroke:#181818;stroke-width:0.5;" x1="204.5" x2="346.5" y1="474" y2="474"/><line style="stroke:#181818;stroke-width:0.5;" x1="204.5" x2="346.5" y1="482" y2="482"/></g><!--class DisplayArea_WindowContainer--><g id="elem_DisplayArea_WindowContainer"><rect codeLine="9" fill="#F1F1F1" height="48" id="DisplayArea_WindowContainer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="227" x="275" y="226"/><ellipse cx="290" cy="242" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M292.3438,237.6719 C291.4063,237.2344 290.8125,237.0938 289.9375,237.0938 C287.3125,237.0938 285.3125,239.1719 285.3125,241.8906 L285.3125,243.0156 C285.3125,245.5938 287.4219,247.4844 290.3125,247.4844 C291.5313,247.4844 292.6875,247.1875 293.4375,246.6406 C294.0156,246.2344 294.3438,245.7813 294.3438,245.3906 C294.3438,244.9375 293.9531,244.5469 293.4844,244.5469 C293.2656,244.5469 293.0625,244.625 292.875,244.8125 C292.4219,245.2969 292.4219,245.2969 292.2344,245.3906 C291.8125,245.6563 291.125,245.7813 290.3594,245.7813 C288.3125,245.7813 287.0156,244.6875 287.0156,242.9844 L287.0156,241.8906 C287.0156,240.1094 288.2656,238.7969 290,238.7969 C290.5781,238.7969 291.1875,238.9531 291.6563,239.2031 C292.1406,239.4844 292.3125,239.7031 292.4063,240.1094 C292.4688,240.5156 292.5,240.6406 292.6406,240.7656 C292.7813,240.9063 293.0156,241.0156 293.2344,241.0156 C293.5,241.0156 293.7656,240.875 293.9375,240.6563 C294.0469,240.5 294.0781,240.3125 294.0781,239.8906 L294.0781,238.4688 C294.0781,238.0313 294.0625,237.9063 293.9688,237.75 C293.8125,237.4844 293.5313,237.3438 293.2344,237.3438 C292.9375,237.3438 292.7344,237.4375 292.5156,237.75 L292.3438,237.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="304" y="246.8467">DisplayArea</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="108" x="397" y="223"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="106" x="398" y="235.1387">WindowContainer</text><line style="stroke:#181818;stroke-width:0.5;" x1="276" x2="501" y1="258" y2="258"/><line style="stroke:#181818;stroke-width:0.5;" x1="276" x2="501" y1="266" y2="266"/></g><!--class WindowContainer2--><g id="elem_WindowContainer2"><rect codeLine="10" fill="#F1F1F1" height="48" id="WindowContainer2" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="269" x="254" y="118"/><ellipse cx="269" cy="134" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M271.3438,129.6719 C270.4063,129.2344 269.8125,129.0938 268.9375,129.0938 C266.3125,129.0938 264.3125,131.1719 264.3125,133.8906 L264.3125,135.0156 C264.3125,137.5938 266.4219,139.4844 269.3125,139.4844 C270.5313,139.4844 271.6875,139.1875 272.4375,138.6406 C273.0156,138.2344 273.3438,137.7813 273.3438,137.3906 C273.3438,136.9375 272.9531,136.5469 272.4844,136.5469 C272.2656,136.5469 272.0625,136.625 271.875,136.8125 C271.4219,137.2969 271.4219,137.2969 271.2344,137.3906 C270.8125,137.6563 270.125,137.7813 269.3594,137.7813 C267.3125,137.7813 266.0156,136.6875 266.0156,134.9844 L266.0156,133.8906 C266.0156,132.1094 267.2656,130.7969 269,130.7969 C269.5781,130.7969 270.1875,130.9531 270.6563,131.2031 C271.1406,131.4844 271.3125,131.7031 271.4063,132.1094 C271.4688,132.5156 271.5,132.6406 271.6406,132.7656 C271.7813,132.9063 272.0156,133.0156 272.2344,133.0156 C272.5,133.0156 272.7656,132.875 272.9375,132.6563 C273.0469,132.5 273.0781,132.3125 273.0781,131.8906 L273.0781,130.4688 C273.0781,130.0313 273.0625,129.9063 272.9688,129.75 C272.8125,129.4844 272.5313,129.3438 272.2344,129.3438 C271.9375,129.3438 271.7344,129.4375 271.5156,129.75 L271.3438,129.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="283" y="138.8467">WindowContainer</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="108" x="418" y="115"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="106" x="419" y="127.1387">WindowContainer</text><line style="stroke:#181818;stroke-width:0.5;" x1="255" x2="522" y1="150" y2="150"/><line style="stroke:#181818;stroke-width:0.5;" x1="255" x2="522" y1="158" y2="158"/></g><!--class TaskDisplayArea--><g id="elem_TaskDisplayArea"><rect fill="#F1F1F1" height="48" id="TaskDisplayArea" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="150" x="313.5" y="334"/><ellipse cx="328.5" cy="350" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M330.8438,345.6719 C329.9063,345.2344 329.3125,345.0938 328.4375,345.0938 C325.8125,345.0938 323.8125,347.1719 323.8125,349.8906 L323.8125,351.0156 C323.8125,353.5938 325.9219,355.4844 328.8125,355.4844 C330.0313,355.4844 331.1875,355.1875 331.9375,354.6406 C332.5156,354.2344 332.8438,353.7813 332.8438,353.3906 C332.8438,352.9375 332.4531,352.5469 331.9844,352.5469 C331.7656,352.5469 331.5625,352.625 331.375,352.8125 C330.9219,353.2969 330.9219,353.2969 330.7344,353.3906 C330.3125,353.6563 329.625,353.7813 328.8594,353.7813 C326.8125,353.7813 325.5156,352.6875 325.5156,350.9844 L325.5156,349.8906 C325.5156,348.1094 326.7656,346.7969 328.5,346.7969 C329.0781,346.7969 329.6875,346.9531 330.1563,347.2031 C330.6406,347.4844 330.8125,347.7031 330.9063,348.1094 C330.9688,348.5156 331,348.6406 331.1406,348.7656 C331.2813,348.9063 331.5156,349.0156 331.7344,349.0156 C332,349.0156 332.2656,348.875 332.4375,348.6563 C332.5469,348.5 332.5781,348.3125 332.5781,347.8906 L332.5781,346.4688 C332.5781,346.0313 332.5625,345.9063 332.4688,345.75 C332.3125,345.4844 332.0313,345.3438 331.7344,345.3438 C331.4375,345.3438 331.2344,345.4375 331.0156,345.75 L330.8438,345.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="342.5" y="354.8467">TaskDisplayArea</text><line style="stroke:#181818;stroke-width:0.5;" x1="314.5" x2="462.5" y1="366" y2="366"/><line style="stroke:#181818;stroke-width:0.5;" x1="314.5" x2="462.5" y1="374" y2="374"/></g><!--class WindowContainer3--><g id="elem_WindowContainer3"><rect codeLine="15" fill="#F1F1F1" height="48" id="WindowContainer3" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="269" x="558" y="118"/><ellipse cx="573" cy="134" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M575.3438,129.6719 C574.4063,129.2344 573.8125,129.0938 572.9375,129.0938 C570.3125,129.0938 568.3125,131.1719 568.3125,133.8906 L568.3125,135.0156 C568.3125,137.5938 570.4219,139.4844 573.3125,139.4844 C574.5313,139.4844 575.6875,139.1875 576.4375,138.6406 C577.0156,138.2344 577.3438,137.7813 577.3438,137.3906 C577.3438,136.9375 576.9531,136.5469 576.4844,136.5469 C576.2656,136.5469 576.0625,136.625 575.875,136.8125 C575.4219,137.2969 575.4219,137.2969 575.2344,137.3906 C574.8125,137.6563 574.125,137.7813 573.3594,137.7813 C571.3125,137.7813 570.0156,136.6875 570.0156,134.9844 L570.0156,133.8906 C570.0156,132.1094 571.2656,130.7969 573,130.7969 C573.5781,130.7969 574.1875,130.9531 574.6563,131.2031 C575.1406,131.4844 575.3125,131.7031 575.4063,132.1094 C575.4688,132.5156 575.5,132.6406 575.6406,132.7656 C575.7813,132.9063 576.0156,133.0156 576.2344,133.0156 C576.5,133.0156 576.7656,132.875 576.9375,132.6563 C577.0469,132.5 577.0781,132.3125 577.0781,131.8906 L577.0781,130.4688 C577.0781,130.0313 577.0625,129.9063 576.9688,129.75 C576.8125,129.4844 576.5313,129.3438 576.2344,129.3438 C575.9375,129.3438 575.7344,129.4375 575.5156,129.75 L575.3438,129.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="587" y="138.8467">WindowContainer</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="108" x="722" y="115"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="106" x="723" y="127.1387">WindowContainer</text><line style="stroke:#181818;stroke-width:0.5;" x1="559" x2="826" y1="150" y2="150"/><line style="stroke:#181818;stroke-width:0.5;" x1="559" x2="826" y1="158" y2="158"/></g><!--class TaskFragment--><g id="elem_TaskFragment"><rect fill="#F1F1F1" height="48" id="TaskFragment" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="135" x="625" y="226"/><ellipse cx="640" cy="242" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M642.3438,237.6719 C641.4063,237.2344 640.8125,237.0938 639.9375,237.0938 C637.3125,237.0938 635.3125,239.1719 635.3125,241.8906 L635.3125,243.0156 C635.3125,245.5938 637.4219,247.4844 640.3125,247.4844 C641.5313,247.4844 642.6875,247.1875 643.4375,246.6406 C644.0156,246.2344 644.3438,245.7813 644.3438,245.3906 C644.3438,244.9375 643.9531,244.5469 643.4844,244.5469 C643.2656,244.5469 643.0625,244.625 642.875,244.8125 C642.4219,245.2969 642.4219,245.2969 642.2344,245.3906 C641.8125,245.6563 641.125,245.7813 640.3594,245.7813 C638.3125,245.7813 637.0156,244.6875 637.0156,242.9844 L637.0156,241.8906 C637.0156,240.1094 638.2656,238.7969 640,238.7969 C640.5781,238.7969 641.1875,238.9531 641.6563,239.2031 C642.1406,239.4844 642.3125,239.7031 642.4063,240.1094 C642.4688,240.5156 642.5,240.6406 642.6406,240.7656 C642.7813,240.9063 643.0156,241.0156 643.2344,241.0156 C643.5,241.0156 643.7656,240.875 643.9375,240.6563 C644.0469,240.5 644.0781,240.3125 644.0781,239.8906 L644.0781,238.4688 C644.0781,238.0313 644.0625,237.9063 643.9688,237.75 C643.8125,237.4844 643.5313,237.3438 643.2344,237.3438 C642.9375,237.3438 642.7344,237.4375 642.5156,237.75 L642.3438,237.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="654" y="246.8467">TaskFragment</text><line style="stroke:#181818;stroke-width:0.5;" x1="626" x2="759" y1="258" y2="258"/><line style="stroke:#181818;stroke-width:0.5;" x1="626" x2="759" y1="266" y2="266"/></g><!--class Task--><g id="elem_Task"><rect fill="#F1F1F1" height="48" id="Task" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="65" x="660" y="334"/><ellipse cx="675" cy="350" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M677.3438,345.6719 C676.4063,345.2344 675.8125,345.0938 674.9375,345.0938 C672.3125,345.0938 670.3125,347.1719 670.3125,349.8906 L670.3125,351.0156 C670.3125,353.5938 672.4219,355.4844 675.3125,355.4844 C676.5313,355.4844 677.6875,355.1875 678.4375,354.6406 C679.0156,354.2344 679.3438,353.7813 679.3438,353.3906 C679.3438,352.9375 678.9531,352.5469 678.4844,352.5469 C678.2656,352.5469 678.0625,352.625 677.875,352.8125 C677.4219,353.2969 677.4219,353.2969 677.2344,353.3906 C676.8125,353.6563 676.125,353.7813 675.3594,353.7813 C673.3125,353.7813 672.0156,352.6875 672.0156,350.9844 L672.0156,349.8906 C672.0156,348.1094 673.2656,346.7969 675,346.7969 C675.5781,346.7969 676.1875,346.9531 676.6563,347.2031 C677.1406,347.4844 677.3125,347.7031 677.4063,348.1094 C677.4688,348.5156 677.5,348.6406 677.6406,348.7656 C677.7813,348.9063 678.0156,349.0156 678.2344,349.0156 C678.5,349.0156 678.7656,348.875 678.9375,348.6563 C679.0469,348.5 679.0781,348.3125 679.0781,347.8906 L679.0781,346.4688 C679.0781,346.0313 679.0625,345.9063 678.9688,345.75 C678.8125,345.4844 678.5313,345.3438 678.2344,345.3438 C677.9375,345.3438 677.7344,345.4375 677.5156,345.75 L677.3438,345.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="689" y="354.8467">Task</text><line style="stroke:#181818;stroke-width:0.5;" x1="661" x2="724" y1="366" y2="366"/><line style="stroke:#181818;stroke-width:0.5;" x1="661" x2="724" y1="374" y2="374"/></g><!--class WindowContainer_WindowState--><g id="elem_WindowContainer_WindowState"><rect codeLine="21" fill="#F1F1F1" height="48" id="WindowContainer_WindowState" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="243" x="862" y="118"/><ellipse cx="877" cy="134" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M879.3438,129.6719 C878.4063,129.2344 877.8125,129.0938 876.9375,129.0938 C874.3125,129.0938 872.3125,131.1719 872.3125,133.8906 L872.3125,135.0156 C872.3125,137.5938 874.4219,139.4844 877.3125,139.4844 C878.5313,139.4844 879.6875,139.1875 880.4375,138.6406 C881.0156,138.2344 881.3438,137.7813 881.3438,137.3906 C881.3438,136.9375 880.9531,136.5469 880.4844,136.5469 C880.2656,136.5469 880.0625,136.625 879.875,136.8125 C879.4219,137.2969 879.4219,137.2969 879.2344,137.3906 C878.8125,137.6563 878.125,137.7813 877.3594,137.7813 C875.3125,137.7813 874.0156,136.6875 874.0156,134.9844 L874.0156,133.8906 C874.0156,132.1094 875.2656,130.7969 877,130.7969 C877.5781,130.7969 878.1875,130.9531 878.6563,131.2031 C879.1406,131.4844 879.3125,131.7031 879.4063,132.1094 C879.4688,132.5156 879.5,132.6406 879.6406,132.7656 C879.7813,132.9063 880.0156,133.0156 880.2344,133.0156 C880.5,133.0156 880.7656,132.875 880.9375,132.6563 C881.0469,132.5 881.0781,132.3125 881.0781,131.8906 L881.0781,130.4688 C881.0781,130.0313 881.0625,129.9063 880.9688,129.75 C880.8125,129.4844 880.5313,129.3438 880.2344,129.3438 C879.9375,129.3438 879.7344,129.4375 879.5156,129.75 L879.3438,129.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="891" y="138.8467">WindowContainer</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="82" x="1026" y="115"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="80" x="1027" y="127.1387">WindowState</text><line style="stroke:#181818;stroke-width:0.5;" x1="863" x2="1104" y1="150" y2="150"/><line style="stroke:#181818;stroke-width:0.5;" x1="863" x2="1104" y1="158" y2="158"/></g><!--class WindowToken--><g id="elem_WindowToken"><rect fill="#F1F1F1" height="48" id="WindowToken" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="856" y="226"/><ellipse cx="871" cy="242" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M873.3438,237.6719 C872.4063,237.2344 871.8125,237.0938 870.9375,237.0938 C868.3125,237.0938 866.3125,239.1719 866.3125,241.8906 L866.3125,243.0156 C866.3125,245.5938 868.4219,247.4844 871.3125,247.4844 C872.5313,247.4844 873.6875,247.1875 874.4375,246.6406 C875.0156,246.2344 875.3438,245.7813 875.3438,245.3906 C875.3438,244.9375 874.9531,244.5469 874.4844,244.5469 C874.2656,244.5469 874.0625,244.625 873.875,244.8125 C873.4219,245.2969 873.4219,245.2969 873.2344,245.3906 C872.8125,245.6563 872.125,245.7813 871.3594,245.7813 C869.3125,245.7813 868.0156,244.6875 868.0156,242.9844 L868.0156,241.8906 C868.0156,240.1094 869.2656,238.7969 871,238.7969 C871.5781,238.7969 872.1875,238.9531 872.6563,239.2031 C873.1406,239.4844 873.3125,239.7031 873.4063,240.1094 C873.4688,240.5156 873.5,240.6406 873.6406,240.7656 C873.7813,240.9063 874.0156,241.0156 874.2344,241.0156 C874.5,241.0156 874.7656,240.875 874.9375,240.6563 C875.0469,240.5 875.0781,240.3125 875.0781,239.8906 L875.0781,238.4688 C875.0781,238.0313 875.0625,237.9063 874.9688,237.75 C874.8125,237.4844 874.5313,237.3438 874.2344,237.3438 C873.9375,237.3438 873.7344,237.4375 873.5156,237.75 L873.3438,237.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="885" y="246.8467">WindowToken</text><line style="stroke:#181818;stroke-width:0.5;" x1="857" x2="988" y1="258" y2="258"/><line style="stroke:#181818;stroke-width:0.5;" x1="857" x2="988" y1="266" y2="266"/></g><!--class ActivityRecord--><g id="elem_ActivityRecord"><rect fill="#F1F1F1" height="48" id="ActivityRecord" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="139" x="815" y="334"/><ellipse cx="830" cy="350" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M832.3438,345.6719 C831.4063,345.2344 830.8125,345.0938 829.9375,345.0938 C827.3125,345.0938 825.3125,347.1719 825.3125,349.8906 L825.3125,351.0156 C825.3125,353.5938 827.4219,355.4844 830.3125,355.4844 C831.5313,355.4844 832.6875,355.1875 833.4375,354.6406 C834.0156,354.2344 834.3438,353.7813 834.3438,353.3906 C834.3438,352.9375 833.9531,352.5469 833.4844,352.5469 C833.2656,352.5469 833.0625,352.625 832.875,352.8125 C832.4219,353.2969 832.4219,353.2969 832.2344,353.3906 C831.8125,353.6563 831.125,353.7813 830.3594,353.7813 C828.3125,353.7813 827.0156,352.6875 827.0156,350.9844 L827.0156,349.8906 C827.0156,348.1094 828.2656,346.7969 830,346.7969 C830.5781,346.7969 831.1875,346.9531 831.6563,347.2031 C832.1406,347.4844 832.3125,347.7031 832.4063,348.1094 C832.4688,348.5156 832.5,348.6406 832.6406,348.7656 C832.7813,348.9063 833.0156,349.0156 833.2344,349.0156 C833.5,349.0156 833.7656,348.875 833.9375,348.6563 C834.0469,348.5 834.0781,348.3125 834.0781,347.8906 L834.0781,346.4688 C834.0781,346.0313 834.0625,345.9063 833.9688,345.75 C833.8125,345.4844 833.5313,345.3438 833.2344,345.3438 C832.9375,345.3438 832.7344,345.4375 832.5156,345.75 L832.3438,345.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="844" y="354.8467">ActivityRecord</text><line style="stroke:#181818;stroke-width:0.5;" x1="816" x2="953" y1="366" y2="366"/><line style="stroke:#181818;stroke-width:0.5;" x1="816" x2="953" y1="374" y2="374"/></g><!--reverse link WindowContainer to DisplayArea--><g id="link_WindowContainer_DisplayArea"><path codeLine="3" d="M123.5,76 C123.5,93.658 123.5,99.941 123.5,117.678 " fill="none" id="WindowContainer-backto-DisplayArea" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="123.5,58,117.5,76,129.5,76,123.5,58" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DisplayArea to Dimmable--><g id="link_DisplayArea_Dimmable"><path codeLine="5" d="M126.9756,183.9355 C128.4746,201.5935 129.014,207.941 130.52,225.678 " fill="none" id="DisplayArea-backto-Dimmable" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="125.453,166,120.9971,184.443,132.9541,183.428,125.453,166" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Dimmable to RootDisplayArea--><g id="link_Dimmable_RootDisplayArea"><path codeLine="6" d="M144.2794,291.2764 C149.4434,308.9344 151.492,315.941 156.68,333.678 " fill="none" id="Dimmable-backto-RootDisplayArea" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="139.227,274,138.5206,292.9605,150.0382,289.5922,139.227,274" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RootDisplayArea to DisplayContent--><g id="link_RootDisplayArea_DisplayContent"><path codeLine="7" d="M200.8753,394.3729 C219.5333,412.0313 232.117,423.9408 250.858,441.6784 " fill="none" id="RootDisplayArea-backto-DisplayContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="187.802,382,196.751,398.7307,204.9996,390.0151,187.802,382" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link WindowContainer2 to DisplayArea_WindowContainer--><g id="link_WindowContainer2_DisplayArea_WindowContainer"><path codeLine="11" d="M388.5,184 C388.5,201.658 388.5,207.941 388.5,225.678 " fill="none" id="WindowContainer2-backto-DisplayArea_WindowContainer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="388.5,166,382.5,184,394.5,184,388.5,166" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DisplayArea_WindowContainer to TaskDisplayArea--><g id="link_DisplayArea_WindowContainer_TaskDisplayArea"><path codeLine="12" d="M388.5,292 C388.5,309.658 388.5,315.941 388.5,333.678 " fill="none" id="DisplayArea_WindowContainer-backto-TaskDisplayArea" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="388.5,274,382.5,292,394.5,292,388.5,274" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link TaskDisplayArea to DisplayContent--><g id="link_TaskDisplayArea_DisplayContent"><path codeLine="13" d="M355.2291,390.21 C336.4051,407.8684 319.271,423.9408 300.362,441.6784 " fill="none" id="TaskDisplayArea-backto-DisplayContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="363.981,382,356.8684,383.1877,355.2291,390.21,362.3417,389.0223,363.981,382" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link WindowContainer3 to TaskFragment--><g id="link_WindowContainer3_TaskFragment"><path codeLine="16" d="M692.5,184 C692.5,201.658 692.5,207.941 692.5,225.678 " fill="none" id="WindowContainer3-backto-TaskFragment" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="692.5,166,686.5,184,698.5,184,692.5,166" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link TaskFragment to Task--><g id="link_TaskFragment_Task"><path codeLine="17" d="M692.5,292 C692.5,309.658 692.5,315.941 692.5,333.678 " fill="none" id="TaskFragment-backto-Task" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="692.5,274,686.5,292,698.5,292,692.5,274" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link TaskDisplayArea to Task--><g id="link_TaskDisplayArea_Task"><path codeLine="18" d="M475.609,358 C541.028,358 594.447,358 659.865,358 " fill="none" id="TaskDisplayArea-backto-Task" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="463.609,358,469.609,362,475.609,358,469.609,354,463.609,358" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="471.3963" y="354.3352">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="643.8511" y="353.4408">n</text></g><!--reverse link TaskDisplayArea to TaskDisplayArea--><g id="link_TaskDisplayArea_TaskDisplayArea"><path codeLine="19" d="M475.5431,338.6192 C495.4231,339.7662 498.5,345.766 498.5,358 C498.5,370.234 483.443,376.925 463.563,378.072 " fill="none" id="TaskDisplayArea-backto-TaskDisplayArea" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="463.563,337.928,469.3226,342.267,475.5431,338.6192,469.7834,334.2802,463.563,337.928" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="471.7164" y="332.1584">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="471.7164" y="376.4422">n</text></g><!--reverse link WindowContainer_WindowState to WindowToken--><g id="link_WindowContainer_WindowState_WindowToken"><path codeLine="22" d="M961.2858,181.601 C951.1238,199.259 946.128,207.941 935.921,225.678 " fill="none" id="WindowContainer_WindowState-backto-WindowToken" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="970.264,166,956.0854,178.6083,966.4861,184.5938,970.264,166" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link WindowToken to ActivityRecord--><g id="link_WindowToken_ActivityRecord"><path codeLine="23" d="M908.18,290.9439 C901.849,308.6019 899.219,315.941 892.861,333.678 " fill="none" id="WindowToken-backto-ActivityRecord" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="914.255,274,902.5321,288.9189,913.828,292.9689,914.255,274" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Task to ActivityRecord--><g id="link_Task_ActivityRecord"><path codeLine="25" d="M737.125,358 C767.008,358 784.891,358 814.773,358 " fill="none" id="Task-backto-ActivityRecord" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="725.125,358,731.125,362,737.125,358,731.125,354,725.125,358" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="733.1367" y="353.4408">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="799.1699" y="354.3003">n</text></g><!--reverse link Task to Task--><g id="link_Task_Task"><path codeLine="26" d="M736.9147,336.3844 C755.0607,332.7854 760,341.547 760,358 C760,374.453 743.29,380.88 725.144,377.281 " fill="none" id="Task-backto-Task" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="725.144,338.719,731.8075,341.4753,736.9147,336.3844,730.2512,333.6281,725.144,338.719" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="733.1599" y="329.9421">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="733.1599" y="376.9395">n</text></g><!--SRC=[dP312i8m38RlVOhIex21ypg4eVW0K_0uubQakBNI5MNWm-kiRbasT_3MvF-RV7_o4kgQ7vKkp7rZj0EbfOstghwMq2HMmfhbRmjg3MNobyUF8C3kpt-1Mk5MLHMSIYauj9DzmP3ZEwLJ_CEtKsCSNa3g0K7B9RLZ4nGn8Lz_Q3f3HWpV6VHQatD8Cw9tYaQ76gsRqVpd0zGNV0XIyyNlE_oJOKKph7gCdOLprIx0HI-FqCHIlF2uq6963yFEW6FEPzWxS7AIFqC6DgDvRDyuc8lK3BszcEHEtPHhKfaRMx0tFiv4z5v6aPu0]--></g></svg>

<h2 id="relayoutWindow"><a href="#relayoutWindow" class="headerlink" title="relayoutWindow"></a>relayoutWindow</h2><p>Activity启动时在<code>ViewRootImpl.performTraversals</code>中执行relayoutWindow，就会调用<code>mWindowSession.relayout</code>，最后调用<code>WindowManagerService.relayoutWindow</code>。</p>
<p>ViewRootImpl在执行relayoutWindow时，会把<code>SurfaceControl</code>传给WindowManagerService。</p>
<pre class="mermaid">

zenuml
group App {
    &lt;&lt;App&gt;&gt; ViewRootImpl
    &lt;&lt;App&gt;&gt; BLASTBufferQueue
}
ViewRootImpl.relayoutWindow {
    WindowManagerService.relayoutWindow {
        WindowState win &#x3D; windowForClientLocked()
        DisplayContent displayContent &#x3D; &quot;win.getDisplayContent()&quot;
        createSurfaceControl {
            &quot;WindowStateAnimator.createSurfaceLocked()&quot; {
                new WindowSurfaceController() {
                    new SurfaceControl()
                }
            }
            WindowSurfaceController.getSurfaceControl {
                SurfaceControl.&quot;outSurfaceControl.copyFrom&quot;
            }
        }
    }
    updateBlastSurfaceIfNeeded {
        new BLASTBufferQueue()
        blastSurface &#x3D; BLASTBufferQueue.createSurface
        &quot;mSurface.transferFrom(blastSurface)&quot;
    }
}
</pre>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="170px" preserveAspectRatio="none" style="width:338px;height:170px;background:#FFFFFF;" version="1.1" viewBox="0 0 338 170" width="338px" zoomAndPan="magnify"><defs/><g><!--class SurfaceControl--><g id="elem_SurfaceControl"><rect fill="#F1F1F1" height="48" id="SurfaceControl" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="140" x="128.5" y="7"/><ellipse cx="143.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M145.8438,18.6719 C144.9063,18.2344 144.3125,18.0938 143.4375,18.0938 C140.8125,18.0938 138.8125,20.1719 138.8125,22.8906 L138.8125,24.0156 C138.8125,26.5938 140.9219,28.4844 143.8125,28.4844 C145.0313,28.4844 146.1875,28.1875 146.9375,27.6406 C147.5156,27.2344 147.8438,26.7813 147.8438,26.3906 C147.8438,25.9375 147.4531,25.5469 146.9844,25.5469 C146.7656,25.5469 146.5625,25.625 146.375,25.8125 C145.9219,26.2969 145.9219,26.2969 145.7344,26.3906 C145.3125,26.6563 144.625,26.7813 143.8594,26.7813 C141.8125,26.7813 140.5156,25.6875 140.5156,23.9844 L140.5156,22.8906 C140.5156,21.1094 141.7656,19.7969 143.5,19.7969 C144.0781,19.7969 144.6875,19.9531 145.1563,20.2031 C145.6406,20.4844 145.8125,20.7031 145.9063,21.1094 C145.9688,21.5156 146,21.6406 146.1406,21.7656 C146.2813,21.9063 146.5156,22.0156 146.7344,22.0156 C147,22.0156 147.2656,21.875 147.4375,21.6563 C147.5469,21.5 147.5781,21.3125 147.5781,20.8906 L147.5781,19.4688 C147.5781,19.0313 147.5625,18.9063 147.4688,18.75 C147.3125,18.4844 147.0313,18.3438 146.7344,18.3438 C146.4375,18.3438 146.2344,18.4375 146.0156,18.75 L145.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="157.5" y="27.8467">SurfaceControl</text><line style="stroke:#181818;stroke-width:0.5;" x1="129.5" x2="267.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="129.5" x2="267.5" y1="47" y2="47"/></g><!--class SurfaceComposerClient--><g id="elem_SurfaceComposerClient"><rect fill="#F1F1F1" height="48" id="SurfaceComposerClient" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="203" x="7" y="115"/><ellipse cx="22" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,126.6719 C23.4063,126.2344 22.8125,126.0938 21.9375,126.0938 C19.3125,126.0938 17.3125,128.1719 17.3125,130.8906 L17.3125,132.0156 C17.3125,134.5938 19.4219,136.4844 22.3125,136.4844 C23.5313,136.4844 24.6875,136.1875 25.4375,135.6406 C26.0156,135.2344 26.3438,134.7813 26.3438,134.3906 C26.3438,133.9375 25.9531,133.5469 25.4844,133.5469 C25.2656,133.5469 25.0625,133.625 24.875,133.8125 C24.4219,134.2969 24.4219,134.2969 24.2344,134.3906 C23.8125,134.6563 23.125,134.7813 22.3594,134.7813 C20.3125,134.7813 19.0156,133.6875 19.0156,131.9844 L19.0156,130.8906 C19.0156,129.1094 20.2656,127.7969 22,127.7969 C22.5781,127.7969 23.1875,127.9531 23.6563,128.2031 C24.1406,128.4844 24.3125,128.7031 24.4063,129.1094 C24.4688,129.5156 24.5,129.6406 24.6406,129.7656 C24.7813,129.9063 25.0156,130.0156 25.2344,130.0156 C25.5,130.0156 25.7656,129.875 25.9375,129.6563 C26.0469,129.5 26.0781,129.3125 26.0781,128.8906 L26.0781,127.4688 C26.0781,127.0313 26.0625,126.9063 25.9688,126.75 C25.8125,126.4844 25.5313,126.3438 25.2344,126.3438 C24.9375,126.3438 24.7344,126.4375 24.5156,126.75 L24.3438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="36" y="135.8467">SurfaceComposerClient</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="209" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="209" y1="155" y2="155"/></g><!--class Surface--><g id="elem_Surface"><rect fill="#F1F1F1" height="48" id="Surface" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="86" x="245.5" y="115"/><ellipse cx="260.5" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M262.8438,126.6719 C261.9063,126.2344 261.3125,126.0938 260.4375,126.0938 C257.8125,126.0938 255.8125,128.1719 255.8125,130.8906 L255.8125,132.0156 C255.8125,134.5938 257.9219,136.4844 260.8125,136.4844 C262.0313,136.4844 263.1875,136.1875 263.9375,135.6406 C264.5156,135.2344 264.8438,134.7813 264.8438,134.3906 C264.8438,133.9375 264.4531,133.5469 263.9844,133.5469 C263.7656,133.5469 263.5625,133.625 263.375,133.8125 C262.9219,134.2969 262.9219,134.2969 262.7344,134.3906 C262.3125,134.6563 261.625,134.7813 260.8594,134.7813 C258.8125,134.7813 257.5156,133.6875 257.5156,131.9844 L257.5156,130.8906 C257.5156,129.1094 258.7656,127.7969 260.5,127.7969 C261.0781,127.7969 261.6875,127.9531 262.1563,128.2031 C262.6406,128.4844 262.8125,128.7031 262.9063,129.1094 C262.9688,129.5156 263,129.6406 263.1406,129.7656 C263.2813,129.9063 263.5156,130.0156 263.7344,130.0156 C264,130.0156 264.2656,129.875 264.4375,129.6563 C264.5469,129.5 264.5781,129.3125 264.5781,128.8906 L264.5781,127.4688 C264.5781,127.0313 264.5625,126.9063 264.4688,126.75 C264.3125,126.4844 264.0313,126.3438 263.7344,126.3438 C263.4375,126.3438 263.2344,126.4375 263.0156,126.75 L262.8438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="274.5" y="135.8467">Surface</text><line style="stroke:#181818;stroke-width:0.5;" x1="246.5" x2="330.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="246.5" x2="330.5" y1="155" y2="155"/></g><!--reverse link SurfaceControl to SurfaceComposerClient--><g id="link_SurfaceControl_SurfaceComposerClient"><path codeLine="1" d="M171.2045,64.1478 C156.2125,81.8062 143.362,96.9408 128.301,114.6784 " fill="none" id="SurfaceControl-backto-SurfaceComposerClient" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="178.971,55,172.0385,56.9851,171.2045,64.1478,178.137,62.1627,178.971,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link SurfaceControl to Surface--><g id="link_SurfaceControl_Surface"><path codeLine="2" d="M225.7955,64.1478 C240.7875,81.8062 253.638,96.9408 268.699,114.6784 " fill="none" id="SurfaceControl-backto-Surface" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="218.029,55,218.863,62.1627,225.7955,64.1478,224.9615,56.9851,218.029,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[2oujIajCJdNEpoifoizHqDBLLGY62UKMv1Ud5ZddPARcbN05urG80000]--></g></svg>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="386px" preserveAspectRatio="none" style="width:302px;height:386px;background:#FFFFFF;" version="1.1" viewBox="0 0 302 386" width="302px" zoomAndPan="magnify"><defs/><g><!--class BnInterface--><g id="elem_BnInterface"><rect codeLine="1" fill="#F1F1F1" height="48" id="BnInterface" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="231" x="17" y="115"/><ellipse cx="32" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M34.3438,126.6719 C33.4063,126.2344 32.8125,126.0938 31.9375,126.0938 C29.3125,126.0938 27.3125,128.1719 27.3125,130.8906 L27.3125,132.0156 C27.3125,134.5938 29.4219,136.4844 32.3125,136.4844 C33.5313,136.4844 34.6875,136.1875 35.4375,135.6406 C36.0156,135.2344 36.3438,134.7813 36.3438,134.3906 C36.3438,133.9375 35.9531,133.5469 35.4844,133.5469 C35.2656,133.5469 35.0625,133.625 34.875,133.8125 C34.4219,134.2969 34.4219,134.2969 34.2344,134.3906 C33.8125,134.6563 33.125,134.7813 32.3594,134.7813 C30.3125,134.7813 29.0156,133.6875 29.0156,131.9844 L29.0156,130.8906 C29.0156,129.1094 30.2656,127.7969 32,127.7969 C32.5781,127.7969 33.1875,127.9531 33.6563,128.2031 C34.1406,128.4844 34.3125,128.7031 34.4063,129.1094 C34.4688,129.5156 34.5,129.6406 34.6406,129.7656 C34.7813,129.9063 35.0156,130.0156 35.2344,130.0156 C35.5,130.0156 35.7656,129.875 35.9375,129.6563 C36.0469,129.5 36.0781,129.3125 36.0781,128.8906 L36.0781,127.4688 C36.0781,127.0313 36.0625,126.9063 35.9688,126.75 C35.8125,126.4844 35.5313,126.3438 35.2344,126.3438 C34.9375,126.3438 34.7344,126.4375 34.5156,126.75 L34.3438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="46" y="135.8467">BnInterface</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="112" x="139" y="112"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="110" x="140" y="124.1387">ISurfaceComposer</text><line style="stroke:#181818;stroke-width:0.5;" x1="18" x2="247" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="18" x2="247" y1="155" y2="155"/></g><!--class BBinder--><g id="elem_BBinder"><rect fill="#F1F1F1" height="48" id="BBinder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="89" x="7" y="7"/><ellipse cx="22" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,18.6719 C23.4063,18.2344 22.8125,18.0938 21.9375,18.0938 C19.3125,18.0938 17.3125,20.1719 17.3125,22.8906 L17.3125,24.0156 C17.3125,26.5938 19.4219,28.4844 22.3125,28.4844 C23.5313,28.4844 24.6875,28.1875 25.4375,27.6406 C26.0156,27.2344 26.3438,26.7813 26.3438,26.3906 C26.3438,25.9375 25.9531,25.5469 25.4844,25.5469 C25.2656,25.5469 25.0625,25.625 24.875,25.8125 C24.4219,26.2969 24.4219,26.2969 24.2344,26.3906 C23.8125,26.6563 23.125,26.7813 22.3594,26.7813 C20.3125,26.7813 19.0156,25.6875 19.0156,23.9844 L19.0156,22.8906 C19.0156,21.1094 20.2656,19.7969 22,19.7969 C22.5781,19.7969 23.1875,19.9531 23.6563,20.2031 C24.1406,20.4844 24.3125,20.7031 24.4063,21.1094 C24.4688,21.5156 24.5,21.6406 24.6406,21.7656 C24.7813,21.9063 25.0156,22.0156 25.2344,22.0156 C25.5,22.0156 25.7656,21.875 25.9375,21.6563 C26.0469,21.5 26.0781,21.3125 26.0781,20.8906 L26.0781,19.4688 C26.0781,19.0313 26.0625,18.9063 25.9688,18.75 C25.8125,18.4844 25.5313,18.3438 25.2344,18.3438 C24.9375,18.3438 24.7344,18.4375 24.5156,18.75 L24.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="36" y="27.8467">BBinder</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="95" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="95" y1="47" y2="47"/></g><!--class ISurfaceComposer--><g id="elem_ISurfaceComposer"><rect fill="#F1F1F1" height="48" id="ISurfaceComposer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="164" x="131.5" y="7"/><ellipse cx="146.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M148.8438,18.6719 C147.9063,18.2344 147.3125,18.0938 146.4375,18.0938 C143.8125,18.0938 141.8125,20.1719 141.8125,22.8906 L141.8125,24.0156 C141.8125,26.5938 143.9219,28.4844 146.8125,28.4844 C148.0313,28.4844 149.1875,28.1875 149.9375,27.6406 C150.5156,27.2344 150.8438,26.7813 150.8438,26.3906 C150.8438,25.9375 150.4531,25.5469 149.9844,25.5469 C149.7656,25.5469 149.5625,25.625 149.375,25.8125 C148.9219,26.2969 148.9219,26.2969 148.7344,26.3906 C148.3125,26.6563 147.625,26.7813 146.8594,26.7813 C144.8125,26.7813 143.5156,25.6875 143.5156,23.9844 L143.5156,22.8906 C143.5156,21.1094 144.7656,19.7969 146.5,19.7969 C147.0781,19.7969 147.6875,19.9531 148.1563,20.2031 C148.6406,20.4844 148.8125,20.7031 148.9063,21.1094 C148.9688,21.5156 149,21.6406 149.1406,21.7656 C149.2813,21.9063 149.5156,22.0156 149.7344,22.0156 C150,22.0156 150.2656,21.875 150.4375,21.6563 C150.5469,21.5 150.5781,21.3125 150.5781,20.8906 L150.5781,19.4688 C150.5781,19.0313 150.5625,18.9063 150.4688,18.75 C150.3125,18.4844 150.0313,18.3438 149.7344,18.3438 C149.4375,18.3438 149.2344,18.4375 149.0156,18.75 L148.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="160.5" y="27.8467">ISurfaceComposer</text><line style="stroke:#181818;stroke-width:0.5;" x1="132.5" x2="294.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="132.5" x2="294.5" y1="47" y2="47"/></g><!--class BnSurfaceComposer--><g id="elem_BnSurfaceComposer"><rect fill="#F1F1F1" height="48" id="BnSurfaceComposer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="179" x="43" y="223"/><ellipse cx="58" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M60.3438,234.6719 C59.4063,234.2344 58.8125,234.0938 57.9375,234.0938 C55.3125,234.0938 53.3125,236.1719 53.3125,238.8906 L53.3125,240.0156 C53.3125,242.5938 55.4219,244.4844 58.3125,244.4844 C59.5313,244.4844 60.6875,244.1875 61.4375,243.6406 C62.0156,243.2344 62.3438,242.7813 62.3438,242.3906 C62.3438,241.9375 61.9531,241.5469 61.4844,241.5469 C61.2656,241.5469 61.0625,241.625 60.875,241.8125 C60.4219,242.2969 60.4219,242.2969 60.2344,242.3906 C59.8125,242.6563 59.125,242.7813 58.3594,242.7813 C56.3125,242.7813 55.0156,241.6875 55.0156,239.9844 L55.0156,238.8906 C55.0156,237.1094 56.2656,235.7969 58,235.7969 C58.5781,235.7969 59.1875,235.9531 59.6563,236.2031 C60.1406,236.4844 60.3125,236.7031 60.4063,237.1094 C60.4688,237.5156 60.5,237.6406 60.6406,237.7656 C60.7813,237.9063 61.0156,238.0156 61.2344,238.0156 C61.5,238.0156 61.7656,237.875 61.9375,237.6563 C62.0469,237.5 62.0781,237.3125 62.0781,236.8906 L62.0781,235.4688 C62.0781,235.0313 62.0625,234.9063 61.9688,234.75 C61.8125,234.4844 61.5313,234.3438 61.2344,234.3438 C60.9375,234.3438 60.7344,234.4375 60.5156,234.75 L60.3438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="72" y="243.8467">BnSurfaceComposer</text><line style="stroke:#181818;stroke-width:0.5;" x1="44" x2="221" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="44" x2="221" y1="263" y2="263"/></g><!--class SurfaceFlinger--><g id="elem_SurfaceFlinger"><rect fill="#F1F1F1" height="48" id="SurfaceFlinger" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="135" x="65" y="331"/><ellipse cx="80" cy="347" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M82.3438,342.6719 C81.4063,342.2344 80.8125,342.0938 79.9375,342.0938 C77.3125,342.0938 75.3125,344.1719 75.3125,346.8906 L75.3125,348.0156 C75.3125,350.5938 77.4219,352.4844 80.3125,352.4844 C81.5313,352.4844 82.6875,352.1875 83.4375,351.6406 C84.0156,351.2344 84.3438,350.7813 84.3438,350.3906 C84.3438,349.9375 83.9531,349.5469 83.4844,349.5469 C83.2656,349.5469 83.0625,349.625 82.875,349.8125 C82.4219,350.2969 82.4219,350.2969 82.2344,350.3906 C81.8125,350.6563 81.125,350.7813 80.3594,350.7813 C78.3125,350.7813 77.0156,349.6875 77.0156,347.9844 L77.0156,346.8906 C77.0156,345.1094 78.2656,343.7969 80,343.7969 C80.5781,343.7969 81.1875,343.9531 81.6563,344.2031 C82.1406,344.4844 82.3125,344.7031 82.4063,345.1094 C82.4688,345.5156 82.5,345.6406 82.6406,345.7656 C82.7813,345.9063 83.0156,346.0156 83.2344,346.0156 C83.5,346.0156 83.7656,345.875 83.9375,345.6563 C84.0469,345.5 84.0781,345.3125 84.0781,344.8906 L84.0781,343.4688 C84.0781,343.0313 84.0625,342.9063 83.9688,342.75 C83.8125,342.4844 83.5313,342.3438 83.2344,342.3438 C82.9375,342.3438 82.7344,342.4375 82.5156,342.75 L82.3438,342.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="94" y="351.8467">SurfaceFlinger</text><line style="stroke:#181818;stroke-width:0.5;" x1="66" x2="199" y1="363" y2="363"/><line style="stroke:#181818;stroke-width:0.5;" x1="66" x2="199" y1="371" y2="371"/></g><!--reverse link BBinder to BnInterface--><g id="link_BBinder_BnInterface"><path codeLine="2" d="M80.0049,69.3023 C93.4982,86.9603 101.1246,96.941 114.679,114.678 " fill="none" id="BBinder-backto-BnInterface" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="69.0758,55,75.2374,72.9453,84.7723,65.6593,69.0758,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ISurfaceComposer to BnInterface--><g id="link_ISurfaceComposer_BnInterface"><path codeLine="3" d="M184.9951,69.3024 C171.5021,86.9604 163.875,96.941 150.321,114.678 " fill="none" id="ISurfaceComposer-backto-BnInterface" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="195.924,55,180.2276,65.6595,189.7626,72.9454,195.924,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BnInterface to BnSurfaceComposer--><g id="link_BnInterface_BnSurfaceComposer"><path codeLine="4" d="M132.5,181 C132.5,198.658 132.5,204.941 132.5,222.678 " fill="none" id="BnInterface-backto-BnSurfaceComposer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="132.5,163,126.5,181,138.5,181,132.5,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BnSurfaceComposer to SurfaceFlinger--><g id="link_BnSurfaceComposer_SurfaceFlinger"><path codeLine="5" d="M132.5,289 C132.5,306.6584 132.5,312.9408 132.5,330.6784 " fill="none" id="BnSurfaceComposer-backto-SurfaceFlinger" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="132.5,271,126.5,289,138.5,289,132.5,271" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[Iyv9B2vMSChpp2j9BKfBJ4wryGmk1JESytCByejJY-oud9moyr9IYnHiQdHraPLoeIl5L874XacYwU72484eX0gwvMJcfQSM0G00]--></g></svg>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android binder剖析之addService</title>
    <url>/posts/27252.html</url>
    <content><![CDATA[<p>本文基于Android 8.0源码分析。以mediaserver为例剖析binder addService的流程。</p>
<span id="more"></span>

<p>先来看下addService的时序图：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="678px" preserveAspectRatio="none" style="width:989px;height:678px;background:#FFFFFF;" version="1.1" viewBox="0 0 989 678" width="989px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="181.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="209.5" y="67.4297"/><rect fill="#FFFFFF" height="123.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="214.5" y="104.5625"/><rect fill="#FFFFFF" height="54.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="219.5" y="146.6953"/><rect fill="#FFFFFF" height="101.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="358.5" y="277.9609"/><rect fill="#FFFFFF" height="89.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="547.5" y="349.2266"/><rect fill="#FFFFFF" height="89.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="672" y="408.3594"/><rect fill="#FFFFFF" height="194.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="786" y="467.4922"/><rect fill="#FFFFFF" height="85.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="791" y="576.7578"/><rect fill="#FFFFFF" height="43.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="796" y="618.8906"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="77" x2="77" y1="36.2969" y2="671.0234"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="214" x2="214" y1="36.2969" y2="671.0234"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="363" x2="363" y1="36.2969" y2="671.0234"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="552.5" x2="552.5" y1="36.2969" y2="671.0234"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="676.5" x2="676.5" y1="36.2969" y2="671.0234"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="790.5" x2="790.5" y1="36.2969" y2="671.0234"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="952.5" x2="952.5" y1="36.2969" y2="671.0234"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="145" x="5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="12" y="24.9951">main_mediaserver</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="109" x="160" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="167" y="24.9951">ProcessState</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="153" x="287" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="294" y="24.9951">MediaPlayerService</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="148" x="478.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="485.5" y="24.9951">BpServiceManager</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="81" x="636.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="643.5" y="24.9951">BpBinder</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="127" x="727.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="734.5" y="24.9951">IPCThreadState</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="61" x="922.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="929.5" y="24.9951">binder</text><rect fill="#FFFFFF" height="181.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="209.5" y="67.4297"/><rect fill="#FFFFFF" height="123.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="214.5" y="104.5625"/><rect fill="#FFFFFF" height="54.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="219.5" y="146.6953"/><rect fill="#FFFFFF" height="101.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="358.5" y="277.9609"/><rect fill="#FFFFFF" height="89.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="547.5" y="349.2266"/><rect fill="#FFFFFF" height="89.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="672" y="408.3594"/><rect fill="#FFFFFF" height="194.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="786" y="467.4922"/><rect fill="#FFFFFF" height="85.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="791" y="576.7578"/><rect fill="#FFFFFF" height="43.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="796" y="618.8906"/><polygon fill="#181818" points="197.5,63.4297,207.5,67.4297,197.5,71.4297,201.5,67.4297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="77.5" x2="203.5" y1="67.4297" y2="67.4297"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="33" x="84.5" y="62.3638">self()</text><line style="stroke:#181818;stroke-width:1.0;" x1="219.5" x2="266.5" y1="91.5625" y2="91.5625"/><line style="stroke:#181818;stroke-width:1.0;" x1="266.5" x2="266.5" y1="91.5625" y2="104.5625"/><line style="stroke:#181818;stroke-width:1.0;" x1="225.5" x2="266.5" y1="104.5625" y2="104.5625"/><polygon fill="#181818" points="235.5,100.5625,225.5,104.5625,235.5,108.5625,231.5,104.5625" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="125" x="231.5" y="86.4966">new ProcessState()</text><line style="stroke:#181818;stroke-width:1.0;" x1="224.5" x2="271.5" y1="133.6953" y2="133.6953"/><line style="stroke:#181818;stroke-width:1.0;" x1="271.5" x2="271.5" y1="133.6953" y2="146.6953"/><line style="stroke:#181818;stroke-width:1.0;" x1="230.5" x2="271.5" y1="146.6953" y2="146.6953"/><polygon fill="#181818" points="240.5,142.6953,230.5,146.6953,240.5,150.6953,236.5,146.6953" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="76" x="236.5" y="128.6294">open_driver</text><polygon fill="#181818" points="941,176.8281,951,180.8281,941,184.8281,945,180.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="229.5" x2="947" y1="180.8281" y2="180.8281"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="32" x="236.5" y="175.7622">open</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="229.5" x2="271.5" y1="199.8281" y2="199.8281"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="271.5" x2="271.5" y1="199.8281" y2="212.8281"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="224.5" x2="271.5" y1="212.8281" y2="212.8281"/><polygon fill="#181818" points="234.5,208.8281,224.5,212.8281,234.5,216.8281,230.5,212.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="224.5" x2="266.5" y1="226.8281" y2="226.8281"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="266.5" x2="266.5" y1="226.8281" y2="239.8281"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="219.5" x2="266.5" y1="239.8281" y2="239.8281"/><polygon fill="#181818" points="229.5,235.8281,219.5,239.8281,229.5,243.8281,225.5,239.8281" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="88.5,244.8281,78.5,248.8281,88.5,252.8281,84.5,248.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="82.5" x2="213.5" y1="248.8281" y2="248.8281"/><polygon fill="#181818" points="346.5,273.9609,356.5,277.9609,346.5,281.9609,350.5,277.9609" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="77.5" x2="352.5" y1="277.9609" y2="277.9609"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="68" x="84.5" y="272.895">instantiate</text><line style="stroke:#181818;stroke-width:1.0;" x1="368.5" x2="410.5" y1="307.0938" y2="307.0938"/><line style="stroke:#181818;stroke-width:1.0;" x1="410.5" x2="410.5" y1="307.0938" y2="320.0938"/><line style="stroke:#181818;stroke-width:1.0;" x1="369.5" x2="410.5" y1="320.0938" y2="320.0938"/><polygon fill="#181818" points="379.5,316.0938,369.5,320.0938,379.5,324.0938,375.5,320.0938" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="165" x="375.5" y="302.0278">new MediaPlayerService()</text><polygon fill="#181818" points="535.5,345.2266,545.5,349.2266,535.5,353.2266,539.5,349.2266" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="368.5" x2="541.5" y1="349.2266" y2="349.2266"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="71" x="375.5" y="344.1606">addService</text><polygon fill="#181818" points="660,404.3594,670,408.3594,660,412.3594,664,408.3594" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="557.5" x2="666" y1="408.3594" y2="408.3594"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="53" x="564.5" y="403.2935">transact</text><polygon fill="#181818" points="774,463.4922,784,467.4922,774,471.4922,778,467.4922" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="682" x2="780" y1="467.4922" y2="467.4922"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="53" x="689" y="462.4263">transact</text><line style="stroke:#181818;stroke-width:1.0;" x1="796" x2="838" y1="526.625" y2="526.625"/><line style="stroke:#181818;stroke-width:1.0;" x1="838" x2="838" y1="526.625" y2="539.625"/><line style="stroke:#181818;stroke-width:1.0;" x1="797" x2="838" y1="539.625" y2="539.625"/><polygon fill="#181818" points="807,535.625,797,539.625,807,543.625,803,539.625" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="138" x="803" y="521.5591">writeTransactionData</text><line style="stroke:#181818;stroke-width:1.0;" x1="796" x2="843" y1="563.7578" y2="563.7578"/><line style="stroke:#181818;stroke-width:1.0;" x1="843" x2="843" y1="563.7578" y2="576.7578"/><line style="stroke:#181818;stroke-width:1.0;" x1="802" x2="843" y1="576.7578" y2="576.7578"/><polygon fill="#181818" points="812,572.7578,802,576.7578,812,580.7578,808,576.7578" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="110" x="808" y="558.6919">waitForResponse</text><line style="stroke:#181818;stroke-width:1.0;" x1="801" x2="848" y1="605.8906" y2="605.8906"/><line style="stroke:#181818;stroke-width:1.0;" x1="848" x2="848" y1="605.8906" y2="618.8906"/><line style="stroke:#181818;stroke-width:1.0;" x1="807" x2="848" y1="618.8906" y2="618.8906"/><polygon fill="#181818" points="817,614.8906,807,618.8906,817,622.8906,813,618.8906" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="91" x="813" y="600.8247">talkWithDriver</text><polygon fill="#181818" points="941,649.0234,951,653.0234,941,657.0234,945,653.0234" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="806" x2="947" y1="653.0234" y2="653.0234"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="26" x="813" y="647.9575">ioctl</text><!--SRC=[ZPAzJiCm481tFuKtG1LIMJCmb0g9eL94Ap5Mr_XAJgHsT3uQU0f61jw3WO6tAS-1ywFInf7A4ilsVT_zn6SQZ9aZRod3d_VFtTVRxkDRvMHGhvsJbNjH9R1GHYLOqIko1baxhhzNux7Q0Ddb1Ws13v9mU7cjKtOPUZyN4DIZaKwqns9zVg6EBkB0H5kiZWvFCq7kIhHBmnIoHz5TlMsGOfHdxY-3BSpgRLh0At8tdAO-ibx262ZOrK38CDYs5L-4veOTaxBRpC32OoYeJlttcvH1o8IsTOknG4LqOvoqWsW69WpM1yMXg4-fFHBmk_HcaJE2EPZwiAHbL0-85Ockc0GNdOISdOB0QQv9NG79hUDxzAMp7lz92HHF3oJvj7qfCRH_A-GoANu1]--></g></svg>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\av\media\mediaserver\main_mediaserver.cpp</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc __unused, <span class="type">char</span> **argv __unused)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">signal</span>(SIGPIPE, SIG_IGN);</span><br><span class="line"></span><br><span class="line">    <span class="function">sp&lt;ProcessState&gt; <span class="title">proc</span><span class="params">(ProcessState::self())</span></span>;  <span class="comment">// 1. ProcessState是个单例，每个进程只有一个实例，binder设备的打开操作就是在此</span></span><br><span class="line">    <span class="function">sp&lt;IServiceManager&gt; <span class="title">sm</span><span class="params">(defaultServiceManager())</span></span>;  <span class="comment">//2. 获取IServiceManager</span></span><br><span class="line">    <span class="built_in">ALOGI</span>(<span class="string">&quot;ServiceManager: %p&quot;</span>, sm.<span class="built_in">get</span>());</span><br><span class="line">    <span class="built_in">InitializeIcuOrDie</span>();</span><br><span class="line">    MediaPlayerService::<span class="built_in">instantiate</span>();</span><br><span class="line">    ResourceManagerService::<span class="built_in">instantiate</span>();</span><br><span class="line">    <span class="built_in">registerExtensions</span>();</span><br><span class="line">    ProcessState::<span class="built_in">self</span>()-&gt;<span class="built_in">startThreadPool</span>();</span><br><span class="line">    IPCThreadState::<span class="built_in">self</span>()-&gt;<span class="built_in">joinThreadPool</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="1-ProcessState打开binder设备"><a href="#1-ProcessState打开binder设备" class="headerlink" title="1. ProcessState打开binder设备"></a>1. ProcessState打开binder设备</h2><p>ProcessState是一个进程相关的对象，一个对象只有一个ProcessState。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\native\libs\binder\ProcessState.cpp</span></span><br><span class="line"><span class="function">sp&lt;ProcessState&gt; <span class="title">ProcessState::self</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Mutex::Autolock _l(gProcessMutex);  <span class="comment">//采用单例模式，每个进程保证只有一个ProcessState</span></span><br><span class="line">    <span class="keyword">if</span> (gProcess != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> gProcess;</span><br><span class="line">    &#125;</span><br><span class="line">    gProcess = <span class="keyword">new</span> <span class="built_in">ProcessState</span>(<span class="string">&quot;/dev/binder&quot;</span>);   <span class="comment">//构造函数传入了binder设备的路径</span></span><br><span class="line">    <span class="keyword">return</span> gProcess;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ProcessState::<span class="built_in">ProcessState</span>(<span class="type">const</span> <span class="type">char</span> *driver)</span><br><span class="line">    : <span class="built_in">mDriverName</span>(<span class="built_in">String8</span>(driver))</span><br><span class="line">    , <span class="built_in">mDriverFD</span>(<span class="built_in">open_driver</span>(driver))  <span class="comment">//打开binder设备, mDriverFD成员变量就是binder设备的文件描述符</span></span><br><span class="line">    ......</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (mDriverFD &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// mmap the binder, providing a chunk of virtual address space to receive transactions.</span></span><br><span class="line">        mVMStart = <span class="built_in">mmap</span>(<span class="number">0</span>, BINDER_VM_SIZE, PROT_READ, MAP_PRIVATE | MAP_NORESERVE, mDriverFD, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (mVMStart == MAP_FAILED) &#123;</span><br><span class="line">            <span class="comment">// *sigh*</span></span><br><span class="line">            <span class="built_in">ALOGE</span>(<span class="string">&quot;Using /dev/binder failed: unable to mmap transaction memory.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">close</span>(mDriverFD);</span><br><span class="line">            mDriverFD = <span class="number">-1</span>;</span><br><span class="line">            mDriverName.<span class="built_in">clear</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ProcessState构造函数中，调用mmap把binder设备内核空间的一段内存映射到用户空间。mmap的具体作用跟设备的实现有关系。<br>关于mmap的介绍可以参考这篇文章：<a href="https://blog.csdn.net/DLUTBruceZhang/article/details/9080173">Linux 内存映射函数 mmap（）函数详解
</a></p>
<p>现在看下open_driver是如何打开binder设备的。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">open_driver</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *driver)</span>  <span class="comment">//driver参数指的就是&quot;/dev/binder&quot;</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> fd = <span class="built_in">open</span>(driver, O_RDWR | O_CLOEXEC);  <span class="comment">//系统调用open打开binder设备</span></span><br><span class="line">    <span class="keyword">if</span> (fd &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//通过ioctl获取binder设备的协议版本号。</span></span><br><span class="line">        <span class="type">int</span> vers = <span class="number">0</span>;</span><br><span class="line">        <span class="type">status_t</span> result = <span class="built_in">ioctl</span>(fd, BINDER_VERSION, &amp;vers);</span><br><span class="line">        <span class="keyword">if</span> (result == <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="built_in">ALOGE</span>(<span class="string">&quot;Binder ioctl to obtain version failed: %s&quot;</span>, <span class="built_in">strerror</span>(errno));</span><br><span class="line">            <span class="built_in">close</span>(fd);</span><br><span class="line">            fd = <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//比较应用端和binder内核驱动的版本号是否相同</span></span><br><span class="line">        <span class="keyword">if</span> (result != <span class="number">0</span> || vers != BINDER_CURRENT_PROTOCOL_VERSION) &#123;</span><br><span class="line">          <span class="built_in">ALOGE</span>(<span class="string">&quot;Binder driver protocol(%d) does not match user space protocol(%d)! ioctl() return value: %d&quot;</span>,</span><br><span class="line">                vers, BINDER_CURRENT_PROTOCOL_VERSION, result);</span><br><span class="line">            <span class="built_in">close</span>(fd);</span><br><span class="line">            fd = <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">size_t</span> maxThreads = DEFAULT_MAX_BINDER_THREADS;</span><br><span class="line">        <span class="comment">//设置支持的最大线程数15</span></span><br><span class="line">        result = <span class="built_in">ioctl</span>(fd, BINDER_SET_MAX_THREADS, &amp;maxThreads);</span><br><span class="line">        <span class="keyword">if</span> (result == <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="built_in">ALOGE</span>(<span class="string">&quot;Binder ioctl to set max threads failed: %s&quot;</span>, <span class="built_in">strerror</span>(errno));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">ALOGW</span>(<span class="string">&quot;Opening &#x27;%s&#x27; failed: %s\n&quot;</span>, driver, <span class="built_in">strerror</span>(errno));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>由此可以看出打开binder设备的操作还是很简单的。</p>
<h2 id="2-获取-IServiceManager"><a href="#2-获取-IServiceManager" class="headerlink" title="2. 获取 IServiceManager"></a>2. 获取 IServiceManager</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\native\libs\binder\IServiceManager.cpp</span></span><br><span class="line"><span class="function">sp&lt;IServiceManager&gt; <span class="title">defaultServiceManager</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">//依然是单例模式</span></span><br><span class="line">    <span class="keyword">if</span> (gDefaultServiceManager != <span class="literal">NULL</span>) <span class="keyword">return</span> gDefaultServiceManager;</span><br><span class="line">    &#123;</span><br><span class="line">        AutoMutex _l(gDefaultServiceManagerLock);</span><br><span class="line">        <span class="keyword">while</span> (gDefaultServiceManager == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            gDefaultServiceManager = <span class="built_in">interface_cast</span>&lt;IServiceManager&gt;(</span><br><span class="line">                ProcessState::<span class="built_in">self</span>()-&gt;<span class="built_in">getContextObject</span>(<span class="literal">NULL</span>));</span><br><span class="line">            <span class="keyword">if</span> (gDefaultServiceManager == <span class="literal">NULL</span>)</span><br><span class="line">                <span class="built_in">sleep</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gDefaultServiceManager;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ProcessState::self()-&gt;getContextObject(NULL)最终返回的是 new BpBinder(0); ，其中0表示的就是ServiceManager在binder系统中的标识。</p>
<p>interface_cast的定义如下，是一个模板函数</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\native\libs\binder\include\binder\IInterface.h</span></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> INTERFACE&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> sp&lt;INTERFACE&gt; <span class="title">interface_cast</span><span class="params">(<span class="type">const</span> sp&lt;IBinder&gt;&amp; obj)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> INTERFACE::<span class="built_in">asInterface</span>(obj);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//替换模板参数后就是如下形式：</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> sp&lt;IServiceManager&gt; <span class="title">interface_cast</span><span class="params">(<span class="type">const</span> sp&lt;IBinder&gt;&amp; obj)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> IServiceManager::<span class="built_in">asInterface</span>(obj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>所以最终调用的是IServiceManager::asInterface(new BpBinder(0))，所以需要再分析一下IServiceManager::asInterface函数。</p>
<p>看一下IServiceManager的定义，非常简单：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\native\libs\binder\include\binder\IServiceManager.h</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IServiceManager</span> : <span class="keyword">public</span> IInterface</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">DECLARE_META_INTERFACE</span>(ServiceManager)</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> sp&lt;IBinder&gt; <span class="title">getService</span><span class="params">( <span class="type">const</span> String16&amp; name)</span> <span class="type">const</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> sp&lt;IBinder&gt; <span class="title">checkService</span><span class="params">( <span class="type">const</span> String16&amp; name)</span> <span class="type">const</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">status_t</span>    <span class="title">addService</span><span class="params">( <span class="type">const</span> String16&amp; name, <span class="type">const</span> sp&lt;IBinder&gt;&amp; service,</span></span></span><br><span class="line"><span class="params"><span class="function">                                            <span class="type">bool</span> allowIsolated = <span class="literal">false</span>)</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> Vector&lt;String16&gt;    <span class="title">listServices</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">enum</span> &#123;</span><br><span class="line">        GET_SERVICE_TRANSACTION = IBinder::FIRST_CALL_TRANSACTION,</span><br><span class="line">        CHECK_SERVICE_TRANSACTION,</span><br><span class="line">        ADD_SERVICE_TRANSACTION,</span><br><span class="line">        LIST_SERVICES_TRANSACTION,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="DECLARE-META-INTERFACE宏"><a href="#DECLARE-META-INTERFACE宏" class="headerlink" title="DECLARE_META_INTERFACE宏"></a>DECLARE_META_INTERFACE宏</h3><p>其中DECLARE_META_INTERFACE是个宏定义，与IMPLEMENT_META_INTERFACE宏配合使用，是谷歌提供的用于native service层对接binder的两个模板宏：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\native\libs\binder\include\binder\IInterface.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DECLARE_META_INTERFACE(INTERFACE)                               \</span></span><br><span class="line"><span class="meta">    static const ::android::String16 descriptor;                        \</span></span><br><span class="line"><span class="meta">    static ::android::sp<span class="string">&lt;I##INTERFACE&gt;</span> asInterface(                     \</span></span><br><span class="line"><span class="meta">            const ::android::sp<span class="string">&lt;::android::IBinder&gt;</span>&amp; obj);              \</span></span><br><span class="line"><span class="meta">    virtual const ::android::String16&amp; getInterfaceDescriptor() const;  \</span></span><br><span class="line"><span class="meta">    I##INTERFACE();                                                     \</span></span><br><span class="line"><span class="meta">    virtual ~I##INTERFACE();                                            \</span></span><br></pre></td></tr></table></figure>

<p>宏的参数替换成 ServiceManager 后，可以得到IServiceManager类的头文件声明：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\native\libs\binder\include\binder\IServiceManager.h</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IServiceManager</span> : <span class="keyword">public</span> IInterface</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//DECLARE_META_INTERFACE(INTERFACE) 宏定义展开如下</span></span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> ::android::String16 descriptor;</span><br><span class="line">    <span class="type">static</span> ::<span class="function">android::sp&lt;IServiceManager&gt; <span class="title">asInterface</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="type">const</span> ::android::sp&lt;::android::IBinder&gt;&amp; obj)</span></span>;</span><br><span class="line">    <span class="keyword">virtual</span> <span class="type">const</span> ::<span class="function">android::String16&amp; <span class="title">getInterfaceDescriptor</span><span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line">    <span class="built_in">IServiceManager</span>();</span><br><span class="line">    <span class="keyword">virtual</span> ~<span class="built_in">IServiceManager</span>();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> sp&lt;IBinder&gt; <span class="title">getService</span><span class="params">( <span class="type">const</span> String16&amp; name)</span> <span class="type">const</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> sp&lt;IBinder&gt; <span class="title">checkService</span><span class="params">( <span class="type">const</span> String16&amp; name)</span> <span class="type">const</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">status_t</span>    <span class="title">addService</span><span class="params">( <span class="type">const</span> String16&amp; name, <span class="type">const</span> sp&lt;IBinder&gt;&amp; service,</span></span></span><br><span class="line"><span class="params"><span class="function">                                            <span class="type">bool</span> allowIsolated = <span class="literal">false</span>)</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> Vector&lt;String16&gt;    <span class="title">listServices</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">enum</span> &#123;</span><br><span class="line">        GET_SERVICE_TRANSACTION = IBinder::FIRST_CALL_TRANSACTION,</span><br><span class="line">        CHECK_SERVICE_TRANSACTION,</span><br><span class="line">        ADD_SERVICE_TRANSACTION,</span><br><span class="line">        LIST_SERVICES_TRANSACTION,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="IMPLEMENT-META-INTERFACE宏"><a href="#IMPLEMENT-META-INTERFACE宏" class="headerlink" title="IMPLEMENT_META_INTERFACE宏"></a>IMPLEMENT_META_INTERFACE宏</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\native\libs\binder\include\binder\IInterface.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IMPLEMENT_META_INTERFACE(INTERFACE, NAME)                       \</span></span><br><span class="line"><span class="meta">    const ::android::String16 I##INTERFACE::descriptor(NAME);           \</span></span><br><span class="line"><span class="meta">    const ::android::String16&amp;                                          \</span></span><br><span class="line"><span class="meta">            I##INTERFACE::getInterfaceDescriptor() const &#123;              \</span></span><br><span class="line"><span class="meta">        return I##INTERFACE::descriptor;                                \</span></span><br><span class="line"><span class="meta">    &#125;                                                                   \</span></span><br><span class="line"><span class="meta">    ::android::sp<span class="string">&lt;I##INTERFACE&gt;</span> I##INTERFACE::asInterface(              \</span></span><br><span class="line"><span class="meta">            const ::android::sp<span class="string">&lt;::android::IBinder&gt;</span>&amp; obj)               \</span></span><br><span class="line"><span class="meta">    &#123;                                                                   \</span></span><br><span class="line"><span class="meta">        ::android::sp<span class="string">&lt;I##INTERFACE&gt;</span> intr;                               \</span></span><br><span class="line"><span class="meta">        <span class="keyword">if</span> (obj != NULL) &#123;                                              \</span></span><br><span class="line"><span class="meta">            intr = static_cast<span class="string">&lt;I##INTERFACE*&gt;</span>(                          \</span></span><br><span class="line"><span class="meta">                obj-&gt;queryLocalInterface(                               \</span></span><br><span class="line"><span class="meta">                        I##INTERFACE::descriptor).get());               \</span></span><br><span class="line"><span class="meta">            <span class="keyword">if</span> (intr == NULL) &#123;                                         \</span></span><br><span class="line"><span class="meta">                intr = new Bp##INTERFACE(obj);                          \</span></span><br><span class="line"><span class="meta">            &#125;                                                           \</span></span><br><span class="line"><span class="meta">        &#125;                                                               \</span></span><br><span class="line"><span class="meta">        return intr;                                                    \</span></span><br><span class="line"><span class="meta">    &#125;                                                                   \</span></span><br><span class="line"><span class="meta">    I##INTERFACE::I##INTERFACE() &#123; &#125;                                    \</span></span><br><span class="line"><span class="meta">    I##INTERFACE::~I##INTERFACE() &#123; &#125;                                   \</span></span><br></pre></td></tr></table></figure>

<p>再看下IServiceManager.cpp中IMPLEMENT_META_INTERFACE宏的使用</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\native\libs\binder\IServiceManager.cpp</span></span><br><span class="line"><span class="built_in">IMPLEMENT_META_INTERFACE</span>(ServiceManager, <span class="string">&quot;android.os.IServiceManager&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>把宏定义展开后，IServiceManager.cpp源码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// IMPLEMENT_META_INTERFACE(INTERFACE, NAME)宏定义展开代码如下：</span></span><br><span class="line">    <span class="type">const</span> ::<span class="function">android::String16 <span class="title">IServiceManager::descriptor</span><span class="params">(<span class="string">&quot;android.os.IServiceManager&quot;</span>)</span></span>;</span><br><span class="line">    <span class="type">const</span> ::<span class="function">android::String16&amp; <span class="title">IServiceManager::getInterfaceDescriptor</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> IServiceManager::descriptor;</span><br><span class="line">    &#125;</span><br><span class="line">    ::<span class="function">android::sp&lt;IServiceManager&gt; <span class="title">IServiceManager::asInterface</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="type">const</span> ::android::sp&lt;::android::IBinder&gt;&amp; obj)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ::android::sp&lt;IServiceManager&gt; intr;</span><br><span class="line">        <span class="keyword">if</span> (obj != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            intr = <span class="built_in">static_cast</span>&lt;IServiceManager*&gt;(</span><br><span class="line">                obj-&gt;<span class="built_in">queryLocalInterface</span>(IServiceManagerE::descriptor).<span class="built_in">get</span>());</span><br><span class="line">            <span class="keyword">if</span> (intr == <span class="literal">NULL</span>) &#123;</span><br><span class="line">                intr = <span class="keyword">new</span> <span class="built_in">BpServiceManager</span>(obj);  <span class="comment">//最终是创建了一个BpServiceManager对象</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> intr;</span><br><span class="line">    &#125;</span><br><span class="line">    IServiceManager::<span class="built_in">IServiceManager</span>() &#123; &#125;</span><br><span class="line">    IServiceManager::~<span class="built_in">IServiceManager</span>() &#123; &#125;</span><br></pre></td></tr></table></figure>

<h3 id="获取IServiceManager小结"><a href="#获取IServiceManager小结" class="headerlink" title="获取IServiceManager小结"></a>获取IServiceManager小结</h3><p>获取IServiceManager的代码可以使用如下代码来等价的表示：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//简化版代码</span></span><br><span class="line"><span class="function">sp&lt;IServiceManager&gt; <span class="title">defaultServiceManager</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (gDefaultServiceManager != <span class="literal">NULL</span>) <span class="keyword">return</span> gDefaultServiceManager;</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        AutoMutex _l(gDefaultServiceManagerLock);</span><br><span class="line">        <span class="keyword">while</span> (gDefaultServiceManager == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            gDefaultServiceManager = <span class="keyword">new</span> <span class="built_in">BpServiceManager</span>(<span class="keyword">new</span> <span class="built_in">BpBinder</span>(<span class="number">0</span>));</span><br><span class="line">            <span class="keyword">if</span> (gDefaultServiceManager == <span class="literal">NULL</span>)</span><br><span class="line">                <span class="built_in">sleep</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> gDefaultServiceManager;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>从上面代码可以看出获取的IServiceManager就是BpServiceManager对象，BpServiceManager的构造函数需要一个BpBinder对象。这两个类的作用我们在后面详细介绍。</p>
<h2 id="3-addService流程分析"><a href="#3-addService流程分析" class="headerlink" title="3. addService流程分析"></a>3. addService流程分析</h2><p>再回顾下上面两个章节内容：</p>
<ol>
<li>mediaserver进程首先创建了一个ProcessState，在ProcessState的构造函数中打开了binder设备；</li>
<li>获取IServiceManager（就是BpServiceManager对象），然后就可以与ServiceManager进行binder通信了。</li>
</ol>
<p>通过上面介绍的两点，我们就可以推测出来，BpServiceManager肯定要使用ProcessState才能进行binder通信。实际情况也的确如此，BpServiceManager通过BpBinder对象来使用ProcessState。</p>
<p>首先看下MediaServer是怎么调用addService把多媒体服务添加到ServiceManager中的：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\av\media\mediaserver\main_mediaserver.cpp</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc __unused, <span class="type">char</span> **argv __unused)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">signal</span>(SIGPIPE, SIG_IGN);</span><br><span class="line"></span><br><span class="line">    <span class="function">sp&lt;ProcessState&gt; <span class="title">proc</span><span class="params">(ProcessState::self())</span></span>;</span><br><span class="line">    <span class="function">sp&lt;IServiceManager&gt; <span class="title">sm</span><span class="params">(defaultServiceManager())</span></span>;</span><br><span class="line">    <span class="built_in">ALOGI</span>(<span class="string">&quot;ServiceManager: %p&quot;</span>, sm.<span class="built_in">get</span>());</span><br><span class="line">    <span class="built_in">InitializeIcuOrDie</span>();</span><br><span class="line">    MediaPlayerService::<span class="built_in">instantiate</span>();  <span class="comment">//初始化MediaPlayerService</span></span><br><span class="line">    ResourceManagerService::<span class="built_in">instantiate</span>();</span><br><span class="line">    <span class="built_in">registerExtensions</span>();</span><br><span class="line">    ProcessState::<span class="built_in">self</span>()-&gt;<span class="built_in">startThreadPool</span>();</span><br><span class="line">    IPCThreadState::<span class="built_in">self</span>()-&gt;<span class="built_in">joinThreadPool</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//frameworks\av\media\libmediaplayerservice\MediaPlayerService.cpp</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MediaPlayerService::instantiate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//defaultServiceManager返回的就是BpServiceManager，就是上面的分析过程。</span></span><br><span class="line">    <span class="comment">//new了一个MediaPlayerService，然后通过addService添加binder服务</span></span><br><span class="line">    <span class="built_in">defaultServiceManager</span>()-&gt;<span class="built_in">addService</span>(</span><br><span class="line">            <span class="built_in">String16</span>(<span class="string">&quot;media.player&quot;</span>), <span class="keyword">new</span> <span class="built_in">MediaPlayerService</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="BpServiceManager类"><a href="#BpServiceManager类" class="headerlink" title="BpServiceManager类"></a>BpServiceManager类</h3><p>BpServiceManager就是binder跨进程通信机制的C/S架构的client端，属于业务层，定义在frameworks\native\libs\binder\IServiceManager.cpp文件中。首先看下BpServiceManager相关联的binder家族类图：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="510px" preserveAspectRatio="none" style="width:476px;height:510px;background:#FFFFFF;" version="1.1" viewBox="0 0 476 510" width="476px" zoomAndPan="magnify"><defs/><g><!--class IBinder--><g id="elem_IBinder"><rect codeLine="2" fill="#F1F1F1" height="64.2969" id="IBinder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="86" x="36.5" y="115"/><ellipse cx="52.85" cy="131" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M53.8031,127.7813 L55.5219,127.7813 C55.9125,127.7813 56.1,127.75 56.225,127.6719 C56.4906,127.5156 56.6313,127.2344 56.6313,126.9375 C56.6313,126.6719 56.5219,126.4063 56.2875,126.2344 C56.1156,126.125 55.975,126.0938 55.5219,126.0938 L50.3813,126.0938 C49.9438,126.0938 49.8188,126.1094 49.6625,126.2031 C49.4125,126.3594 49.2563,126.6563 49.2563,126.9375 C49.2563,127.2188 49.3969,127.4688 49.6156,127.6406 C49.7719,127.75 49.9594,127.7813 50.3813,127.7813 L52.1,127.7813 L52.1,134.2969 L50.3813,134.2969 C49.9438,134.2969 49.8188,134.3125 49.6625,134.4219 C49.4125,134.5781 49.2563,134.8594 49.2563,135.1563 C49.2563,135.4063 49.3969,135.6719 49.6156,135.8281 C49.7719,135.9531 49.975,136 50.3813,136 L55.5219,136 C56.2719,136 56.6313,135.7188 56.6313,135.1563 C56.6313,134.875 56.5219,134.625 56.2875,134.4531 C56.1156,134.3281 55.975,134.2969 55.5219,134.2969 L53.8031,134.2969 L53.8031,127.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="51" x="67.15" y="135.8467">IBinder</text><line style="stroke:#181818;stroke-width:0.5;" x1="37.5" x2="121.5" y1="147" y2="147"/><ellipse cx="47.5" cy="160.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="56.5" y="163.9951">transact</text><line style="stroke:#181818;stroke-width:0.5;" x1="37.5" x2="121.5" y1="171.2969" y2="171.2969"/></g><!--class RefBase--><g id="elem_RefBase"><rect fill="#F1F1F1" height="48" id="RefBase" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="91" x="192" y="7"/><ellipse cx="207" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M209.3438,18.6719 C208.4063,18.2344 207.8125,18.0938 206.9375,18.0938 C204.3125,18.0938 202.3125,20.1719 202.3125,22.8906 L202.3125,24.0156 C202.3125,26.5938 204.4219,28.4844 207.3125,28.4844 C208.5313,28.4844 209.6875,28.1875 210.4375,27.6406 C211.0156,27.2344 211.3438,26.7813 211.3438,26.3906 C211.3438,25.9375 210.9531,25.5469 210.4844,25.5469 C210.2656,25.5469 210.0625,25.625 209.875,25.8125 C209.4219,26.2969 209.4219,26.2969 209.2344,26.3906 C208.8125,26.6563 208.125,26.7813 207.3594,26.7813 C205.3125,26.7813 204.0156,25.6875 204.0156,23.9844 L204.0156,22.8906 C204.0156,21.1094 205.2656,19.7969 207,19.7969 C207.5781,19.7969 208.1875,19.9531 208.6563,20.2031 C209.1406,20.4844 209.3125,20.7031 209.4063,21.1094 C209.4688,21.5156 209.5,21.6406 209.6406,21.7656 C209.7813,21.9063 210.0156,22.0156 210.2344,22.0156 C210.5,22.0156 210.7656,21.875 210.9375,21.6563 C211.0469,21.5 211.0781,21.3125 211.0781,20.8906 L211.0781,19.4688 C211.0781,19.0313 211.0625,18.9063 210.9688,18.75 C210.8125,18.4844 210.5313,18.3438 210.2344,18.3438 C209.9375,18.3438 209.7344,18.4375 209.5156,18.75 L209.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="221" y="27.8467">RefBase</text><line style="stroke:#181818;stroke-width:0.5;" x1="193" x2="282" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="193" x2="282" y1="47" y2="47"/></g><!--class BpBinder--><g id="elem_BpBinder"><rect fill="#F1F1F1" height="48" id="BpBinder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="99" x="30" y="239"/><ellipse cx="45" cy="255" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M47.3438,250.6719 C46.4063,250.2344 45.8125,250.0938 44.9375,250.0938 C42.3125,250.0938 40.3125,252.1719 40.3125,254.8906 L40.3125,256.0156 C40.3125,258.5938 42.4219,260.4844 45.3125,260.4844 C46.5313,260.4844 47.6875,260.1875 48.4375,259.6406 C49.0156,259.2344 49.3438,258.7813 49.3438,258.3906 C49.3438,257.9375 48.9531,257.5469 48.4844,257.5469 C48.2656,257.5469 48.0625,257.625 47.875,257.8125 C47.4219,258.2969 47.4219,258.2969 47.2344,258.3906 C46.8125,258.6563 46.125,258.7813 45.3594,258.7813 C43.3125,258.7813 42.0156,257.6875 42.0156,255.9844 L42.0156,254.8906 C42.0156,253.1094 43.2656,251.7969 45,251.7969 C45.5781,251.7969 46.1875,251.9531 46.6563,252.2031 C47.1406,252.4844 47.3125,252.7031 47.4063,253.1094 C47.4688,253.5156 47.5,253.6406 47.6406,253.7656 C47.7813,253.9063 48.0156,254.0156 48.2344,254.0156 C48.5,254.0156 48.7656,253.875 48.9375,253.6563 C49.0469,253.5 49.0781,253.3125 49.0781,252.8906 L49.0781,251.4688 C49.0781,251.0313 49.0625,250.9063 48.9688,250.75 C48.8125,250.4844 48.5313,250.3438 48.2344,250.3438 C47.9375,250.3438 47.7344,250.4375 47.5156,250.75 L47.3438,250.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="59" y="259.8467">BpBinder</text><line style="stroke:#181818;stroke-width:0.5;" x1="31" x2="128" y1="271" y2="271"/><line style="stroke:#181818;stroke-width:0.5;" x1="31" x2="128" y1="279" y2="279"/></g><!--class IPCThreadState--><g id="elem_IPCThreadState"><rect fill="#F1F1F1" height="48" id="IPCThreadState" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="145" x="7" y="347"/><ellipse cx="22" cy="363" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,358.6719 C23.4063,358.2344 22.8125,358.0938 21.9375,358.0938 C19.3125,358.0938 17.3125,360.1719 17.3125,362.8906 L17.3125,364.0156 C17.3125,366.5938 19.4219,368.4844 22.3125,368.4844 C23.5313,368.4844 24.6875,368.1875 25.4375,367.6406 C26.0156,367.2344 26.3438,366.7813 26.3438,366.3906 C26.3438,365.9375 25.9531,365.5469 25.4844,365.5469 C25.2656,365.5469 25.0625,365.625 24.875,365.8125 C24.4219,366.2969 24.4219,366.2969 24.2344,366.3906 C23.8125,366.6563 23.125,366.7813 22.3594,366.7813 C20.3125,366.7813 19.0156,365.6875 19.0156,363.9844 L19.0156,362.8906 C19.0156,361.1094 20.2656,359.7969 22,359.7969 C22.5781,359.7969 23.1875,359.9531 23.6563,360.2031 C24.1406,360.4844 24.3125,360.7031 24.4063,361.1094 C24.4688,361.5156 24.5,361.6406 24.6406,361.7656 C24.7813,361.9063 25.0156,362.0156 25.2344,362.0156 C25.5,362.0156 25.7656,361.875 25.9375,361.6563 C26.0469,361.5 26.0781,361.3125 26.0781,360.8906 L26.0781,359.4688 C26.0781,359.0313 26.0625,358.9063 25.9688,358.75 C25.8125,358.4844 25.5313,358.3438 25.2344,358.3438 C24.9375,358.3438 24.7344,358.4375 24.5156,358.75 L24.3438,358.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="36" y="367.8467">IPCThreadState</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="151" y1="379" y2="379"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="151" y1="387" y2="387"/></g><!--class ProcessState--><g id="elem_ProcessState"><rect fill="#F1F1F1" height="48" id="ProcessState" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="127" x="16" y="455"/><ellipse cx="31" cy="471" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M33.3438,466.6719 C32.4063,466.2344 31.8125,466.0938 30.9375,466.0938 C28.3125,466.0938 26.3125,468.1719 26.3125,470.8906 L26.3125,472.0156 C26.3125,474.5938 28.4219,476.4844 31.3125,476.4844 C32.5313,476.4844 33.6875,476.1875 34.4375,475.6406 C35.0156,475.2344 35.3438,474.7813 35.3438,474.3906 C35.3438,473.9375 34.9531,473.5469 34.4844,473.5469 C34.2656,473.5469 34.0625,473.625 33.875,473.8125 C33.4219,474.2969 33.4219,474.2969 33.2344,474.3906 C32.8125,474.6563 32.125,474.7813 31.3594,474.7813 C29.3125,474.7813 28.0156,473.6875 28.0156,471.9844 L28.0156,470.8906 C28.0156,469.1094 29.2656,467.7969 31,467.7969 C31.5781,467.7969 32.1875,467.9531 32.6563,468.2031 C33.1406,468.4844 33.3125,468.7031 33.4063,469.1094 C33.4688,469.5156 33.5,469.6406 33.6406,469.7656 C33.7813,469.9063 34.0156,470.0156 34.2344,470.0156 C34.5,470.0156 34.7656,469.875 34.9375,469.6563 C35.0469,469.5 35.0781,469.3125 35.0781,468.8906 L35.0781,467.4688 C35.0781,467.0313 35.0625,466.9063 34.9688,466.75 C34.8125,466.4844 34.5313,466.3438 34.2344,466.3438 C33.9375,466.3438 33.7344,466.4375 33.5156,466.75 L33.3438,466.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="45" y="475.8467">ProcessState</text><line style="stroke:#181818;stroke-width:0.5;" x1="17" x2="142" y1="487" y2="487"/><line style="stroke:#181818;stroke-width:0.5;" x1="17" x2="142" y1="495" y2="495"/></g><!--class IServiceManager--><g id="elem_IServiceManager"><rect codeLine="9" fill="#F1F1F1" height="48" id="IServiceManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="152" x="317.5" y="239"/><ellipse cx="332.5" cy="255" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M333.4531,251.7813 L335.1719,251.7813 C335.5625,251.7813 335.75,251.75 335.875,251.6719 C336.1406,251.5156 336.2813,251.2344 336.2813,250.9375 C336.2813,250.6719 336.1719,250.4063 335.9375,250.2344 C335.7656,250.125 335.625,250.0938 335.1719,250.0938 L330.0313,250.0938 C329.5938,250.0938 329.4688,250.1094 329.3125,250.2031 C329.0625,250.3594 328.9063,250.6563 328.9063,250.9375 C328.9063,251.2188 329.0469,251.4688 329.2656,251.6406 C329.4219,251.75 329.6094,251.7813 330.0313,251.7813 L331.75,251.7813 L331.75,258.2969 L330.0313,258.2969 C329.5938,258.2969 329.4688,258.3125 329.3125,258.4219 C329.0625,258.5781 328.9063,258.8594 328.9063,259.1563 C328.9063,259.4063 329.0469,259.6719 329.2656,259.8281 C329.4219,259.9531 329.625,260 330.0313,260 L335.1719,260 C335.9219,260 336.2813,259.7188 336.2813,259.1563 C336.2813,258.875 336.1719,258.625 335.9375,258.4531 C335.7656,258.3281 335.625,258.2969 335.1719,258.2969 L333.4531,258.2969 L333.4531,251.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="120" x="346.5" y="259.8467">IServiceManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="318.5" x2="468.5" y1="271" y2="271"/><line style="stroke:#181818;stroke-width:0.5;" x1="318.5" x2="468.5" y1="279" y2="279"/></g><!--class IInterface--><g id="elem_IInterface"><rect codeLine="11" fill="#F1F1F1" height="64.2969" id="IInterface" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="100" x="352.5" y="115"/><ellipse cx="367.5" cy="131" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M368.4531,127.7813 L370.1719,127.7813 C370.5625,127.7813 370.75,127.75 370.875,127.6719 C371.1406,127.5156 371.2813,127.2344 371.2813,126.9375 C371.2813,126.6719 371.1719,126.4063 370.9375,126.2344 C370.7656,126.125 370.625,126.0938 370.1719,126.0938 L365.0313,126.0938 C364.5938,126.0938 364.4688,126.1094 364.3125,126.2031 C364.0625,126.3594 363.9063,126.6563 363.9063,126.9375 C363.9063,127.2188 364.0469,127.4688 364.2656,127.6406 C364.4219,127.75 364.6094,127.7813 365.0313,127.7813 L366.75,127.7813 L366.75,134.2969 L365.0313,134.2969 C364.5938,134.2969 364.4688,134.3125 364.3125,134.4219 C364.0625,134.5781 363.9063,134.8594 363.9063,135.1563 C363.9063,135.4063 364.0469,135.6719 364.2656,135.8281 C364.4219,135.9531 364.625,136 365.0313,136 L370.1719,136 C370.9219,136 371.2813,135.7188 371.2813,135.1563 C371.2813,134.875 371.1719,134.625 370.9375,134.4531 C370.7656,134.3281 370.625,134.2969 370.1719,134.2969 L368.4531,134.2969 L368.4531,127.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="68" x="381.5" y="135.8467">IInterface</text><line style="stroke:#181818;stroke-width:0.5;" x1="353.5" x2="451.5" y1="147" y2="147"/><ellipse cx="363.5" cy="160.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="62" x="372.5" y="163.9951">asBinder</text><line style="stroke:#181818;stroke-width:0.5;" x1="353.5" x2="451.5" y1="171.2969" y2="171.2969"/></g><!--class BpInterface--><g id="elem_BpInterface"><rect codeLine="15" fill="#F1F1F1" height="48" id="BpInterface" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="222" x="230.5" y="347"/><ellipse cx="245.5" cy="363" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M247.8438,358.6719 C246.9063,358.2344 246.3125,358.0938 245.4375,358.0938 C242.8125,358.0938 240.8125,360.1719 240.8125,362.8906 L240.8125,364.0156 C240.8125,366.5938 242.9219,368.4844 245.8125,368.4844 C247.0313,368.4844 248.1875,368.1875 248.9375,367.6406 C249.5156,367.2344 249.8438,366.7813 249.8438,366.3906 C249.8438,365.9375 249.4531,365.5469 248.9844,365.5469 C248.7656,365.5469 248.5625,365.625 248.375,365.8125 C247.9219,366.2969 247.9219,366.2969 247.7344,366.3906 C247.3125,366.6563 246.625,366.7813 245.8594,366.7813 C243.8125,366.7813 242.5156,365.6875 242.5156,363.9844 L242.5156,362.8906 C242.5156,361.1094 243.7656,359.7969 245.5,359.7969 C246.0781,359.7969 246.6875,359.9531 247.1563,360.2031 C247.6406,360.4844 247.8125,360.7031 247.9063,361.1094 C247.9688,361.5156 248,361.6406 248.1406,361.7656 C248.2813,361.9063 248.5156,362.0156 248.7344,362.0156 C249,362.0156 249.2656,361.875 249.4375,361.6563 C249.5469,361.5 249.5781,361.3125 249.5781,360.8906 L249.5781,359.4688 C249.5781,359.0313 249.5625,358.9063 249.4688,358.75 C249.3125,358.4844 249.0313,358.3438 248.7344,358.3438 C248.4375,358.3438 248.2344,358.4375 248.0156,358.75 L247.8438,358.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="259.5" y="367.8467">BpInterface</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="102" x="353.5" y="344"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="100" x="354.5" y="356.1387">IServiceManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="231.5" x2="451.5" y1="379" y2="379"/><line style="stroke:#181818;stroke-width:0.5;" x1="231.5" x2="451.5" y1="387" y2="387"/></g><!--class BpRefBase--><g id="elem_BpRefBase"><rect codeLine="22" fill="#F1F1F1" height="64.2969" id="BpRefBase" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="160" x="157.5" y="115"/><ellipse cx="194.55" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M196.8938,126.6719 C195.9563,126.2344 195.3625,126.0938 194.4875,126.0938 C191.8625,126.0938 189.8625,128.1719 189.8625,130.8906 L189.8625,132.0156 C189.8625,134.5938 191.9719,136.4844 194.8625,136.4844 C196.0813,136.4844 197.2375,136.1875 197.9875,135.6406 C198.5656,135.2344 198.8938,134.7813 198.8938,134.3906 C198.8938,133.9375 198.5031,133.5469 198.0344,133.5469 C197.8156,133.5469 197.6125,133.625 197.425,133.8125 C196.9719,134.2969 196.9719,134.2969 196.7844,134.3906 C196.3625,134.6563 195.675,134.7813 194.9094,134.7813 C192.8625,134.7813 191.5656,133.6875 191.5656,131.9844 L191.5656,130.8906 C191.5656,129.1094 192.8156,127.7969 194.55,127.7969 C195.1281,127.7969 195.7375,127.9531 196.2063,128.2031 C196.6906,128.4844 196.8625,128.7031 196.9563,129.1094 C197.0188,129.5156 197.05,129.6406 197.1906,129.7656 C197.3313,129.9063 197.5656,130.0156 197.7844,130.0156 C198.05,130.0156 198.3156,129.875 198.4875,129.6563 C198.5969,129.5 198.6281,129.3125 198.6281,128.8906 L198.6281,127.4688 C198.6281,127.0313 198.6125,126.9063 198.5188,126.75 C198.3625,126.4844 198.0813,126.3438 197.7844,126.3438 C197.4875,126.3438 197.2844,126.4375 197.0656,126.75 L196.8938,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="213.45" y="135.8467">BpRefBase</text><line style="stroke:#181818;stroke-width:0.5;" x1="158.5" x2="316.5" y1="147" y2="147"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="165.5" y="157.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="177.5" y="163.9951">IBinder* mRemote</text><line style="stroke:#181818;stroke-width:0.5;" x1="158.5" x2="316.5" y1="171.2969" y2="171.2969"/></g><!--class BpServiceManager--><g id="elem_BpServiceManager"><rect fill="#F1F1F1" height="48" id="BpServiceManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="166" x="258.5" y="455"/><ellipse cx="273.5" cy="471" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M275.8438,466.6719 C274.9063,466.2344 274.3125,466.0938 273.4375,466.0938 C270.8125,466.0938 268.8125,468.1719 268.8125,470.8906 L268.8125,472.0156 C268.8125,474.5938 270.9219,476.4844 273.8125,476.4844 C275.0313,476.4844 276.1875,476.1875 276.9375,475.6406 C277.5156,475.2344 277.8438,474.7813 277.8438,474.3906 C277.8438,473.9375 277.4531,473.5469 276.9844,473.5469 C276.7656,473.5469 276.5625,473.625 276.375,473.8125 C275.9219,474.2969 275.9219,474.2969 275.7344,474.3906 C275.3125,474.6563 274.625,474.7813 273.8594,474.7813 C271.8125,474.7813 270.5156,473.6875 270.5156,471.9844 L270.5156,470.8906 C270.5156,469.1094 271.7656,467.7969 273.5,467.7969 C274.0781,467.7969 274.6875,467.9531 275.1563,468.2031 C275.6406,468.4844 275.8125,468.7031 275.9063,469.1094 C275.9688,469.5156 276,469.6406 276.1406,469.7656 C276.2813,469.9063 276.5156,470.0156 276.7344,470.0156 C277,470.0156 277.2656,469.875 277.4375,469.6563 C277.5469,469.5 277.5781,469.3125 277.5781,468.8906 L277.5781,467.4688 C277.5781,467.0313 277.5625,466.9063 277.4688,466.75 C277.3125,466.4844 277.0313,466.3438 276.7344,466.3438 C276.4375,466.3438 276.2344,466.4375 276.0156,466.75 L275.8438,466.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="287.5" y="475.8467">BpServiceManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="259.5" x2="423.5" y1="487" y2="487"/><line style="stroke:#181818;stroke-width:0.5;" x1="259.5" x2="423.5" y1="495" y2="495"/></g><!--reverse link RefBase to IBinder--><g id="link_RefBase_IBinder"><path codeLine="5" d="M190.929,65.6022 C167.034,82.8432 148.71,96.064 122.508,114.969 " fill="none" id="RefBase-backto-IBinder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="205.526,55.07,187.4183,60.7365,194.4397,70.4679,205.526,55.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link IBinder to BpBinder--><g id="link_IBinder_BpBinder"><path codeLine="6" d="M79.5,197.151 C79.5,216.005 79.5,221.647 79.5,238.845 " fill="none" id="IBinder-backto-BpBinder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="79.5,179.151,73.5,197.151,85.5,197.151,79.5,179.151" style="stroke:#181818;stroke-width:1.0;"/></g><!--link BpBinder to IPCThreadState--><g id="link_BpBinder_IPCThreadState"><path codeLine="7" d="M79.5,287 C79.5,304.658 79.5,322.941 79.5,340.678 " fill="none" id="BpBinder-to-IPCThreadState" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="79.5,346.678,83.5,337.678,79.5,341.678,75.5,337.678,79.5,346.678" style="stroke:#181818;stroke-width:1.0;"/></g><!--link IPCThreadState to ProcessState--><g id="link_IPCThreadState_ProcessState"><path codeLine="8" d="M79.5,395 C79.5,412.6584 79.5,430.9408 79.5,448.6784 " fill="none" id="IPCThreadState-to-ProcessState" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="79.5,454.6784,83.5,445.6784,79.5,449.6784,75.5,445.6784,79.5,454.6784" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RefBase to IInterface--><g id="link_RefBase_IInterface"><path codeLine="10" d="M285.6991,65.3018 C310.6531,82.5428 330.224,96.064 357.587,114.969 " fill="none" id="RefBase-backto-IInterface" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="270.89,55.07,282.2885,70.2382,289.1097,60.3654,270.89,55.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link IInterface to IServiceManager--><g id="link_IInterface_IServiceManager"><path codeLine="14" d="M398.6239,197.0951 C397.1349,215.9491 396.686,221.647 395.328,238.845 " fill="none" id="IInterface-backto-IServiceManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="400.041,179.151,392.6425,196.6227,404.6052,197.5675,400.041,179.151" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RefBase to BpRefBase--><g id="link_RefBase_BpRefBase"><path codeLine="16" d="M237.5,73.07 C237.5,90.246 237.5,95.884 237.5,114.755 " fill="none" id="RefBase-backto-BpRefBase" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="237.5,55.07,231.5,73.07,243.5,73.07,237.5,55.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BpRefBase to BpInterface--><g id="link_BpRefBase_BpInterface"><path codeLine="17" d="M258.0217,195.6279 C270.2957,223.9299 282.02,250.253 299.5,287 C309.212,307.417 320.863,330.326 329.427,346.895 " fill="none" id="BpRefBase-backto-BpInterface" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="250.86,179.114,252.5171,198.0152,263.5264,193.2407,250.86,179.114" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link IServiceManager to BpInterface--><g id="link_IServiceManager_BpInterface"><path codeLine="18" d="M374.2889,303.16 C365.6259,320.818 361.642,328.941 352.941,346.678 " fill="none" id="IServiceManager-backto-BpInterface" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="382.217,287,368.9023,300.5173,379.6756,305.8027,382.217,287" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BpInterface to BpServiceManager--><g id="link_BpInterface_BpServiceManager"><path codeLine="19" d="M341.5,413 C341.5,430.6584 341.5,436.9408 341.5,454.6784 " fill="none" id="BpInterface-backto-BpServiceManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="341.5,395,335.5,413,347.5,413,341.5,395" style="stroke:#181818;stroke-width:1.0;"/></g><!--link IBinder to BpRefBase--><g id="link_IBinder_BpRefBase"><path codeLine="21" d="M122.703,147 C134.213,147 133.722,147 145.232,147 " fill="none" id="IBinder-to-BpRefBase" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="157.232,147,151.232,143,145.232,147,151.232,151,157.232,147" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[RP4x3i8m38RtdC8RKglS07K8KmSa15p02YvKWb8b4KlfoC19E01Z1qu3lGOHRKeQoEJ7R_kpCm5HhaYTSabpB71B2jhczhe-dfTxUszONXXI6Kg2LEJ5ngOh1lR5Hc6XKHfMioLb0ZN1zCovap4d_mH5sKUT0Pmda2vcwvqYtAmC6c9ZzwDOgACahRkyXp8c3W1If_ChXc3FNsdRCvSrnAXxjffvggvLC4VkKMkxp22R1efaZ2BAtcM3vH9VoA35hy2pNJBWcdmdGVJd3tZaeRWbN45tZw4eWiEI3aTxx_eD]--></g></svg>

<p>BpServiceManager的父类BpRefBase持有了BpBinder对象，BpBinder会使用IPCThreadState，而IPCThreadState又使用ProcessState。通过这张图，BpServiceManager到ProcessState的脉络就清楚了。</p>
<p>BpInterface是个模板类，会继承它的模板参数，比如在此处继承了IServiceManager。从上面的类图中可以看出BpServiceManager并没有继承IBinder，而是通过父类BpInterface的mRemote成员变量持有了BpBinder（继承自IBinder）。BpServiceManager与ServiceManager服务端的交互都是通过BpBinder来进行的。</p>
<h3 id="MediaPlayerService类"><a href="#MediaPlayerService类" class="headerlink" title="MediaPlayerService类"></a>MediaPlayerService类</h3><p>熟悉了BpServiceManager的脉络，再先看下通过addService添加的MediaPlayerService类的脉络，然后再继续分析ServiceManager的addService的流程：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="634px" preserveAspectRatio="none" style="width:333px;height:634px;background:#FFFFFF;" version="1.1" viewBox="0 0 333 634" width="333px" zoomAndPan="magnify"><defs/><g><!--class IBinder--><g id="elem_IBinder"><rect codeLine="2" fill="#F1F1F1" height="48" id="IBinder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="83" x="32.5" y="123"/><ellipse cx="47.5" cy="139" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M48.4531,135.7813 L50.1719,135.7813 C50.5625,135.7813 50.75,135.75 50.875,135.6719 C51.1406,135.5156 51.2813,135.2344 51.2813,134.9375 C51.2813,134.6719 51.1719,134.4063 50.9375,134.2344 C50.7656,134.125 50.625,134.0938 50.1719,134.0938 L45.0313,134.0938 C44.5938,134.0938 44.4688,134.1094 44.3125,134.2031 C44.0625,134.3594 43.9063,134.6563 43.9063,134.9375 C43.9063,135.2188 44.0469,135.4688 44.2656,135.6406 C44.4219,135.75 44.6094,135.7813 45.0313,135.7813 L46.75,135.7813 L46.75,142.2969 L45.0313,142.2969 C44.5938,142.2969 44.4688,142.3125 44.3125,142.4219 C44.0625,142.5781 43.9063,142.8594 43.9063,143.1563 C43.9063,143.4063 44.0469,143.6719 44.2656,143.8281 C44.4219,143.9531 44.625,144 45.0313,144 L50.1719,144 C50.9219,144 51.2813,143.7188 51.2813,143.1563 C51.2813,142.875 51.1719,142.625 50.9375,142.4531 C50.7656,142.3281 50.625,142.2969 50.1719,142.2969 L48.4531,142.2969 L48.4531,135.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="51" x="61.5" y="143.8467">IBinder</text><line style="stroke:#181818;stroke-width:0.5;" x1="33.5" x2="114.5" y1="155" y2="155"/><line style="stroke:#181818;stroke-width:0.5;" x1="33.5" x2="114.5" y1="163" y2="163"/></g><!--class IMediaPlayerService--><g id="elem_IMediaPlayerService"><rect codeLine="3" fill="#F1F1F1" height="48" id="IMediaPlayerService" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="176" x="150" y="247"/><ellipse cx="165" cy="263" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M165.9531,259.7813 L167.6719,259.7813 C168.0625,259.7813 168.25,259.75 168.375,259.6719 C168.6406,259.5156 168.7813,259.2344 168.7813,258.9375 C168.7813,258.6719 168.6719,258.4063 168.4375,258.2344 C168.2656,258.125 168.125,258.0938 167.6719,258.0938 L162.5313,258.0938 C162.0938,258.0938 161.9688,258.1094 161.8125,258.2031 C161.5625,258.3594 161.4063,258.6563 161.4063,258.9375 C161.4063,259.2188 161.5469,259.4688 161.7656,259.6406 C161.9219,259.75 162.1094,259.7813 162.5313,259.7813 L164.25,259.7813 L164.25,266.2969 L162.5313,266.2969 C162.0938,266.2969 161.9688,266.3125 161.8125,266.4219 C161.5625,266.5781 161.4063,266.8594 161.4063,267.1563 C161.4063,267.4063 161.5469,267.6719 161.7656,267.8281 C161.9219,267.9531 162.125,268 162.5313,268 L167.6719,268 C168.4219,268 168.7813,267.7188 168.7813,267.1563 C168.7813,266.875 168.6719,266.625 168.4375,266.4531 C168.2656,266.3281 168.125,266.2969 167.6719,266.2969 L165.9531,266.2969 L165.9531,259.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="144" x="179" y="267.8467">IMediaPlayerService</text><line style="stroke:#181818;stroke-width:0.5;" x1="151" x2="325" y1="279" y2="279"/><line style="stroke:#181818;stroke-width:0.5;" x1="151" x2="325" y1="287" y2="287"/></g><!--class BBinder--><g id="elem_BBinder"><rect codeLine="4" fill="#F1F1F1" height="64.2969" id="BBinder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="106" x="9" y="239"/><ellipse cx="31.65" cy="255" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M33.9938,250.6719 C33.0563,250.2344 32.4625,250.0938 31.5875,250.0938 C28.9625,250.0938 26.9625,252.1719 26.9625,254.8906 L26.9625,256.0156 C26.9625,258.5938 29.0719,260.4844 31.9625,260.4844 C33.1813,260.4844 34.3375,260.1875 35.0875,259.6406 C35.6656,259.2344 35.9938,258.7813 35.9938,258.3906 C35.9938,257.9375 35.6031,257.5469 35.1344,257.5469 C34.9156,257.5469 34.7125,257.625 34.525,257.8125 C34.0719,258.2969 34.0719,258.2969 33.8844,258.3906 C33.4625,258.6563 32.775,258.7813 32.0094,258.7813 C29.9625,258.7813 28.6656,257.6875 28.6656,255.9844 L28.6656,254.8906 C28.6656,253.1094 29.9156,251.7969 31.65,251.7969 C32.2281,251.7969 32.8375,251.9531 33.3063,252.2031 C33.7906,252.4844 33.9625,252.7031 34.0563,253.1094 C34.1188,253.5156 34.15,253.6406 34.2906,253.7656 C34.4313,253.9063 34.6656,254.0156 34.8844,254.0156 C35.15,254.0156 35.4156,253.875 35.5875,253.6563 C35.6969,253.5 35.7281,253.3125 35.7281,252.8906 L35.7281,251.4688 C35.7281,251.0313 35.7125,250.9063 35.6188,250.75 C35.4625,250.4844 35.1813,250.3438 34.8844,250.3438 C34.5875,250.3438 34.3844,250.4375 34.1656,250.75 L33.9938,250.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="47.35" y="259.8467">BBinder</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="114" y1="271" y2="271"/><polygon fill="none" points="20,280.6484,16,286.6484,24,286.6484" style="stroke:#1963A0;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="29" y="287.9951">onTransact</text><line style="stroke:#181818;stroke-width:0.5;" x1="10" x2="114" y1="295.2969" y2="295.2969"/></g><!--class IInterface--><g id="elem_IInterface"><rect codeLine="7" fill="#F1F1F1" height="64.2969" id="IInterface" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="102" x="175" y="115"/><ellipse cx="190" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M192.3438,126.6719 C191.4063,126.2344 190.8125,126.0938 189.9375,126.0938 C187.3125,126.0938 185.3125,128.1719 185.3125,130.8906 L185.3125,132.0156 C185.3125,134.5938 187.4219,136.4844 190.3125,136.4844 C191.5313,136.4844 192.6875,136.1875 193.4375,135.6406 C194.0156,135.2344 194.3438,134.7813 194.3438,134.3906 C194.3438,133.9375 193.9531,133.5469 193.4844,133.5469 C193.2656,133.5469 193.0625,133.625 192.875,133.8125 C192.4219,134.2969 192.4219,134.2969 192.2344,134.3906 C191.8125,134.6563 191.125,134.7813 190.3594,134.7813 C188.3125,134.7813 187.0156,133.6875 187.0156,131.9844 L187.0156,130.8906 C187.0156,129.1094 188.2656,127.7969 190,127.7969 C190.5781,127.7969 191.1875,127.9531 191.6563,128.2031 C192.1406,128.4844 192.3125,128.7031 192.4063,129.1094 C192.4688,129.5156 192.5,129.6406 192.6406,129.7656 C192.7813,129.9063 193.0156,130.0156 193.2344,130.0156 C193.5,130.0156 193.7656,129.875 193.9375,129.6563 C194.0469,129.5 194.0781,129.3125 194.0781,128.8906 L194.0781,127.4688 C194.0781,127.0313 194.0625,126.9063 193.9688,126.75 C193.8125,126.4844 193.5313,126.3438 193.2344,126.3438 C192.9375,126.3438 192.7344,126.4375 192.5156,126.75 L192.3438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="204" y="135.8467">IInterface</text><line style="stroke:#181818;stroke-width:0.5;" x1="176" x2="276" y1="147" y2="147"/><ellipse cx="186" cy="160.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="195" y="163.9951">asBinder</text><line style="stroke:#181818;stroke-width:0.5;" x1="176" x2="276" y1="171.2969" y2="171.2969"/></g><!--class RefBase--><g id="elem_RefBase"><rect fill="#F1F1F1" height="48" id="RefBase" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="91" x="92.5" y="7"/><ellipse cx="107.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M109.8438,18.6719 C108.9063,18.2344 108.3125,18.0938 107.4375,18.0938 C104.8125,18.0938 102.8125,20.1719 102.8125,22.8906 L102.8125,24.0156 C102.8125,26.5938 104.9219,28.4844 107.8125,28.4844 C109.0313,28.4844 110.1875,28.1875 110.9375,27.6406 C111.5156,27.2344 111.8438,26.7813 111.8438,26.3906 C111.8438,25.9375 111.4531,25.5469 110.9844,25.5469 C110.7656,25.5469 110.5625,25.625 110.375,25.8125 C109.9219,26.2969 109.9219,26.2969 109.7344,26.3906 C109.3125,26.6563 108.625,26.7813 107.8594,26.7813 C105.8125,26.7813 104.5156,25.6875 104.5156,23.9844 L104.5156,22.8906 C104.5156,21.1094 105.7656,19.7969 107.5,19.7969 C108.0781,19.7969 108.6875,19.9531 109.1563,20.2031 C109.6406,20.4844 109.8125,20.7031 109.9063,21.1094 C109.9688,21.5156 110,21.6406 110.1406,21.7656 C110.2813,21.9063 110.5156,22.0156 110.7344,22.0156 C111,22.0156 111.2656,21.875 111.4375,21.6563 C111.5469,21.5 111.5781,21.3125 111.5781,20.8906 L111.5781,19.4688 C111.5781,19.0313 111.5625,18.9063 111.4688,18.75 C111.3125,18.4844 111.0313,18.3438 110.7344,18.3438 C110.4375,18.3438 110.2344,18.4375 110.0156,18.75 L109.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="121.5" y="27.8467">RefBase</text><line style="stroke:#181818;stroke-width:0.5;" x1="93.5" x2="182.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="93.5" x2="182.5" y1="47" y2="47"/></g><!--class BnInterface--><g id="elem_BnInterface"><rect codeLine="12" fill="#F1F1F1" height="48" id="BnInterface" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="240" x="30" y="363"/><ellipse cx="45" cy="379" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M47.3438,374.6719 C46.4063,374.2344 45.8125,374.0938 44.9375,374.0938 C42.3125,374.0938 40.3125,376.1719 40.3125,378.8906 L40.3125,380.0156 C40.3125,382.5938 42.4219,384.4844 45.3125,384.4844 C46.5313,384.4844 47.6875,384.1875 48.4375,383.6406 C49.0156,383.2344 49.3438,382.7813 49.3438,382.3906 C49.3438,381.9375 48.9531,381.5469 48.4844,381.5469 C48.2656,381.5469 48.0625,381.625 47.875,381.8125 C47.4219,382.2969 47.4219,382.2969 47.2344,382.3906 C46.8125,382.6563 46.125,382.7813 45.3594,382.7813 C43.3125,382.7813 42.0156,381.6875 42.0156,379.9844 L42.0156,378.8906 C42.0156,377.1094 43.2656,375.7969 45,375.7969 C45.5781,375.7969 46.1875,375.9531 46.6563,376.2031 C47.1406,376.4844 47.3125,376.7031 47.4063,377.1094 C47.4688,377.5156 47.5,377.6406 47.6406,377.7656 C47.7813,377.9063 48.0156,378.0156 48.2344,378.0156 C48.5,378.0156 48.7656,377.875 48.9375,377.6563 C49.0469,377.5 49.0781,377.3125 49.0781,376.8906 L49.0781,375.4688 C49.0781,375.0313 49.0625,374.9063 48.9688,374.75 C48.8125,374.4844 48.5313,374.3438 48.2344,374.3438 C47.9375,374.3438 47.7344,374.4375 47.5156,374.75 L47.3438,374.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="59" y="383.8467">BnInterface</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="121" x="152" y="360"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="119" x="153" y="372.1387">IMediaPlayerService</text><line style="stroke:#181818;stroke-width:0.5;" x1="31" x2="269" y1="395" y2="395"/><line style="stroke:#181818;stroke-width:0.5;" x1="31" x2="269" y1="403" y2="403"/></g><!--class BnMediaPlayerService--><g id="elem_BnMediaPlayerService"><rect fill="#F1F1F1" height="48" id="BnMediaPlayerService" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="190" x="55" y="471"/><ellipse cx="70" cy="487" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M72.3438,482.6719 C71.4063,482.2344 70.8125,482.0938 69.9375,482.0938 C67.3125,482.0938 65.3125,484.1719 65.3125,486.8906 L65.3125,488.0156 C65.3125,490.5938 67.4219,492.4844 70.3125,492.4844 C71.5313,492.4844 72.6875,492.1875 73.4375,491.6406 C74.0156,491.2344 74.3438,490.7813 74.3438,490.3906 C74.3438,489.9375 73.9531,489.5469 73.4844,489.5469 C73.2656,489.5469 73.0625,489.625 72.875,489.8125 C72.4219,490.2969 72.4219,490.2969 72.2344,490.3906 C71.8125,490.6563 71.125,490.7813 70.3594,490.7813 C68.3125,490.7813 67.0156,489.6875 67.0156,487.9844 L67.0156,486.8906 C67.0156,485.1094 68.2656,483.7969 70,483.7969 C70.5781,483.7969 71.1875,483.9531 71.6563,484.2031 C72.1406,484.4844 72.3125,484.7031 72.4063,485.1094 C72.4688,485.5156 72.5,485.6406 72.6406,485.7656 C72.7813,485.9063 73.0156,486.0156 73.2344,486.0156 C73.5,486.0156 73.7656,485.875 73.9375,485.6563 C74.0469,485.5 74.0781,485.3125 74.0781,484.8906 L74.0781,483.4688 C74.0781,483.0313 74.0625,482.9063 73.9688,482.75 C73.8125,482.4844 73.5313,482.3438 73.2344,482.3438 C72.9375,482.3438 72.7344,482.4375 72.5156,482.75 L72.3438,482.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="84" y="491.8467">BnMediaPlayerService</text><line style="stroke:#181818;stroke-width:0.5;" x1="56" x2="244" y1="503" y2="503"/><line style="stroke:#181818;stroke-width:0.5;" x1="56" x2="244" y1="511" y2="511"/></g><!--class MediaPlayerService--><g id="elem_MediaPlayerService"><rect fill="#F1F1F1" height="48" id="MediaPlayerService" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="171" x="64.5" y="579"/><ellipse cx="79.5" cy="595" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M81.8438,590.6719 C80.9063,590.2344 80.3125,590.0938 79.4375,590.0938 C76.8125,590.0938 74.8125,592.1719 74.8125,594.8906 L74.8125,596.0156 C74.8125,598.5938 76.9219,600.4844 79.8125,600.4844 C81.0313,600.4844 82.1875,600.1875 82.9375,599.6406 C83.5156,599.2344 83.8438,598.7813 83.8438,598.3906 C83.8438,597.9375 83.4531,597.5469 82.9844,597.5469 C82.7656,597.5469 82.5625,597.625 82.375,597.8125 C81.9219,598.2969 81.9219,598.2969 81.7344,598.3906 C81.3125,598.6563 80.625,598.7813 79.8594,598.7813 C77.8125,598.7813 76.5156,597.6875 76.5156,595.9844 L76.5156,594.8906 C76.5156,593.1094 77.7656,591.7969 79.5,591.7969 C80.0781,591.7969 80.6875,591.9531 81.1563,592.2031 C81.6406,592.4844 81.8125,592.7031 81.9063,593.1094 C81.9688,593.5156 82,593.6406 82.1406,593.7656 C82.2813,593.9063 82.5156,594.0156 82.7344,594.0156 C83,594.0156 83.2656,593.875 83.4375,593.6563 C83.5469,593.5 83.5781,593.3125 83.5781,592.8906 L83.5781,591.4688 C83.5781,591.0313 83.5625,590.9063 83.4688,590.75 C83.3125,590.4844 83.0313,590.3438 82.7344,590.3438 C82.4375,590.3438 82.2344,590.4375 82.0156,590.75 L81.8438,590.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="93.5" y="599.8467">MediaPlayerService</text><line style="stroke:#181818;stroke-width:0.5;" x1="65.5" x2="234.5" y1="611" y2="611"/><line style="stroke:#181818;stroke-width:0.5;" x1="65.5" x2="234.5" y1="619" y2="619"/></g><!--reverse link RefBase to IInterface--><g id="link_RefBase_IInterface"><path codeLine="10" d="M166.8071,69.3185 C180.0661,86.4945 187.314,95.884 201.881,114.755 " fill="none" id="RefBase-backto-IInterface" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="155.808,55.07,162.0576,72.9849,171.5566,65.6521,155.808,55.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link IInterface to IMediaPlayerService--><g id="link_IInterface_IMediaPlayerService"><path codeLine="11" d="M230.8207,197.0146 C232.8897,218.0526 233.818,227.481 235.704,246.661 " fill="none" id="IInterface-backto-IMediaPlayerService" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="229.059,179.101,224.8495,197.6018,236.7919,196.4273,229.059,179.101" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RefBase to IBinder--><g id="link_RefBase_IBinder"><path codeLine="13" d="M116.237,70.7655 C105.133,90.5435 98.0302,103.196 86.9321,122.965 " fill="none" id="RefBase-backto-IBinder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="125.049,55.07,111.0052,67.8282,121.4689,73.7028,125.049,55.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link IBinder to BBinder--><g id="link_IBinder_BBinder"><path codeLine="14" d="M69.9527,189.1476 C68.0759,208.2296 67.1615,217.525 65.093,238.555 " fill="none" id="IBinder-backto-BBinder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="71.7146,171.234,63.9815,188.5603,75.9239,189.7349,71.7146,171.234" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BBinder to BnInterface--><g id="link_BBinder_BnInterface"><path codeLine="15" d="M97.0455,317.3995 C111.5997,336.2535 118.85,345.647 132.126,362.845 " fill="none" id="BBinder-backto-BnInterface" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="86.0464,303.151,92.2959,321.0659,101.795,313.7332,86.0464,303.151" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link IMediaPlayerService to BnInterface--><g id="link_IMediaPlayerService_BnInterface"><path codeLine="16" d="M209.1927,309.3184 C193.9247,329.0964 183.042,343.196 167.782,362.965 " fill="none" id="IMediaPlayerService-backto-BnInterface" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="220.192,295.07,204.4433,305.6519,213.9422,312.9848,220.192,295.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BnInterface to BnMediaPlayerService--><g id="link_BnInterface_BnMediaPlayerService"><path codeLine="17" d="M150,429 C150,446.658 150,452.941 150,470.678 " fill="none" id="BnInterface-backto-BnMediaPlayerService" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="150,411,144,429,156,429,150,411" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BnMediaPlayerService to MediaPlayerService--><g id="link_BnMediaPlayerService_MediaPlayerService"><path codeLine="18" d="M150,537 C150,554.6584 150,560.9408 150,578.6784 " fill="none" id="BnMediaPlayerService-backto-MediaPlayerService" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="150,519,144,537,156,537,150,519" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[KrVmJKt9J0p8IQnCBGfEBIhBJ4vzldlviyxzJritFz-ycoiphoIrA2qnELN1qoapBoMr25a4KozNSavYSR624qIjGZMN0X3KvUU552Nc5IScbt3LGbLuUiADWIZIJYo6Mb3B5PIQvfHOdAfWKwEhYwII2qaJH0gt0_BWIcsmgB93im9gCvI624BzmEM48fY7v1fCSp4L8R5XabWSZKqGeXnJ7000]--></g></svg>

<p>可以看到MediaPlayerService继承自BBinder，就是binder C/S架构的服务端，是媒体服务(“media.player”)的提供者。通过ServiceManager系统把MediaPlayerService注册到binder系统中。</p>
<p>MediaPlayerService类并不是我们的主角，这里介绍MediaPlayerService的目的是来熟悉一下服务和BBinder的关系。addService的服务端的主角是service_manager（定义在service_manager.c中，会面会详细介绍），但是service_manager并没有接入BBinder框架，而是通过直接打开binder设备来通信。作为binder服务的管理者，service_manager在实现上就和普通的binder服务不同。</p>
<h3 id="BpServiceManager-addService"><a href="#BpServiceManager-addService" class="headerlink" title="BpServiceManager::addService"></a>BpServiceManager::addService</h3><p>来看下BpServiceManager的addService是如何实现的：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\native\libs\binder\IServiceManager.cpp</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BpServiceManager</span> : <span class="keyword">public</span> BpInterface&lt;IServiceManager&gt;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">BpServiceManager</span><span class="params">(<span class="type">const</span> sp&lt;IBinder&gt;&amp; impl)</span>  <span class="comment">//impl参数就是BpBinder(0)</span></span></span><br><span class="line"><span class="function">        : BpInterface&lt;IServiceManager&gt;(impl)  &#123;</span>&#125;</span><br><span class="line">    ......</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">status_t</span> <span class="title">addService</span><span class="params">(<span class="type">const</span> String16&amp; name, <span class="type">const</span> sp&lt;IBinder&gt;&amp; service,</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="type">bool</span> allowIsolated)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Parcel data, reply;</span><br><span class="line">        <span class="comment">//IServiceManager::getInterfaceDescriptor()返回&quot;android.os.IServiceManager&quot;</span></span><br><span class="line">        data.<span class="built_in">writeInterfaceToken</span>(IServiceManager::<span class="built_in">getInterfaceDescriptor</span>());</span><br><span class="line">        data.<span class="built_in">writeString16</span>(name);  <span class="comment">//name就是&quot;media.player&quot;</span></span><br><span class="line">        data.<span class="built_in">writeStrongBinder</span>(service);  <span class="comment">//service就是MediaPlayerService类对象</span></span><br><span class="line">        data.<span class="built_in">writeInt32</span>(allowIsolated ? <span class="number">1</span> : <span class="number">0</span>);  <span class="comment">//allowIsolated默认是false，所以此处为0</span></span><br><span class="line">        <span class="comment">//remote()返回mRemote（就是BpBinder），此处就是调用BpBinder的transact</span></span><br><span class="line">        <span class="type">status_t</span> err = <span class="built_in">remote</span>()-&gt;<span class="built_in">transact</span>(ADD_SERVICE_TRANSACTION, data, &amp;reply);</span><br><span class="line">        <span class="keyword">return</span> err == NO_ERROR ? reply.<span class="built_in">readExceptionCode</span>() : err;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>BpServiceManager的构造函数没有任何自定义实现，直接把参数（BpBinder）交给了父类。addService函数首先把service信息填充到Parcel中，然后调用BpBinder的transact。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\native\libs\binder\BpBinder.cpp</span></span><br><span class="line"><span class="function"><span class="type">status_t</span> <span class="title">BpBinder::transact</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">uint32_t</span> code, <span class="type">const</span> Parcel&amp; data, Parcel* reply, <span class="type">uint32_t</span> flags)</span>  <span class="comment">//flags默认是0</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Once a binder has died, it will never come back to life.</span></span><br><span class="line">    <span class="keyword">if</span> (mAlive) &#123;</span><br><span class="line">        <span class="type">status_t</span> status = IPCThreadState::<span class="built_in">self</span>()-&gt;<span class="built_in">transact</span>(</span><br><span class="line">            mHandle, code, data, reply, flags);</span><br><span class="line">        <span class="keyword">if</span> (status == DEAD_OBJECT) mAlive = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> DEAD_OBJECT;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>BpBinder的transact啥也没干，直接把请求交给了IPCThreadState的transact。首先看下IPCThreadState::self()的实现：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\native\libs\binder\IPCThreadState.cpp</span></span><br><span class="line"><span class="type">static</span> <span class="type">pthread_mutex_t</span> gTLSMutex = PTHREAD_MUTEX_INITIALIZER;</span><br><span class="line"><span class="type">static</span> <span class="type">bool</span> gHaveTLS = <span class="literal">false</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">pthread_key_t</span> gTLS = <span class="number">0</span>; <span class="comment">//pthread_key_t是一个TheadLocal变量的key。</span></span><br><span class="line"></span><br><span class="line"><span class="function">IPCThreadState* <span class="title">IPCThreadState::self</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (gHaveTLS) &#123; <span class="comment">//首次调用gHavsTLS是false</span></span><br><span class="line">restart:</span><br><span class="line">        <span class="type">const</span> <span class="type">pthread_key_t</span> k = gTLS;</span><br><span class="line">        IPCThreadState* st = (IPCThreadState*)<span class="built_in">pthread_getspecific</span>(k);</span><br><span class="line">        <span class="keyword">if</span> (st) <span class="keyword">return</span> st;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> IPCThreadState;  <span class="comment">//IPCThreadState的构造函数会把自己加到ThreadLocal变量中</span></span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">    <span class="built_in">pthread_mutex_lock</span>(&amp;gTLSMutex);</span><br><span class="line">    <span class="keyword">if</span> (!gHaveTLS) &#123;</span><br><span class="line">        <span class="comment">//创建一个ThreadLocal变量，key存放到gTLS全局标量中</span></span><br><span class="line">        <span class="type">int</span> key_create_value = <span class="built_in">pthread_key_create</span>(&amp;gTLS, threadDestructor);</span><br><span class="line">        <span class="keyword">if</span> (key_create_value != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">pthread_mutex_unlock</span>(&amp;gTLSMutex);</span><br><span class="line">            <span class="built_in">ALOGW</span>(<span class="string">&quot;IPCThreadState::self() unable to create TLS key, expect a crash: %s\n&quot;</span>, <span class="built_in">strerror</span>(key_create_value));</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        gHaveTLS = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pthread_mutex_unlock</span>(&amp;gTLSMutex);</span><br><span class="line">    <span class="keyword">goto</span> restart;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>IPCThreadState::self()的作用就是创建了一个特定线程（TheadLocal数据）的IPCThreadState，所以每个线程维护一个IPCThreadState对象。关于native层ThreadLocal介绍可以参考 <a href="https://linux.die.net/man/3/pthread_key_create">https://linux.die.net/man/3/pthread_key_create</a>。再看下IPCThreadState构造函数：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">IPCThreadState::<span class="built_in">IPCThreadState</span>()</span><br><span class="line">    : <span class="built_in">mProcess</span>(ProcessState::<span class="built_in">self</span>()),  <span class="comment">//ProcessState又出现了，ProcessState会打开binder设备</span></span><br><span class="line">      <span class="built_in">mStrictModePolicy</span>(<span class="number">0</span>),</span><br><span class="line">      <span class="built_in">mLastTransactionBinderFlags</span>(<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">pthread_setspecific</span>(gTLS, <span class="keyword">this</span>);  <span class="comment">//把自己放到ThreadLocal中</span></span><br><span class="line">    <span class="built_in">clearCaller</span>();</span><br><span class="line">    mIn.<span class="built_in">setDataCapacity</span>(<span class="number">256</span>);  <span class="comment">//mIn是个Parcel对象，用于存储从binder接收的数据</span></span><br><span class="line">    mOut.<span class="built_in">setDataCapacity</span>(<span class="number">256</span>); <span class="comment">//mOut也是Parcel对象，用于存储向binder发送的数据</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>IPCThreadState和ProcessState的关系就清楚了，通过mProcess变量持有了ProcessState对象的引用。</p>
<h3 id="IPCThreadState-transact"><a href="#IPCThreadState-transact" class="headerlink" title="IPCThreadState::transact()"></a>IPCThreadState::transact()</h3><p>看一下IPCThreadState::transact的实现：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//handle = 0，就是ServiceManager在binder系统中的标识</span></span><br><span class="line"><span class="comment">//code = ADD_SERVICE_TRANSACTION</span></span><br><span class="line"><span class="comment">//data 就是BpServiceManager.addService中组装的要通过binder发送出去的Parcel数据</span></span><br><span class="line"><span class="comment">//flags = 0</span></span><br><span class="line"><span class="function"><span class="type">status_t</span> <span class="title">IPCThreadState::transact</span><span class="params">(<span class="type">int32_t</span> handle,</span></span></span><br><span class="line"><span class="params"><span class="function">                                  <span class="type">uint32_t</span> code, <span class="type">const</span> Parcel&amp; data,</span></span></span><br><span class="line"><span class="params"><span class="function">                                  Parcel* reply, <span class="type">uint32_t</span> flags)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">status_t</span> err = data.<span class="built_in">errorCheck</span>();</span><br><span class="line"></span><br><span class="line">    flags |= TF_ACCEPT_FDS;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">if</span> (err == NO_ERROR) &#123;</span><br><span class="line">        <span class="built_in">LOG_ONEWAY</span>(<span class="string">&quot;&gt;&gt;&gt;&gt; SEND from pid %d uid %d %s&quot;</span>, <span class="built_in">getpid</span>(), <span class="built_in">getuid</span>(),</span><br><span class="line">            (flags &amp; TF_ONE_WAY) == <span class="number">0</span> ? <span class="string">&quot;READ REPLY&quot;</span> : <span class="string">&quot;ONE WAY&quot;</span>);</span><br><span class="line">        err = <span class="built_in">writeTransactionData</span>(BC_TRANSACTION, flags, handle, code, data, <span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">if</span> ((flags &amp; TF_ONE_WAY) == <span class="number">0</span>) &#123;  <span class="comment">//flags初始值是0，走该分支</span></span><br><span class="line">        ......</span><br><span class="line">        <span class="keyword">if</span> (reply) &#123; <span class="comment">//replay不为空，走if分支</span></span><br><span class="line">            err = <span class="built_in">waitForResponse</span>(reply);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Parcel fakeReply;</span><br><span class="line">            err = <span class="built_in">waitForResponse</span>(&amp;fakeReply);</span><br><span class="line">        &#125;</span><br><span class="line">        ......</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        err = <span class="built_in">waitForResponse</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> err;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>IPCThreadState::transact有两个重点函数调用：writeTransactionData和waitForResponse。分别看下。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">status_t</span> <span class="title">IPCThreadState::writeTransactionData</span><span class="params">(<span class="type">int32_t</span> cmd, <span class="type">uint32_t</span> binderFlags,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">int32_t</span> handle, <span class="type">uint32_t</span> code, <span class="type">const</span> Parcel&amp; data, <span class="type">status_t</span>* statusBuffer)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    binder_transaction_data tr;</span><br><span class="line"></span><br><span class="line">    tr.target.ptr = <span class="number">0</span>; <span class="comment">/* Don&#x27;t pass uninitialized stack data to a remote process */</span></span><br><span class="line">    tr.target.handle = handle;  <span class="comment">//target表示发送给谁，此处handle为0就代表ServiceManager</span></span><br><span class="line">    tr.code = code;  <span class="comment">//code值为ADD_SERVICE_TRANSACTION，addService</span></span><br><span class="line">    tr.flags = binderFlags;</span><br><span class="line">    tr.cookie = <span class="number">0</span>;</span><br><span class="line">    tr.sender_pid = <span class="number">0</span>;</span><br><span class="line">    tr.sender_euid = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">status_t</span> err = data.<span class="built_in">errorCheck</span>();</span><br><span class="line">    <span class="keyword">if</span> (err == NO_ERROR) &#123;</span><br><span class="line">        tr.data_size = data.<span class="built_in">ipcDataSize</span>(); <span class="comment">//Parcel数据大小</span></span><br><span class="line">        <span class="comment">//ptr.buffer就是Parcel的mData的地址</span></span><br><span class="line">        tr.data.ptr.buffer = data.<span class="built_in">ipcData</span>();</span><br><span class="line">        tr.offsets_size = data.<span class="built_in">ipcObjectsCount</span>()*<span class="built_in">sizeof</span>(<span class="type">binder_size_t</span>);</span><br><span class="line">        <span class="comment">//ptr.offsets指向Parcel的mObjects</span></span><br><span class="line">        tr.data.ptr.offsets = data.<span class="built_in">ipcObjects</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (statusBuffer) &#123;</span><br><span class="line">        ......</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">return</span> (mLastError = err);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//只是把数据写到mOut中，并没有发送出去</span></span><br><span class="line">    <span class="comment">//需要注意下数据结构的转换：把输入的Parcel转换成binder_transaction_data</span></span><br><span class="line">    mOut.<span class="built_in">writeInt32</span>(cmd);  <span class="comment">//cmd=BC_TRANSACTION</span></span><br><span class="line">    mOut.<span class="built_in">write</span>(&amp;tr, <span class="built_in">sizeof</span>(tr));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> NO_ERROR;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>writeTransactionData把要通过binder传输的数据写入mOut。这里需要注意下数据结构的变更，首先把原始的Parcel(data)转换成binder_transaction_data结构体，然后又写入到mOut中，而mOut也是个Parcel对象。</p>
<h3 id="Parcel等数据结构分析"><a href="#Parcel等数据结构分析" class="headerlink" title="Parcel等数据结构分析"></a>Parcel等数据结构分析</h3><p>我们有必要分析一下传输数据在这个过程中的转换过程。我们都知道，binder通信都是使用Parcel作为数据载体的，Parcel在传输基本数据类型（比如int、string）时，都直接写到成员变量mData指针指向的内存中。Parcel对象构建时，mData并没有指向任何内存，当真正写入数据时才通过memcpy来按需申请内存。mDataSize表示已经写入的数据大小，mDataPos指针指向下次要写入数据的位置。</p>
<p>再回顾一下<code>BpServiceManager::addService</code>拼装初始Parcel数据的代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//class BpServiceManager</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">status_t</span> <span class="title">addService</span><span class="params">(<span class="type">const</span> String16&amp; name, <span class="type">const</span> sp&lt;IBinder&gt;&amp; service,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="type">bool</span> allowIsolated)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Parcel data, reply;</span><br><span class="line">    data.<span class="built_in">writeInterfaceToken</span>(IServiceManager::<span class="built_in">getInterfaceDescriptor</span>());</span><br><span class="line">    data.<span class="built_in">writeString16</span>(name);</span><br><span class="line">    data.<span class="built_in">writeStrongBinder</span>(service);</span><br><span class="line">    data.<span class="built_in">writeInt32</span>(allowIsolated ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">    <span class="type">status_t</span> err = <span class="built_in">remote</span>()-&gt;<span class="built_in">transact</span>(ADD_SERVICE_TRANSACTION, data, &amp;reply);</span><br><span class="line">    <span class="keyword">return</span> err == NO_ERROR ? reply.<span class="built_in">readExceptionCode</span>() : err;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上述代码执行后，Parcel中mData和mObjects两个成员变量可以用下图来表示：</p>
<!--  -->

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: parcel_data Pages: 1 -->
<svg width="532pt" height="116pt"
 viewBox="0.00 0.00 531.50 116.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 112)">
<title>parcel_data</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-112 527.5,-112 527.5,4 -4,4"/>
<!-- mData -->
<g id="node1" class="node">
<title>mData</title>
<polygon fill="none" stroke="#000000" points="6,-79 6,-101 49,-101 49,-79 6,-79"/>
<text text-anchor="start" x="8.8415" y="-85.4" font-family="Times,serif" font-size="14.00" fill="#000000">mData</text>
</g>
<!-- data -->
<g id="node2" class="node">
<title>data</title>
<polygon fill="none" stroke="#000000" points="73,-79 73,-101 96,-101 96,-79 73,-79"/>
<text text-anchor="start" x="75.9474" y="-85.4" font-family="Times,serif" font-size="14.00" fill="#000000">len</text>
<polygon fill="none" stroke="#000000" points="96,-79 96,-101 281,-101 281,-79 96,-79"/>
<text text-anchor="start" x="98.7012" y="-85.4" font-family="Times,serif" font-size="14.00" fill="#000000">“android.os.IServiceManager”</text>
<polygon fill="none" stroke="#000000" points="281,-79 281,-101 304,-101 304,-79 281,-79"/>
<text text-anchor="start" x="283.9474" y="-85.4" font-family="Times,serif" font-size="14.00" fill="#000000">len</text>
<polygon fill="none" stroke="#000000" points="304,-79 304,-101 403,-101 403,-79 304,-79"/>
<text text-anchor="start" x="306.6546" y="-85.4" font-family="Times,serif" font-size="14.00" fill="#000000">“media.player”</text>
<polygon fill="none" stroke="#000000" points="403,-79 403,-101 511,-101 511,-79 403,-79"/>
<text text-anchor="start" x="405.6837" y="-85.4" font-family="Times,serif" font-size="14.00" fill="#000000">flat_binder_object</text>
<polygon fill="none" stroke="#000000" points="511,-79 511,-101 524,-101 524,-79 511,-79"/>
<text text-anchor="start" x="514" y="-85.4" font-family="Times,serif" font-size="14.00" fill="#000000">0</text>
</g>
<!-- mData&#45;&gt;data -->
<g id="edge1" class="edge">
<title>mData:p0&#45;&gt;data:p0</title>
<path fill="none" stroke="#000000" d="M49.1823,-90C53.9239,-90 58.7438,-90 62.7958,-90"/>
<polygon fill="#000000" stroke="#000000" points="63,-93.5001 73,-90 63,-86.5001 63,-93.5001"/>
</g>
<!-- mObjects -->
<g id="node3" class="node">
<title>mObjects</title>
<polygon fill="none" stroke="#000000" points="7,-7 7,-29 66,-29 66,-7 7,-7"/>
<text text-anchor="start" x="9.6739" y="-13.4" font-family="Times,serif" font-size="14.00" fill="#000000">mObjects</text>
</g>
<!-- mData&#45;&gt;mObjects -->
<!-- objects -->
<g id="node4" class="node">
<title>objects</title>
<polygon fill="none" stroke="#000000" points="397,-7 397,-29 410,-29 410,-7 397,-7"/>
<text text-anchor="start" x="400" y="-13.4" font-family="Times,serif" font-size="14.00" fill="#000000">0</text>
<polygon fill="none" stroke="#000000" points="410,-7 410,-29 423,-29 423,-7 410,-7"/>
<text text-anchor="start" x="413" y="-13.4" font-family="Times,serif" font-size="14.00" fill="#000000">1</text>
<polygon fill="none" stroke="#000000" points="423,-7 423,-29 436,-29 436,-7 423,-7"/>
<text text-anchor="start" x="426" y="-13.4" font-family="Times,serif" font-size="14.00" fill="#000000">2</text>
<polygon fill="none" stroke="#000000" points="436,-7 436,-29 449,-29 449,-7 436,-7"/>
<text text-anchor="start" x="439" y="-13.4" font-family="Times,serif" font-size="14.00" fill="#000000">3</text>
</g>
<!-- mObjects&#45;&gt;objects -->
<g id="edge2" class="edge">
<title>mObjects&#45;&gt;objects</title>
<path fill="none" stroke="#000000" d="M65.8564,-18C172.3993,-18 278.9422,-18 385.4851,-18"/>
<polygon fill="#000000" stroke="#000000" points="385.7957,-21.5001 395.7957,-18 385.7957,-14.5001 385.7957,-21.5001"/>
</g>
<!-- objects&#45;&gt;data -->
<g id="edge3" class="edge">
<title>objects:n&#45;&gt;data:sw</title>
<path fill="none" stroke="#000000" d="M403,-29C403,-29 403,-54.2716 403,-68.8818"/>
<polygon fill="#000000" stroke="#000000" points="399.5001,-69 403,-79 406.5001,-69 399.5001,-69"/>
</g>
</g>
</svg>


<p>可以看到有个flat_binder_object结构体，这个结构体就是通过调用<code>Parcel::writeStrongBinder</code>写入的<code>sp&lt;IBinder&gt;</code>(本例中就是MediaPlayerService)。writeStrongBinder的实现与基本数据结构的写入是有区别的，专门用于承载IBinder对象的传输任务。来看下代码实现：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\native\libs\binder\Parcel.cpp</span></span><br><span class="line"><span class="function"><span class="type">status_t</span> <span class="title">Parcel::writeStrongBinder</span><span class="params">(<span class="type">const</span> sp&lt;IBinder&gt;&amp; val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">flatten_binder</span>(ProcessState::<span class="built_in">self</span>(), val, <span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">status_t</span> <span class="title">flatten_binder</span><span class="params">(<span class="type">const</span> sp&lt;ProcessState&gt;&amp; <span class="comment">/*proc*/</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> sp&lt;IBinder&gt;&amp; binder, Parcel* out)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    flat_binder_object obj;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (IPCThreadState::<span class="built_in">self</span>()-&gt;<span class="built_in">backgroundSchedulingDisabled</span>()) &#123;</span><br><span class="line">        <span class="comment">/* minimum priority for all nodes is nice 0 */</span></span><br><span class="line">        obj.flags = FLAT_BINDER_FLAG_ACCEPTS_FDS;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">/* minimum priority for all nodes is MAX_NICE(19) */</span></span><br><span class="line">        obj.flags = <span class="number">0x13</span> | FLAT_BINDER_FLAG_ACCEPTS_FDS;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (binder != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="comment">//如果是Bn端的BBinder，则localBinder会返回对象指针；</span></span><br><span class="line">        <span class="comment">//Bp端的BpBinder没有重写localBinder，所以会返回NULL；</span></span><br><span class="line">        <span class="comment">//此处写入的是MediaPlayerService，是Bn端，所以local返回的就是MediaPlayerService对象</span></span><br><span class="line">        IBinder *local = binder-&gt;<span class="built_in">localBinder</span>();  </span><br><span class="line">        <span class="keyword">if</span> (!local) &#123;</span><br><span class="line">            <span class="comment">//BpBinder实现了remoteBinder，返回this指针</span></span><br><span class="line">            BpBinder *proxy = binder-&gt;<span class="built_in">remoteBinder</span>();</span><br><span class="line">            <span class="keyword">if</span> (proxy == <span class="literal">NULL</span>) &#123;</span><br><span class="line">                <span class="built_in">ALOGE</span>(<span class="string">&quot;null proxy&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">const</span> <span class="type">int32_t</span> handle = proxy ? proxy-&gt;<span class="built_in">handle</span>() : <span class="number">0</span>;</span><br><span class="line">            obj.type = BINDER_TYPE_HANDLE;</span><br><span class="line">            obj.binder = <span class="number">0</span>; <span class="comment">/* Don&#x27;t pass uninitialized stack data to a remote process */</span></span><br><span class="line">            obj.handle = handle;</span><br><span class="line">            obj.cookie = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//我们向Parcel中写入的是服务端IBinder，走else分支</span></span><br><span class="line">            <span class="comment">//只关重要的3句赋值代码，后面会介绍哪里会用</span></span><br><span class="line">            obj.type = BINDER_TYPE_BINDER;</span><br><span class="line">            obj.binder = <span class="built_in">reinterpret_cast</span>&lt;<span class="type">uintptr_t</span>&gt;(local-&gt;<span class="built_in">getWeakRefs</span>());</span><br><span class="line">            obj.cookie = <span class="built_in">reinterpret_cast</span>&lt;<span class="type">uintptr_t</span>&gt;(local);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        obj.type = BINDER_TYPE_BINDER;</span><br><span class="line">        obj.binder = <span class="number">0</span>;</span><br><span class="line">        obj.cookie = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">finish_flatten_binder</span>(binder, obj, out);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>flatten_binder函数把IBinder封装成flat_binder_object结构体，然后调用<code>finish_flatten_binder</code>。先看下flat_binder_object结构体的定义：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//flat_binder_object结构体定义比较简单，不多介绍。</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">flat_binder_object</span> &#123;</span><br><span class="line">  __u32 type;  <span class="comment">//在add MediaPlayerService时type=BINDER_TYPE_BINDER</span></span><br><span class="line">  __u32 flags;</span><br><span class="line">  <span class="keyword">union</span> &#123;</span><br><span class="line">    <span class="type">binder_uintptr_t</span> binder;</span><br><span class="line">    __u32 handle;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="type">binder_uintptr_t</span> cookie;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>进入<code>finish_flatten_binder</code>函数看下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\native\libs\binder\Parcel.cpp</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//可以看出传入的binder参数没有用到，所以flat_binder_object就是用于传输的数据结构。</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">static</span> <span class="type">status_t</span> <span class="title">finish_flatten_binder</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> sp&lt;IBinder&gt;&amp; <span class="comment">/*binder*/</span>, <span class="type">const</span> flat_binder_object&amp; flat, Parcel* out)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> out-&gt;<span class="built_in">writeObject</span>(flat, <span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">status_t</span> <span class="title">Parcel::writeObject</span><span class="params">(<span class="type">const</span> flat_binder_object&amp; val, <span class="type">bool</span> nullMetaData)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">bool</span> enoughData = (mDataPos+<span class="built_in">sizeof</span>(val)) &lt;= mDataCapacity;</span><br><span class="line">    <span class="type">const</span> <span class="type">bool</span> enoughObjects = mObjectsSize &lt; mObjectsCapacity;</span><br><span class="line">    <span class="keyword">if</span> (enoughData &amp;&amp; enoughObjects) &#123;</span><br><span class="line">restart_write: <span class="comment">//注意这个goto跳转标记，在Parcel内存不足以保存要写入的数据时，会先去申请内存，然后再跳转回来</span></span><br><span class="line">        <span class="comment">//把刚才的flat_binder_object数据结构保存到mData所指向内存的mDataPos位置</span></span><br><span class="line">        *<span class="built_in">reinterpret_cast</span>&lt;flat_binder_object*&gt;(mData+mDataPos) = val;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// remember if it&#x27;s a file descriptor</span></span><br><span class="line">        <span class="keyword">if</span> (val.type == BINDER_TYPE_FD) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!mAllowFds) &#123;</span><br><span class="line">                <span class="comment">// fail before modifying our object index</span></span><br><span class="line">                <span class="keyword">return</span> FDS_NOT_ALLOWED;</span><br><span class="line">            &#125;</span><br><span class="line">            mHasFds = mFdsKnown = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Need to write meta-data?</span></span><br><span class="line">        <span class="keyword">if</span> (nullMetaData || val.binder != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//除了把数据写到mData，还会在mObjects中再记录一下数据的偏移地址mDataPos</span></span><br><span class="line">            mObjects[mObjectsSize] = mDataPos;</span><br><span class="line">            <span class="comment">//也是非常重要的一句代码，会调用cookie-&gt;incStrong，这样对象就不会被释放了</span></span><br><span class="line">            <span class="built_in">acquire_object</span>(ProcessState::<span class="built_in">self</span>(), val, <span class="keyword">this</span>, &amp;mOpenAshmemSize);</span><br><span class="line">            mObjectsSize++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//完成写入操作，把mDataPos指向新的可写位置，并更新数据大小mDataSize</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">finishWrite</span>(<span class="built_in">sizeof</span>(flat_binder_object));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//下面的代码是在内存不足以存放要写入的数据时来增加内存的</span></span><br><span class="line">    <span class="keyword">if</span> (!enoughData) &#123;</span><br><span class="line">        <span class="type">const</span> <span class="type">status_t</span> err = <span class="built_in">growData</span>(<span class="built_in">sizeof</span>(val));</span><br><span class="line">        <span class="keyword">if</span> (err != NO_ERROR) <span class="keyword">return</span> err;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!enoughObjects) &#123;</span><br><span class="line">        <span class="type">size_t</span> newSize = ((mObjectsSize+<span class="number">2</span>)*<span class="number">3</span>)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (newSize*<span class="built_in">sizeof</span>(<span class="type">binder_size_t</span>) &lt; mObjectsSize) <span class="keyword">return</span> NO_MEMORY;   <span class="comment">// overflow</span></span><br><span class="line">        <span class="type">binder_size_t</span>* objects = (<span class="type">binder_size_t</span>*)<span class="built_in">realloc</span>(mObjects, newSize*<span class="built_in">sizeof</span>(<span class="type">binder_size_t</span>));</span><br><span class="line">        <span class="keyword">if</span> (objects == <span class="literal">NULL</span>) <span class="keyword">return</span> NO_MEMORY;</span><br><span class="line">        mObjects = objects;</span><br><span class="line">        mObjectsCapacity = newSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">goto</span> restart_write;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>至此，Parcel数据结构的拼装就分析完了。但是作为binder传输的数据载体，Parcel的任务还没有结束。继续沿着传输链条向后分析。先来回忆一下数据传输链条：</p>
<ol>
<li><code>BpServiceManager::addService</code>中拼装完Parcel数据结构后，就调用了<code>remote()-&gt;transact</code>，<code>remote()</code>函数返回的就是BpBinder；</li>
<li>BpBinder::transact接收到Parcel后，原封不动的传给了<code>IPCThreadState::self()-&gt;transact</code>;</li>
<li><code>IPCThreadState::self()-&gt;transact</code>会调用<code>IPCThreadState::writeTransactionData</code>把原Parcel数据写入变量名为mOut的Parcel对象中。</li>
</ol>
<p>现在我们再把<code>IPCThreadState::writeTransactionData</code>函数贴出来看下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">status_t</span> <span class="title">IPCThreadState::writeTransactionData</span><span class="params">(<span class="type">int32_t</span> cmd, <span class="type">uint32_t</span> binderFlags,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">int32_t</span> handle, <span class="type">uint32_t</span> code, <span class="type">const</span> Parcel&amp; data, <span class="type">status_t</span>* statusBuffer)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    binder_transaction_data tr;</span><br><span class="line"></span><br><span class="line">    tr.target.ptr = <span class="number">0</span>; <span class="comment">/* Don&#x27;t pass uninitialized stack data to a remote process */</span></span><br><span class="line">    tr.target.handle = handle;  <span class="comment">//target表示发送给谁，handle为0就代表ServiceManager</span></span><br><span class="line">    tr.code = code;  <span class="comment">//code值为ADD_SERVICE_TRANSACTION，就是我们分析的addService</span></span><br><span class="line">    tr.flags = binderFlags;</span><br><span class="line">    tr.cookie = <span class="number">0</span>;</span><br><span class="line">    tr.sender_pid = <span class="number">0</span>;</span><br><span class="line">    tr.sender_euid = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">const</span> <span class="type">status_t</span> err = data.<span class="built_in">errorCheck</span>();</span><br><span class="line">    <span class="keyword">if</span> (err == NO_ERROR) &#123;</span><br><span class="line">        tr.data_size = data.<span class="built_in">ipcDataSize</span>(); <span class="comment">//Parcel数据大小</span></span><br><span class="line">        <span class="comment">//ptr.buffer就是Parcel的mData的地址，addService瓶装的Parcel数据都放在以mData为首地址的内存中</span></span><br><span class="line">        tr.data.ptr.buffer = data.<span class="built_in">ipcData</span>();  <span class="comment">//指向Parcel.mData</span></span><br><span class="line">        tr.offsets_size = data.<span class="built_in">ipcObjectsCount</span>()*<span class="built_in">sizeof</span>(<span class="type">binder_size_t</span>);</span><br><span class="line">        <span class="comment">//ptr.offsets会指向Parcel的mObjects数组的首地址，数组中存放着flat_binder_object结构体在mData中的偏移</span></span><br><span class="line">        tr.data.ptr.offsets = data.<span class="built_in">ipcObjects</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (statusBuffer) &#123;</span><br><span class="line">        ......</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">return</span> (mLastError = err);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//只是把数据写到mOut中，并没有发送出去</span></span><br><span class="line">    <span class="comment">//需要注意下数据结构的转换：把输入的Parcel转换成binder_transaction_data.</span></span><br><span class="line">    <span class="comment">//在IPCThreadState构造函数中mOut设置存储大小是256，binder_transaction_data的大小肯定不会大于256</span></span><br><span class="line">    mOut.<span class="built_in">writeInt32</span>(cmd);  <span class="comment">//cmd=BC_TRANSACTION</span></span><br><span class="line">    mOut.<span class="built_in">write</span>(&amp;tr, <span class="built_in">sizeof</span>(tr));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> NO_ERROR;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>传输数据已经写入到mOut表示Parcel类中，我们看下此时的mOut数据：</p>
<!--  -->
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: parcel_data Pages: 1 -->
<svg width="268pt" height="44pt"
 viewBox="0.00 0.00 268.00 44.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 40)">
<title>parcel_data</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-40 264,-40 264,4 -4,4"/>
<!-- mData -->
<g id="node1" class="node">
<title>mData</title>
<polygon fill="none" stroke="#000000" points="6,-7 6,-29 49,-29 49,-7 6,-7"/>
<text text-anchor="start" x="8.8415" y="-13.4" font-family="Times,serif" font-size="14.00" fill="#000000">mData</text>
</g>
<!-- data -->
<g id="node2" class="node">
<title>data</title>
<polygon fill="none" stroke="#000000" points="90,-7 90,-29 120,-29 120,-7 90,-7"/>
<text text-anchor="start" x="92.9474" y="-13.4" font-family="Times,serif" font-size="14.00" fill="#000000">cmd</text>
<polygon fill="none" stroke="#000000" points="120,-7 120,-29 260,-29 260,-7 120,-7"/>
<text text-anchor="start" x="122.7468" y="-13.4" font-family="Times,serif" font-size="14.00" fill="#000000">binder_transaction_data</text>
</g>
<!-- mData&#45;&gt;data -->
<g id="edge1" class="edge">
<title>mData:0&#45;&gt;data:0</title>
<path fill="none" stroke="#000000" d="M49.2343,-18C58.3067,-18 69.251,-18 79.9224,-18"/>
<polygon fill="#000000" stroke="#000000" points="80,-21.5001 90,-18 80,-14.5001 80,-21.5001"/>
</g>
</g>
</svg>


<p>来看下<code>binder_transaction_data</code>结构体的定义：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//binder.h</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">binder_transaction_data</span> &#123;</span><br><span class="line">  <span class="keyword">union</span> &#123;</span><br><span class="line">    __u32 handle; <span class="comment">//handle为0就代表ServiceManager</span></span><br><span class="line">    <span class="type">binder_uintptr_t</span> ptr;</span><br><span class="line">  &#125; target;  <span class="comment">//target表示数据传输的目标</span></span><br><span class="line">  <span class="type">binder_uintptr_t</span> cookie;  <span class="comment">//addService流程设置该值为无效值0</span></span><br><span class="line">  __u32 code;  <span class="comment">//code值为ADD_SERVICE_TRANSACTION，就是我们分析的addService</span></span><br><span class="line">  __u32 flags;</span><br><span class="line">  <span class="type">pid_t</span> sender_pid;</span><br><span class="line">  <span class="type">uid_t</span> sender_euid;</span><br><span class="line">  <span class="type">binder_size_t</span> data_size;  <span class="comment">//Parcel的mData的有效数据大小</span></span><br><span class="line">  <span class="type">binder_size_t</span> offsets_size;</span><br><span class="line">  <span class="keyword">union</span> &#123;</span><br><span class="line">    <span class="keyword">struct</span> &#123;</span><br><span class="line">      <span class="comment">//buffer指向Parcel的mData所指向的内存地址，注意这里只是内存首地址，</span></span><br><span class="line">      <span class="comment">//并没有进行内存拷贝，当binder驱动收到数据后再通过copy_from_user</span></span><br><span class="line">      <span class="comment">//把用户态的内存拷贝到内核态。这样就减少了一次内存的拷贝，因为即使先拷贝了一次，</span></span><br><span class="line">      <span class="comment">//在驱动中依然要通过copy_from_user进行一次拷贝。</span></span><br><span class="line">      <span class="type">binder_uintptr_t</span> buffer;  </span><br><span class="line">      <span class="type">binder_uintptr_t</span> offsets; <span class="comment">//指向Parcel的mObjects</span></span><br><span class="line">    &#125; ptr;</span><br><span class="line">    __u8 buf[<span class="number">8</span>];</span><br><span class="line">  &#125; data;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="IPCThreadState-waitForResponse"><a href="#IPCThreadState-waitForResponse" class="headerlink" title="IPCThreadState::waitForResponse"></a>IPCThreadState::waitForResponse</h3><p>现在要发送的数据已经写到IPCThreadState::mOut中了，怎么发送出去的呢？</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">status_t</span> <span class="title">IPCThreadState::waitForResponse</span><span class="params">(Parcel *reply, <span class="type">status_t</span> *acquireResult)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">uint32_t</span> cmd;</span><br><span class="line">    <span class="type">int32_t</span> err;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((err=<span class="built_in">talkWithDriver</span>()) &lt; NO_ERROR) <span class="keyword">break</span>; <span class="comment">//talkWithDriver需要重点分析</span></span><br><span class="line">        err = mIn.<span class="built_in">errorCheck</span>();</span><br><span class="line">        <span class="keyword">if</span> (err &lt; NO_ERROR) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (mIn.<span class="built_in">dataAvail</span>() == <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        cmd = (<span class="type">uint32_t</span>)mIn.<span class="built_in">readInt32</span>();</span><br><span class="line"></span><br><span class="line">        ......</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (cmd) &#123;</span><br><span class="line">        <span class="keyword">case</span> BR_TRANSACTION_COMPLETE:  <span class="comment">//addService成功会收到BR_TRANSACTION_COMPLETE</span></span><br><span class="line">            <span class="keyword">if</span> (!reply &amp;&amp; !acquireResult) <span class="keyword">goto</span> finish;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        ......</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">finish:</span><br><span class="line">    <span class="keyword">if</span> (err != NO_ERROR) &#123;</span><br><span class="line">        <span class="keyword">if</span> (acquireResult) *acquireResult = err;</span><br><span class="line">        <span class="keyword">if</span> (reply) reply-&gt;<span class="built_in">setError</span>(err);</span><br><span class="line">        mLastError = err;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> err;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="IPCThreadState-talkWithDriver"><a href="#IPCThreadState-talkWithDriver" class="headerlink" title="IPCThreadState::talkWithDriver"></a>IPCThreadState::talkWithDriver</h3><p>无比关键的talkWithDriver</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">status_t</span> <span class="title">IPCThreadState::talkWithDriver</span><span class="params">(<span class="type">bool</span> doReceive)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    binder_write_read bwr;  <span class="comment">//又把数据封装成binder_write_read</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Is the read buffer empty?</span></span><br><span class="line">    <span class="type">const</span> <span class="type">bool</span> needRead = mIn.<span class="built_in">dataPosition</span>() &gt;= mIn.<span class="built_in">dataSize</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// We don&#x27;t want to write anything if we are still reading</span></span><br><span class="line">    <span class="comment">// from data left in the input buffer and the caller</span></span><br><span class="line">    <span class="comment">// has requested to read the next data.</span></span><br><span class="line">    <span class="type">const</span> <span class="type">size_t</span> outAvail = (!doReceive || needRead) ? mOut.<span class="built_in">dataSize</span>() : <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    bwr.write_size = outAvail;</span><br><span class="line">    bwr.write_buffer = (<span class="type">uintptr_t</span>)mOut.<span class="built_in">data</span>();  <span class="comment">//mOut是一个Parcel，write_buffer指向mOut.mData所指向的内存地址</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// This is what we&#x27;ll read.</span></span><br><span class="line">    <span class="keyword">if</span> (doReceive &amp;&amp; needRead) &#123;</span><br><span class="line">        <span class="comment">//mIn在IPCThreadState构造函数中设置内存大小是256</span></span><br><span class="line">        bwr.read_size = mIn.<span class="built_in">dataCapacity</span>();</span><br><span class="line">        bwr.read_buffer = (<span class="type">uintptr_t</span>)mIn.<span class="built_in">data</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        bwr.read_size = <span class="number">0</span>;</span><br><span class="line">        bwr.read_buffer = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ......</span><br><span class="line"></span><br><span class="line">    bwr.write_consumed = <span class="number">0</span>;</span><br><span class="line">    bwr.read_consumed = <span class="number">0</span>;</span><br><span class="line">    <span class="type">status_t</span> err;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="comment">//通过系统调用ioctl把addService的请求发送给binder驱动</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">ioctl</span>(mProcess-&gt;mDriverFD, BINDER_WRITE_READ, &amp;bwr) &gt;= <span class="number">0</span>)</span><br><span class="line">            err = NO_ERROR;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            err = -errno;</span><br><span class="line">        <span class="keyword">if</span> (mProcess-&gt;mDriverFD &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            err = -EBADF;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (err == -EINTR);</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">if</span> (err &gt;= NO_ERROR) &#123;</span><br><span class="line">        <span class="keyword">if</span> (bwr.write_consumed &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (bwr.write_consumed &lt; mOut.<span class="built_in">dataSize</span>())</span><br><span class="line">                mOut.<span class="built_in">remove</span>(<span class="number">0</span>, bwr.write_consumed);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                mOut.<span class="built_in">setDataSize</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (bwr.read_consumed &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            mIn.<span class="built_in">setDataSize</span>(bwr.read_consumed);</span><br><span class="line">            mIn.<span class="built_in">setDataPosition</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ......</span><br><span class="line">        <span class="keyword">return</span> NO_ERROR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> err;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>addService的客户端的流程就分析到这里。关于binder驱动里面的处理可以分析内核源码，从binder.c的<code>binder_ioctl</code>函数开始分析。<code>binder_ioctl</code>就是系统调用<code>ioctl</code>的执行函数。后续会持续补充…</p>
<h2 id="4-ServiceManager分析"><a href="#4-ServiceManager分析" class="headerlink" title="4. ServiceManager分析"></a>4. ServiceManager分析</h2><h3 id="入口函数-main"><a href="#入口函数-main" class="headerlink" title="入口函数 main"></a>入口函数 main</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\native\cmds\servicemanager\service_manager.c</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">binder_state</span> *bs;</span><br><span class="line">    <span class="keyword">union</span> <span class="title class_">selinux_callback</span> cb;</span><br><span class="line">    <span class="type">char</span> *driver;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (argc &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        driver = argv[<span class="number">1</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        driver = <span class="string">&quot;/dev/binder&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bs = <span class="built_in">binder_open</span>(driver, <span class="number">128</span>*<span class="number">1024</span>);  <span class="comment">//打开binder设备</span></span><br><span class="line">    ......</span><br><span class="line">    <span class="comment">//把自己设置为context_manager(ServiceManager的服务端)</span></span><br><span class="line">    <span class="comment">//该函数的目的就是通过ioctl把设置handle值为0</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">binder_become_context_manager</span>(bs)) &#123;  </span><br><span class="line">        <span class="built_in">ALOGE</span>(<span class="string">&quot;cannot become context manager (%s)\n&quot;</span>, <span class="built_in">strerror</span>(errno));</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//selinux相关的一些操作，此处省略，读者有兴趣可以自行分析</span></span><br><span class="line">    ......</span><br><span class="line"></span><br><span class="line">    <span class="built_in">binder_loop</span>(bs, svcmgr_handler);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>service_manager的main函数主要有3个重要步骤：</p>
<ol>
<li>binder_open打开binder设备；</li>
<li>成为context_manager，也就是ServiceManager；</li>
<li>进入binder_loop；</li>
</ol>
<p>我们一步步进行分析</p>
<h3 id="ServiceManager打开binder设备"><a href="#ServiceManager打开binder设备" class="headerlink" title="ServiceManager打开binder设备"></a>ServiceManager打开binder设备</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">binder_state</span> *<span class="built_in">binder_open</span>(<span class="type">const</span> <span class="type">char</span>* driver, <span class="type">size_t</span> mapsize)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">binder_state</span> *bs;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">binder_version</span> vers;</span><br><span class="line"></span><br><span class="line">    bs = <span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(*bs));</span><br><span class="line">    <span class="keyword">if</span> (!bs) &#123;</span><br><span class="line">        errno = ENOMEM;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bs-&gt;fd = <span class="built_in">open</span>(driver, O_RDWR | O_CLOEXEC); <span class="comment">//打开binder设备，就是&quot;/dev/binder&quot;</span></span><br><span class="line">    <span class="keyword">if</span> (bs-&gt;fd &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr,<span class="string">&quot;binder: cannot open %s (%s)\n&quot;</span>,</span><br><span class="line">                driver, <span class="built_in">strerror</span>(errno));</span><br><span class="line">        <span class="keyword">goto</span> fail_open;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取驱动版本号，并对比应用和驱动的版本号是否相同</span></span><br><span class="line">    <span class="keyword">if</span> ((<span class="built_in">ioctl</span>(bs-&gt;fd, BINDER_VERSION, &amp;vers) == <span class="number">-1</span>) ||</span><br><span class="line">        (vers.protocol_version != BINDER_CURRENT_PROTOCOL_VERSION)) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr,</span><br><span class="line">                <span class="string">&quot;binder: kernel driver version (%d) differs from user space version (%d)\n&quot;</span>,</span><br><span class="line">                vers.protocol_version, BINDER_CURRENT_PROTOCOL_VERSION);</span><br><span class="line">        <span class="keyword">goto</span> fail_open;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bs-&gt;mapsize = mapsize;</span><br><span class="line">    bs-&gt;mapped = <span class="built_in">mmap</span>(<span class="literal">NULL</span>, mapsize, PROT_READ, MAP_PRIVATE, bs-&gt;fd, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (bs-&gt;mapped == MAP_FAILED) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr,<span class="string">&quot;binder: cannot map device (%s)\n&quot;</span>,</span><br><span class="line">                <span class="built_in">strerror</span>(errno));</span><br><span class="line">        <span class="keyword">goto</span> fail_map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> bs;</span><br><span class="line"></span><br><span class="line">fail_map:</span><br><span class="line">    <span class="built_in">close</span>(bs-&gt;fd);</span><br><span class="line">fail_open:</span><br><span class="line">    <span class="built_in">free</span>(bs);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="成为context-manager"><a href="#成为context-manager" class="headerlink" title="成为context_manager"></a>成为context_manager</h3><p>其实就是ServiceManager。通过系统调用ioctl的BINDER_SET_CONTEXT_MGR命令来设置。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">binder_become_context_manager</span><span class="params">(<span class="keyword">struct</span> binder_state *bs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">ioctl</span>(bs-&gt;fd, BINDER_SET_CONTEXT_MGR, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>binder驱动中的处理：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//linux-4.9.243\drivers\android\binder.c</span></span><br><span class="line"><span class="type">static</span> <span class="keyword">struct</span> <span class="title class_">binder_node</span> *binder_context_mgr_node;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">long</span> <span class="title">binder_ioctl</span><span class="params">(<span class="keyword">struct</span> file *filp, <span class="type">unsigned</span> <span class="type">int</span> cmd, <span class="type">unsigned</span> <span class="type">long</span> arg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">switch</span> (cmd) &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">case</span> BINDER_SET_CONTEXT_MGR:</span><br><span class="line">        ...</span><br><span class="line">        ret = <span class="built_in">binder_ioctl_set_ctx_mgr</span>(filp);</span><br><span class="line">        <span class="keyword">if</span> (ret)</span><br><span class="line">            <span class="keyword">goto</span> err;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">binder_ioctl_set_ctx_mgr</span><span class="params">(<span class="keyword">struct</span> file *filp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">binder_proc</span> *proc = filp-&gt;private_data;</span><br><span class="line">    <span class="type">kuid_t</span> curr_euid = <span class="built_in">current_euid</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (binder_context_mgr_node != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">pr_err</span>(<span class="string">&quot;BINDER_SET_CONTEXT_MGR already set\n&quot;</span>);</span><br><span class="line">        ret = -EBUSY;</span><br><span class="line">        <span class="keyword">goto</span> out;</span><br><span class="line">    &#125;</span><br><span class="line">    ret = <span class="built_in">security_binder_set_context_mgr</span>(proc-&gt;tsk);</span><br><span class="line">    <span class="keyword">if</span> (ret &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">goto</span> out;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">uid_valid</span>(binder_context_mgr_uid)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">uid_eq</span>(binder_context_mgr_uid, curr_euid)) &#123;</span><br><span class="line">            <span class="built_in">pr_err</span>(<span class="string">&quot;BINDER_SET_CONTEXT_MGR bad uid %d != %d\n&quot;</span>,</span><br><span class="line">                   <span class="built_in">from_kuid</span>(&amp;init_user_ns, curr_euid),</span><br><span class="line">                   <span class="built_in">from_kuid</span>(&amp;init_user_ns,</span><br><span class="line">                    binder_context_mgr_uid));</span><br><span class="line">            ret = -EPERM;</span><br><span class="line">            <span class="keyword">goto</span> out;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        binder_context_mgr_uid = curr_euid;</span><br><span class="line">    &#125;</span><br><span class="line">    binder_context_mgr_node = <span class="built_in">binder_new_node</span>(proc, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (binder_context_mgr_node == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        ret = -ENOMEM;</span><br><span class="line">        <span class="keyword">goto</span> out;</span><br><span class="line">    &#125;</span><br><span class="line">    binder_context_mgr_node-&gt;local_weak_refs++;</span><br><span class="line">    binder_context_mgr_node-&gt;local_strong_refs++;</span><br><span class="line">    binder_context_mgr_node-&gt;has_strong_ref = <span class="number">1</span>;</span><br><span class="line">    binder_context_mgr_node-&gt;has_weak_ref = <span class="number">1</span>;</span><br><span class="line">out:</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>成为context_manager就是把ServiceManager进程的信息保存到了binder驱动的binder_context_mgr_node结构体中。想要更深入分析需要了解内核编程，这里暂时就不详细分析了。</p>
<h3 id="binder-loop循环"><a href="#binder-loop循环" class="headerlink" title="binder_loop循环"></a>binder_loop循环</h3><p>然后就进入了<code>binder_loop</code>,该函数的第二个参数非常重要，接收到消息后都是在改函数中进行处理的。先看下<code>binder_loop</code>函数的实现：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">binder_loop</span><span class="params">(<span class="keyword">struct</span> binder_state *bs, binder_handler func)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> res;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">binder_write_read</span> bwr;</span><br><span class="line">    <span class="type">uint32_t</span> readbuf[<span class="number">32</span>];</span><br><span class="line"></span><br><span class="line">    bwr.write_size = <span class="number">0</span>;</span><br><span class="line">    bwr.write_consumed = <span class="number">0</span>;</span><br><span class="line">    bwr.write_buffer = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//binder主线程？</span></span><br><span class="line">    readbuf[<span class="number">0</span>] = BC_ENTER_LOOPER;</span><br><span class="line">    <span class="built_in">binder_write</span>(bs, readbuf, <span class="built_in">sizeof</span>(<span class="type">uint32_t</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        bwr.read_size = <span class="built_in">sizeof</span>(readbuf);</span><br><span class="line">        bwr.read_consumed = <span class="number">0</span>;</span><br><span class="line">        bwr.read_buffer = (<span class="type">uintptr_t</span>) readbuf;</span><br><span class="line"></span><br><span class="line">        res = <span class="built_in">ioctl</span>(bs-&gt;fd, BINDER_WRITE_READ, &amp;bwr);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (res &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">ALOGE</span>(<span class="string">&quot;binder_loop: ioctl failed (%s)\n&quot;</span>, <span class="built_in">strerror</span>(errno));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        res = <span class="built_in">binder_parse</span>(bs, <span class="number">0</span>, (<span class="type">uintptr_t</span>) readbuf, bwr.read_consumed, func);</span><br><span class="line">        <span class="keyword">if</span> (res == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">ALOGE</span>(<span class="string">&quot;binder_loop: unexpected reply?!\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (res &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">ALOGE</span>(<span class="string">&quot;binder_loop: io error %d %s\n&quot;</span>, res, <span class="built_in">strerror</span>(errno));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>binder</tag>
      </tags>
  </entry>
  <entry>
    <title>Activity启动流程 (Android13)</title>
    <url>/posts/93b40782.html</url>
    <content><![CDATA[<!-- toc -->

<p>本文以时序图的形式来展示activity的启动过程，相比于贴源码会更加直观。本文的讲解的流程是基于<code>MainActivity</code>使用standard模式启动<code>SecondActivity</code>，且两个Activity都在同一个应用中，最后的部分也会讲解一下进程的启动。</p>
<h2 id="第一阶段：执行startActivity"><a href="#第一阶段：执行startActivity" class="headerlink" title="第一阶段：执行startActivity"></a>第一阶段：执行startActivity</h2><pre class="mermaid">

zenuml
group App {
    &lt;&lt;App&gt;&gt; act as Activity
    &lt;&lt;App&gt;&gt; ins as Instrumentation
}
group AMS {
    &lt;&lt;AMS&gt;&gt; atms as ActivityTaskManagerService #F0F8FF
    ActivityStarter #F0F8FF
}
act.startActivity {
    act.startActivityForResult {
        ins.execStartActivity {
            atms.startActivity {
                atms.startActivityAsUser {
                    &#x2F;&#x2F;没有缓存则创建
                    new ActivityStarter()
                    ActivityStarter.&quot;① execute&quot;
                }
            }
        }
    }
}
</pre>

<pre class="mermaid">

zenuml
&lt;&lt;AMS&gt;&gt; ActivityStarter #F0F8FF
ActivityStarter.&quot;① execute&quot; {
    executeRequest {
        new ActivityRecord()
        startActivityUnchecked {
            startActivityInner {
                Task.addChild
                Task.startActivityLocked
                RootWindowContainer.resumeFocusedTasksTopActivities {
                    Task.resumeTopActivityUncheckedLocked {
                        resumeTopActivityInnerLocked {
                            TaskFragment.resumeTopActivity {
                                &#x2F;&#x2F;pause当前activity
                                &quot;② startPausing()&quot;
                                if (! isProcessRunning) {
                                    ActivityTaskManagerService.startProcessAsync
                                }
                            }
                        }
                    }
                }
            }
            handleStartResult
            postStartActivityProcessing
        }
    }
}
</pre>

<h2 id="第二阶段：pause当前activity"><a href="#第二阶段：pause当前activity" class="headerlink" title="第二阶段：pause当前activity"></a>第二阶段：pause当前activity</h2><p>启动<code>SecondActivity</code>之前会先执行<code>MainActivity</code>的<strong>pause</strong>操作：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="955px" preserveAspectRatio="none" style="width:1004px;height:955px;background:#FFFFFF;" version="1.1" viewBox="0 0 1004 955" width="1004px" zoomAndPan="magnify"><defs/><g><rect fill="#F0F8FF" height="943.9141" style="stroke:#181818;stroke-width:0.5;" width="470" x="75.5" y="6"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="32" x="292" y="18.0669">AMS</text><rect fill="#F0F0F0" height="943.9141" style="stroke:#181818;stroke-width:0.5;" width="450.5" x="547.5" y="6"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="30" x="755.25" y="18.0669">APP</text><rect fill="#FFFFFF" height="274.0625" style="stroke:#181818;stroke-width:1.0;" width="10" x="133" y="87.5625"/><rect fill="#FFBBBB" height="236.9297" style="stroke:#181818;stroke-width:1.0;" width="10" x="138" y="124.6953"/><rect fill="#FFFFFF" height="137.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="143" y="224.0938"/><rect fill="#FFFFFF" height="74.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="335" y="331.625"/><rect fill="#FFFFFF" height="68.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="476" y="838.4844"/><rect fill="#FFFFFF" height="85.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="606.5" y="443.0234"/><rect fill="#FFFFFF" height="34.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="606.5" y="572.4219"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="606.5" y="692.9531"/><rect fill="#FFFFFF" height="261.9297" style="stroke:#181818;stroke-width:1.0;" width="10" x="787.5" y="606.5547"/><rect fill="#FFFFFF" height="63.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="792.5" y="658.8203"/><rect fill="#FFFFFF" height="94.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="792.5" y="774.3516"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="137.5" x2="137.5" y1="56.4297" y2="915.6172"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="339.5" x2="339.5" y1="56.4297" y2="915.6172"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="480.5" x2="480.5" y1="56.4297" y2="915.6172"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="611.5" x2="611.5" y1="56.4297" y2="915.6172"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="792.5" x2="792.5" y1="56.4297" y2="915.6172"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="942" x2="942" y1="56.4297" y2="915.6172"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="117" x="79.5" y="25.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="86.5" y="45.1279">TaskFragment</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="117" x="79.5" y="914.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="86.5" y="934.6123">TaskFragment</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="141" x="269.5" y="25.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="276.5" y="45.1279">ClientTransaction</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="141" x="269.5" y="914.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="276.5" y="934.6123">ClientTransaction</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="420.5" y="25.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="427.5" y="45.1279">ActivityRecord</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="420.5" y="914.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="427.5" y="934.6123">ActivityRecord</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="120" x="551.5" y="25.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="558.5" y="45.1279">ActivityThread</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="120" x="551.5" y="914.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="558.5" y="934.6123">ActivityThread</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="162" x="711.5" y="25.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="718.5" y="45.1279">TransactionExecutor</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="162" x="711.5" y="914.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="718.5" y="934.6123">TransactionExecutor</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="103" x="891" y="25.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="898" y="45.1279">MainActivity</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="103" x="891" y="914.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="898" y="934.6123">MainActivity</text><rect fill="#FFFFFF" height="274.0625" style="stroke:#181818;stroke-width:1.0;" width="10" x="133" y="87.5625"/><rect fill="#FFBBBB" height="236.9297" style="stroke:#181818;stroke-width:1.0;" width="10" x="138" y="124.6953"/><rect fill="#FFFFFF" height="137.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="143" y="224.0938"/><rect fill="#FFFFFF" height="74.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="335" y="331.625"/><rect fill="#FFFFFF" height="68.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="476" y="838.4844"/><rect fill="#FFFFFF" height="85.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="606.5" y="443.0234"/><rect fill="#FFFFFF" height="34.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="606.5" y="572.4219"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="606.5" y="692.9531"/><rect fill="#FFFFFF" height="261.9297" style="stroke:#181818;stroke-width:1.0;" width="10" x="787.5" y="606.5547"/><rect fill="#FFFFFF" height="63.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="792.5" y="658.8203"/><rect fill="#FFFFFF" height="94.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="792.5" y="774.3516"/><ellipse cx="7.5" cy="86.8125" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="121,83.5625,131,87.5625,121,91.5625,125,87.5625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="127" y1="87.5625" y2="87.5625"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="106" x="10" y="82.4966">&#9313; startPausing()</text><line style="stroke:#181818;stroke-width:1.0;" x1="143" x2="190" y1="111.6953" y2="111.6953"/><line style="stroke:#181818;stroke-width:1.0;" x1="190" x2="190" y1="111.6953" y2="124.6953"/><line style="stroke:#181818;stroke-width:1.0;" x1="149" x2="190" y1="124.6953" y2="124.6953"/><polygon fill="#181818" points="159,120.6953,149,124.6953,159,128.6953,155,124.6953" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="144" x="155" y="106.6294">schedulePauseActivity</text><line style="stroke:#181818;stroke-width:1.0;" x1="148" x2="190" y1="158.8281" y2="158.8281"/><line style="stroke:#181818;stroke-width:1.0;" x1="190" x2="190" y1="158.8281" y2="171.8281"/><line style="stroke:#181818;stroke-width:1.0;" x1="149" x2="190" y1="171.8281" y2="171.8281"/><polygon fill="#181818" points="159,167.8281,149,171.8281,159,175.8281,155,171.8281" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="170" x="155" y="153.7622">PauseActivityItem.obtain()</text><line style="stroke:#181818;stroke-width:1.0;" x1="148" x2="195" y1="211.0938" y2="211.0938"/><line style="stroke:#181818;stroke-width:1.0;" x1="195" x2="195" y1="211.0938" y2="224.0938"/><line style="stroke:#181818;stroke-width:1.0;" x1="154" x2="195" y1="224.0938" y2="224.0938"/><polygon fill="#181818" points="164,220.0938,154,224.0938,164,228.0938,160,224.0938" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="151" x="160" y="190.895">ClientLifecycleManager.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="132" x="164" y="206.0278">scheduleTransaction</text><polygon fill="#181818" points="328,254.2266,338,258.2266,328,262.2266,332,258.2266" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="153" x2="334" y1="258.2266" y2="258.2266"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="40" x="283" y="253.1606">obtain</text><polygon fill="#181818" points="328,298.4922,338,302.4922,328,306.4922,332,302.4922" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="153" x2="334" y1="302.4922" y2="302.4922"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="163" x="160" y="282.2935">setLifecycleStateRequest</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="126" x="160" y="297.4263">(PauseActivityItem)</text><polygon fill="#181818" points="323,327.625,333,331.625,323,335.625,327,331.625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="153" x2="329" y1="331.625" y2="331.625"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="251" y="326.5591">schedule()</text><polygon fill="#181818" points="599.5,401.8906,609.5,405.8906,599.5,409.8906,603.5,405.8906" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="340" x2="605.5" y1="405.8906" y2="405.8906"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="136" x="429.5" y="385.6919">[ApplicationThread]&#8594;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="165" x="429.5" y="400.8247">scheduleTransaction(this)</text><line style="stroke:#181818;stroke-width:1.0;" x1="616.5" x2="658.5" y1="435.0234" y2="435.0234"/><line style="stroke:#181818;stroke-width:1.0;" x1="658.5" x2="658.5" y1="435.0234" y2="448.0234"/><line style="stroke:#181818;stroke-width:1.0;" x1="617.5" x2="658.5" y1="448.0234" y2="448.0234"/><polygon fill="#181818" points="627.5,444.0234,617.5,448.0234,627.5,452.0234,623.5,448.0234" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="132" x="623.5" y="429.9575">scheduleTransaction</text><line style="stroke:#181818;stroke-width:1.0;" x1="616.5" x2="658.5" y1="527.2891" y2="527.2891"/><line style="stroke:#181818;stroke-width:1.0;" x1="658.5" x2="658.5" y1="527.2891" y2="540.2891"/><line style="stroke:#181818;stroke-width:1.0;" x1="611.5" x2="658.5" y1="540.2891" y2="540.2891"/><polygon fill="#181818" points="621.5,536.2891,611.5,540.2891,621.5,544.2891,617.5,540.2891" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="92" x="623.5" y="507.0903">sendMessage:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="157" x="623.5" y="522.2231">EXECUTE_TRANSACTION</text><line style="stroke:#181818;stroke-width:1.0;" x1="611.5" x2="658.5" y1="559.4219" y2="559.4219"/><line style="stroke:#181818;stroke-width:1.0;" x1="658.5" x2="658.5" y1="559.4219" y2="572.4219"/><line style="stroke:#181818;stroke-width:1.0;" x1="617.5" x2="658.5" y1="572.4219" y2="572.4219"/><polygon fill="#181818" points="627.5,568.4219,617.5,572.4219,627.5,576.4219,623.5,572.4219" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="109" x="623.5" y="554.356">handleMessage()</text><polygon fill="#181818" points="775.5,602.5547,785.5,606.5547,775.5,610.5547,779.5,606.5547" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="611.5" x2="781.5" y1="606.5547" y2="606.5547"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="134" x="636.5" y="601.4888">execute(transaction)</text><line style="stroke:#181818;stroke-width:1.0;" x1="797.5" x2="844.5" y1="645.8203" y2="645.8203"/><line style="stroke:#181818;stroke-width:1.0;" x1="844.5" x2="844.5" y1="645.8203" y2="658.8203"/><line style="stroke:#181818;stroke-width:1.0;" x1="803.5" x2="844.5" y1="658.8203" y2="658.8203"/><polygon fill="#181818" points="813.5,654.8203,803.5,658.8203,813.5,662.8203,809.5,658.8203" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="126" x="809.5" y="625.6216">[PauseActivityItem]</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="73" x="809.5" y="640.7544">&#8594;execute()</text><polygon fill="#181818" points="627.5,688.9531,617.5,692.9531,627.5,696.9531,623.5,692.9531" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="621.5" x2="791.5" y1="692.9531" y2="692.9531"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="130" x="633.5" y="687.8872">handlePauseActivity</text><polygon fill="#181818" points="930.5,718.0859,940.5,722.0859,930.5,726.0859,934.5,722.0859" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="611.5" x2="936.5" y1="722.0859" y2="722.0859"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="65" x="860.5" y="717.02">onPause()</text><line style="stroke:#181818;stroke-width:1.0;" x1="802.5" x2="844.5" y1="766.3516" y2="766.3516"/><line style="stroke:#181818;stroke-width:1.0;" x1="844.5" x2="844.5" y1="766.3516" y2="779.3516"/><line style="stroke:#181818;stroke-width:1.0;" x1="803.5" x2="844.5" y1="779.3516" y2="779.3516"/><polygon fill="#181818" points="813.5,775.3516,803.5,779.3516,813.5,783.3516,809.5,779.3516" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="126" x="809.5" y="746.1528">[PauseActivityItem]</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="91" x="809.5" y="761.2856">&#8594;postExecute</text><polygon fill="#181818" points="497,834.4844,487,838.4844,497,842.4844,493,838.4844" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="491" x2="791.5" y1="838.4844" y2="838.4844"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="94" x="503" y="833.4185">activityPaused</text><polygon fill="#181818" points="149,893.6172,139,897.6172,149,901.6172,145,897.6172" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="143" x2="475" y1="897.6172" y2="897.6172"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="115" x="155" y="892.5513">&#9314; completePause</text><!--SRC=[hLJDJkCm4BxdAInnIOMAEA8UaBAbaP0eL6rMGceG6foXjKZjOBi8Ne3xyWRBe_4aZ1EovA-RhhJ99R5dllc-ppCs3q9ce67333vkKNASeZ6mmY0LAyaqFg4sU2OqSYkKzExKCmkc2tOG7eSdOUWjrV2KHM0UGWsh3KhB3Wz7xEFNRsOiQ3k3hH5ovG-yMampPyGCNsEoJT4bO42rdeHzyS1zWCLwz44O_g2d3x86TMvnSwJkB0ZPHyO96AU2FY_4FV8Ndk8K95cYZsBvXsYaGHeeJ6d25TcL269JrDuhrE1tvOKb-NDtDCR6qczf6ko1w0ILj4byWfss_lCwjOqLN6H0TKjAS-HA9nxAX56dU4Mxp6Pvkz3hjSaHup8vMck4X0s78xOCiYmL75n8iNppyVeMomxtVRiMPk0rGLgmLHUgXxTBNY-Wusb8wTV0Z5Wi9zUJySzeSXlDWyj5C8xEhoxt8xO6cQJbwFbTQYgK9y_8jrPfOk1oCVz5ttv7K5TqXNUZE8nbgx5kOacEbzWx0NTggGzoMy-Kfg5SpQrKCazfD6Yxwl-IbYbZYq2iLgmp_SjEZo759EGCu6if9vBqoUlPhezMvIPk56xSQkvEVcTSRR8KRN4u9TGd]--></g></svg>

<p>在Android 9之前的版本，<code>ActivityThread</code>中通过<code>LAUNCH_ACTIVITY</code>消息来启动activity，源码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//android\app\ActivityThread.java</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(Message msg)</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (DEBUG_MESSAGES) Slog.v(TAG, <span class="string">&quot;&gt;&gt;&gt; handling: &quot;</span> + codeToString(msg.what));</span><br><span class="line">            <span class="keyword">switch</span> (msg.what) &#123;</span><br><span class="line">                <span class="keyword">case</span> LAUNCH_ACTIVITY: &#123;</span><br><span class="line">                    Trace.traceBegin(Trace.TRACE_TAG_ACTIVITY_MANAGER, <span class="string">&quot;activityStart&quot;</span>);</span><br><span class="line">                    <span class="keyword">final</span> <span class="type">ActivityClientRecord</span> <span class="variable">r</span> <span class="operator">=</span> (ActivityClientRecord) msg.obj;</span><br><span class="line"></span><br><span class="line">                    r.packageInfo = getPackageInfoNoCheck(</span><br><span class="line">                            r.activityInfo.applicationInfo, r.compatInfo);</span><br><span class="line">                    handleLaunchActivity(r, <span class="literal">null</span>, <span class="string">&quot;LAUNCH_ACTIVITY&quot;</span>);</span><br><span class="line">                    Trace.traceEnd(Trace.TRACE_TAG_ACTIVITY_MANAGER);</span><br><span class="line">                &#125; <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure>

<p>但从Andorid 9开始，<code>ActivityThread</code>去掉了<code>LAUNCH_ACTIVITY</code> <code>PAUSE_ACTIVITY</code> <code>RESUME_ACTIVITY</code>等消息，而是改成了EXECUTE_TRANSACTION，通过ClientTransaction这套机制来执行activity生命周期流程，相关源码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(Message msg)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (DEBUG_MESSAGES) Slog.v(TAG, <span class="string">&quot;&gt;&gt;&gt; handling: &quot;</span> + codeToString(msg.what));</span><br><span class="line">    <span class="keyword">switch</span> (msg.what) &#123;</span><br><span class="line">        ......</span><br><span class="line">        <span class="keyword">case</span> EXECUTE_TRANSACTION:</span><br><span class="line">            <span class="keyword">final</span> <span class="type">ClientTransaction</span> <span class="variable">transaction</span> <span class="operator">=</span> (ClientTransaction) msg.obj;</span><br><span class="line">            mTransactionExecutor.execute(transaction);</span><br><span class="line">            <span class="keyword">if</span> (isSystem()) &#123;</span><br><span class="line">                <span class="comment">// Client transactions inside system process are recycled on the client side</span></span><br><span class="line">                <span class="comment">// instead of ClientLifecycleManager to avoid being cleared before this</span></span><br><span class="line">                <span class="comment">// message is handled.</span></span><br><span class="line">                transaction.recycle();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// TODO(lifecycler): Recycle locally scheduled transactions.</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure>

<p>下面是<code>ClientTransaction</code>类图：</p>
<p><img src="/images/Android/Activity_Transaction%E7%B1%BB%E5%9B%BE.drawio.svg" alt="Activity Transaction"></p>
<h2 id="第三阶段：启动新Activity"><a href="#第三阶段：启动新Activity" class="headerlink" title="第三阶段：启动新Activity"></a>第三阶段：启动新Activity</h2><p>下面继续Activity启动流程：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="334px" preserveAspectRatio="none" style="width:983px;height:334px;background:#FFFFFF;" version="1.1" viewBox="0 0 983 334" width="983px" zoomAndPan="magnify"><defs/><g><rect fill="#F0F8FF" height="322.5234" style="stroke:#181818;stroke-width:0.5;" width="893" x="84.5" y="6"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="32" x="512.5" y="18.0669">AMS</text><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="142" y="87.5625"/><rect fill="#FFFFFF" height="59.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="142" y="217.0938"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="392" y="116.6953"/><rect fill="#FFFFFF" height="101.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="657" y="145.8281"/><rect fill="#FFFFFF" height="64.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="662" y="182.9609"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="146.5" x2="146.5" y1="56.4297" y2="294.2266"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="397" x2="397" y1="56.4297" y2="294.2266"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="661.5" x2="661.5" y1="56.4297" y2="294.2266"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="883.5" x2="883.5" y1="56.4297" y2="294.2266"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="117" x="88.5" y="25.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="95.5" y="45.1279">TaskFragment</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="117" x="88.5" y="293.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="95.5" y="313.2217">TaskFragment</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="176" x="309" y="25.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="316" y="45.1279">RootWindowContainer</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="176" x="309" y="293.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="316" y="313.2217">RootWindowContainer</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="47" x="638.5" y="25.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="645.5" y="45.1279">Task</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="47" x="638.5" y="293.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="645.5" y="313.2217">Task</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="179" x="794.5" y="25.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="801.5" y="45.1279">ActivityTaskSupervisor</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="179" x="794.5" y="293.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="801.5" y="313.2217">ActivityTaskSupervisor</text><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="142" y="87.5625"/><rect fill="#FFFFFF" height="59.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="142" y="217.0938"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="392" y="116.6953"/><rect fill="#FFFFFF" height="101.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="657" y="145.8281"/><rect fill="#FFFFFF" height="64.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="662" y="182.9609"/><ellipse cx="7.5" cy="86.8125" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="130,83.5625,140,87.5625,130,91.5625,134,87.5625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="136" y1="87.5625" y2="87.5625"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="115" x="15" y="82.4966">&#9314; completePause</text><polygon fill="#181818" points="380,112.6953,390,116.6953,380,120.6953,384,116.6953" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="147" x2="386" y1="116.6953" y2="116.6953"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="221" x="154" y="111.6294">resumeFocusedTasksTopActivities</text><polygon fill="#181818" points="645,141.8281,655,145.8281,645,149.8281,649,145.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="397" x2="651" y1="145.8281" y2="145.8281"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="236" x="404" y="140.7622">resumeTopActivityUncheckedLocked</text><line style="stroke:#181818;stroke-width:1.0;" x1="667" x2="714" y1="169.9609" y2="169.9609"/><line style="stroke:#181818;stroke-width:1.0;" x1="714" x2="714" y1="169.9609" y2="182.9609"/><line style="stroke:#181818;stroke-width:1.0;" x1="673" x2="714" y1="182.9609" y2="182.9609"/><polygon fill="#181818" points="683,178.9609,673,182.9609,683,186.9609,679,182.9609" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="198" x="679" y="164.895">resumeTopActivityInnerLocked</text><polygon fill="#181818" points="163,213.0938,153,217.0938,163,221.0938,159,217.0938" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="157" x2="661" y1="217.0938" y2="217.0938"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="121" x="169" y="212.0278">resumeTopActivity</text><polygon fill="#181818" points="872,272.2266,882,276.2266,872,280.2266,876,276.2266" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="147" x2="878" y1="276.2266" y2="276.2266"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="143" x="154" y="271.1606">&#9315; startSpecificActivity</text><!--SRC=[RT1B2i8m40RWVKunu58ABiM58490K12hk70Lar63DbEIgOzZU0MzcIUnyKcrcv24_vj9Pab7w8rIQCYMR4if5fHqOQh2Ldgrpj0nD9iTk9qle2dBTyWuLaL0KOcKP4B4S-iC7VhaM5c77f8aMe-Xo52IBfc9B4mfxscsUyiMWwYLppTKAdpLQURq1lKMpP3YAfxPbwaL0rUMhKbNVlcdX44LjuhnaVux_qxX3UDzMkJezpPG74GSuHK2AyzfZjgkhFuqGMTWISSx]--></g></svg>

<p>执行<code>SecondAcitivity</code>的启动流程：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="677px" preserveAspectRatio="none" style="width:1018px;height:677px;background:#FFFFFF;" version="1.1" viewBox="0 0 1018 677" width="1018px" zoomAndPan="magnify"><defs/><g><rect fill="#F0F8FF" height="665.9844" style="stroke:#181818;stroke-width:0.5;" width="513" x="81.5" y="6"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="32" x="319.5" y="18.0669">AMS</text><rect fill="#F0F0F0" height="665.9844" style="stroke:#181818;stroke-width:0.5;" width="302.5" x="603.5" y="6"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="30" x="737.25" y="18.0669">APP</text><rect fill="#FFFFFF" height="541.125" style="stroke:#181818;stroke-width:1.0;" width="10" x="170" y="87.5625"/><rect fill="#FFFFFF" height="322.1953" style="stroke:#181818;stroke-width:1.0;" width="10" x="175" y="124.6953"/><rect fill="#FFFFFF" height="64.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="180" y="382.7578"/><rect fill="#FFFFFF" height="59.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="515" y="416.8906"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="676" y="476.0234"/><rect fill="#FFFFFF" height="50.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="837" y="505.1563"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="174.5" x2="174.5" y1="56.4297" y2="637.6875"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="378.5" x2="378.5" y1="56.4297" y2="637.6875"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="519.5" x2="519.5" y1="56.4297" y2="637.6875"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="680.5" x2="680.5" y1="56.4297" y2="637.6875"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="842" x2="842" y1="56.4297" y2="637.6875"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="179" x="85.5" y="25.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="92.5" y="45.1279">ActivityTaskSupervisor</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="179" x="85.5" y="636.6875"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="92.5" y="656.6826">ActivityTaskSupervisor</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="318.5" y="25.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="325.5" y="45.1279">ActivityRecord</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="318.5" y="636.6875"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="325.5" y="656.6826">ActivityRecord</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="141" x="449.5" y="25.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="456.5" y="45.1279">ClientTransaction</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="141" x="449.5" y="636.6875"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="456.5" y="656.6826">ClientTransaction</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="147" x="607.5" y="25.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="614.5" y="45.1279">ApplicationThread</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="147" x="607.5" y="636.6875"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="614.5" y="656.6826">ApplicationThread</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="120" x="782" y="25.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="789" y="45.1279">ActivityThread</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="120" x="782" y="636.6875"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="789" y="656.6826">ActivityThread</text><rect fill="#FFFFFF" height="541.125" style="stroke:#181818;stroke-width:1.0;" width="10" x="170" y="87.5625"/><rect fill="#FFFFFF" height="322.1953" style="stroke:#181818;stroke-width:1.0;" width="10" x="175" y="124.6953"/><rect fill="#FFFFFF" height="64.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="180" y="382.7578"/><rect fill="#FFFFFF" height="59.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="515" y="416.8906"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="676" y="476.0234"/><rect fill="#FFFFFF" height="50.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="837" y="505.1563"/><ellipse cx="7.5" cy="86.8125" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="158,83.5625,168,87.5625,158,91.5625,162,87.5625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="164" y1="87.5625" y2="87.5625"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="143" x="15" y="82.4966">&#9315; startSpecificActivity</text><line style="stroke:#181818;stroke-width:1.0;" x1="180" x2="227" y1="111.6953" y2="111.6953"/><line style="stroke:#181818;stroke-width:1.0;" x1="227" x2="227" y1="111.6953" y2="124.6953"/><line style="stroke:#181818;stroke-width:1.0;" x1="186" x2="227" y1="124.6953" y2="124.6953"/><polygon fill="#181818" points="196,120.6953,186,124.6953,196,128.6953,192,124.6953" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="148" x="192" y="106.6294">realStartActivityLocked</text><polygon fill="#181818" points="367,154.8281,377,158.8281,367,162.8281,371,158.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="185" x2="373" y1="158.8281" y2="158.8281"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="70" x="192" y="153.7622">setProcess</text><polygon fill="#181818" points="508,183.9609,518,187.9609,508,191.9609,512,187.9609" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="185" x2="514" y1="187.9609" y2="187.9609"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="40" x="192" y="182.895">obtain</text><line style="stroke:#181818;stroke-width:1.0;" x1="185" x2="227" y1="217.0938" y2="217.0938"/><line style="stroke:#181818;stroke-width:1.0;" x1="227" x2="227" y1="217.0938" y2="230.0938"/><line style="stroke:#181818;stroke-width:1.0;" x1="186" x2="227" y1="230.0938" y2="230.0938"/><polygon fill="#181818" points="196,226.0938,186,230.0938,196,234.0938,192,230.0938" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="167" x="192" y="212.0278">LaunchActivityItem.obtain</text><polygon fill="#181818" points="508,255.2266,518,259.2266,508,263.2266,512,259.2266" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="185" x2="514" y1="259.2266" y2="259.2266"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="210" x="192" y="254.1606">addCallback(LaunchActivityItem)</text><line style="stroke:#181818;stroke-width:1.0;" x1="185" x2="227" y1="288.3594" y2="288.3594"/><line style="stroke:#181818;stroke-width:1.0;" x1="227" x2="227" y1="288.3594" y2="301.3594"/><line style="stroke:#181818;stroke-width:1.0;" x1="186" x2="227" y1="301.3594" y2="301.3594"/><polygon fill="#181818" points="196,297.3594,186,301.3594,196,305.3594,192,301.3594" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="174" x="192" y="283.2935">ResumeActivityItem.obtain</text><polygon fill="#181818" points="508,326.4922,518,330.4922,508,334.4922,512,330.4922" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="185" x2="514" y1="330.4922" y2="330.4922"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="303" x="192" y="325.4263">setLifecycleStateRequest(ResumeActivityItem)</text><line style="stroke:#181818;stroke-width:1.0;" x1="185" x2="232" y1="369.7578" y2="369.7578"/><line style="stroke:#181818;stroke-width:1.0;" x1="232" x2="232" y1="369.7578" y2="382.7578"/><line style="stroke:#181818;stroke-width:1.0;" x1="191" x2="232" y1="382.7578" y2="382.7578"/><polygon fill="#181818" points="201,378.7578,191,382.7578,201,386.7578,197,382.7578" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="157" x="197" y="349.5591">[ClientLifecycleManager]</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="143" x="197" y="364.6919">&#8594;scheduleTransaction</text><polygon fill="#181818" points="503,412.8906,513,416.8906,503,420.8906,507,416.8906" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="190" x2="509" y1="416.8906" y2="416.8906"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="65" x="197" y="411.8247">&#160;&#160;schedule</text><polygon fill="#181818" points="664,472.0234,674,476.0234,664,480.0234,668,476.0234" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="520" x2="670" y1="476.0234" y2="476.0234"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="132" x="527" y="470.9575">scheduleTransaction</text><polygon fill="#181818" points="825,501.1563,835,505.1563,825,509.1563,829,505.1563" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="681" x2="831" y1="505.1563" y2="505.1563"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="132" x="688" y="500.0903">scheduleTransaction</text><line style="stroke:#181818;stroke-width:1.0;" x1="847" x2="889" y1="554.4219" y2="554.4219"/><line style="stroke:#181818;stroke-width:1.0;" x1="889" x2="889" y1="554.4219" y2="567.4219"/><line style="stroke:#181818;stroke-width:1.0;" x1="842" x2="889" y1="567.4219" y2="567.4219"/><polygon fill="#181818" points="852,563.4219,842,567.4219,852,571.4219,848,567.4219" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="108" x="854" y="534.2231">&#9316; sendMessage:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="157" x="854" y="549.356">EXECUTE_TRANSACTION</text><line style="stroke:#181818;stroke-width:1.0;" x1="180" x2="222" y1="606.6875" y2="606.6875"/><line style="stroke:#181818;stroke-width:1.0;" x1="222" x2="222" y1="606.6875" y2="619.6875"/><line style="stroke:#181818;stroke-width:1.0;" x1="181" x2="222" y1="619.6875" y2="619.6875"/><polygon fill="#181818" points="191,615.6875,181,619.6875,191,623.6875,187,619.6875" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="180" x="187" y="586.4888">ActivityTaskManagerService</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="123" x="187" y="601.6216">.startProcessAsync</text><!--SRC=[fLJjQi8m5FtVfmW8Gn75_HcZWq4f5WHrqdOmq37Iv3g3DUcQLFG5zdzxXUt9V98bQZUt-ZqAXJRdd7lkFRsDn0mvdG2Ll8PtxNbMNzHkaKCKcp8r3x4S1ra2wPH9aQ9grKQBjmya5KvLa01XGqPohBM3j5yk1Hm7HYx7j0KP0pr2p0SYKefi947rKa50oZqiDsR0LPXYBh462Qw98bAOyTDzswYDCqv6-N5BmQH-K6oR0qofY-CumcHSBcfMph7cWymcy7zhUgfjDWGo9p7eW1Juy9A1LELYWSfvqVTNPR-hT337pv0-3lZYzLsI4T0iXWrJ9pLW2boKBgyQDwjxhcTP50nagZlQOUu8172A8Z6phCXiJw-tt1vzMKKZPWP94ZE2pMCuqXyyHRMQyRUrno9sOuW7sN-0MwXcWpzrkfnszCReWTi3tdneklTXyodqdMxWk67hhllJugdPsh_UhqCDp2610Qyl_nthVNNad9Cl]--></g></svg>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1166px" preserveAspectRatio="none" style="width:982px;height:1166px;background:#FFFFFF;" version="1.1" viewBox="0 0 982 1166" width="982px" zoomAndPan="magnify"><defs/><g><rect fill="#F0F0F0" height="1154.0391" style="stroke:#181818;stroke-width:0.5;" width="851.5" x="125" y="6"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="30" x="533.25" y="18.0669">APP</text><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="184" y="102.6953"/><rect fill="#FFFFFF" height="370.6563" style="stroke:#181818;stroke-width:1.0;" width="10" x="184" y="218.2266"/><rect fill="#FFFFFF" height="303.5234" style="stroke:#181818;stroke-width:1.0;" width="10" x="189" y="285.3594"/><rect fill="#FFFFFF" height="76.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="194" y="327.4922"/><rect fill="#FFFFFF" height="19" style="stroke:#181818;stroke-width:1.0;" width="10" x="199" y="384.7578"/><rect fill="#FFFFFF" height="59.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="184" y="744.4141"/><rect fill="#FFFFFF" height="168.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="184" y="948.2109"/><rect fill="#FFFFFF" height="34.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="189" y="1015.3438"/><rect fill="#FFFFFF" height="846.3828" style="stroke:#181818;stroke-width:1.0;" width="10" x="404" y="131.8281"/><rect fill="#FFFFFF" height="64.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="409" y="184.0938"/><rect fill="#FFFFFF" height="352.1953" style="stroke:#181818;stroke-width:1.0;" width="10" x="409" y="626.0156"/><rect fill="#FFFFFF" height="106.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="414" y="668.1484"/><rect fill="#FFFFFF" height="64.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="419" y="710.2813"/><rect fill="#FFFFFF" height="64.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="414" y="914.0781"/><rect fill="#FFFFFF" height="14" style="stroke:#181818;stroke-width:1.0;" width="10" x="737" y="460.1875"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="737" y="559.75"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="737" y="832.6797"/><rect fill="#FFFFFF" height="38.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="737" y="1078.6094"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="906" y="803.5469"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="906" y="1049.4766"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="189" x2="189" y1="56.4297" y2="1125.7422"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="409" x2="409" y1="56.4297" y2="1125.7422"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="613.5" x2="613.5" y1="428.4063" y2="1125.7422"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="741.5" x2="741.5" y1="56.4297" y2="1125.7422"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="910.5" x2="910.5" y1="498.8359" y2="1125.7422"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="120" x="129" y="25.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="136" y="45.1279">ActivityThread</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="120" x="129" y="1124.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="136" y="1144.7373">ActivityThread</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="162" x="328" y="25.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="335" y="45.1279">TransactionExecutor</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="162" x="328" y="1124.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="335" y="1144.7373">TransactionExecutor</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="105" x="561.5" y="1124.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="568.5" y="1144.7373">ContextImpl</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="131" x="676.5" y="25.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="683.5" y="45.1279">Instrumentation</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="131" x="676.5" y="1124.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="683.5" y="1144.7373">Instrumentation</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="123" x="849.5" y="1124.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="856.5" y="1144.7373">SecondActivity</text><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="184" y="102.6953"/><rect fill="#FFFFFF" height="370.6563" style="stroke:#181818;stroke-width:1.0;" width="10" x="184" y="218.2266"/><rect fill="#FFFFFF" height="303.5234" style="stroke:#181818;stroke-width:1.0;" width="10" x="189" y="285.3594"/><rect fill="#FFFFFF" height="76.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="194" y="327.4922"/><rect fill="#FFFFFF" height="19" style="stroke:#181818;stroke-width:1.0;" width="10" x="199" y="384.7578"/><rect fill="#FFFFFF" height="59.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="184" y="744.4141"/><rect fill="#FFFFFF" height="168.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="184" y="948.2109"/><rect fill="#FFFFFF" height="34.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="189" y="1015.3438"/><rect fill="#FFFFFF" height="846.3828" style="stroke:#181818;stroke-width:1.0;" width="10" x="404" y="131.8281"/><rect fill="#FFFFFF" height="64.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="409" y="184.0938"/><rect fill="#FFFFFF" height="352.1953" style="stroke:#181818;stroke-width:1.0;" width="10" x="409" y="626.0156"/><rect fill="#FFFFFF" height="106.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="414" y="668.1484"/><rect fill="#FFFFFF" height="64.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="419" y="710.2813"/><rect fill="#FFFFFF" height="64.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="414" y="914.0781"/><rect fill="#FFFFFF" height="14" style="stroke:#181818;stroke-width:1.0;" width="10" x="737" y="460.1875"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="737" y="559.75"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="737" y="832.6797"/><rect fill="#FFFFFF" height="38.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="737" y="1078.6094"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="906" y="803.5469"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="906" y="1049.4766"/><ellipse cx="7.5" cy="101.9453" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="172,98.6953,182,102.6953,172,106.6953,176,102.6953" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="178" y1="102.6953" y2="102.6953"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="115" x="10" y="82.4966">&#9316; handleMessage</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="157" x="10" y="97.6294">EXECUTE_TRANSACTION</text><polygon fill="#181818" points="392,127.8281,402,131.8281,392,135.8281,396,131.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="189" x2="398" y1="131.8281" y2="131.8281"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="134" x="253" y="126.7622">execute(transaction)</text><line style="stroke:#181818;stroke-width:1.0;" x1="414" x2="461" y1="171.0938" y2="171.0938"/><line style="stroke:#181818;stroke-width:1.0;" x1="461" x2="461" y1="171.0938" y2="184.0938"/><line style="stroke:#181818;stroke-width:1.0;" x1="420" x2="461" y1="184.0938" y2="184.0938"/><polygon fill="#181818" points="430,180.0938,420,184.0938,430,188.0938,426,184.0938" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="123" x="426" y="150.895">LaunchActivityItem</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="56" x="426" y="166.0278">.execute</text><polygon fill="#181818" points="205,214.2266,195,218.2266,205,222.2266,201,218.2266" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="199" x2="408" y1="218.2266" y2="218.2266"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="137" x="211" y="213.1606">handleLaunchActivity</text><line style="stroke:#181818;stroke-width:1.0;" x1="194" x2="241" y1="272.3594" y2="272.3594"/><line style="stroke:#181818;stroke-width:1.0;" x1="241" x2="241" y1="272.3594" y2="285.3594"/><line style="stroke:#181818;stroke-width:1.0;" x1="200" x2="241" y1="285.3594" y2="285.3594"/><polygon fill="#181818" points="210,281.3594,200,285.3594,210,289.3594,206,285.3594" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="146" x="206" y="267.2935">performLaunchActivity</text><line style="stroke:#181818;stroke-width:1.0;" x1="199" x2="246" y1="314.4922" y2="314.4922"/><line style="stroke:#181818;stroke-width:1.0;" x1="246" x2="246" y1="314.4922" y2="327.4922"/><line style="stroke:#181818;stroke-width:1.0;" x1="205" x2="246" y1="327.4922" y2="327.4922"/><polygon fill="#181818" points="215,323.4922,205,327.4922,215,331.4922,211,327.4922" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="191" x="211" y="309.4263">createBaseContextForActivity</text><line style="stroke:#181818;stroke-width:1.0;" x1="204" x2="251" y1="371.7578" y2="371.7578"/><line style="stroke:#181818;stroke-width:1.0;" x1="251" x2="251" y1="371.7578" y2="384.7578"/><line style="stroke:#181818;stroke-width:1.0;" x1="210" x2="251" y1="384.7578" y2="384.7578"/><polygon fill="#181818" points="220,380.7578,210,384.7578,220,388.7578,216,384.7578" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="99" x="216" y="351.5591">[ContextImpl]&#8594;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="140" x="216" y="366.6919">createActivityContext</text><polygon fill="#181818" points="549.5,399.7578,559.5,403.7578,549.5,407.7578,553.5,403.7578" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="199" x2="555.5" y1="403.7578" y2="403.7578"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="105" x="561.5" y="397.7578"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="568.5" y="417.7529">ContextImpl</text><polygon fill="#181818" points="725,456.1875,735,460.1875,725,464.1875,729,460.1875" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="199" x2="731" y1="460.1875" y2="460.1875"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="75" x="645" y="455.1216">newActivity</text><polygon fill="#181818" points="837.5,470.1875,847.5,474.1875,837.5,478.1875,841.5,474.1875" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="742" x2="843.5" y1="474.1875" y2="474.1875"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="123" x="849.5" y="468.1875"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="856.5" y="488.1826">SecondActivity</text><polygon fill="#181818" points="899,526.6172,909,530.6172,899,534.6172,903,530.6172" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="199" x2="905" y1="530.6172" y2="530.6172"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="57" x="837" y="525.5513">&#9312; attach</text><polygon fill="#181818" points="725,555.75,735,559.75,725,563.75,729,559.75" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="199" x2="731" y1="559.75" y2="559.75"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="130" x="590" y="554.6841">callActivityOnCreate</text><polygon fill="#181818" points="899,584.8828,909,588.8828,899,592.8828,903,588.8828" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="742" x2="905" y1="588.8828" y2="588.8828"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="85" x="809" y="583.8169">&#9313; onCreate()</text><line style="stroke:#181818;stroke-width:1.0;" x1="414" x2="461" y1="613.0156" y2="613.0156"/><line style="stroke:#181818;stroke-width:1.0;" x1="461" x2="461" y1="613.0156" y2="626.0156"/><line style="stroke:#181818;stroke-width:1.0;" x1="420" x2="461" y1="626.0156" y2="626.0156"/><polygon fill="#181818" points="430,622.0156,420,626.0156,430,630.0156,426,626.0156" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="142" x="426" y="607.9497">executeLifecycleState</text><line style="stroke:#181818;stroke-width:1.0;" x1="419" x2="466" y1="655.1484" y2="655.1484"/><line style="stroke:#181818;stroke-width:1.0;" x1="466" x2="466" y1="655.1484" y2="668.1484"/><line style="stroke:#181818;stroke-width:1.0;" x1="425" x2="466" y1="668.1484" y2="668.1484"/><polygon fill="#181818" points="435,664.1484,425,668.1484,435,672.1484,431,668.1484" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="431" y="650.0825">cycleToPath</text><line style="stroke:#181818;stroke-width:1.0;" x1="424" x2="471" y1="697.2813" y2="697.2813"/><line style="stroke:#181818;stroke-width:1.0;" x1="471" x2="471" y1="697.2813" y2="710.2813"/><line style="stroke:#181818;stroke-width:1.0;" x1="430" x2="471" y1="710.2813" y2="710.2813"/><polygon fill="#181818" points="440,706.2813,430,710.2813,440,714.2813,436,710.2813" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="171" x="436" y="692.2153">performLifecycleSequence</text><polygon fill="#181818" points="205,740.4141,195,744.4141,205,748.4141,201,744.4141" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="199" x2="418" y1="744.4141" y2="744.4141"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="122" x="211" y="739.3481">handleStartActivity</text><polygon fill="#181818" points="894,799.5469,904,803.5469,894,807.5469,898,803.5469" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="189" x2="900" y1="803.5469" y2="803.5469"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="83" x="806" y="798.481">performStart</text><polygon fill="#181818" points="758,828.6797,748,832.6797,758,836.6797,754,832.6797" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="752" x2="910" y1="832.6797" y2="832.6797"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="118" x="764" y="827.6138">callActivityOnStart</text><polygon fill="#181818" points="899,857.8125,909,861.8125,899,865.8125,903,861.8125" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="742" x2="905" y1="861.8125" y2="861.8125"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="73" x="821" y="856.7466">&#9314; onStart()</text><line style="stroke:#181818;stroke-width:1.0;" x1="419" x2="466" y1="901.0781" y2="901.0781"/><line style="stroke:#181818;stroke-width:1.0;" x1="466" x2="466" y1="901.0781" y2="914.0781"/><line style="stroke:#181818;stroke-width:1.0;" x1="425" x2="466" y1="914.0781" y2="914.0781"/><polygon fill="#181818" points="435,910.0781,425,914.0781,435,918.0781,431,914.0781" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="130" x="431" y="880.8794">ResumeActivityItem</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="56" x="431" y="896.0122">.execute</text><polygon fill="#181818" points="205,944.2109,195,948.2109,205,952.2109,201,948.2109" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="199" x2="413" y1="948.2109" y2="948.2109"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="144" x="211" y="943.145">handleResumeActivity</text><line style="stroke:#181818;stroke-width:1.0;" x1="194" x2="241" y1="1002.3438" y2="1002.3438"/><line style="stroke:#181818;stroke-width:1.0;" x1="241" x2="241" y1="1002.3438" y2="1015.3438"/><line style="stroke:#181818;stroke-width:1.0;" x1="200" x2="241" y1="1015.3438" y2="1015.3438"/><polygon fill="#181818" points="210,1011.3438,200,1015.3438,210,1019.3438,206,1015.3438" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="153" x="206" y="997.2778">performResumeActivity</text><polygon fill="#181818" points="894,1045.4766,904,1049.4766,894,1053.4766,898,1049.4766" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="194" x2="900" y1="1049.4766" y2="1049.4766"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="105" x="784" y="1044.4106">performResume</text><polygon fill="#181818" points="758,1074.6094,748,1078.6094,758,1082.6094,754,1078.6094" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="752" x2="910" y1="1078.6094" y2="1078.6094"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="140" x="764" y="1073.5435">callActivityOnResume</text><polygon fill="#181818" points="899,1103.7422,909,1107.7422,899,1111.7422,903,1107.7422" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="747" x2="905" y1="1107.7422" y2="1107.7422"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="95" x="799" y="1102.6763">&#9315; onResume()</text><!--SRC=[hLNBJi905DttAoPn0veQrovCAa92Wa2W9YPWp3YzqCRs3iuCY3_WNh_0rvVn9KvV2ALeYvHDoPnpxklSgRptS4853OY4XoaWWqkGaex1yhqn4W4p418kF05CUHoDEpudLhTB3XeduSyOSFECMFfivgadsnL07N9qT4eMBr_4fUZugTuGwzVrsfLTlxLxLhjlrUncfsrac5hB5XGbZOBLvy2cYWjYcg4aH7-XeduGLICNdgyIQhJe59cRHcqg28Pud0XlqygfBgviNSnm8EJEg8Ayy3cbvWXFG8ou23BAXQXCloaufn9g71NCLOEBSWg3XDWC9lxDulbrYB5c2asESyHMYEJmSBKJwzXVJZP5coYLc0Q0YeQDZ594U5pMb3tNb3umZawAoAIImUT4pD135xyHgXHbRi7y6FNz5Dd1MjI-0ecQPXZhdV24Kgdkr4FzbDo7nFejRmJiYVdGLtJx8cmJYPWsxrBbbgMcVb_6JowXqhke4nUgw2gMtjIDSQta7aKsieXDUyIaTOF4tAB- -D3-Y1ZQ7gKdtGEfG-pfvbiN-sUxztXlPl8gDyYOlECa4_BVemm7-Qa76HFq904Teh-gtm00]--></g></svg>

<h2 id="第四阶段：View添加到Window"><a href="#第四阶段：View添加到Window" class="headerlink" title="第四阶段：View添加到Window"></a>第四阶段：View添加到Window</h2><p>下面这个时序图是对上面时序图的进一步细化，① ② ③ ④与上面的序号一对一对应。</p>
<pre class="mermaid">

zenuml
group {
    &lt;&lt;App&gt;&gt; ActivityThread
    &lt;&lt;App&gt;&gt; SecondActivity
    PhoneWindow
    DecorView
    &lt;&lt;App&gt;&gt; WindowManagerGlobal
    ViewRootImpl
}


SecondActivity.&quot;① attach&quot; {
    attachBaseContext
    new PhoneWindow()
    PhoneWindow.setWindowManager
}
SecondActivity.&quot;② onCreate()&quot; {
    setContentView {
        PhoneWindow.installDecor {
            new DecorView()
            mContentParent &#x3D; generateLayout()
            &quot;mContentParent.addView&quot;
        }
    }
}
SecondActivity.&quot;③ onStart()&quot;
ActivityThread.handleResumeActivity {
    SecondActivity.&quot;④ onResume()&quot;
    DecorView.setVisibility(INVISIBLE)
    WindowManagerGlobal.addView(DecorView) {
        new ViewRootImpl()
        &quot;mViews.add(DecorView)&quot;
        &quot;mRoots.add(ViewRootImpl)&quot;
        ViewRootImpl.setView(DecorView)
    }
    SecondActivity.makeVisible {
        DecorView.setVisibility(VISIBLE) {
            ViewRootImpl.invalidateChild {
                invalidate {
                    scheduleTraversals
                }
            }
        }
    }
}
</pre>

<p>Activity.onCreate()中通过调用<code>setContentView</code>来触发DecorView的创建，DecorView就是rootView(<code>View#getRootView</code>)。通过<a href="https://developer.android.google.cn/studio/profile/hierarchy-viewer">Hierarchy Viewer</a>看下DecorView结构：</p>
<p><img src="/images/Android/DecorView%E7%A4%BA%E4%BE%8B.png" alt="DecorView示例"></p>
<p>用户自定义的View会被添加到PhoneWindow.mContentParent中，而mContentParent是DecorView的一个子孙View。Activity.onResume()之后就会就会把DecorView添加到WindowManagerGlobal中，对生成对应的ViewRootImpl。ViewRootImpl就是DecorView的parent。</p>
<p>最后阶段就会执行UI的渲染，对应<code>ViewRootImpl.scheduleTraversals</code>。</p>
<p>下面是Activity、Task之间的类图关系：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="392px" preserveAspectRatio="none" style="width:1073px;height:392px;background:#FFFFFF;" version="1.1" viewBox="0 0 1073 392" width="1073px" zoomAndPan="magnify"><defs/><g><!--class WindowContainer--><g id="elem_WindowContainer"><rect codeLine="2" fill="#F1F1F1" height="48" id="WindowContainer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="269" x="352" y="119"/><ellipse cx="367" cy="135" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M369.3438,130.6719 C368.4063,130.2344 367.8125,130.0938 366.9375,130.0938 C364.3125,130.0938 362.3125,132.1719 362.3125,134.8906 L362.3125,136.0156 C362.3125,138.5938 364.4219,140.4844 367.3125,140.4844 C368.5313,140.4844 369.6875,140.1875 370.4375,139.6406 C371.0156,139.2344 371.3438,138.7813 371.3438,138.3906 C371.3438,137.9375 370.9531,137.5469 370.4844,137.5469 C370.2656,137.5469 370.0625,137.625 369.875,137.8125 C369.4219,138.2969 369.4219,138.2969 369.2344,138.3906 C368.8125,138.6563 368.125,138.7813 367.3594,138.7813 C365.3125,138.7813 364.0156,137.6875 364.0156,135.9844 L364.0156,134.8906 C364.0156,133.1094 365.2656,131.7969 367,131.7969 C367.5781,131.7969 368.1875,131.9531 368.6563,132.2031 C369.1406,132.4844 369.3125,132.7031 369.4063,133.1094 C369.4688,133.5156 369.5,133.6406 369.6406,133.7656 C369.7813,133.9063 370.0156,134.0156 370.2344,134.0156 C370.5,134.0156 370.7656,133.875 370.9375,133.6563 C371.0469,133.5 371.0781,133.3125 371.0781,132.8906 L371.0781,131.4688 C371.0781,131.0313 371.0625,130.9063 370.9688,130.75 C370.8125,130.4844 370.5313,130.3438 370.2344,130.3438 C369.9375,130.3438 369.7344,130.4375 369.5156,130.75 L369.3438,130.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="381" y="139.8467">WindowContainer</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="108" x="516" y="116"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="106" x="517" y="128.1387">WindowContainer</text><line style="stroke:#181818;stroke-width:0.5;" x1="353" x2="620" y1="151" y2="151"/><line style="stroke:#181818;stroke-width:0.5;" x1="353" x2="620" y1="159" y2="159"/></g><!--class TaskFragment--><g id="elem_TaskFragment"><rect fill="#F1F1F1" height="48" id="TaskFragment" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="135" x="419" y="228"/><ellipse cx="434" cy="244" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M436.3438,239.6719 C435.4063,239.2344 434.8125,239.0938 433.9375,239.0938 C431.3125,239.0938 429.3125,241.1719 429.3125,243.8906 L429.3125,245.0156 C429.3125,247.5938 431.4219,249.4844 434.3125,249.4844 C435.5313,249.4844 436.6875,249.1875 437.4375,248.6406 C438.0156,248.2344 438.3438,247.7813 438.3438,247.3906 C438.3438,246.9375 437.9531,246.5469 437.4844,246.5469 C437.2656,246.5469 437.0625,246.625 436.875,246.8125 C436.4219,247.2969 436.4219,247.2969 436.2344,247.3906 C435.8125,247.6563 435.125,247.7813 434.3594,247.7813 C432.3125,247.7813 431.0156,246.6875 431.0156,244.9844 L431.0156,243.8906 C431.0156,242.1094 432.2656,240.7969 434,240.7969 C434.5781,240.7969 435.1875,240.9531 435.6563,241.2031 C436.1406,241.4844 436.3125,241.7031 436.4063,242.1094 C436.4688,242.5156 436.5,242.6406 436.6406,242.7656 C436.7813,242.9063 437.0156,243.0156 437.2344,243.0156 C437.5,243.0156 437.7656,242.875 437.9375,242.6563 C438.0469,242.5 438.0781,242.3125 438.0781,241.8906 L438.0781,240.4688 C438.0781,240.0313 438.0625,239.9063 437.9688,239.75 C437.8125,239.4844 437.5313,239.3438 437.2344,239.3438 C436.9375,239.3438 436.7344,239.4375 436.5156,239.75 L436.3438,239.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="448" y="248.8467">TaskFragment</text><line style="stroke:#181818;stroke-width:0.5;" x1="420" x2="553" y1="260" y2="260"/><line style="stroke:#181818;stroke-width:0.5;" x1="420" x2="553" y1="268" y2="268"/></g><!--class Task--><g id="elem_Task"><rect fill="#F1F1F1" height="48" id="Task" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="65" x="454" y="337"/><ellipse cx="469" cy="353" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M471.3438,348.6719 C470.4063,348.2344 469.8125,348.0938 468.9375,348.0938 C466.3125,348.0938 464.3125,350.1719 464.3125,352.8906 L464.3125,354.0156 C464.3125,356.5938 466.4219,358.4844 469.3125,358.4844 C470.5313,358.4844 471.6875,358.1875 472.4375,357.6406 C473.0156,357.2344 473.3438,356.7813 473.3438,356.3906 C473.3438,355.9375 472.9531,355.5469 472.4844,355.5469 C472.2656,355.5469 472.0625,355.625 471.875,355.8125 C471.4219,356.2969 471.4219,356.2969 471.2344,356.3906 C470.8125,356.6563 470.125,356.7813 469.3594,356.7813 C467.3125,356.7813 466.0156,355.6875 466.0156,353.9844 L466.0156,352.8906 C466.0156,351.1094 467.2656,349.7969 469,349.7969 C469.5781,349.7969 470.1875,349.9531 470.6563,350.2031 C471.1406,350.4844 471.3125,350.7031 471.4063,351.1094 C471.4688,351.5156 471.5,351.6406 471.6406,351.7656 C471.7813,351.9063 472.0156,352.0156 472.2344,352.0156 C472.5,352.0156 472.7656,351.875 472.9375,351.6563 C473.0469,351.5 473.0781,351.3125 473.0781,350.8906 L473.0781,349.4688 C473.0781,349.0313 473.0625,348.9063 472.9688,348.75 C472.8125,348.4844 472.5313,348.3438 472.2344,348.3438 C471.9375,348.3438 471.7344,348.4375 471.5156,348.75 L471.3438,348.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="483" y="357.8467">Task</text><line style="stroke:#181818;stroke-width:0.5;" x1="455" x2="518" y1="369" y2="369"/><line style="stroke:#181818;stroke-width:0.5;" x1="455" x2="518" y1="377" y2="377"/></g><!--class RootDisplayArea--><g id="elem_RootDisplayArea"><rect fill="#F1F1F1" height="48" id="RootDisplayArea" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="152" x="643.5" y="228"/><ellipse cx="658.5" cy="244" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M660.8438,239.6719 C659.9063,239.2344 659.3125,239.0938 658.4375,239.0938 C655.8125,239.0938 653.8125,241.1719 653.8125,243.8906 L653.8125,245.0156 C653.8125,247.5938 655.9219,249.4844 658.8125,249.4844 C660.0313,249.4844 661.1875,249.1875 661.9375,248.6406 C662.5156,248.2344 662.8438,247.7813 662.8438,247.3906 C662.8438,246.9375 662.4531,246.5469 661.9844,246.5469 C661.7656,246.5469 661.5625,246.625 661.375,246.8125 C660.9219,247.2969 660.9219,247.2969 660.7344,247.3906 C660.3125,247.6563 659.625,247.7813 658.8594,247.7813 C656.8125,247.7813 655.5156,246.6875 655.5156,244.9844 L655.5156,243.8906 C655.5156,242.1094 656.7656,240.7969 658.5,240.7969 C659.0781,240.7969 659.6875,240.9531 660.1563,241.2031 C660.6406,241.4844 660.8125,241.7031 660.9063,242.1094 C660.9688,242.5156 661,242.6406 661.1406,242.7656 C661.2813,242.9063 661.5156,243.0156 661.7344,243.0156 C662,243.0156 662.2656,242.875 662.4375,242.6563 C662.5469,242.5 662.5781,242.3125 662.5781,241.8906 L662.5781,240.4688 C662.5781,240.0313 662.5625,239.9063 662.4688,239.75 C662.3125,239.4844 662.0313,239.3438 661.7344,239.3438 C661.4375,239.3438 661.2344,239.4375 661.0156,239.75 L660.8438,239.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="672.5" y="248.8467">RootDisplayArea</text><line style="stroke:#181818;stroke-width:0.5;" x1="644.5" x2="794.5" y1="260" y2="260"/><line style="stroke:#181818;stroke-width:0.5;" x1="644.5" x2="794.5" y1="268" y2="268"/></g><!--class DisplayContent--><g id="elem_DisplayContent"><rect fill="#F1F1F1" height="48" id="DisplayContent" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="144" x="753.5" y="337"/><ellipse cx="768.5" cy="353" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M770.8438,348.6719 C769.9063,348.2344 769.3125,348.0938 768.4375,348.0938 C765.8125,348.0938 763.8125,350.1719 763.8125,352.8906 L763.8125,354.0156 C763.8125,356.5938 765.9219,358.4844 768.8125,358.4844 C770.0313,358.4844 771.1875,358.1875 771.9375,357.6406 C772.5156,357.2344 772.8438,356.7813 772.8438,356.3906 C772.8438,355.9375 772.4531,355.5469 771.9844,355.5469 C771.7656,355.5469 771.5625,355.625 771.375,355.8125 C770.9219,356.2969 770.9219,356.2969 770.7344,356.3906 C770.3125,356.6563 769.625,356.7813 768.8594,356.7813 C766.8125,356.7813 765.5156,355.6875 765.5156,353.9844 L765.5156,352.8906 C765.5156,351.1094 766.7656,349.7969 768.5,349.7969 C769.0781,349.7969 769.6875,349.9531 770.1563,350.2031 C770.6406,350.4844 770.8125,350.7031 770.9063,351.1094 C770.9688,351.5156 771,351.6406 771.1406,351.7656 C771.2813,351.9063 771.5156,352.0156 771.7344,352.0156 C772,352.0156 772.2656,351.875 772.4375,351.6563 C772.5469,351.5 772.5781,351.3125 772.5781,350.8906 L772.5781,349.4688 C772.5781,349.0313 772.5625,348.9063 772.4688,348.75 C772.3125,348.4844 772.0313,348.3438 771.7344,348.3438 C771.4375,348.3438 771.2344,348.4375 771.0156,348.75 L770.8438,348.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="782.5" y="357.8467">DisplayContent</text><line style="stroke:#181818;stroke-width:0.5;" x1="754.5" x2="896.5" y1="369" y2="369"/><line style="stroke:#181818;stroke-width:0.5;" x1="754.5" x2="896.5" y1="377" y2="377"/></g><!--class WindowContainer1--><g id="elem_WindowContainer1"><rect codeLine="8" fill="#F1F1F1" height="48" id="WindowContainer1" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="233" x="507" y="10"/><ellipse cx="522" cy="26" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M524.3438,21.6719 C523.4063,21.2344 522.8125,21.0938 521.9375,21.0938 C519.3125,21.0938 517.3125,23.1719 517.3125,25.8906 L517.3125,27.0156 C517.3125,29.5938 519.4219,31.4844 522.3125,31.4844 C523.5313,31.4844 524.6875,31.1875 525.4375,30.6406 C526.0156,30.2344 526.3438,29.7813 526.3438,29.3906 C526.3438,28.9375 525.9531,28.5469 525.4844,28.5469 C525.2656,28.5469 525.0625,28.625 524.875,28.8125 C524.4219,29.2969 524.4219,29.2969 524.2344,29.3906 C523.8125,29.6563 523.125,29.7813 522.3594,29.7813 C520.3125,29.7813 519.0156,28.6875 519.0156,26.9844 L519.0156,25.8906 C519.0156,24.1094 520.2656,22.7969 522,22.7969 C522.5781,22.7969 523.1875,22.9531 523.6563,23.2031 C524.1406,23.4844 524.3125,23.7031 524.4063,24.1094 C524.4688,24.5156 524.5,24.6406 524.6406,24.7656 C524.7813,24.9063 525.0156,25.0156 525.2344,25.0156 C525.5,25.0156 525.7656,24.875 525.9375,24.6563 C526.0469,24.5 526.0781,24.3125 526.0781,23.8906 L526.0781,22.4688 C526.0781,22.0313 526.0625,21.9063 525.9688,21.75 C525.8125,21.4844 525.5313,21.3438 525.2344,21.3438 C524.9375,21.3438 524.7344,21.4375 524.5156,21.75 L524.3438,21.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="536" y="30.8467">WindowContainer</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="72" x="671" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="70" x="672" y="19.1387">DisplayArea</text><line style="stroke:#181818;stroke-width:0.5;" x1="508" x2="739" y1="42" y2="42"/><line style="stroke:#181818;stroke-width:0.5;" x1="508" x2="739" y1="50" y2="50"/></g><!--class DisplayArea--><g id="elem_DisplayArea"><rect fill="#F1F1F1" height="48" id="DisplayArea" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="117" x="656" y="119"/><ellipse cx="671" cy="135" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M673.3438,130.6719 C672.4063,130.2344 671.8125,130.0938 670.9375,130.0938 C668.3125,130.0938 666.3125,132.1719 666.3125,134.8906 L666.3125,136.0156 C666.3125,138.5938 668.4219,140.4844 671.3125,140.4844 C672.5313,140.4844 673.6875,140.1875 674.4375,139.6406 C675.0156,139.2344 675.3438,138.7813 675.3438,138.3906 C675.3438,137.9375 674.9531,137.5469 674.4844,137.5469 C674.2656,137.5469 674.0625,137.625 673.875,137.8125 C673.4219,138.2969 673.4219,138.2969 673.2344,138.3906 C672.8125,138.6563 672.125,138.7813 671.3594,138.7813 C669.3125,138.7813 668.0156,137.6875 668.0156,135.9844 L668.0156,134.8906 C668.0156,133.1094 669.2656,131.7969 671,131.7969 C671.5781,131.7969 672.1875,131.9531 672.6563,132.2031 C673.1406,132.4844 673.3125,132.7031 673.4063,133.1094 C673.4688,133.5156 673.5,133.6406 673.6406,133.7656 C673.7813,133.9063 674.0156,134.0156 674.2344,134.0156 C674.5,134.0156 674.7656,133.875 674.9375,133.6563 C675.0469,133.5 675.0781,133.3125 675.0781,132.8906 L675.0781,131.4688 C675.0781,131.0313 675.0625,130.9063 674.9688,130.75 C674.8125,130.4844 674.5313,130.3438 674.2344,130.3438 C673.9375,130.3438 673.7344,130.4375 673.5156,130.75 L673.3438,130.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="685" y="139.8467">DisplayArea</text><line style="stroke:#181818;stroke-width:0.5;" x1="657" x2="772" y1="151" y2="151"/><line style="stroke:#181818;stroke-width:0.5;" x1="657" x2="772" y1="159" y2="159"/></g><!--class WindowContainer2--><g id="elem_WindowContainer2"><rect codeLine="13" fill="#F1F1F1" height="48" id="WindowContainer2" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="254" x="808.5" y="119"/><ellipse cx="823.5" cy="135" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M825.8438,130.6719 C824.9063,130.2344 824.3125,130.0938 823.4375,130.0938 C820.8125,130.0938 818.8125,132.1719 818.8125,134.8906 L818.8125,136.0156 C818.8125,138.5938 820.9219,140.4844 823.8125,140.4844 C825.0313,140.4844 826.1875,140.1875 826.9375,139.6406 C827.5156,139.2344 827.8438,138.7813 827.8438,138.3906 C827.8438,137.9375 827.4531,137.5469 826.9844,137.5469 C826.7656,137.5469 826.5625,137.625 826.375,137.8125 C825.9219,138.2969 825.9219,138.2969 825.7344,138.3906 C825.3125,138.6563 824.625,138.7813 823.8594,138.7813 C821.8125,138.7813 820.5156,137.6875 820.5156,135.9844 L820.5156,134.8906 C820.5156,133.1094 821.7656,131.7969 823.5,131.7969 C824.0781,131.7969 824.6875,131.9531 825.1563,132.2031 C825.6406,132.4844 825.8125,132.7031 825.9063,133.1094 C825.9688,133.5156 826,133.6406 826.1406,133.7656 C826.2813,133.9063 826.5156,134.0156 826.7344,134.0156 C827,134.0156 827.2656,133.875 827.4375,133.6563 C827.5469,133.5 827.5781,133.3125 827.5781,132.8906 L827.5781,131.4688 C827.5781,131.0313 827.5625,130.9063 827.4688,130.75 C827.3125,130.4844 827.0313,130.3438 826.7344,130.3438 C826.4375,130.3438 826.2344,130.4375 826.0156,130.75 L825.8438,130.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="837.5" y="139.8467">WindowContainer</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="93" x="972.5" y="116"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="91" x="973.5" y="128.1387">DisplayContent</text><line style="stroke:#181818;stroke-width:0.5;" x1="809.5" x2="1061.5" y1="151" y2="151"/><line style="stroke:#181818;stroke-width:0.5;" x1="809.5" x2="1061.5" y1="159" y2="159"/></g><!--class RootWindowContainer--><g id="elem_RootWindowContainer"><rect fill="#F1F1F1" height="48" id="RootWindowContainer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="194" x="836.5" y="228"/><ellipse cx="851.5" cy="244" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M853.8438,239.6719 C852.9063,239.2344 852.3125,239.0938 851.4375,239.0938 C848.8125,239.0938 846.8125,241.1719 846.8125,243.8906 L846.8125,245.0156 C846.8125,247.5938 848.9219,249.4844 851.8125,249.4844 C853.0313,249.4844 854.1875,249.1875 854.9375,248.6406 C855.5156,248.2344 855.8438,247.7813 855.8438,247.3906 C855.8438,246.9375 855.4531,246.5469 854.9844,246.5469 C854.7656,246.5469 854.5625,246.625 854.375,246.8125 C853.9219,247.2969 853.9219,247.2969 853.7344,247.3906 C853.3125,247.6563 852.625,247.7813 851.8594,247.7813 C849.8125,247.7813 848.5156,246.6875 848.5156,244.9844 L848.5156,243.8906 C848.5156,242.1094 849.7656,240.7969 851.5,240.7969 C852.0781,240.7969 852.6875,240.9531 853.1563,241.2031 C853.6406,241.4844 853.8125,241.7031 853.9063,242.1094 C853.9688,242.5156 854,242.6406 854.1406,242.7656 C854.2813,242.9063 854.5156,243.0156 854.7344,243.0156 C855,243.0156 855.2656,242.875 855.4375,242.6563 C855.5469,242.5 855.5781,242.3125 855.5781,241.8906 L855.5781,240.4688 C855.5781,240.0313 855.5625,239.9063 855.4688,239.75 C855.3125,239.4844 855.0313,239.3438 854.7344,239.3438 C854.4375,239.3438 854.2344,239.4375 854.0156,239.75 L853.8438,239.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="865.5" y="248.8467">RootWindowContainer</text><line style="stroke:#181818;stroke-width:0.5;" x1="837.5" x2="1029.5" y1="260" y2="260"/><line style="stroke:#181818;stroke-width:0.5;" x1="837.5" x2="1029.5" y1="268" y2="268"/></g><!--class WindowContainer3--><g id="elem_WindowContainer3"><rect codeLine="17" fill="#F1F1F1" height="48" id="WindowContainer3" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="243" x="7" y="119"/><ellipse cx="22" cy="135" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,130.6719 C23.4063,130.2344 22.8125,130.0938 21.9375,130.0938 C19.3125,130.0938 17.3125,132.1719 17.3125,134.8906 L17.3125,136.0156 C17.3125,138.5938 19.4219,140.4844 22.3125,140.4844 C23.5313,140.4844 24.6875,140.1875 25.4375,139.6406 C26.0156,139.2344 26.3438,138.7813 26.3438,138.3906 C26.3438,137.9375 25.9531,137.5469 25.4844,137.5469 C25.2656,137.5469 25.0625,137.625 24.875,137.8125 C24.4219,138.2969 24.4219,138.2969 24.2344,138.3906 C23.8125,138.6563 23.125,138.7813 22.3594,138.7813 C20.3125,138.7813 19.0156,137.6875 19.0156,135.9844 L19.0156,134.8906 C19.0156,133.1094 20.2656,131.7969 22,131.7969 C22.5781,131.7969 23.1875,131.9531 23.6563,132.2031 C24.1406,132.4844 24.3125,132.7031 24.4063,133.1094 C24.4688,133.5156 24.5,133.6406 24.6406,133.7656 C24.7813,133.9063 25.0156,134.0156 25.2344,134.0156 C25.5,134.0156 25.7656,133.875 25.9375,133.6563 C26.0469,133.5 26.0781,133.3125 26.0781,132.8906 L26.0781,131.4688 C26.0781,131.0313 26.0625,130.9063 25.9688,130.75 C25.8125,130.4844 25.5313,130.3438 25.2344,130.3438 C24.9375,130.3438 24.7344,130.4375 24.5156,130.75 L24.3438,130.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="36" y="139.8467">WindowContainer</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="82" x="171" y="116"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="80" x="172" y="128.1387">WindowState</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="249" y1="151" y2="151"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="249" y1="159" y2="159"/></g><!--class WindowToken--><g id="elem_WindowToken"><rect fill="#F1F1F1" height="48" id="WindowToken" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="62" y="228"/><ellipse cx="77" cy="244" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M79.3438,239.6719 C78.4063,239.2344 77.8125,239.0938 76.9375,239.0938 C74.3125,239.0938 72.3125,241.1719 72.3125,243.8906 L72.3125,245.0156 C72.3125,247.5938 74.4219,249.4844 77.3125,249.4844 C78.5313,249.4844 79.6875,249.1875 80.4375,248.6406 C81.0156,248.2344 81.3438,247.7813 81.3438,247.3906 C81.3438,246.9375 80.9531,246.5469 80.4844,246.5469 C80.2656,246.5469 80.0625,246.625 79.875,246.8125 C79.4219,247.2969 79.4219,247.2969 79.2344,247.3906 C78.8125,247.6563 78.125,247.7813 77.3594,247.7813 C75.3125,247.7813 74.0156,246.6875 74.0156,244.9844 L74.0156,243.8906 C74.0156,242.1094 75.2656,240.7969 77,240.7969 C77.5781,240.7969 78.1875,240.9531 78.6563,241.2031 C79.1406,241.4844 79.3125,241.7031 79.4063,242.1094 C79.4688,242.5156 79.5,242.6406 79.6406,242.7656 C79.7813,242.9063 80.0156,243.0156 80.2344,243.0156 C80.5,243.0156 80.7656,242.875 80.9375,242.6563 C81.0469,242.5 81.0781,242.3125 81.0781,241.8906 L81.0781,240.4688 C81.0781,240.0313 81.0625,239.9063 80.9688,239.75 C80.8125,239.4844 80.5313,239.3438 80.2344,239.3438 C79.9375,239.3438 79.7344,239.4375 79.5156,239.75 L79.3438,239.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="91" y="248.8467">WindowToken</text><line style="stroke:#181818;stroke-width:0.5;" x1="63" x2="194" y1="260" y2="260"/><line style="stroke:#181818;stroke-width:0.5;" x1="63" x2="194" y1="268" y2="268"/></g><!--class ActivityRecord--><g id="elem_ActivityRecord"><rect fill="#F1F1F1" height="48" id="ActivityRecord" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="139" x="59" y="337"/><ellipse cx="74" cy="353" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M76.3438,348.6719 C75.4063,348.2344 74.8125,348.0938 73.9375,348.0938 C71.3125,348.0938 69.3125,350.1719 69.3125,352.8906 L69.3125,354.0156 C69.3125,356.5938 71.4219,358.4844 74.3125,358.4844 C75.5313,358.4844 76.6875,358.1875 77.4375,357.6406 C78.0156,357.2344 78.3438,356.7813 78.3438,356.3906 C78.3438,355.9375 77.9531,355.5469 77.4844,355.5469 C77.2656,355.5469 77.0625,355.625 76.875,355.8125 C76.4219,356.2969 76.4219,356.2969 76.2344,356.3906 C75.8125,356.6563 75.125,356.7813 74.3594,356.7813 C72.3125,356.7813 71.0156,355.6875 71.0156,353.9844 L71.0156,352.8906 C71.0156,351.1094 72.2656,349.7969 74,349.7969 C74.5781,349.7969 75.1875,349.9531 75.6563,350.2031 C76.1406,350.4844 76.3125,350.7031 76.4063,351.1094 C76.4688,351.5156 76.5,351.6406 76.6406,351.7656 C76.7813,351.9063 77.0156,352.0156 77.2344,352.0156 C77.5,352.0156 77.7656,351.875 77.9375,351.6563 C78.0469,351.5 78.0781,351.3125 78.0781,350.8906 L78.0781,349.4688 C78.0781,349.0313 78.0625,348.9063 77.9688,348.75 C77.8125,348.4844 77.5313,348.3438 77.2344,348.3438 C76.9375,348.3438 76.7344,348.4375 76.5156,348.75 L76.3438,348.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="88" y="357.8467">ActivityRecord</text><line style="stroke:#181818;stroke-width:0.5;" x1="60" x2="197" y1="369" y2="369"/><line style="stroke:#181818;stroke-width:0.5;" x1="60" x2="197" y1="377" y2="377"/></g><!--reverse link WindowContainer to TaskFragment--><g id="link_WindowContainer_TaskFragment"><path codeLine="4" d="M486.5,185.217 C486.5,203.165 486.5,209.892 486.5,227.828 " fill="none" id="WindowContainer-backto-TaskFragment" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="486.5,167.217,480.5,185.217,492.5,185.217,486.5,167.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link TaskFragment to Task--><g id="link_TaskFragment_Task"><path codeLine="5" d="M486.5,294.217 C486.5,312.1649 486.5,318.8918 486.5,336.8279 " fill="none" id="TaskFragment-backto-Task" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="486.5,276.217,480.5,294.217,492.5,294.217,486.5,276.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RootDisplayArea to DisplayContent--><g id="link_RootDisplayArea_DisplayContent"><path codeLine="7" d="M755.168,289.0046 C772.948,306.9525 784.776,318.8918 802.544,336.8279 " fill="none" id="RootDisplayArea-backto-DisplayContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="742.5,276.217,750.9054,293.2273,759.4305,284.7819,742.5,276.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link WindowContainer1 to DisplayArea--><g id="link_WindowContainer1_DisplayArea"><path codeLine="9" d="M654.9069,71.9292 C670.1699,89.8772 679.539,100.892 694.793,118.828 " fill="none" id="WindowContainer1-backto-DisplayArea" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="643.246,58.217,650.3361,75.8161,659.4776,68.0422,643.246,58.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DisplayArea to RootDisplayArea--><g id="link_DisplayArea_RootDisplayArea"><path codeLine="10" d="M716.4255,185.1974 C717.2645,203.1454 717.579,209.892 718.417,227.828 " fill="none" id="DisplayArea-backto-RootDisplayArea" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="715.585,167.217,710.4321,185.4775,722.419,184.9172,715.585,167.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link WindowContainer1 to WindowContainer--><g id="link_WindowContainer1_WindowContainer"><path codeLine="11" d="M584.3158,65.6036 C561.3368,83.5516 539.134,100.892 516.169,118.828 " fill="none" id="WindowContainer1-backto-WindowContainer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="593.773,58.217,586.5822,58.7579,584.3158,65.6036,591.5066,65.0627,593.773,58.217" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="577.552" y="78.0311">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="514.7467" y="107.796">n</text></g><!--reverse link WindowContainer2 to RootWindowContainer--><g id="link_WindowContainer2_RootWindowContainer"><path codeLine="14" d="M934.7301,185.2139 C934.3951,203.1619 934.268,209.892 933.933,227.828 " fill="none" id="WindowContainer2-backto-RootWindowContainer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="935.066,167.217,928.7311,185.1019,940.729,185.3258,935.066,167.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RootWindowContainer to DisplayContent--><g id="link_RootWindowContainer_DisplayContent"><path codeLine="15" d="M901.5413,284.6626 C883.4253,302.6105 866.992,318.8918 848.889,336.8279 " fill="none" id="RootWindowContainer-backto-DisplayContent" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="910.066,276.217,902.9884,277.5982,901.5413,284.6626,908.6188,283.2814,910.066,276.217" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="895.379" y="296.0311">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="845.8574" y="325.7958">n</text></g><!--reverse link WindowContainer3 to WindowToken--><g id="link_WindowContainer3_WindowToken"><path codeLine="18" d="M128.5,185.217 C128.5,203.165 128.5,209.892 128.5,227.828 " fill="none" id="WindowContainer3-backto-WindowToken" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="128.5,167.217,122.5,185.217,134.5,185.217,128.5,167.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link WindowToken to ActivityRecord--><g id="link_WindowToken_ActivityRecord"><path codeLine="19" d="M128.5,294.217 C128.5,312.1649 128.5,318.8918 128.5,336.8279 " fill="none" id="WindowToken-backto-ActivityRecord" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="128.5,276.217,122.5,294.217,134.5,294.217,128.5,276.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--link WindowContainer3 to WindowContainer--><g id="link_WindowContainer3_WindowContainer"><path codeLine="21" d="M250.202,143 C282.939,143 306.534,143 339.927,143 " fill="none" id="WindowContainer3-to-WindowContainer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="351.927,143,345.927,139,339.927,143,345.927,147,351.927,143" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="65" x="268.5" y="136.0669">mChildren</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="257.862" y="139.6139">n</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="335.9157" y="139.6371">1</text></g><!--SRC=[XPB12i8m38RlVOhGYo3iC7SJ4KJn0LJm7BUgnQsLDYg23-z6HMTQyRO_pPzyVzW0SEV9OKamjsQl3nU7fArf1Q4soasssbJszjPJKTReFR1ot3RuCH0cZopZTi5qQDgWFoqT7XfbIFJ5vxbTmwt331RQdskyTxNEkhAMNgMPKnZSh2UaaZnMppQLW57kd9FdNzCxduXMCvvuXCnb6oC3QMHqgJ-ahpn9s17VDFhmy3M9sXSMEzylgg3NXAIII0L7Alh_nyQUb16zx_0uAqbVDTrNghIk4YBDMQiz9KzOm1YQ-L7NbLFc2G00]--></g></svg>

<h2 id="启动新APP进程"><a href="#启动新APP进程" class="headerlink" title="启动新APP进程"></a>启动新APP进程</h2><p>如果需要启动的activity不在同一个app中，就需要启动新的进程。</p>
<pre class="mermaid">

zenuml
ActivityTaskManagerService.startProcessAsync {
    H.sendMessage {
        ActivityManagerService.startProcess {
            startProcessLocked {
                ProcessList.startProcessLocked {
                    newProcessRecordLocked {
                        new ProcessRecord()
                    }
                    &#x2F;&#x2F;with ProcessRecord
                    startProcessLocked {
                        ProcessList.&quot;配置runtimeFlags&quot;
                        &#x2F;&#x2F;异步启动线程
                        ProcessList -&gt; ActivityManagerService : mProcStartHandler.post
                    }
                }
            }
        }
    }
}
</pre>

<pre class="mermaid">

zenuml
ActivityManagerService.&quot;mProcStartHandler.dispatchMessage&quot; {
    ProcessList.handleProcessStart {
        startProcess {
            ProcessStartResult &#x3D; Process.start {
                ProcessStartResult &#x3D; ZygoteProcess.start {
                    startViaZygote {
                        ZygoteProcess.&quot;组装参数列表args&quot;
                        zygoteSendArgsAndGetResult {
                            &#x2F;&#x2F;通过LocalSocket向zygote发送进程启动参数
                            &#x2F;&#x2F;并阻塞读取进程pid
                            attemptZygoteSendArgsAndGetResult
                        }
                    }
                }
            }
        }
        handleProcessStartedLocked {
            ActivityManagerService.addPidLocked {
                ActivityTaskManagerService.&quot;onProcessMapped(pid, WindowProcessController)&quot; {
                    ActivityTaskManagerService.&quot;mProcessMap.put(pid, proc)&quot;
                }
            }
        }
    }
}
</pre>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//android-13.0.0_r41\frameworks\base\core\java\android\os\ZygoteProcess.java</span></span><br><span class="line">    <span class="keyword">private</span> Process.ProcessStartResult <span class="title function_">attemptZygoteSendArgsAndGetResult</span><span class="params">(</span></span><br><span class="line"><span class="params">            ZygoteState zygoteState, String msgStr)</span> <span class="keyword">throws</span> ZygoteStartFailedEx &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">BufferedWriter</span> <span class="variable">zygoteWriter</span> <span class="operator">=</span> zygoteState.mZygoteOutputWriter;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">DataInputStream</span> <span class="variable">zygoteInputStream</span> <span class="operator">=</span> zygoteState.mZygoteInputStream;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//通过LocalSocket将进程启动参数传输给zygote进程</span></span><br><span class="line">            zygoteWriter.write(msgStr);</span><br><span class="line">            zygoteWriter.flush();</span><br><span class="line"></span><br><span class="line">            Process.<span class="type">ProcessStartResult</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Process</span>.ProcessStartResult();</span><br><span class="line">            <span class="comment">//读取新进程的pid</span></span><br><span class="line">            result.pid = zygoteInputStream.readInt();</span><br><span class="line">            result.usingWrapper = zygoteInputStream.readBoolean();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (result.pid &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ZygoteStartFailedEx</span>(<span class="string">&quot;fork() failed&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException ex) &#123;</span><br><span class="line">            zygoteState.close();</span><br><span class="line">            Log.e(LOG_TAG, <span class="string">&quot;IO Exception while communicating with Zygote - &quot;</span></span><br><span class="line">                    + ex.toString());</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ZygoteStartFailedEx</span>(ex);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>新的app进程启动运行的入口是<code>ActivityThread.main</code>函数：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="comment">//初始化主线程Looper</span></span><br><span class="line">    Looper.prepareMainLooper();</span><br><span class="line"></span><br><span class="line">    ......</span><br><span class="line">    <span class="comment">//创建ActivityThread</span></span><br><span class="line">    <span class="type">ActivityThread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ActivityThread</span>();</span><br><span class="line">    thread.attach(<span class="literal">false</span>, startSeq);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (sMainThreadHandler == <span class="literal">null</span>) &#123;</span><br><span class="line">        sMainThreadHandler = thread.getHandler();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ......</span><br><span class="line">    <span class="comment">//启动主线程消息循环</span></span><br><span class="line">    Looper.loop();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Main thread loop unexpectedly exited&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<pre class="mermaid">

zenuml
group App {
    ApplicationThread
    Application
    ActivityThread
    mH
}
group AMS {
    ActivityManagerService
}
ActivityThread.attach {
    ActivityManagerService.attachApplication {
        Binder.getCallingPid
        attachApplicationLocked {
            &quot;根据pid获取ProcessRecord&quot;
            ApplicationThread.bindApplication {
                mH.sendMessage(BIND_APPLICATION)
            }
        }
    }
}
ActivityThread.handleMessage(BIND_APPLICATION) {
    handleBindApplication {
        new Application()
        Application.attachBaseContext()
        Application.onCreate()
    }
}
</pre>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android屏幕分辨率适配</title>
    <url>/posts/7ed69fd0.html</url>
    <content><![CDATA[<p>Android屏幕分辨率适配一般有三种方案：</p>
<ol>
<li>通过百分比的形式进行布局<ul>
<li><a href="https://developer.android.google.cn/training/constraint-layout">ConstraintLayout</a>使用bias可以配置百分比，参考<a href="https://blog.csdn.net/shulianghan/article/details/97102389">ConstraintLayout 偏移 ( Bias ) 计算方式详解</a>、<a href="https://blog.51cto.com/u_16099341/6585721">android中的各种constrainlayout android constraintlayout百分比</a></li>
<li>使用<a href="https://developer.android.google.cn/reference/kotlin/androidx/percentlayout/widget/PercentRelativeLayout">PercentRelativeLayout</a>等，这个是support库中，现在已经标记为deprecated，推荐使用ConstraintLayout</li>
</ul>
</li>
<li>动态适配屏幕分辨率，通过一系列算法去计算每个view在用户手机屏幕中应该的宽高，从而达到一个适配效果;</li>
<li>静态适配屏幕分辨率，就是通过工具生成各种屏幕尺寸的xml文件。</li>
</ol>
<h2 id="ConstraintLayout进行百分比布局"><a href="#ConstraintLayout进行百分比布局" class="headerlink" title="ConstraintLayout进行百分比布局"></a>ConstraintLayout进行百分比布局</h2><p><code>ConstraintLayout</code>中，当子View尺寸设置为MATCH_CONSTRAINT（0dp）时，默认行为是占据所有可用空间，但是可以通过<code>layout_constraintHeight_percent</code>和<code>layout_constraintWidth_percent</code>来设置为占用父View的百分比，注意，这个百分比是整个父View的宽高的百分比，而不是可用空间的百分比。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#00eeee&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintHeight_percent</span>=<span class="string">&quot;.5&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintWidth_percent</span>=<span class="string">&quot;.5&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>通过bias来设置位置偏移，下面用法可以让子View左边与parent的间距占比为20%，而不是默认的50%。详细介绍可参考<a href="https://developer.android.google.cn/reference/androidx/constraintlayout/widget/ConstraintLayout#centering-positioning-and-bias">Centering positioning and bias</a>。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/test_view&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#00eeee&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintEnd_toEndOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintHorizontal_bias</span>=<span class="string">&quot;0.2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintVertical_bias</span>=<span class="string">&quot;0.2&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="静态屏幕适配"><a href="#静态屏幕适配" class="headerlink" title="静态屏幕适配"></a>静态屏幕适配</h2><p>通过AndroidStudio的<a href="https://blog.csdn.net/fesdgasdgasdg/article/details/52325590">ScreenMatch</a>插件生成不同分辨率的dimens资源文件来进行适配。该插件会基于<code>res/values/dimens.xml</code>生成不同分辨率的比如：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">res/values-sw240dp/dimens.xml</span><br><span class="line">res/values-sw320dp/dimens.xml</span><br><span class="line">res/values-sw384dp/dimens.xml</span><br><span class="line">res/values-sw392dp/dimens.xml</span><br><span class="line">res/values-sw400dp/dimens.xml</span><br><span class="line">res/values-sw410dp/dimens.xml</span><br><span class="line">res/values-sw411dp/dimens.xml</span><br><span class="line">res/values-sw432dp/dimens.xml</span><br></pre></td></tr></table></figure>

<p>其中sw240dp值得是最小宽度限定符，即屏幕可用高度和宽度中最小尺寸的dp值。比如Pixel 6设备，分辨率是1080x2400，像素密度是420dpi，density=420/160=2.625，对应的dp是1080/2.625=411，所以使用的是<code>res/values-sw411dp/dimens.xml</code>。</p>
<p>参考：<a href="https://juejin.cn/post/7030737373075865614">Android屏幕适配总结</a></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://blog.csdn.net/lmj623565791/article/details/45460089">Android 屏幕适配方案</a></li>
<li><a href="https://blog.csdn.net/fesdgasdgasdg/article/details/52325590">Android屏幕适配dp、px两套解决办法</a></li>
<li><a href="https://blog.csdn.net/weixin_43192102/article/details/126620617">Android屏幕适配</a></li>
<li><a href="https://blog.csdn.net/u011038298/article/details/83269208">android屏幕分辨率适配</a></li>
<li><a href="https://juejin.cn/post/7015597280120176676">Android 屏幕分辨率适配</a></li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Handler源码解析</title>
    <url>/posts/48a4fa29.html</url>
    <content><![CDATA[<h2 id="当前线程启动消息队列"><a href="#当前线程启动消息队列" class="headerlink" title="当前线程启动消息队列"></a>当前线程启动消息队列</h2><p>Thread默认是没有消息循环机制的，而Looper就是在Thread基础上运行一个消息循环，通过<code>Looper.prepare()</code>可以把当前线程初始化为一个<strong>Looper thread</strong>。一个典型的Looper thread创建示例如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LooperThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Handler mHandler;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        Looper.prepare();</span><br><span class="line">        mHandler = <span class="keyword">new</span> <span class="title class_">Handler</span>(Looper.myLooper()) &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(Message msg)</span> &#123;</span><br><span class="line">                <span class="comment">//在此处理消息</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        Looper.loop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上述代码分为三部：1）调用Looper.prepare()初始化Looper；2）创建一个Handler用于与Looper进行交互；3）调用Looper.loop()启动消息循环。下面分别看下这三步是如何实现的：</p>
<h3 id="初始化Looper-prepare"><a href="#初始化Looper-prepare" class="headerlink" title="初始化Looper.prepare()"></a>初始化Looper.prepare()</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//android-12.1.0_r27\frameworks\base\core\java\android\os\Looper.java</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;Looper&gt; sThreadLocal = <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>&lt;Looper&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">prepare</span><span class="params">()</span> &#123; <span class="comment">//prepare是静态方法</span></span><br><span class="line">        prepare(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">prepare</span><span class="params">(<span class="type">boolean</span> quitAllowed)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (sThreadLocal.get() != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">//一个线程中Looper.prepare()只能执行一次，否则会抛出异常</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Only one Looper may be created per thread&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//构造了一个Looper放到ThreadLocal中</span></span><br><span class="line">        sThreadLocal.set(<span class="keyword">new</span> <span class="title class_">Looper</span>(quitAllowed));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Looper的构造方法也很简单：1）创建消息队列；2）获取当先线程句柄；</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Looper</span><span class="params">(<span class="type">boolean</span> quitAllowed)</span> &#123;</span><br><span class="line">        mQueue = <span class="keyword">new</span> <span class="title class_">MessageQueue</span>(quitAllowed);</span><br><span class="line">        mThread = Thread.currentThread();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="创建Handler"><a href="#创建Handler" class="headerlink" title="创建Handler"></a>创建Handler</h3><p>用户无法直接使用Looper来进行消息发送和处理，而是需要通过一个Handler来实现。使用Handler可以发送和处理Message，或者运行一个Runnable。每个Handler都会绑定一个Looper，Handler将会把message和runnable投递到Looper的消息队列中，然后Looper thread将会执行这些message和runnable。</p>
<p>下图是Handler与Looper、Thread、MessageQueue之间的对应关系，Thread和Looper是一对一的关系，否则会抛出异常，一个Looper只有一个消息队列，但是可以多个Handler对应同一个Looper。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="243px" preserveAspectRatio="none" style="width:388px;height:243px;background:#FFFFFF;" version="1.1" viewBox="0 0 388 243" width="388px" zoomAndPan="magnify"><defs/><g><!--entity Looper--><g id="elem_Looper"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="71" x="220" y="104"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="230" y="126.9951">Looper</text></g><!--entity Thread--><g id="elem_Thread"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="70" x="221.5" y="201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="231.5" y="223.9951">Thread</text></g><!--entity MessageQueue--><g id="elem_MessageQueue"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="126" x="60.5" y="201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="70.5" y="223.9951">MessageQueue</text></g><!--entity Handler1--><g id="elem_Handler1"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="84" x="137.5" y="7"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="147.5" y="29.9951">Handler1</text></g><!--entity Handler2--><g id="elem_Handler2"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="83" x="7" y="7"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="17" y="29.9951">Handler2</text></g><!--entity Handler3--><g id="elem_Handler3"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="84" x="269.5" y="7"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="279.5" y="29.9951">Handler3</text></g><!--reverse link Looper to Thread--><g id="link_Looper_Thread"><path d="M255.8097,152.4238 C255.9907,169.5648 256.138,183.5832 256.318,200.686 " fill="none" id="Looper-backto-Thread" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="255.683,140.4245,251.7466,146.4664,255.8097,152.4238,259.7461,146.3819,255.683,140.4245" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Looper to MessageQueue--><g id="link_Looper_MessageQueue"><path d="M221.8562,147.2135 C197.9332,164.4307 171.086,183.7524 147.226,200.9242 " fill="none" id="Looper-backto-MessageQueue" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="231.596,140.2038,224.3895,140.462,221.8562,147.2135,229.0626,146.9553,231.596,140.2038" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Handler1 to Looper--><g id="link_Handler1_Looper"><path d="M200.9358,52.7949 C214.6478,69.9369 227.967,86.583 241.649,103.686 " fill="none" id="Handler1-backto-Looper" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="193.44,43.424,194.0643,50.608,200.9358,52.7949,200.3115,45.6108,193.44,43.424" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Handler2 to Looper--><g id="link_Handler2_Looper"><path d="M96.8924,48.2092 C134.8743,65.6402 182.305,87.408 219.678,104.56 " fill="none" id="Handler2-backto-Looper" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="85.9861,43.204,89.7708,49.3421,96.8924,48.2092,93.1077,42.0712,85.9861,43.204" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Handler3 to Looper--><g id="link_Handler3_Looper"><path d="M295.1356,53.7618 C285.0316,70.9038 275.788,86.583 265.706,103.686 " fill="none" id="Handler3-backto-Looper" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="301.229,43.424,294.7364,46.5618,295.1356,53.7618,301.6282,50.624,301.229,43.424" style="stroke:#181818;stroke-width:1.0;"/></g><!--link Handler1 to MessageQueue--><g id="link_Handler1_MessageQueue"><path d="M169.356,43.044 C160.642,58.449 148.42,82.017 141.5,104 C131.032,137.2554 126.9642,171.9891 125.1212,194.6595 " fill="none" id="Handler1-to-MessageQueue" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,3.0;"/><polygon fill="#181818" points="124.635,200.6398,129.3511,191.9935,125.0401,195.6562,121.3774,191.3453,124.635,200.6398" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="59" x="142.5" y="126.5669">message</text></g><!--link Handler2 to MessageQueue--><g id="link_Handler2_MessageQueue"><path d="M48.264,43.315 C48.5367,66.287 51.0893,107.698 64.5,140 C74.2007,163.3655 88.5232,181.5495 102.2059,196.3513 " fill="none" id="Handler2-to-MessageQueue" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,3.0;"/><polygon fill="#181818" points="106.2787,200.7572,103.1068,191.4331,102.8847,197.0856,97.2322,196.8635,106.2787,200.7572" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="59" x="65.5" y="126.5669">message</text></g><!--link Handler3 to MessageQueue--><g id="link_Handler3_MessageQueue"><path d="M316.368,43.194 C322.059,67.15 328.371,110.895 308.5,140 C293.465,162.0218 236.0385,183.7624 187.6605,199.1559 " fill="none" id="Handler3-to-MessageQueue" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,3.0;"/><polygon fill="#181818" points="181.943,200.9752,191.7322,202.058,186.7076,199.4591,189.3065,194.4346,181.943,200.9752" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="59" x="321.5" y="126.5669">message</text></g><!--SRC=[AyxEp2j8B4hCLKZEpot8pqlDAmakgSn9LIXAJIv9p4lFIUMAzidFBqWjYbNGqjLLY0x9A4fDJ8b54_LDBIvEJ4yDB4qjJGNAUIJcfUIa5Xb2PQ5AuU96ECIDSOW3pT6DJialAKbDYTMrGxDDmKeX5y97DfyazSR4gGS0]--></g></svg>

<p>下面看下Handler的构造函数：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="title function_">Handler</span><span class="params">(<span class="meta">@Nullable</span> Callback callback, <span class="type">boolean</span> async)</span> &#123;</span><br><span class="line">        ...... <span class="comment">//代码省略</span></span><br><span class="line">        mLooper = Looper.myLooper(); <span class="comment">//默认使用当前线程关联的looper，也可以通过其他构造函数来指定使用哪个Looper</span></span><br><span class="line">        <span class="keyword">if</span> (mLooper == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(</span><br><span class="line">                <span class="string">&quot;Can&#x27;t create handler inside thread &quot;</span> + Thread.currentThread()</span><br><span class="line">                        + <span class="string">&quot; that has not called Looper.prepare()&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        mQueue = mLooper.mQueue; <span class="comment">//获取Looper的消息队列</span></span><br><span class="line">        mCallback = callback;</span><br><span class="line">        mAsynchronous = async;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//android-12.1.0_r27\frameworks\base\core\java\android\os\Looper.java</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="meta">@Nullable</span> Looper <span class="title function_">myLooper</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sThreadLocal.get(); <span class="comment">//从ThreadLocal中获取当前线程关联的Looper</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="启动消息循环"><a href="#启动消息循环" class="headerlink" title="启动消息循环"></a>启动消息循环</h3><p>下面代码是一个精简版代码，精简了debug、异常处理等相关逻辑，但基本逻辑不变。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Looper</span> <span class="variable">me</span> <span class="operator">=</span> myLooper();</span><br><span class="line">        me.mInLoop = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (;;) &#123; <span class="comment">//forever loop</span></span><br><span class="line">            <span class="keyword">if</span> (!loopOnce(me, ident, thresholdOverride)) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Poll and deliver single message, return true if the outer loop should continue.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">loopOnce</span><span class="params">(<span class="keyword">final</span> Looper me, <span class="keyword">final</span> <span class="type">long</span> ident, <span class="keyword">final</span> <span class="type">int</span> thresholdOverride)</span> &#123;</span><br><span class="line">        <span class="type">Message</span> <span class="variable">msg</span> <span class="operator">=</span> me.mQueue.next(); <span class="comment">// 从消息队列中读取消息，如果消息队列为空将会堵塞等待</span></span><br><span class="line">        <span class="keyword">if</span> (msg == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// No message indicates that the message queue is quitting.</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> <span class="variable">token</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//msg.target就是Handler，调用Handler.dispatchMessage进行消息处理</span></span><br><span class="line">            msg.target.dispatchMessage(msg);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception exception) &#123;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        msg.recycleUnchecked();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//android-12.1.0_r27\frameworks\base\core\java\android\os\Handler.java</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dispatchMessage</span><span class="params">(<span class="meta">@NonNull</span> Message msg)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (msg.callback != <span class="literal">null</span>) &#123; <span class="comment">//callback就是Runnable</span></span><br><span class="line">            handleCallback(msg); <span class="comment">//执行Runnable.run()</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (mCallback != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (mCallback.handleMessage(msg)) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            handleMessage(msg); <span class="comment">//处理message消息</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="消息发送-Handler-post"><a href="#消息发送-Handler-post" class="headerlink" title="消息发送 Handler.post()"></a>消息发送 Handler.post()</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//android-12.1.0_r27\frameworks\base\core\java\android\os\Handler.java</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">boolean</span> <span class="title function_">post</span><span class="params">(<span class="meta">@NonNull</span> Runnable r)</span> &#123;</span><br><span class="line">        <span class="comment">//1. 通过getPostMessage将Runnable转换为Message，然后调用sendMessageDelayed</span></span><br><span class="line">        <span class="keyword">return</span> sendMessageDelayed(getPostMessage(r), <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Message <span class="title function_">getPostMessage</span><span class="params">(Runnable r)</span> &#123;</span><br><span class="line">        <span class="type">Message</span> <span class="variable">m</span> <span class="operator">=</span> Message.obtain(); <span class="comment">//从消息池中获取一个消息，是为了消息的复用，避免重新new一个类</span></span><br><span class="line">        m.callback = r;</span><br><span class="line">        <span class="keyword">return</span> m;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>上述代码通过post执行一个Runnable，通过getPostMessage把Runnable转换为Message，然后调用sendMessageDelayed：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="type">boolean</span> <span class="title function_">sendMessageDelayed</span><span class="params">(<span class="meta">@NonNull</span> Message msg, <span class="type">long</span> delayMillis)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (delayMillis &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        delayMillis = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取当前系统时间，加上延时时间就是消息被执行的时间，然后调用sendMessageAtTime</span></span><br><span class="line">    <span class="keyword">return</span> sendMessageAtTime(msg, SystemClock.uptimeMillis() + delayMillis);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">sendMessageAtTime</span><span class="params">(<span class="meta">@NonNull</span> Message msg, <span class="type">long</span> uptimeMillis)</span> &#123;</span><br><span class="line">    <span class="type">MessageQueue</span> <span class="variable">queue</span> <span class="operator">=</span> mQueue;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">return</span> enqueueMessage(queue, msg, uptimeMillis);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">enqueueMessage</span><span class="params">(<span class="meta">@NonNull</span> MessageQueue queue, <span class="meta">@NonNull</span> Message msg,</span></span><br><span class="line"><span class="params">        <span class="type">long</span> uptimeMillis)</span> &#123;</span><br><span class="line">    msg.target = <span class="built_in">this</span>; <span class="comment">//Message的target字段指向Handler自身，target就是消息的最终投递目的地</span></span><br><span class="line">    msg.workSourceUid = ThreadLocalWorkSource.getUid();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mAsynchronous) &#123;</span><br><span class="line">        msg.setAsynchronous(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//消息插入队列，并指定消息投递时间</span></span><br><span class="line">    <span class="keyword">return</span> queue.enqueueMessage(msg, uptimeMillis);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过Handler的post来执行任务最终会被加入到Looper的消息队列中，即MessageQueue：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//android-12.1.0_r27\frameworks\base\core\java\android\os\MessageQueue.java</span></span><br><span class="line"><span class="comment">// MessageQueue通过一个单项链表维护Message</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">enqueueMessage</span><span class="params">(Message msg, <span class="type">long</span> when)</span> &#123;</span><br><span class="line">        ...... <span class="comment">//代码省略</span></span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="built_in">this</span>) &#123;</span><br><span class="line">            ......</span><br><span class="line">            msg.markInUse();</span><br><span class="line">            msg.when = when;</span><br><span class="line">            <span class="type">Message</span> <span class="variable">p</span> <span class="operator">=</span> mMessages;</span><br><span class="line">            <span class="type">boolean</span> needWake;</span><br><span class="line">            <span class="keyword">if</span> (p == <span class="literal">null</span> || when == <span class="number">0</span> || when &lt; p.when) &#123;</span><br><span class="line">                <span class="comment">//队列为空，或者队列中的消息投递时间比新消息晚，就会把新消息放在队首。</span></span><br><span class="line">                msg.next = p;</span><br><span class="line">                mMessages = msg;</span><br><span class="line">                needWake = mBlocked;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                needWake = mBlocked &amp;&amp; p.target == <span class="literal">null</span> &amp;&amp; msg.isAsynchronous();</span><br><span class="line">                Message prev;</span><br><span class="line">                <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">                    prev = p;</span><br><span class="line">                    p = p.next;</span><br><span class="line">                    <span class="keyword">if</span> (p == <span class="literal">null</span> || when &lt; p.when) &#123; <span class="comment">//按照投递时间先后进行排序插入</span></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (needWake &amp;&amp; p.isAsynchronous()) &#123;</span><br><span class="line">                        needWake = <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                msg.next = p;</span><br><span class="line">                prev.next = msg;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (needWake) &#123; <span class="comment">//判断是否需要唤醒线程</span></span><br><span class="line">                nativeWake(mPtr);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><code>nativeWake</code>的源码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//android-12.1.0_r27\frameworks\base\core\jni\android_os_MessageQueue.cpp</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">android_os_MessageQueue_nativeWake</span><span class="params">(JNIEnv* env, jclass clazz, jlong ptr)</span> </span>&#123;</span><br><span class="line">    NativeMessageQueue* nativeMessageQueue = <span class="built_in">reinterpret_cast</span>&lt;NativeMessageQueue*&gt;(ptr);</span><br><span class="line">    nativeMessageQueue-&gt;<span class="built_in">wake</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">NativeMessageQueue::wake</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    mLooper-&gt;<span class="built_in">wake</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//android-12.1.0_r27\system\core\libutils\Looper.cpp</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Looper::wake</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> DEBUG_POLL_AND_WAKE</span></span><br><span class="line">    <span class="built_in">ALOGD</span>(<span class="string">&quot;%p ~ wake&quot;</span>, <span class="keyword">this</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="type">uint64_t</span> inc = <span class="number">1</span>;</span><br><span class="line">    <span class="type">ssize_t</span> nWrite = <span class="built_in">TEMP_FAILURE_RETRY</span>(<span class="built_in">write</span>(mWakeEventFd.<span class="built_in">get</span>(), &amp;inc, <span class="built_in">sizeof</span>(<span class="type">uint64_t</span>)));</span><br><span class="line">    <span class="keyword">if</span> (nWrite != <span class="built_in">sizeof</span>(<span class="type">uint64_t</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (errno != EAGAIN) &#123;</span><br><span class="line">            <span class="built_in">LOG_ALWAYS_FATAL</span>(<span class="string">&quot;Could not write wake signal to fd %d (returned %zd): %s&quot;</span>,</span><br><span class="line">                             mWakeEventFd.<span class="built_in">get</span>(), nWrite, <span class="built_in">strerror</span>(errno));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="从消息队列获取消息"><a href="#从消息队列获取消息" class="headerlink" title="从消息队列获取消息"></a>从消息队列获取消息</h2><p>Looper.loop()会通过MessageQueue.next()不断从消息队列获取消息，如果队列为空，线程就会阻塞等待。下面是next()对应的源码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Message <span class="title function_">next</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// Return here if the message loop has already quit and been disposed.</span></span><br><span class="line">    <span class="comment">// This can happen if the application tries to restart a looper after quit</span></span><br><span class="line">    <span class="comment">// which is not supported.</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">long</span> <span class="variable">ptr</span> <span class="operator">=</span> mPtr; <span class="comment">//mPtr是一个long类型，是native层c++类NativeMessageQueue对象的指针</span></span><br><span class="line">    <span class="keyword">if</span> (ptr == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="variable">pendingIdleHandlerCount</span> <span class="operator">=</span> -<span class="number">1</span>; <span class="comment">// -1 only during first iteration</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">nextPollTimeoutMillis</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        <span class="keyword">if</span> (nextPollTimeoutMillis != <span class="number">0</span>) &#123;</span><br><span class="line">            Binder.flushPendingCommands();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        nativePollOnce(ptr, nextPollTimeoutMillis); <span class="comment">//阻塞等待，第二个参数是超时时间</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="built_in">this</span>) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">long</span> <span class="variable">now</span> <span class="operator">=</span> SystemClock.uptimeMillis();</span><br><span class="line">            <span class="type">Message</span> <span class="variable">prevMsg</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="type">Message</span> <span class="variable">msg</span> <span class="operator">=</span> mMessages; <span class="comment">//mMessages是个单项链表，这里是获取链表首位的Message</span></span><br><span class="line">            <span class="keyword">if</span> (msg != <span class="literal">null</span> &amp;&amp; msg.target == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="comment">//msg.target==null表示这个Message是同步屏障，将会暂停执行队列中的同步消息，</span></span><br><span class="line">                <span class="comment">//异步消息不受同步屏障的影响，所以找到下一个异步消息</span></span><br><span class="line">                <span class="keyword">do</span> &#123;</span><br><span class="line">                    prevMsg = msg;</span><br><span class="line">                    msg = msg.next;</span><br><span class="line">                &#125; <span class="keyword">while</span> (msg != <span class="literal">null</span> &amp;&amp; !msg.isAsynchronous());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (msg != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (now &lt; msg.when) &#123;</span><br><span class="line">                    <span class="comment">//下个消息还没有到执行时间，因此计算出需要阻塞等待的时间，即阻塞等待的超时时间</span></span><br><span class="line">                    nextPollTimeoutMillis = (<span class="type">int</span>) Math.min(msg.when - now, Integer.MAX_VALUE);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// Got a message.</span></span><br><span class="line">                    mBlocked = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">if</span> (prevMsg != <span class="literal">null</span>) &#123;</span><br><span class="line">                        prevMsg.next = msg.next;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        mMessages = msg.next;</span><br><span class="line">                    &#125;</span><br><span class="line">                    msg.next = <span class="literal">null</span>;</span><br><span class="line">                    <span class="keyword">if</span> (DEBUG) Log.v(TAG, <span class="string">&quot;Returning message: &quot;</span> + msg);</span><br><span class="line">                    msg.markInUse();</span><br><span class="line">                    <span class="keyword">return</span> msg;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// No more messages.</span></span><br><span class="line">                nextPollTimeoutMillis = -<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Process the quit message now that all pending messages have been handled.</span></span><br><span class="line">            <span class="keyword">if</span> (mQuitting) &#123;</span><br><span class="line">                dispose();</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// If first time idle, then get the number of idlers to run.</span></span><br><span class="line">            <span class="comment">// Idle handles only run if the queue is empty or if the first message</span></span><br><span class="line">            <span class="comment">// in the queue (possibly a barrier) is due to be handled in the future.</span></span><br><span class="line">            <span class="keyword">if</span> (pendingIdleHandlerCount &lt; <span class="number">0</span></span><br><span class="line">                    &amp;&amp; (mMessages == <span class="literal">null</span> || now &lt; mMessages.when)) &#123;</span><br><span class="line">                pendingIdleHandlerCount = mIdleHandlers.size();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (pendingIdleHandlerCount &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// No idle handlers to run.  Loop and wait some more.</span></span><br><span class="line">                mBlocked = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (mPendingIdleHandlers == <span class="literal">null</span>) &#123;</span><br><span class="line">                mPendingIdleHandlers = <span class="keyword">new</span> <span class="title class_">IdleHandler</span>[Math.max(pendingIdleHandlerCount, <span class="number">4</span>)];</span><br><span class="line">            &#125;</span><br><span class="line">            mPendingIdleHandlers = mIdleHandlers.toArray(mPendingIdleHandlers);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Run the idle handlers.</span></span><br><span class="line">        <span class="comment">// We only ever reach this code block during the first iteration.</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; pendingIdleHandlerCount; i++) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">IdleHandler</span> <span class="variable">idler</span> <span class="operator">=</span> mPendingIdleHandlers[i];</span><br><span class="line">            mPendingIdleHandlers[i] = <span class="literal">null</span>; <span class="comment">// release the reference to the handler</span></span><br><span class="line"></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">keep</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                keep = idler.queueIdle();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">                Log.wtf(TAG, <span class="string">&quot;IdleHandler threw exception&quot;</span>, t);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!keep) &#123;</span><br><span class="line">                <span class="keyword">synchronized</span> (<span class="built_in">this</span>) &#123;</span><br><span class="line">                    mIdleHandlers.remove(idler);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Reset the idle handler count to 0 so we do not run them again.</span></span><br><span class="line">        pendingIdleHandlerCount = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// While calling an idle handler, a new message could have been delivered</span></span><br><span class="line">        <span class="comment">// so go back and look again for a pending message without waiting.</span></span><br><span class="line">        nextPollTimeoutMillis = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="IdleHandler"><a href="#IdleHandler" class="headerlink" title="IdleHandler"></a>IdleHandler</h2><p>当消息队列中没有消息，消息循环将要去阻塞等待新消息的时候会执行IdleHandler。IdleHandler使用方法如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Looper.myLooper().getQueue().addIdleHandler(<span class="keyword">new</span> <span class="title class_">MessageQueue</span>.IdleHandler() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">queueIdle</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//do something</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">//返回false表示任务只执行一次，任务完成后将会被移除任务；</span></span><br><span class="line">    <span class="comment">//返回true表示下次消息循环将要阻塞时还会执行这个任务;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="消息阻塞等待的底层实现"><a href="#消息阻塞等待的底层实现" class="headerlink" title="消息阻塞等待的底层实现"></a>消息阻塞等待的底层实现</h2><p>当消息队列中没有消息，或者消息的执行时间还没有到，消息队列的执行线程会进入阻塞等待状态。在MessageQueue.next()中通过调用<code>nativePollOnce</code>方法进行阻塞等待。nativePollOnce()方法定义如下，是一个native函数：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">nativePollOnce</span><span class="params">(<span class="type">long</span> ptr, <span class="type">int</span> timeoutMillis)</span>; <span class="comment">/*non-static for callbacks*/</span></span><br></pre></td></tr></table></figure>

<ul>
<li>第一个参数<code>ptr</code>是native层C++ NativeMessageQueue对象的指针。</li>
<li>第二个参数<code>timeoutMillis</code>是阻塞等待超时时间，当达到超时时间后，会自动唤醒。阻塞的超时时间就是下个消息的执行时间减去当前系统时间得到的时间差。如果消息队列为空，则超时时间会传入-1，会一直阻塞，直到新消息插入后唤醒。</li>
</ul>
<p><code>nativePollOnce</code>的native实现代码如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//android-12.1.0_r27\frameworks\base\core\jni\android_os_MessageQueue.cpp</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">android_os_MessageQueue_nativePollOnce</span><span class="params">(JNIEnv* env, jobject obj,</span></span></span><br><span class="line"><span class="params"><span class="function">        jlong ptr, jint timeoutMillis)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//将java层传下来的ptr参数强转成NativeMessageQueue对象指针</span></span><br><span class="line">    NativeMessageQueue* nativeMessageQueue = <span class="built_in">reinterpret_cast</span>&lt;NativeMessageQueue*&gt;(ptr);</span><br><span class="line">    <span class="comment">//调用NativeMessageQueue#pollOnce方法</span></span><br><span class="line">    nativeMessageQueue-&gt;<span class="built_in">pollOnce</span>(env, obj, timeoutMillis);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">NativeMessageQueue::pollOnce</span><span class="params">(JNIEnv* env, jobject pollObj, <span class="type">int</span> timeoutMillis)</span> </span>&#123;</span><br><span class="line">    mPollEnv = env;</span><br><span class="line">    mPollObj = pollObj;</span><br><span class="line">    mLooper-&gt;<span class="built_in">pollOnce</span>(timeoutMillis); <span class="comment">//调用native层Looper对象的pollOnce方法</span></span><br><span class="line">    mPollObj = <span class="literal">NULL</span>;</span><br><span class="line">    mPollEnv = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mExceptionObj) &#123;</span><br><span class="line">        env-&gt;<span class="built_in">Throw</span>(mExceptionObj);</span><br><span class="line">        env-&gt;<span class="built_in">DeleteLocalRef</span>(mExceptionObj);</span><br><span class="line">        mExceptionObj = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>native层的Looper函数在<code>system\core\libutils\Looper.cpp</code>文件中实现，native层的<code>Looper#pollOnce</code>方法实现代码很长，这里就不贴代码了，原理简要描述下：</p>
<p>native层的Looper类通过linux <a href="https://man7.org/linux/man-pages/man2/eventfd.2.html">eventfd</a>和<a href="https://man7.org/linux/man-pages/man7/epoll.7.html">epoll</a>两个机制来完成线程间通信。eventfd是用于事件通知机制的文件描述符，epoll则用于监控eventfd的I/O事件，两者结合可以实现事件的等待和通知。</p>
<p>构造时会通过linux函数<code>epoll_create1</code>创建一个epoll实例，并关联一个读写文件描述符，然后在pollOnce方法中，通过epoll_wait来监听这个文件描述符的I/O事件，收到事件或者超时后就会唤醒，否则线程就处于阻塞等待状态。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//android-12.1.0_r27\system\core\libutils\include\utils\Looper.h</span></span><br><span class="line">    <span class="comment">//unique_fd是android用于管理文件描述符的类，当离开作用域后文件会被自动关闭，在这里把它等同于文件描述符理解即可</span></span><br><span class="line">    android::base::unique_fd mWakeEventFd;  <span class="comment">//eventfd文件描述符</span></span><br><span class="line">    android::base::unique_fd mEpollFd; <span class="comment">//创建epoll实例后返回的文件描述符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//android-12.1.0_r27\system\core\libutils\Looper.cpp</span></span><br><span class="line">Looper::<span class="built_in">Looper</span>(<span class="type">bool</span> allowNonCallbacks)</span><br><span class="line">    : <span class="built_in">mAllowNonCallbacks</span>(allowNonCallbacks),</span><br><span class="line">      <span class="built_in">mSendingMessage</span>(<span class="literal">false</span>),</span><br><span class="line">      <span class="built_in">mPolling</span>(<span class="literal">false</span>),</span><br><span class="line">      <span class="built_in">mEpollRebuildRequired</span>(<span class="literal">false</span>),</span><br><span class="line">      <span class="built_in">mNextRequestSeq</span>(<span class="number">0</span>),</span><br><span class="line">      <span class="built_in">mResponseIndex</span>(<span class="number">0</span>),</span><br><span class="line">      <span class="built_in">mNextMessageUptime</span>(LLONG_MAX) &#123;</span><br><span class="line">    <span class="comment">//调用eventfd系统函数创建eventfd，函数返回一个文件描述符，然后赋值给mWakeEventFd</span></span><br><span class="line">    mWakeEventFd.<span class="built_in">reset</span>(<span class="built_in">eventfd</span>(<span class="number">0</span>, EFD_NONBLOCK | EFD_CLOEXEC));</span><br><span class="line">    <span class="built_in">LOG_ALWAYS_FATAL_IF</span>(mWakeEventFd.<span class="built_in">get</span>() &lt; <span class="number">0</span>, <span class="string">&quot;Could not make wake event fd: %s&quot;</span>, <span class="built_in">strerror</span>(errno));</span><br><span class="line"></span><br><span class="line">    AutoMutex _l(mLock);</span><br><span class="line">    <span class="built_in">rebuildEpollLocked</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Looper::rebuildEpollLocked</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ...... <span class="comment">//代码省略</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//epoll_create1方法创建一个epoll实例，返回的文件描述符赋值给mEpollFd</span></span><br><span class="line">    mEpollFd.<span class="built_in">reset</span>(<span class="built_in">epoll_create1</span>(EPOLL_CLOEXEC));</span><br><span class="line">    <span class="built_in">LOG_ALWAYS_FATAL_IF</span>(mEpollFd &lt; <span class="number">0</span>, <span class="string">&quot;Could not create epoll instance: %s&quot;</span>, <span class="built_in">strerror</span>(errno));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">epoll_event</span> eventItem;</span><br><span class="line">    <span class="built_in">memset</span>(&amp; eventItem, <span class="number">0</span>, <span class="built_in">sizeof</span>(epoll_event)); <span class="comment">// zero out unused members of data field union</span></span><br><span class="line">    eventItem.events = EPOLLIN; <span class="comment">//设置eventfd为可读</span></span><br><span class="line">    eventItem.data.fd = mWakeEventFd.<span class="built_in">get</span>();</span><br><span class="line">    <span class="comment">//把eventfd文件描述符添加到epoll的监控列表中</span></span><br><span class="line">    <span class="type">int</span> result = <span class="built_in">epoll_ctl</span>(mEpollFd.<span class="built_in">get</span>(), EPOLL_CTL_ADD, mWakeEventFd.<span class="built_in">get</span>(), &amp;eventItem);</span><br><span class="line">    </span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>下面代码实现了堵塞等待，并设置超时事件：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//system\core\libutils\Looper.cpp文件的Looper::pollInner方法中</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Looper::pollInner</span><span class="params">(<span class="type">int</span> timeoutMillis)</span> </span>&#123;</span><br><span class="line">    .......</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">epoll_event</span> eventItems[EPOLL_MAX_EVENTS];</span><br><span class="line">    <span class="type">int</span> eventCount = <span class="built_in">epoll_wait</span>(mEpollFd.<span class="built_in">get</span>(), eventItems, EPOLL_MAX_EVENTS, timeoutMillis);</span><br><span class="line">    .......</span><br><span class="line">    <span class="comment">//因为epoll支持同时监控多个文件描述符，因此循环查找</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; eventCount; i++) &#123;</span><br><span class="line">        <span class="type">int</span> fd = eventItems[i].data.fd;</span><br><span class="line">        <span class="type">uint32_t</span> epollEvents = eventItems[i].events;</span><br><span class="line">        <span class="keyword">if</span> (fd == mWakeEventFd.<span class="built_in">get</span>()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (epollEvents &amp; EPOLLIN) &#123;</span><br><span class="line">                <span class="built_in">awoken</span>();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">ALOGW</span>(<span class="string">&quot;Ignoring unexpected epoll events 0x%x on wake event fd.&quot;</span>, epollEvents);</span><br><span class="line">            &#125;</span><br><span class="line">        ......</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Looper::awoken</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="type">uint64_t</span> counter;</span><br><span class="line">    <span class="comment">//从eventfd文件中读取一个int内容</span></span><br><span class="line">    <span class="built_in">TEMP_FAILURE_RETRY</span>(<span class="built_in">read</span>(mWakeEventFd.<span class="built_in">get</span>(), &amp;counter, <span class="built_in">sizeof</span>(<span class="type">uint64_t</span>)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>唤醒堵塞等待的线程：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Looper::wake</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">uint64_t</span> inc = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//向eventfd文件描述符中写入一个int值</span></span><br><span class="line">    <span class="type">ssize_t</span> nWrite = <span class="built_in">TEMP_FAILURE_RETRY</span>(<span class="built_in">write</span>(mWakeEventFd.<span class="built_in">get</span>(), &amp;inc, <span class="built_in">sizeof</span>(<span class="type">uint64_t</span>)));</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="同步屏障"><a href="#同步屏障" class="headerlink" title="同步屏障"></a>同步屏障</h2><p>同步屏障就是target为null的一个Message。当插入一个同步屏障时，都会伴随着再发送一个异步消息。消息循环的处理中，在遇到同步屏障后，就不会再处理同步消息，异步消息则不受影响。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\base\core\java\android\os\MessageQueue.java</span></span><br><span class="line">    Message <span class="title function_">next</span><span class="params">()</span> &#123;</span><br><span class="line">        ......</span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            ......</span><br><span class="line">            nativePollOnce(ptr, nextPollTimeoutMillis);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">synchronized</span> (<span class="built_in">this</span>) &#123;</span><br><span class="line">                <span class="comment">// Try to retrieve the next message.  Return if found.</span></span><br><span class="line">                <span class="keyword">final</span> <span class="type">long</span> <span class="variable">now</span> <span class="operator">=</span> SystemClock.uptimeMillis();</span><br><span class="line">                <span class="type">Message</span> <span class="variable">prevMsg</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">Message</span> <span class="variable">msg</span> <span class="operator">=</span> mMessages;</span><br><span class="line">                <span class="keyword">if</span> (msg != <span class="literal">null</span> &amp;&amp; msg.target == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="comment">// Stalled by a barrier.  Find the next asynchronous message in the queue.</span></span><br><span class="line">                    <span class="keyword">do</span> &#123;</span><br><span class="line">                        prevMsg = msg;</span><br><span class="line">                        msg = msg.next;</span><br><span class="line">                    &#125; <span class="keyword">while</span> (msg != <span class="literal">null</span> &amp;&amp; !msg.isAsynchronous());</span><br><span class="line">                &#125;</span><br><span class="line">                ......</span><br></pre></td></tr></table></figure>

<p>在UI渲染流程中，在<code>ViewRootImpl#scheduleTraversals</code>是会首先插入同步屏障，然后调用<code>Choreographer</code>发送一个异步消息。这个异步消息中就会执行UI渲染的三大流程。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">scheduleTraversals</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!mTraversalScheduled) &#123;</span><br><span class="line">        mTraversalScheduled = <span class="literal">true</span>;</span><br><span class="line">        mTraversalBarrier = mHandler.getLooper().getQueue().postSyncBarrier();</span><br><span class="line">        mChoreographer.postCallback(</span><br><span class="line">                Choreographer.CALLBACK_TRAVERSAL, mTraversalRunnable, <span class="literal">null</span>);</span><br><span class="line">        notifyRendererOfFramePending();</span><br><span class="line">        pokeDrawLockIfNeeded();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Bitmap内存分配以及回收</title>
    <url>/posts/68833f9e.html</url>
    <content><![CDATA[<h2 id="Bitmap内存分配"><a href="#Bitmap内存分配" class="headerlink" title="Bitmap内存分配"></a>Bitmap内存分配</h2><ul>
<li>Android 2.3.3 (API level 10)以及更早的Android版本中，Bitmap的像素数据保存在native内存中，像素数据内存的回收则在finalize()中进行回收，存在很大的不确定性，很容易导致OOM的发生；</li>
<li>从Android 3.0 (API level 11) 到Android 7.1 (API level 25)，像素数据存放在Java Heap中，跟Bitmap对象一起回收。但由于图片是内存消耗大户，所以也很容易导致OOM，以及频繁的GC导致内存抖动问题。</li>
<li>在Android 8.0 (API level 26)以及更高的版本中，像素数据保存在native heap中。通过一个辅助类<code>NativeAllocationRegistry</code>来实现native内存的回收。</li>
</ul>
<p>在android.graphics.BitmapFactory类中有一系列函数可以解码生成Bitmap：</p>
<ul>
<li>Bitmap decodeByteArray(byte[] data, int offset, int length)</li>
<li>Bitmap decodeByteArray(byte[] data, int offset, int length, Options opts)</li>
<li>Bitmap decodeFile(String pathName)</li>
<li>Bitmap decodeFile(String pathName, Options opts)</li>
<li>…… 等等</li>
</ul>
<p>这些方法都会调用到jni层<code>frameworks\base\libs\hwui\jni\BitmapFactory.cpp</code>,最终都会走到<code>doDecode</code>方法：</p>
<h3 id="Android-12位图解码，使用native内存"><a href="#Android-12位图解码，使用native内存" class="headerlink" title="Android 12位图解码，使用native内存"></a>Android 12位图解码，使用native内存</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\base\libs\hwui\jni\BitmapFactory.cpp</span></span><br><span class="line"><span class="function"><span class="type">static</span> jobject <span class="title">doDecode</span><span class="params">(JNIEnv* env, std::unique_ptr&lt;SkStreamRewindable&gt; stream,</span></span></span><br><span class="line"><span class="params"><span class="function">                        jobject padding, jobject options, jlong inBitmapHandle,</span></span></span><br><span class="line"><span class="params"><span class="function">                        jlong colorSpaceHandle)</span> </span>&#123;</span><br><span class="line">    ...... <span class="comment">//代码省略</span></span><br><span class="line">    <span class="comment">// Scale is necessary due to density differences.</span></span><br><span class="line">    <span class="keyword">if</span> (scale != <span class="number">1.0f</span>) &#123;</span><br><span class="line">        willScale = <span class="literal">true</span>;</span><br><span class="line">        scaledWidth = <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(scaledWidth * scale + <span class="number">0.5f</span>);</span><br><span class="line">        scaledHeight = <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(scaledHeight * scale + <span class="number">0.5f</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    android::Bitmap* reuseBitmap = <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> existingBufferSize = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (javaBitmap != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">        reuseBitmap = &amp;bitmap::<span class="built_in">toBitmap</span>(inBitmapHandle);</span><br><span class="line">        <span class="keyword">if</span> (reuseBitmap-&gt;<span class="built_in">isImmutable</span>()) &#123;</span><br><span class="line">            <span class="built_in">ALOGW</span>(<span class="string">&quot;Unable to reuse an immutable bitmap as an image decoder target.&quot;</span>);</span><br><span class="line">            javaBitmap = <span class="literal">nullptr</span>;</span><br><span class="line">            reuseBitmap = <span class="literal">nullptr</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            existingBufferSize = reuseBitmap-&gt;<span class="built_in">getAllocationByteCount</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    HeapAllocator defaultAllocator;</span><br><span class="line">    <span class="function">RecyclingPixelAllocator <span class="title">recyclingAllocator</span><span class="params">(reuseBitmap, existingBufferSize)</span></span>;</span><br><span class="line">    <span class="function">ScaleCheckingAllocator <span class="title">scaleCheckingAllocator</span><span class="params">(scale, existingBufferSize)</span></span>;</span><br><span class="line">    SkBitmap::HeapAllocator heapAllocator;</span><br><span class="line">    SkBitmap::Allocator* decodeAllocator;</span><br><span class="line">    <span class="keyword">if</span> (javaBitmap != <span class="literal">nullptr</span> &amp;&amp; willScale) &#123;</span><br><span class="line">        <span class="comment">// This will allocate pixels using a HeapAllocator, since there will be an extra</span></span><br><span class="line">        <span class="comment">// scaling step that copies these pixels into Java memory.  This allocator</span></span><br><span class="line">        <span class="comment">// also checks that the recycled javaBitmap is large enough.</span></span><br><span class="line">        decodeAllocator = &amp;scaleCheckingAllocator;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (javaBitmap != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">        decodeAllocator = &amp;recyclingAllocator;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (willScale || isHardware) &#123;</span><br><span class="line">        <span class="comment">// This will allocate pixels using a HeapAllocator,</span></span><br><span class="line">        <span class="comment">// for scale case: there will be an extra scaling step.</span></span><br><span class="line">        <span class="comment">// for hardware case: there will be extra swizzling &amp; upload to gralloc step.</span></span><br><span class="line">        decodeAllocator = &amp;heapAllocator;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        decodeAllocator = &amp;defaultAllocator;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">    SkBitmap decodingBitmap; <span class="comment">//SkBitmap 是skia库中的类</span></span><br><span class="line">    <span class="comment">//decodingBitmap.tryAllocPixels的作用是分配piexel内存，最终调用的是</span></span><br><span class="line">    <span class="comment">//decodeAllocator-&gt;allocPixelRef(this);</span></span><br><span class="line">    <span class="keyword">if</span> (!decodingBitmap.<span class="built_in">setInfo</span>(bitmapInfo) ||</span><br><span class="line">            !decodingBitmap.<span class="built_in">tryAllocPixels</span>(decodeAllocator)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Use SkAndroidCodec to perform the decode.</span></span><br><span class="line">    SkAndroidCodec::AndroidOptions codecOptions;</span><br><span class="line">    codecOptions.fZeroInitialized = decodeAllocator == &amp;defaultAllocator ?</span><br><span class="line">            SkCodec::kYes_ZeroInitialized : SkCodec::kNo_ZeroInitialized;</span><br><span class="line">    codecOptions.fSampleSize = sampleSize;</span><br><span class="line">    <span class="comment">//codec指的是SkAndroidCodec，是skia库中的类。下面这句代码就是真正的解码了</span></span><br><span class="line">    SkCodec::Result result = codec-&gt;<span class="built_in">getAndroidPixels</span>(decodeInfo, decodingBitmap.<span class="built_in">getPixels</span>(), </span><br><span class="line">            decodingBitmap.<span class="built_in">rowBytes</span>(), &amp;codecOptions);</span><br><span class="line">    </span><br><span class="line">    ......</span><br><span class="line">    <span class="comment">//按比例缩放位图</span></span><br><span class="line">    SkBitmap outputBitmap;</span><br><span class="line">    <span class="keyword">if</span> (willScale) &#123;</span><br><span class="line">        <span class="comment">// Set the allocator for the outputBitmap.</span></span><br><span class="line">        SkBitmap::Allocator* outputAllocator;</span><br><span class="line">        <span class="keyword">if</span> (javaBitmap != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            outputAllocator = &amp;recyclingAllocator;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            outputAllocator = &amp;defaultAllocator;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        SkColorType scaledColorType = decodingBitmap.<span class="built_in">colorType</span>();</span><br><span class="line">        <span class="comment">// <span class="doctag">FIXME:</span> If the alphaType is kUnpremul and the image has alpha, the</span></span><br><span class="line">        <span class="comment">// colors may not be correct, since Skia does not yet support drawing</span></span><br><span class="line">        <span class="comment">// to/from unpremultiplied bitmaps.</span></span><br><span class="line">        outputBitmap.<span class="built_in">setInfo</span>(</span><br><span class="line">                bitmapInfo.<span class="built_in">makeWH</span>(scaledWidth, scaledHeight).<span class="built_in">makeColorType</span>(scaledColorType));</span><br><span class="line">        <span class="keyword">if</span> (!outputBitmap.<span class="built_in">tryAllocPixels</span>(outputAllocator)) &#123;</span><br><span class="line">            <span class="comment">// This should only fail on OOM.  The recyclingAllocator should have</span></span><br><span class="line">            <span class="comment">// enough memory since we check this before decoding using the</span></span><br><span class="line">            <span class="comment">// scaleCheckingAllocator.</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">nullObjectReturn</span>(<span class="string">&quot;allocation failed for scaled bitmap&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        SkPaint paint;</span><br><span class="line">        <span class="comment">// kSrc_Mode instructs us to overwrite the uninitialized pixels in</span></span><br><span class="line">        <span class="comment">// outputBitmap.  Otherwise we would blend by default, which is not</span></span><br><span class="line">        <span class="comment">// what we want.</span></span><br><span class="line">        paint.<span class="built_in">setBlendMode</span>(SkBlendMode::kSrc);</span><br><span class="line"></span><br><span class="line">        <span class="function">SkCanvas <span class="title">canvas</span><span class="params">(outputBitmap, SkCanvas::ColorBehavior::kLegacy)</span></span>;</span><br><span class="line">        canvas.<span class="built_in">scale</span>(scaleX, scaleY);</span><br><span class="line">        decodingBitmap.<span class="built_in">setImmutable</span>(); <span class="comment">// so .asImage() doesn&#x27;t make a copy</span></span><br><span class="line">        canvas.<span class="built_in">drawImage</span>(decodingBitmap.<span class="built_in">asImage</span>(), <span class="number">0.0f</span>, <span class="number">0.0f</span>,</span><br><span class="line">                         <span class="built_in">SkSamplingOptions</span>(SkFilterMode::kLinear), &amp;paint);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        outputBitmap.<span class="built_in">swap</span>(decodingBitmap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ......</span><br><span class="line">    <span class="comment">//硬件位图</span></span><br><span class="line">    <span class="keyword">if</span> (isHardware) &#123;</span><br><span class="line">        <span class="comment">//GPU中分配位图内存。原outputBitmap是否需要释放呢？在哪释放？</span></span><br><span class="line">        sk_sp&lt;Bitmap&gt; hardwareBitmap = Bitmap::<span class="built_in">allocateHardwareBitmap</span>(outputBitmap);</span><br><span class="line">        <span class="keyword">if</span> (!hardwareBitmap.<span class="built_in">get</span>()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">nullObjectReturn</span>(<span class="string">&quot;Failed to allocate a hardware bitmap&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//创建java层Bitmap，此处的hardwareBitmap.release()不是资源回收的意思，而是取出sk_sp中的Bitmap实例。</span></span><br><span class="line">        <span class="keyword">return</span> bitmap::<span class="built_in">createBitmap</span>(env, hardwareBitmap.<span class="built_in">release</span>(), bitmapCreateFlags,</span><br><span class="line">                ninePatchChunk, ninePatchInsets, <span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// now create the java bitmap</span></span><br><span class="line">    <span class="keyword">return</span> bitmap::<span class="built_in">createBitmap</span>(env, defaultAllocator.<span class="built_in">getStorageObjAndReset</span>(),</span><br><span class="line">            bitmapCreateFlags, ninePatchChunk, ninePatchInsets, <span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="默认pixel内存分配"><a href="#默认pixel内存分配" class="headerlink" title="默认pixel内存分配"></a>默认pixel内存分配</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">HeapAllocator::allocPixelRef</span><span class="params">(SkBitmap* bitmap)</span> </span>&#123;</span><br><span class="line">    mStorage = android::Bitmap::<span class="built_in">allocateHeapBitmap</span>(bitmap);</span><br><span class="line">    <span class="keyword">return</span> !!mStorage;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//frameworks\base\libs\hwui\hwui\Bitmap.cpp</span></span><br><span class="line"><span class="function">sk_sp&lt;Bitmap&gt; <span class="title">Bitmap::allocateHeapBitmap</span><span class="params">(SkBitmap* bitmap)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">allocateBitmap</span>(bitmap, &amp;Bitmap::allocateHeapBitmap);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> sk_sp&lt;Bitmap&gt; <span class="title">allocateBitmap</span><span class="params">(SkBitmap* bitmap, AllocPixelRef alloc)</span> </span>&#123;</span><br><span class="line">    <span class="type">const</span> SkImageInfo&amp; info = bitmap-&gt;<span class="built_in">info</span>();</span><br><span class="line">    <span class="keyword">if</span> (info.<span class="built_in">colorType</span>() == kUnknown_SkColorType) &#123;</span><br><span class="line">        <span class="built_in">LOG_ALWAYS_FATAL</span>(<span class="string">&quot;unknown bitmap configuration&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">size_t</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// we must respect the rowBytes value already set on the bitmap instead of</span></span><br><span class="line">    <span class="comment">// attempting to compute our own.</span></span><br><span class="line">    <span class="type">const</span> <span class="type">size_t</span> rowBytes = bitmap-&gt;<span class="built_in">rowBytes</span>();</span><br><span class="line">    <span class="keyword">if</span> (!Bitmap::<span class="built_in">computeAllocationSize</span>(rowBytes, bitmap-&gt;<span class="built_in">height</span>(), &amp;size)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> wrapper = <span class="built_in">alloc</span>(size, info, rowBytes); <span class="comment">//使用入参的alloc函数分配内存</span></span><br><span class="line">    <span class="keyword">if</span> (wrapper) &#123;</span><br><span class="line">        wrapper-&gt;<span class="built_in">getSkBitmap</span>(bitmap);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> wrapper;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">sk_sp&lt;Bitmap&gt; <span class="title">Bitmap::allocateHeapBitmap</span><span class="params">(<span class="type">size_t</span> size, <span class="type">const</span> SkImageInfo&amp; info, <span class="type">size_t</span> rowBytes)</span> </span>&#123;</span><br><span class="line">    <span class="type">void</span>* addr = <span class="built_in">calloc</span>(size, <span class="number">1</span>); <span class="comment">//调用Linux C库函数分配内存</span></span><br><span class="line">    <span class="keyword">if</span> (!addr) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sk_sp</span>&lt;Bitmap&gt;(<span class="keyword">new</span> <span class="built_in">Bitmap</span>(addr, size, info, rowBytes)); <span class="comment">//返回最终的Bitmap对象</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="比例缩放或硬件位图场景内存分配"><a href="#比例缩放或硬件位图场景内存分配" class="headerlink" title="比例缩放或硬件位图场景内存分配"></a>比例缩放或硬件位图场景内存分配</h4><p>在需要将图片进行按比例缩放，或者使用硬件内存时，使用SkBitmap::HeapAllocator来分配内存。当解码位图时如果配置了<code>android.graphics.Bitmap.Config#HARDWARE</code>就会使用硬件位图。硬件位图是一种 Android O 添加的新的位图格式。硬件位图仅在显存 (graphic memory) 里存储像素数据，并对图片仅在屏幕上绘制的场景做了优化。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//external\skia\src\core\SkBitmap.cpp</span></span><br><span class="line"><span class="type">bool</span> SkBitmap::HeapAllocator::<span class="built_in">allocPixelRef</span>(SkBitmap* dst) &#123;</span><br><span class="line">    <span class="type">const</span> SkImageInfo&amp; info = dst-&gt;<span class="built_in">info</span>();</span><br><span class="line">    <span class="keyword">if</span> (kUnknown_SkColorType == info.<span class="built_in">colorType</span>()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sk_sp&lt;SkPixelRef&gt; pr = SkMallocPixelRef::<span class="built_in">MakeAllocate</span>(info, dst-&gt;<span class="built_in">rowBytes</span>());</span><br><span class="line">    <span class="keyword">if</span> (!pr) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    dst-&gt;<span class="built_in">setPixelRef</span>(std::<span class="built_in">move</span>(pr), <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//external\skia\src\core\SkMallocPixelRef.cpp</span></span><br><span class="line"><span class="function">sk_sp&lt;SkPixelRef&gt; <span class="title">SkMallocPixelRef::MakeAllocate</span><span class="params">(<span class="type">const</span> SkImageInfo&amp; info, <span class="type">size_t</span> rowBytes)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (rowBytes == <span class="number">0</span>) &#123;</span><br><span class="line">        rowBytes = info.<span class="built_in">minRowBytes</span>();</span><br><span class="line">        <span class="comment">// rowBytes can still be zero, if it overflowed (width * bytesPerPixel &gt; size_t)</span></span><br><span class="line">        <span class="comment">// or if colortype is unknown</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">is_valid</span>(info) || !info.<span class="built_in">validRowBytes</span>(rowBytes)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">size_t</span> size = info.<span class="built_in">computeByteSize</span>(rowBytes);</span><br><span class="line">    <span class="keyword">if</span> (SkImageInfo::<span class="built_in">ByteSizeOverflowed</span>(size)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined(SK_BUILD_FOR_FUZZER)</span></span><br><span class="line">    <span class="keyword">if</span> (size &gt; <span class="number">100000</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    <span class="type">void</span>* addr = <span class="built_in">sk_calloc_canfail</span>(size);</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">nullptr</span> == addr) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">PixelRef</span> <span class="keyword">final</span> : <span class="keyword">public</span> SkPixelRef &#123;</span><br><span class="line">        <span class="built_in">PixelRef</span>(<span class="type">int</span> w, <span class="type">int</span> h, <span class="type">void</span>* s, <span class="type">size_t</span> r) : <span class="built_in">SkPixelRef</span>(w, h, s, r) &#123;&#125;</span><br><span class="line">        ~<span class="built_in">PixelRef</span>() <span class="keyword">override</span> &#123; <span class="built_in">sk_free</span>(<span class="keyword">this</span>-&gt;<span class="built_in">pixels</span>()); &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sk_sp</span>&lt;SkPixelRef&gt;(<span class="keyword">new</span> <span class="built_in">PixelRef</span>(info.<span class="built_in">width</span>(), info.<span class="built_in">height</span>(), addr, rowBytes));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//external\skia\include\private\SkMalloc.h</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">void</span>* <span class="title">sk_calloc_canfail</span><span class="params">(<span class="type">size_t</span> size)</span> </span>&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined(SK_BUILD_FOR_FUZZER)</span></span><br><span class="line">    <span class="comment">// To reduce the chance of OOM, pretend we can&#x27;t allocate more than 200kb.</span></span><br><span class="line">    <span class="keyword">if</span> (size &gt; <span class="number">200000</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sk_malloc_flags</span>(size, SK_MALLOC_ZERO_INITIALIZE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//external\skia\src\ports\SkMemory_malloc.cpp</span></span><br><span class="line"><span class="function"><span class="type">void</span>* <span class="title">sk_malloc_flags</span><span class="params">(<span class="type">size_t</span> size, <span class="type">unsigned</span> flags)</span> </span>&#123;</span><br><span class="line">    <span class="type">void</span>* p;</span><br><span class="line">    <span class="keyword">if</span> (flags &amp; SK_MALLOC_ZERO_INITIALIZE) &#123;</span><br><span class="line">        p = <span class="built_in">calloc</span>(size, <span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined(SK_BUILD_FOR_ANDROID_FRAMEWORK) &amp;&amp; defined(__BIONIC__)</span></span><br><span class="line">        <span class="comment">/* <span class="doctag">TODO:</span> After b/169449588 is fixed, we will want to change this to restore</span></span><br><span class="line"><span class="comment">         *       original behavior instead of always disabling the flag.</span></span><br><span class="line"><span class="comment">         * <span class="doctag">TODO:</span> After b/158870657 is fixed and scudo is used globally, we can assert when an</span></span><br><span class="line"><span class="comment">         *       an error is returned.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">// malloc() generally doesn&#x27;t initialize its memory and that&#x27;s a huge security hole,</span></span><br><span class="line">        <span class="comment">// so Android has replaced its malloc() with one that zeros memory,</span></span><br><span class="line">        <span class="comment">// but that&#x27;s a huge performance hit for HWUI, so turn it back off again.</span></span><br><span class="line">        (<span class="type">void</span>)<span class="built_in">mallopt</span>(M_THREAD_DISABLE_MEM_INIT, <span class="number">1</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">        p = <span class="built_in">malloc</span>(size);</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined(SK_BUILD_FOR_ANDROID_FRAMEWORK) &amp;&amp; defined(__BIONIC__)</span></span><br><span class="line">        (<span class="type">void</span>)<span class="built_in">mallopt</span>(M_THREAD_DISABLE_MEM_INIT, <span class="number">0</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flags &amp; SK_MALLOC_THROW) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">throw_on_failure</span>(size, p);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Android-7使用Java内存"><a href="#Android-7使用Java内存" class="headerlink" title="Android 7使用Java内存"></a>Android 7使用Java内存</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\base\core\jni\android\graphics\BitmapFactory.cpp</span></span><br><span class="line"><span class="function"><span class="type">static</span> jobject <span class="title">doDecode</span><span class="params">(JNIEnv* env, SkStreamRewindable* stream, jobject padding, jobject options)</span> </span>&#123;</span><br><span class="line">    ...... <span class="comment">//代码省略</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//JavaPixelAllocator就是从Java heap中分配内存，JavaPixelAllocator中通过</span></span><br><span class="line">    <span class="comment">//使用dalvik.system.VMRuntime.getRuntime().newNonMovableArray来申请内存</span></span><br><span class="line">    <span class="function">JavaPixelAllocator <span class="title">javaAllocator</span><span class="params">(env)</span></span>;</span><br><span class="line">    <span class="comment">//复用inBitmap</span></span><br><span class="line">    <span class="function">RecyclingPixelAllocator <span class="title">recyclingAllocator</span><span class="params">(reuseBitmap, existingBufferSize)</span></span>;</span><br><span class="line">    <span class="comment">//ScaleCheckingAllocator内部通过SkBitmap::HeapAllocator来申请native内存，但是</span></span><br><span class="line">    <span class="comment">//这个内存只是临时内存，在后面的scale操作时会最终申请java内存，native内存会被释放</span></span><br><span class="line">    <span class="function">ScaleCheckingAllocator <span class="title">scaleCheckingAllocator</span><span class="params">(scale, existingBufferSize)</span></span>;</span><br><span class="line">    <span class="comment">//SkBitmap::HeapAllocator是skia库提供的内存分派类，使用native内存</span></span><br><span class="line">    SkBitmap::HeapAllocator heapAllocator;</span><br><span class="line">    SkBitmap::Allocator* decodeAllocator;</span><br><span class="line">    <span class="keyword">if</span> (javaBitmap != <span class="literal">nullptr</span> &amp;&amp; willScale) &#123;</span><br><span class="line">        <span class="comment">// This will allocate pixels using a HeapAllocator, since there will be an extra</span></span><br><span class="line">        <span class="comment">// scaling step that copies these pixels into Java memory.  This allocator</span></span><br><span class="line">        <span class="comment">// also checks that the recycled javaBitmap is large enough.</span></span><br><span class="line">        decodeAllocator = &amp;scaleCheckingAllocator;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (javaBitmap != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">        decodeAllocator = &amp;recyclingAllocator;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (willScale) &#123;</span><br><span class="line">        <span class="comment">// This will allocate pixels using a HeapAllocator, since there will be an extra</span></span><br><span class="line">        <span class="comment">// scaling step that copies these pixels into Java memory.</span></span><br><span class="line">        decodeAllocator = &amp;heapAllocator;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        decodeAllocator = &amp;javaAllocator;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">    SkBitmap outputBitmap;</span><br><span class="line">    <span class="keyword">if</span> (willScale) &#123;</span><br><span class="line">        <span class="comment">// This is weird so let me explain: we could use the scale parameter</span></span><br><span class="line">        <span class="comment">// directly, but for historical reasons this is how the corresponding</span></span><br><span class="line">        <span class="comment">// Dalvik code has always behaved. We simply recreate the behavior here.</span></span><br><span class="line">        <span class="comment">// The result is slightly different from simply using scale because of</span></span><br><span class="line">        <span class="comment">// the 0.5f rounding bias applied when computing the target image size</span></span><br><span class="line">        <span class="type">const</span> <span class="type">float</span> sx = scaledWidth / <span class="built_in">float</span>(decodingBitmap.<span class="built_in">width</span>());</span><br><span class="line">        <span class="type">const</span> <span class="type">float</span> sy = scaledHeight / <span class="built_in">float</span>(decodingBitmap.<span class="built_in">height</span>());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Set the allocator for the outputBitmap.</span></span><br><span class="line">        SkBitmap::Allocator* outputAllocator;</span><br><span class="line">        <span class="keyword">if</span> (javaBitmap != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            outputAllocator = &amp;recyclingAllocator; <span class="comment">//复用inBitmap</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            outputAllocator = &amp;javaAllocator; <span class="comment">//使用Java内存</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        SkColorType scaledColorType = <span class="built_in">colorTypeForScaledOutput</span>(decodingBitmap.<span class="built_in">colorType</span>());</span><br><span class="line">        <span class="comment">// <span class="doctag">FIXME:</span> If the alphaType is kUnpremul and the image has alpha, the</span></span><br><span class="line">        <span class="comment">// colors may not be correct, since Skia does not yet support drawing</span></span><br><span class="line">        <span class="comment">// to/from unpremultiplied bitmaps.</span></span><br><span class="line">        outputBitmap.<span class="built_in">setInfo</span>(SkImageInfo::<span class="built_in">Make</span>(scaledWidth, scaledHeight,</span><br><span class="line">                scaledColorType, decodingBitmap.<span class="built_in">alphaType</span>()));</span><br><span class="line">        <span class="keyword">if</span> (!outputBitmap.<span class="built_in">tryAllocPixels</span>(outputAllocator, <span class="literal">NULL</span>)) &#123;</span><br><span class="line">            <span class="comment">// This should only fail on OOM.  The recyclingAllocator should have</span></span><br><span class="line">            <span class="comment">// enough memory since we check this before decoding using the</span></span><br><span class="line">            <span class="comment">// scaleCheckingAllocator.</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">nullObjectReturn</span>(<span class="string">&quot;allocation failed for scaled bitmap&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        SkPaint paint;</span><br><span class="line">        <span class="comment">// kSrc_Mode instructs us to overwrite the unininitialized pixels in</span></span><br><span class="line">        <span class="comment">// outputBitmap.  Otherwise we would blend by default, which is not</span></span><br><span class="line">        <span class="comment">// what we want.</span></span><br><span class="line">        paint.<span class="built_in">setXfermodeMode</span>(SkXfermode::kSrc_Mode);</span><br><span class="line">        paint.<span class="built_in">setFilterQuality</span>(kLow_SkFilterQuality);</span><br><span class="line"></span><br><span class="line">        <span class="function">SkCanvas <span class="title">canvas</span><span class="params">(outputBitmap)</span></span>;</span><br><span class="line">        canvas.<span class="built_in">scale</span>(sx, sy);</span><br><span class="line">        canvas.<span class="built_in">drawBitmap</span>(decodingBitmap, <span class="number">0.0f</span>, <span class="number">0.0f</span>, &amp;paint);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        outputBitmap.<span class="built_in">swap</span>(decodingBitmap);</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br></pre></td></tr></table></figure>

<h3 id="Android4-4使用Java内存，支持共享内存"><a href="#Android4-4使用Java内存，支持共享内存" class="headerlink" title="Android4.4使用Java内存，支持共享内存"></a>Android4.4使用Java内存，支持共享内存</h3><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="526px" preserveAspectRatio="none" style="width:1114px;height:526px;background:#FFFFFF;" version="1.1" viewBox="0 0 1114 526" width="1114px" zoomAndPan="magnify"><defs/><g><!--class SkImageDecoder--><g id="elem_SkImageDecoder"><rect fill="#F1F1F1" height="48" id="SkImageDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="155" x="353.5" y="7"/><ellipse cx="368.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M370.8438,18.6719 C369.9063,18.2344 369.3125,18.0938 368.4375,18.0938 C365.8125,18.0938 363.8125,20.1719 363.8125,22.8906 L363.8125,24.0156 C363.8125,26.5938 365.9219,28.4844 368.8125,28.4844 C370.0313,28.4844 371.1875,28.1875 371.9375,27.6406 C372.5156,27.2344 372.8438,26.7813 372.8438,26.3906 C372.8438,25.9375 372.4531,25.5469 371.9844,25.5469 C371.7656,25.5469 371.5625,25.625 371.375,25.8125 C370.9219,26.2969 370.9219,26.2969 370.7344,26.3906 C370.3125,26.6563 369.625,26.7813 368.8594,26.7813 C366.8125,26.7813 365.5156,25.6875 365.5156,23.9844 L365.5156,22.8906 C365.5156,21.1094 366.7656,19.7969 368.5,19.7969 C369.0781,19.7969 369.6875,19.9531 370.1563,20.2031 C370.6406,20.4844 370.8125,20.7031 370.9063,21.1094 C370.9688,21.5156 371,21.6406 371.1406,21.7656 C371.2813,21.9063 371.5156,22.0156 371.7344,22.0156 C372,22.0156 372.2656,21.875 372.4375,21.6563 C372.5469,21.5 372.5781,21.3125 372.5781,20.8906 L372.5781,19.4688 C372.5781,19.0313 372.5625,18.9063 372.4688,18.75 C372.3125,18.4844 372.0313,18.3438 371.7344,18.3438 C371.4375,18.3438 371.2344,18.4375 371.0156,18.75 L370.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="382.5" y="27.8467">SkImageDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="354.5" x2="507.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="354.5" x2="507.5" y1="47" y2="47"/></g><!--class SkJPEGImageDecoder--><g id="elem_SkJPEGImageDecoder"><rect fill="#F1F1F1" height="48" id="SkJPEGImageDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="188" x="7" y="115"/><ellipse cx="22" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,126.6719 C23.4063,126.2344 22.8125,126.0938 21.9375,126.0938 C19.3125,126.0938 17.3125,128.1719 17.3125,130.8906 L17.3125,132.0156 C17.3125,134.5938 19.4219,136.4844 22.3125,136.4844 C23.5313,136.4844 24.6875,136.1875 25.4375,135.6406 C26.0156,135.2344 26.3438,134.7813 26.3438,134.3906 C26.3438,133.9375 25.9531,133.5469 25.4844,133.5469 C25.2656,133.5469 25.0625,133.625 24.875,133.8125 C24.4219,134.2969 24.4219,134.2969 24.2344,134.3906 C23.8125,134.6563 23.125,134.7813 22.3594,134.7813 C20.3125,134.7813 19.0156,133.6875 19.0156,131.9844 L19.0156,130.8906 C19.0156,129.1094 20.2656,127.7969 22,127.7969 C22.5781,127.7969 23.1875,127.9531 23.6563,128.2031 C24.1406,128.4844 24.3125,128.7031 24.4063,129.1094 C24.4688,129.5156 24.5,129.6406 24.6406,129.7656 C24.7813,129.9063 25.0156,130.0156 25.2344,130.0156 C25.5,130.0156 25.7656,129.875 25.9375,129.6563 C26.0469,129.5 26.0781,129.3125 26.0781,128.8906 L26.0781,127.4688 C26.0781,127.0313 26.0625,126.9063 25.9688,126.75 C25.8125,126.4844 25.5313,126.3438 25.2344,126.3438 C24.9375,126.3438 24.7344,126.4375 24.5156,126.75 L24.3438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="36" y="135.8467">SkJPEGImageDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="194" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="194" y1="155" y2="155"/></g><!--class SkPNGImageDecoder--><g id="elem_SkPNGImageDecoder"><rect fill="#F1F1F1" height="48" id="SkPNGImageDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="185" x="230.5" y="115"/><ellipse cx="245.5" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M247.8438,126.6719 C246.9063,126.2344 246.3125,126.0938 245.4375,126.0938 C242.8125,126.0938 240.8125,128.1719 240.8125,130.8906 L240.8125,132.0156 C240.8125,134.5938 242.9219,136.4844 245.8125,136.4844 C247.0313,136.4844 248.1875,136.1875 248.9375,135.6406 C249.5156,135.2344 249.8438,134.7813 249.8438,134.3906 C249.8438,133.9375 249.4531,133.5469 248.9844,133.5469 C248.7656,133.5469 248.5625,133.625 248.375,133.8125 C247.9219,134.2969 247.9219,134.2969 247.7344,134.3906 C247.3125,134.6563 246.625,134.7813 245.8594,134.7813 C243.8125,134.7813 242.5156,133.6875 242.5156,131.9844 L242.5156,130.8906 C242.5156,129.1094 243.7656,127.7969 245.5,127.7969 C246.0781,127.7969 246.6875,127.9531 247.1563,128.2031 C247.6406,128.4844 247.8125,128.7031 247.9063,129.1094 C247.9688,129.5156 248,129.6406 248.1406,129.7656 C248.2813,129.9063 248.5156,130.0156 248.7344,130.0156 C249,130.0156 249.2656,129.875 249.4375,129.6563 C249.5469,129.5 249.5781,129.3125 249.5781,128.8906 L249.5781,127.4688 C249.5781,127.0313 249.5625,126.9063 249.4688,126.75 C249.3125,126.4844 249.0313,126.3438 248.7344,126.3438 C248.4375,126.3438 248.2344,126.4375 248.0156,126.75 L247.8438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="259.5" y="135.8467">SkPNGImageDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="231.5" x2="414.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="231.5" x2="414.5" y1="155" y2="155"/></g><!--class SkGIFImageDecoder--><g id="elem_SkGIFImageDecoder"><rect fill="#F1F1F1" height="48" id="SkGIFImageDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="178" x="451" y="115"/><ellipse cx="466" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M468.3438,126.6719 C467.4063,126.2344 466.8125,126.0938 465.9375,126.0938 C463.3125,126.0938 461.3125,128.1719 461.3125,130.8906 L461.3125,132.0156 C461.3125,134.5938 463.4219,136.4844 466.3125,136.4844 C467.5313,136.4844 468.6875,136.1875 469.4375,135.6406 C470.0156,135.2344 470.3438,134.7813 470.3438,134.3906 C470.3438,133.9375 469.9531,133.5469 469.4844,133.5469 C469.2656,133.5469 469.0625,133.625 468.875,133.8125 C468.4219,134.2969 468.4219,134.2969 468.2344,134.3906 C467.8125,134.6563 467.125,134.7813 466.3594,134.7813 C464.3125,134.7813 463.0156,133.6875 463.0156,131.9844 L463.0156,130.8906 C463.0156,129.1094 464.2656,127.7969 466,127.7969 C466.5781,127.7969 467.1875,127.9531 467.6563,128.2031 C468.1406,128.4844 468.3125,128.7031 468.4063,129.1094 C468.4688,129.5156 468.5,129.6406 468.6406,129.7656 C468.7813,129.9063 469.0156,130.0156 469.2344,130.0156 C469.5,130.0156 469.7656,129.875 469.9375,129.6563 C470.0469,129.5 470.0781,129.3125 470.0781,128.8906 L470.0781,127.4688 C470.0781,127.0313 470.0625,126.9063 469.9688,126.75 C469.8125,126.4844 469.5313,126.3438 469.2344,126.3438 C468.9375,126.3438 468.7344,126.4375 468.5156,126.75 L468.3438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="480" y="135.8467">SkGIFImageDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="452" x2="628" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="452" x2="628" y1="155" y2="155"/></g><!--class SkBMPImageDecoder--><g id="elem_SkBMPImageDecoder"><rect fill="#F1F1F1" height="48" id="SkBMPImageDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="186" x="664" y="115"/><ellipse cx="679" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M681.3438,126.6719 C680.4063,126.2344 679.8125,126.0938 678.9375,126.0938 C676.3125,126.0938 674.3125,128.1719 674.3125,130.8906 L674.3125,132.0156 C674.3125,134.5938 676.4219,136.4844 679.3125,136.4844 C680.5313,136.4844 681.6875,136.1875 682.4375,135.6406 C683.0156,135.2344 683.3438,134.7813 683.3438,134.3906 C683.3438,133.9375 682.9531,133.5469 682.4844,133.5469 C682.2656,133.5469 682.0625,133.625 681.875,133.8125 C681.4219,134.2969 681.4219,134.2969 681.2344,134.3906 C680.8125,134.6563 680.125,134.7813 679.3594,134.7813 C677.3125,134.7813 676.0156,133.6875 676.0156,131.9844 L676.0156,130.8906 C676.0156,129.1094 677.2656,127.7969 679,127.7969 C679.5781,127.7969 680.1875,127.9531 680.6563,128.2031 C681.1406,128.4844 681.3125,128.7031 681.4063,129.1094 C681.4688,129.5156 681.5,129.6406 681.6406,129.7656 C681.7813,129.9063 682.0156,130.0156 682.2344,130.0156 C682.5,130.0156 682.7656,129.875 682.9375,129.6563 C683.0469,129.5 683.0781,129.3125 683.0781,128.8906 L683.0781,127.4688 C683.0781,127.0313 683.0625,126.9063 682.9688,126.75 C682.8125,126.4844 682.5313,126.3438 682.2344,126.3438 C681.9375,126.3438 681.7344,126.4375 681.5156,126.75 L681.3438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="693" y="135.8467">SkBMPImageDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="665" x2="849" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="665" x2="849" y1="155" y2="155"/></g><!--class SkPixelRef--><g id="elem_SkPixelRef"><rect fill="#F1F1F1" height="48" id="SkPixelRef" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="109" x="885.5" y="115"/><ellipse cx="900.5" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M902.8438,126.6719 C901.9063,126.2344 901.3125,126.0938 900.4375,126.0938 C897.8125,126.0938 895.8125,128.1719 895.8125,130.8906 L895.8125,132.0156 C895.8125,134.5938 897.9219,136.4844 900.8125,136.4844 C902.0313,136.4844 903.1875,136.1875 903.9375,135.6406 C904.5156,135.2344 904.8438,134.7813 904.8438,134.3906 C904.8438,133.9375 904.4531,133.5469 903.9844,133.5469 C903.7656,133.5469 903.5625,133.625 903.375,133.8125 C902.9219,134.2969 902.9219,134.2969 902.7344,134.3906 C902.3125,134.6563 901.625,134.7813 900.8594,134.7813 C898.8125,134.7813 897.5156,133.6875 897.5156,131.9844 L897.5156,130.8906 C897.5156,129.1094 898.7656,127.7969 900.5,127.7969 C901.0781,127.7969 901.6875,127.9531 902.1563,128.2031 C902.6406,128.4844 902.8125,128.7031 902.9063,129.1094 C902.9688,129.5156 903,129.6406 903.1406,129.7656 C903.2813,129.9063 903.5156,130.0156 903.7344,130.0156 C904,130.0156 904.2656,129.875 904.4375,129.6563 C904.5469,129.5 904.5781,129.3125 904.5781,128.8906 L904.5781,127.4688 C904.5781,127.0313 904.5625,126.9063 904.4688,126.75 C904.3125,126.4844 904.0313,126.3438 903.7344,126.3438 C903.4375,126.3438 903.2344,126.4375 903.0156,126.75 L902.8438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="914.5" y="135.8467">SkPixelRef</text><line style="stroke:#181818;stroke-width:0.5;" x1="886.5" x2="993.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="886.5" x2="993.5" y1="155" y2="155"/></g><!--class SkImageRef--><g id="elem_SkImageRef"><rect fill="#F1F1F1" height="48" id="SkImageRef" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="119" x="779.5" y="223"/><ellipse cx="794.5" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M796.8438,234.6719 C795.9063,234.2344 795.3125,234.0938 794.4375,234.0938 C791.8125,234.0938 789.8125,236.1719 789.8125,238.8906 L789.8125,240.0156 C789.8125,242.5938 791.9219,244.4844 794.8125,244.4844 C796.0313,244.4844 797.1875,244.1875 797.9375,243.6406 C798.5156,243.2344 798.8438,242.7813 798.8438,242.3906 C798.8438,241.9375 798.4531,241.5469 797.9844,241.5469 C797.7656,241.5469 797.5625,241.625 797.375,241.8125 C796.9219,242.2969 796.9219,242.2969 796.7344,242.3906 C796.3125,242.6563 795.625,242.7813 794.8594,242.7813 C792.8125,242.7813 791.5156,241.6875 791.5156,239.9844 L791.5156,238.8906 C791.5156,237.1094 792.7656,235.7969 794.5,235.7969 C795.0781,235.7969 795.6875,235.9531 796.1563,236.2031 C796.6406,236.4844 796.8125,236.7031 796.9063,237.1094 C796.9688,237.5156 797,237.6406 797.1406,237.7656 C797.2813,237.9063 797.5156,238.0156 797.7344,238.0156 C798,238.0156 798.2656,237.875 798.4375,237.6563 C798.5469,237.5 798.5781,237.3125 798.5781,236.8906 L798.5781,235.4688 C798.5781,235.0313 798.5625,234.9063 798.4688,234.75 C798.3125,234.4844 798.0313,234.3438 797.7344,234.3438 C797.4375,234.3438 797.2344,234.4375 797.0156,234.75 L796.8438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="808.5" y="243.8467">SkImageRef</text><line style="stroke:#181818;stroke-width:0.5;" x1="780.5" x2="897.5" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="780.5" x2="897.5" y1="263" y2="263"/></g><!--class SkImageRef_ashmem--><g id="elem_SkImageRef_ashmem"><rect codeLine="8" fill="#F1F1F1" height="64.2969" id="SkImageRef_ashmem" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="187" x="738.5" y="331"/><ellipse cx="753.5" cy="347" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M755.8438,342.6719 C754.9063,342.2344 754.3125,342.0938 753.4375,342.0938 C750.8125,342.0938 748.8125,344.1719 748.8125,346.8906 L748.8125,348.0156 C748.8125,350.5938 750.9219,352.4844 753.8125,352.4844 C755.0313,352.4844 756.1875,352.1875 756.9375,351.6406 C757.5156,351.2344 757.8438,350.7813 757.8438,350.3906 C757.8438,349.9375 757.4531,349.5469 756.9844,349.5469 C756.7656,349.5469 756.5625,349.625 756.375,349.8125 C755.9219,350.2969 755.9219,350.2969 755.7344,350.3906 C755.3125,350.6563 754.625,350.7813 753.8594,350.7813 C751.8125,350.7813 750.5156,349.6875 750.5156,347.9844 L750.5156,346.8906 C750.5156,345.1094 751.7656,343.7969 753.5,343.7969 C754.0781,343.7969 754.6875,343.9531 755.1563,344.2031 C755.6406,344.4844 755.8125,344.7031 755.9063,345.1094 C755.9688,345.5156 756,345.6406 756.1406,345.7656 C756.2813,345.9063 756.5156,346.0156 756.7344,346.0156 C757,346.0156 757.2656,345.875 757.4375,345.6563 C757.5469,345.5 757.5781,345.3125 757.5781,344.8906 L757.5781,343.4688 C757.5781,343.0313 757.5625,342.9063 757.4688,342.75 C757.3125,342.4844 757.0313,342.3438 756.7344,342.3438 C756.4375,342.3438 756.2344,342.4375 756.0156,342.75 L755.8438,342.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="767.5" y="351.8467">SkImageRef_ashmem</text><line style="stroke:#181818;stroke-width:0.5;" x1="739.5" x2="924.5" y1="363" y2="363"/><line style="stroke:#181818;stroke-width:0.5;" x1="739.5" x2="924.5" y1="371" y2="371"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="744.5" y="387.9951">bool onDecode()</text></g><!--class AshmemAllocator--><g id="elem_AshmemAllocator"><rect codeLine="12" fill="#F1F1F1" height="64.2969" id="AshmemAllocator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="386" x="639" y="455"/><ellipse cx="763.75" cy="471" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M766.0938,466.6719 C765.1563,466.2344 764.5625,466.0938 763.6875,466.0938 C761.0625,466.0938 759.0625,468.1719 759.0625,470.8906 L759.0625,472.0156 C759.0625,474.5938 761.1719,476.4844 764.0625,476.4844 C765.2813,476.4844 766.4375,476.1875 767.1875,475.6406 C767.7656,475.2344 768.0938,474.7813 768.0938,474.3906 C768.0938,473.9375 767.7031,473.5469 767.2344,473.5469 C767.0156,473.5469 766.8125,473.625 766.625,473.8125 C766.1719,474.2969 766.1719,474.2969 765.9844,474.3906 C765.5625,474.6563 764.875,474.7813 764.1094,474.7813 C762.0625,474.7813 760.7656,473.6875 760.7656,471.9844 L760.7656,470.8906 C760.7656,469.1094 762.0156,467.7969 763.75,467.7969 C764.3281,467.7969 764.9375,467.9531 765.4063,468.2031 C765.8906,468.4844 766.0625,468.7031 766.1563,469.1094 C766.2188,469.5156 766.25,469.6406 766.3906,469.7656 C766.5313,469.9063 766.7656,470.0156 766.9844,470.0156 C767.25,470.0156 767.5156,469.875 767.6875,469.6563 C767.7969,469.5 767.8281,469.3125 767.8281,468.8906 L767.8281,467.4688 C767.8281,467.0313 767.8125,466.9063 767.7188,466.75 C767.5625,466.4844 767.2813,466.3438 766.9844,466.3438 C766.6875,466.3438 766.4844,466.4375 766.2656,466.75 L766.0938,466.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="784.25" y="475.8467">AshmemAllocator</text><line style="stroke:#181818;stroke-width:0.5;" x1="640" x2="1024" y1="487" y2="487"/><line style="stroke:#181818;stroke-width:0.5;" x1="640" x2="1024" y1="495" y2="495"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="374" x="645" y="511.9951">bool allocPixelRef(SkBitmap* bm, SkColorTable* ct)</text></g><!--class SkBitmap--><g id="elem_SkBitmap"><rect fill="#F1F1F1" height="48" id="SkBitmap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="103" x="888.5" y="7"/><ellipse cx="903.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M905.8438,18.6719 C904.9063,18.2344 904.3125,18.0938 903.4375,18.0938 C900.8125,18.0938 898.8125,20.1719 898.8125,22.8906 L898.8125,24.0156 C898.8125,26.5938 900.9219,28.4844 903.8125,28.4844 C905.0313,28.4844 906.1875,28.1875 906.9375,27.6406 C907.5156,27.2344 907.8438,26.7813 907.8438,26.3906 C907.8438,25.9375 907.4531,25.5469 906.9844,25.5469 C906.7656,25.5469 906.5625,25.625 906.375,25.8125 C905.9219,26.2969 905.9219,26.2969 905.7344,26.3906 C905.3125,26.6563 904.625,26.7813 903.8594,26.7813 C901.8125,26.7813 900.5156,25.6875 900.5156,23.9844 L900.5156,22.8906 C900.5156,21.1094 901.7656,19.7969 903.5,19.7969 C904.0781,19.7969 904.6875,19.9531 905.1563,20.2031 C905.6406,20.4844 905.8125,20.7031 905.9063,21.1094 C905.9688,21.5156 906,21.6406 906.1406,21.7656 C906.2813,21.9063 906.5156,22.0156 906.7344,22.0156 C907,22.0156 907.2656,21.875 907.4375,21.6563 C907.5469,21.5 907.5781,21.3125 907.5781,20.8906 L907.5781,19.4688 C907.5781,19.0313 907.5625,18.9063 907.4688,18.75 C907.3125,18.4844 907.0313,18.3438 906.7344,18.3438 C906.4375,18.3438 906.2344,18.4375 906.0156,18.75 L905.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="917.5" y="27.8467">SkBitmap</text><line style="stroke:#181818;stroke-width:0.5;" x1="889.5" x2="990.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="889.5" x2="990.5" y1="47" y2="47"/></g><!--class SkMallocPixelRef--><g id="elem_SkMallocPixelRef"><rect fill="#F1F1F1" height="48" id="SkMallocPixelRef" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="154" x="949" y="223"/><ellipse cx="964" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M966.3438,234.6719 C965.4063,234.2344 964.8125,234.0938 963.9375,234.0938 C961.3125,234.0938 959.3125,236.1719 959.3125,238.8906 L959.3125,240.0156 C959.3125,242.5938 961.4219,244.4844 964.3125,244.4844 C965.5313,244.4844 966.6875,244.1875 967.4375,243.6406 C968.0156,243.2344 968.3438,242.7813 968.3438,242.3906 C968.3438,241.9375 967.9531,241.5469 967.4844,241.5469 C967.2656,241.5469 967.0625,241.625 966.875,241.8125 C966.4219,242.2969 966.4219,242.2969 966.2344,242.3906 C965.8125,242.6563 965.125,242.7813 964.3594,242.7813 C962.3125,242.7813 961.0156,241.6875 961.0156,239.9844 L961.0156,238.8906 C961.0156,237.1094 962.2656,235.7969 964,235.7969 C964.5781,235.7969 965.1875,235.9531 965.6563,236.2031 C966.1406,236.4844 966.3125,236.7031 966.4063,237.1094 C966.4688,237.5156 966.5,237.6406 966.6406,237.7656 C966.7813,237.9063 967.0156,238.0156 967.2344,238.0156 C967.5,238.0156 967.7656,237.875 967.9375,237.6563 C968.0469,237.5 968.0781,237.3125 968.0781,236.8906 L968.0781,235.4688 C968.0781,235.0313 968.0625,234.9063 967.9688,234.75 C967.8125,234.4844 967.5313,234.3438 967.2344,234.3438 C966.9375,234.3438 966.7344,234.4375 966.5156,234.75 L966.3438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="978" y="243.8467">SkMallocPixelRef</text><line style="stroke:#181818;stroke-width:0.5;" x1="950" x2="1102" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="950" x2="1102" y1="263" y2="263"/></g><!--class AndroidPixelRef--><g id="elem_AndroidPixelRef"><rect fill="#F1F1F1" height="48" id="AndroidPixelRef" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="147" x="960.5" y="339"/><ellipse cx="975.5" cy="355" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M977.8438,350.6719 C976.9063,350.2344 976.3125,350.0938 975.4375,350.0938 C972.8125,350.0938 970.8125,352.1719 970.8125,354.8906 L970.8125,356.0156 C970.8125,358.5938 972.9219,360.4844 975.8125,360.4844 C977.0313,360.4844 978.1875,360.1875 978.9375,359.6406 C979.5156,359.2344 979.8438,358.7813 979.8438,358.3906 C979.8438,357.9375 979.4531,357.5469 978.9844,357.5469 C978.7656,357.5469 978.5625,357.625 978.375,357.8125 C977.9219,358.2969 977.9219,358.2969 977.7344,358.3906 C977.3125,358.6563 976.625,358.7813 975.8594,358.7813 C973.8125,358.7813 972.5156,357.6875 972.5156,355.9844 L972.5156,354.8906 C972.5156,353.1094 973.7656,351.7969 975.5,351.7969 C976.0781,351.7969 976.6875,351.9531 977.1563,352.2031 C977.6406,352.4844 977.8125,352.7031 977.9063,353.1094 C977.9688,353.5156 978,353.6406 978.1406,353.7656 C978.2813,353.9063 978.5156,354.0156 978.7344,354.0156 C979,354.0156 979.2656,353.875 979.4375,353.6563 C979.5469,353.5 979.5781,353.3125 979.5781,352.8906 L979.5781,351.4688 C979.5781,351.0313 979.5625,350.9063 979.4688,350.75 C979.3125,350.4844 979.0313,350.3438 978.7344,350.3438 C978.4375,350.3438 978.2344,350.4375 978.0156,350.75 L977.8438,350.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="989.5" y="359.8467">AndroidPixelRef</text><line style="stroke:#181818;stroke-width:0.5;" x1="961.5" x2="1106.5" y1="371" y2="371"/><line style="stroke:#181818;stroke-width:0.5;" x1="961.5" x2="1106.5" y1="379" y2="379"/></g><!--reverse link SkImageDecoder to SkJPEGImageDecoder--><g id="link_SkImageDecoder_SkJPEGImageDecoder"><path codeLine="1" d="M342.2575,60.505 C287.0005,78.255 228.043,97.192 172.75,114.953 " fill="none" id="SkImageDecoder-backto-SkJPEGImageDecoder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="359.395,55,340.4225,54.7925,344.0925,66.2175,359.395,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link SkImageDecoder to SkPNGImageDecoder--><g id="link_SkImageDecoder_SkPNGImageDecoder"><path codeLine="2" d="M394.7194,67.6081 C376.7274,85.2661 364.834,96.941 346.762,114.678 " fill="none" id="SkImageDecoder-backto-SkPNGImageDecoder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="407.566,55,390.5167,63.3259,398.9221,71.8903,407.566,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link SkImageDecoder to SkGIFImageDecoder--><g id="link_SkImageDecoder_SkGIFImageDecoder"><path codeLine="3" d="M467.5553,67.549 C485.7133,85.207 497.779,96.941 516.018,114.678 " fill="none" id="SkImageDecoder-backto-SkGIFImageDecoder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="454.651,55,463.3723,71.8505,471.7384,63.2476,454.651,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link SkImageDecoder to SkBMPImageDecoder--><g id="link_SkImageDecoder_SkBMPImageDecoder"><path codeLine="4" d="M518.8548,60.5661 C573.4428,78.3161 631.497,97.192 686.12,114.953 " fill="none" id="SkImageDecoder-backto-SkBMPImageDecoder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="501.737,55,516.9994,66.272,520.7102,54.8601,501.737,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link SkPixelRef to SkImageRef--><g id="link_SkPixelRef_SkImageRef"><path codeLine="6" d="M905.6678,176.0312 C888.8418,193.6892 878.122,204.941 861.222,222.678 " fill="none" id="SkPixelRef-backto-SkImageRef" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="918.085,163,901.324,171.8921,910.0115,180.1703,918.085,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link SkImageRef to SkImageRef_ashmem--><g id="link_SkImageRef_SkImageRef_ashmem"><path codeLine="7" d="M836.4805,289.0362 C835.4265,306.2122 835.077,311.884 833.919,330.755 " fill="none" id="SkImageRef-backto-SkImageRef_ashmem" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="837.583,271.07,830.4918,288.6687,842.4692,289.4037,837.583,271.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--link SkImageRef_ashmem to AshmemAllocator--><g id="link_SkImageRef_ashmem_AshmemAllocator"><path codeLine="11" d="M832,395.101 C832,413.457 832,430.6101 832,448.9554 " fill="none" id="SkImageRef_ashmem-to-AshmemAllocator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="832,454.9554,836,445.9554,832,449.9554,828,445.9554,832,454.9554" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link SkBitmap to SkPixelRef--><g id="link_SkBitmap_SkPixelRef"><path codeLine="15" d="M940,67 C940,84.658 940,96.941 940,114.678 " fill="none" id="SkBitmap-backto-SkPixelRef" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="940,55,936,61,940,67,944,61,940,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link SkPixelRef to SkMallocPixelRef--><g id="link_SkPixelRef_SkMallocPixelRef"><path codeLine="17" d="M970.0016,176.9782 C984.3276,194.6362 992.688,204.941 1007.08,222.678 " fill="none" id="SkPixelRef-backto-SkMallocPixelRef" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="958.661,163,965.3422,180.7584,974.661,173.198,958.661,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link SkMallocPixelRef to AndroidPixelRef--><g id="link_SkMallocPixelRef_AndroidPixelRef"><path codeLine="18" d="M1028.8819,289.0257 C1030.2719,308.8037 1031,319.196 1032.38,338.965 " fill="none" id="SkMallocPixelRef-backto-AndroidPixelRef" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1027.62,271.07,1022.8967,289.4464,1034.8672,288.6051,1027.62,271.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[ZP1B3e8m443tFSKibSWDZ0d-22QOHjoRKgeIMiOK5YRgtQqK8hy5NKtVlCwdKHOeTXDRmJ4H6fPlruKeEz2Tt-Oa6jNeSOhb1_i9rZga7SjeD7qAUHBNHgdovax-OJzrOSLT2KMuP4KnvF0YO4wCA05psses9nyoD5rt1LuLUb8YPoNgkcgFjcko7sp6dfcbqbAnXmEnMfXXDYXHdraiXGEyj6sj0Oxzp_hbsF9XfpRf0wjvUQ8nJHhu1G00]--></g></svg>

<h2 id="Bitmap内存回收机制"><a href="#Bitmap内存回收机制" class="headerlink" title="Bitmap内存回收机制"></a>Bitmap内存回收机制</h2><p>从Android 8.0开始，Bitmap的pixels数据放在native heap中，通过<code>NativeAllocationRegistry</code>来回收内存。这一节分析<code>NativeAllocationRegistry</code>的原理。</p>
<h3 id="NativeAllocationRegistry内存回收原理"><a href="#NativeAllocationRegistry内存回收原理" class="headerlink" title="NativeAllocationRegistry内存回收原理"></a>NativeAllocationRegistry内存回收原理</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//android-12.1.0_r27\frameworks\base\graphics\java\android\graphics\Bitmap.java</span></span><br><span class="line">    Bitmap(<span class="type">long</span> nativeBitmap, <span class="type">int</span> width, <span class="type">int</span> height, <span class="type">int</span> density,</span><br><span class="line">            <span class="type">boolean</span> requestPremultiplied, <span class="type">byte</span>[] ninePatchChunk,</span><br><span class="line">            NinePatch.InsetStruct ninePatchInsets, <span class="type">boolean</span> fromMalloc) &#123;</span><br><span class="line">        ...... <span class="comment">//代码省略</span></span><br><span class="line">        mNativePtr = nativeBitmap;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">allocationByteCount</span> <span class="operator">=</span> getAllocationByteCount();</span><br><span class="line">        NativeAllocationRegistry registry;</span><br><span class="line">        <span class="keyword">if</span> (fromMalloc) &#123; <span class="comment">//内存在native堆中进行分配</span></span><br><span class="line">            registry = NativeAllocationRegistry.createMalloced(</span><br><span class="line">                    Bitmap.class.getClassLoader(), nativeGetNativeFinalizer(), allocationByteCount);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">//fromMalloc=false是内存在Ashmem，或者gpu上进行分配的场景</span></span><br><span class="line">            registry = NativeAllocationRegistry.createNonmalloced(</span><br><span class="line">                    Bitmap.class.getClassLoader(), nativeGetNativeFinalizer(), allocationByteCount);</span><br><span class="line">        &#125;</span><br><span class="line">        registry.registerNativeAllocation(<span class="built_in">this</span>, nativeBitmap);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="type">long</span> <span class="title function_">nativeGetNativeFinalizer</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure>

<p>NativeAllocationRegistry的使用比较简单，通过createMalloced/createNonmalloced来构造实例，然后调用registerNativeAllocation来进行注册。构造函数一共有3个参数，第一个是ClassLoader，第二个是nativeGetNativeFinalizer，第三个是内存大小。ClassLoader和内存大小很好理解，<code>nativeGetNativeFinalizer</code>是对应什么呢？它是一个jni函数，实现如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//android\android-12.1.0_r27\frameworks\base\libs\hwui\jni\Bitmap.cpp</span></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> JNINativeMethod gBitmapMethods[] = &#123;</span><br><span class="line">    ......</span><br><span class="line">    &#123;   <span class="string">&quot;nativeGetNativeFinalizer&quot;</span>, <span class="string">&quot;()J&quot;</span>, (<span class="type">void</span>*)Bitmap_getNativeFinalizer &#125;,</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="built_in">Bitmap_destruct</span>(BitmapWrapper* bitmap) &#123;</span><br><span class="line">    <span class="keyword">delete</span> bitmap;  <span class="comment">//最终会调用到析构函数Bitmap::~Bitmap()</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> jlong <span class="title">Bitmap_getNativeFinalizer</span><span class="params">(JNIEnv*, jobject)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">static_cast</span>&lt;jlong&gt;(<span class="built_in">reinterpret_cast</span>&lt;<span class="type">uintptr_t</span>&gt;(&amp;Bitmap_destruct));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>nativeGetNativeFinalizer</code>就是native函数<code>Bitmap_destruct</code>的函数指针，<code>Bitmap_destruct</code>中会调用到native层Bitmap类的析构函数，从而释放内存。</p>
<p>继续看下<code>NativeAllocationRegistry</code>的构造：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> NativeAllocationRegistry <span class="title function_">createNonmalloced</span><span class="params">(</span></span><br><span class="line"><span class="params">        <span class="meta">@NonNull</span> ClassLoader classLoader, <span class="type">long</span> freeFunction, <span class="type">long</span> size)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">NativeAllocationRegistry</span>(classLoader, freeFunction, size, <span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> NativeAllocationRegistry <span class="title function_">createMalloced</span><span class="params">(</span></span><br><span class="line"><span class="params">        <span class="meta">@NonNull</span> ClassLoader classLoader, <span class="type">long</span> freeFunction, <span class="type">long</span> size)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">NativeAllocationRegistry</span>(classLoader, freeFunction, size, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="title function_">NativeAllocationRegistry</span><span class="params">(ClassLoader classLoader, <span class="type">long</span> freeFunction, <span class="type">long</span> size,</span></span><br><span class="line"><span class="params">        <span class="type">boolean</span> mallocAllocation)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (size &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;Invalid native allocation size: &quot;</span> + size);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.classLoader = classLoader;</span><br><span class="line">    <span class="built_in">this</span>.freeFunction = freeFunction;</span><br><span class="line">    <span class="built_in">this</span>.size = mallocAllocation ? (size | IS_MALLOCED) : (size &amp; ~IS_MALLOCED);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看出构造函数只是给成员变量赋值。真正的工作是在registerNativeAllocation中进行的：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//android-12.1.0_r27\libcore\luni\src\main\java\libcore\util\NativeAllocationRegistry.java</span></span><br><span class="line">    <span class="keyword">public</span> <span class="meta">@NonNull</span> Runnable <span class="title function_">registerNativeAllocation</span><span class="params">(<span class="meta">@NonNull</span> Object referent, <span class="type">long</span> nativePtr)</span> &#123;</span><br><span class="line">        ......</span><br><span class="line">        CleanerThunk thunk;</span><br><span class="line">        CleanerRunner result;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            thunk = <span class="keyword">new</span> <span class="title class_">CleanerThunk</span>();</span><br><span class="line">            <span class="type">Cleaner</span> <span class="variable">cleaner</span> <span class="operator">=</span> Cleaner.create(referent, thunk); <span class="comment">//对应sun.misc.Cleaner</span></span><br><span class="line">            result = <span class="keyword">new</span> <span class="title class_">CleanerRunner</span>(cleaner); <span class="comment">//忽略这一行，因为Bitmap调用registerNativeAllocation没有使用返回值</span></span><br><span class="line">            registerNativeAllocation(<span class="built_in">this</span>.size);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (VirtualMachineError vme <span class="comment">/* probably OutOfMemoryError */</span>) &#123;</span><br><span class="line">            applyFreeFunction(freeFunction, nativePtr);</span><br><span class="line">            <span class="keyword">throw</span> vme;</span><br><span class="line">        &#125; <span class="comment">// Other exceptions are impossible.</span></span><br><span class="line">        <span class="comment">// Enable the cleaner only after we can no longer throw anything, including OOME.</span></span><br><span class="line">        thunk.setNativePtr(nativePtr);</span><br><span class="line">        <span class="comment">// Ensure that cleaner doesn&#x27;t get invoked before we enable it.</span></span><br><span class="line">        Reference.reachabilityFence(referent);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">CleanerThunk</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">long</span> nativePtr;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">CleanerThunk</span><span class="params">()</span> &#123; <span class="built_in">this</span>.nativePtr = <span class="number">0</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (nativePtr != <span class="number">0</span>) &#123;</span><br><span class="line">                applyFreeFunction(freeFunction, nativePtr); <span class="comment">//回收内存</span></span><br><span class="line">                registerNativeFree(size);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setNativePtr</span><span class="params">(<span class="type">long</span> nativePtr)</span> &#123; <span class="built_in">this</span>.nativePtr = nativePtr; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//jni函数，执行native内存回收</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">applyFreeFunction</span><span class="params">(<span class="type">long</span> freeFunction, <span class="type">long</span> nativePtr)</span>;</span><br></pre></td></tr></table></figure>

<p>看来NativeAllocationRegistry是通过sun.misc.Cleaner来执行内存回收的。</p>
<h3 id="Cleaner源码分析"><a href="#Cleaner源码分析" class="headerlink" title="Cleaner源码分析"></a>Cleaner源码分析</h3><p>（源码分析基于jdk1.8.0）</p>
<p><strong>首先，</strong> Cleaner是一个虚引用，继承自PhantomReference，如下图：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="281px" preserveAspectRatio="none" style="width:233px;height:281px;background:#FFFFFF;" version="1.1" viewBox="0 0 233 281" width="233px" zoomAndPan="magnify"><defs/><g><!--class Reference--><g id="elem_Reference"><rect codeLine="1" fill="#F1F1F1" height="48" id="Reference" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="149" x="40" y="10"/><ellipse cx="55" cy="26" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M57.0781,27.8125 L57.4688,28.7969 L57.0781,28.7969 C56.625,28.7969 56.5156,28.8125 56.3594,28.9219 C56.1094,29.0781 55.9531,29.3594 55.9531,29.6563 C55.9531,29.9219 56.0938,30.1719 56.3125,30.3281 C56.4531,30.4531 56.6563,30.5 57.0781,30.5 L59.4375,30.5 C59.7969,30.5 60.0156,30.4688 60.1563,30.375 C60.4063,30.2344 60.5625,29.9375 60.5625,29.6563 C60.5625,29.375 60.4219,29.125 60.2031,28.9688 C60.0313,28.8281 59.875,28.7969 59.4063,28.7969 L56.0156,20.5938 L52.3438,20.5938 C51.8906,20.5938 51.7656,20.6094 51.6094,20.7031 C51.3594,20.875 51.2031,21.1563 51.2031,21.4375 C51.2031,21.7188 51.3438,21.9688 51.5625,22.1406 C51.7344,22.25 51.9063,22.2813 52.3438,22.2813 L53.4219,22.2813 L50.7813,28.7969 C50.3594,28.7969 50.2031,28.8125 50.0469,28.9219 C49.7969,29.0781 49.6406,29.3594 49.6406,29.6563 C49.6406,30.2188 50.0156,30.5 50.7656,30.5 L53.0313,30.5 C53.3906,30.5 53.6094,30.4688 53.7344,30.375 C54,30.2344 54.1406,29.9375 54.1406,29.6563 C54.1406,29.375 54.0156,29.125 53.7969,28.9531 C53.625,28.8281 53.4844,28.7969 53.0313,28.7969 L52.6406,28.7969 L53.0313,27.8125 L57.0781,27.8125 Z M56.375,26.1094 L53.7031,26.1094 L55.0469,22.8438 L56.375,26.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="74" x="69" y="30.8467">Reference</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="41" x="151" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="39" x="152" y="19.1387">Object</text><line style="stroke:#181818;stroke-width:0.5;" x1="41" x2="188" y1="42" y2="42"/><line style="stroke:#181818;stroke-width:0.5;" x1="41" x2="188" y1="50" y2="50"/></g><!--class PhantomReference--><g id="elem_PhantomReference"><rect codeLine="2" fill="#F1F1F1" height="48" id="PhantomReference" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="215" x="7" y="118"/><ellipse cx="22" cy="134" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,129.6719 C23.4063,129.2344 22.8125,129.0938 21.9375,129.0938 C19.3125,129.0938 17.3125,131.1719 17.3125,133.8906 L17.3125,135.0156 C17.3125,137.5938 19.4219,139.4844 22.3125,139.4844 C23.5313,139.4844 24.6875,139.1875 25.4375,138.6406 C26.0156,138.2344 26.3438,137.7813 26.3438,137.3906 C26.3438,136.9375 25.9531,136.5469 25.4844,136.5469 C25.2656,136.5469 25.0625,136.625 24.875,136.8125 C24.4219,137.2969 24.4219,137.2969 24.2344,137.3906 C23.8125,137.6563 23.125,137.7813 22.3594,137.7813 C20.3125,137.7813 19.0156,136.6875 19.0156,134.9844 L19.0156,133.8906 C19.0156,132.1094 20.2656,130.7969 22,130.7969 C22.5781,130.7969 23.1875,130.9531 23.6563,131.2031 C24.1406,131.4844 24.3125,131.7031 24.4063,132.1094 C24.4688,132.5156 24.5,132.6406 24.6406,132.7656 C24.7813,132.9063 25.0156,133.0156 25.2344,133.0156 C25.5,133.0156 25.7656,132.875 25.9375,132.6563 C26.0469,132.5 26.0781,132.3125 26.0781,131.8906 L26.0781,130.4688 C26.0781,130.0313 26.0625,129.9063 25.9688,129.75 C25.8125,129.4844 25.5313,129.3438 25.2344,129.3438 C24.9375,129.3438 24.7344,129.4375 24.5156,129.75 L24.3438,129.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="36" y="138.8467">PhantomReference</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="41" x="184" y="115"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="39" x="185" y="127.1387">Object</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="221" y1="150" y2="150"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="221" y1="158" y2="158"/></g><!--class Cleaner--><g id="elem_Cleaner"><rect fill="#F1F1F1" height="48" id="Cleaner" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="87" x="71" y="226"/><ellipse cx="86" cy="242" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M88.3438,237.6719 C87.4063,237.2344 86.8125,237.0938 85.9375,237.0938 C83.3125,237.0938 81.3125,239.1719 81.3125,241.8906 L81.3125,243.0156 C81.3125,245.5938 83.4219,247.4844 86.3125,247.4844 C87.5313,247.4844 88.6875,247.1875 89.4375,246.6406 C90.0156,246.2344 90.3438,245.7813 90.3438,245.3906 C90.3438,244.9375 89.9531,244.5469 89.4844,244.5469 C89.2656,244.5469 89.0625,244.625 88.875,244.8125 C88.4219,245.2969 88.4219,245.2969 88.2344,245.3906 C87.8125,245.6563 87.125,245.7813 86.3594,245.7813 C84.3125,245.7813 83.0156,244.6875 83.0156,242.9844 L83.0156,241.8906 C83.0156,240.1094 84.2656,238.7969 86,238.7969 C86.5781,238.7969 87.1875,238.9531 87.6563,239.2031 C88.1406,239.4844 88.3125,239.7031 88.4063,240.1094 C88.4688,240.5156 88.5,240.6406 88.6406,240.7656 C88.7813,240.9063 89.0156,241.0156 89.2344,241.0156 C89.5,241.0156 89.7656,240.875 89.9375,240.6563 C90.0469,240.5 90.0781,240.3125 90.0781,239.8906 L90.0781,238.4688 C90.0781,238.0313 90.0625,237.9063 89.9688,237.75 C89.8125,237.4844 89.5313,237.3438 89.2344,237.3438 C88.9375,237.3438 88.7344,237.4375 88.5156,237.75 L88.3438,237.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="55" x="100" y="246.8467">Cleaner</text><line style="stroke:#181818;stroke-width:0.5;" x1="72" x2="157" y1="258" y2="258"/><line style="stroke:#181818;stroke-width:0.5;" x1="72" x2="157" y1="266" y2="266"/></g><!--reverse link Reference to PhantomReference--><g id="link_Reference_PhantomReference"><path codeLine="3" d="M114.5,76 C114.5,93.658 114.5,99.941 114.5,117.678 " fill="none" id="Reference-backto-PhantomReference" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="114.5,58,108.5,76,120.5,76,114.5,58" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link PhantomReference to Cleaner--><g id="link_PhantomReference_Cleaner"><path codeLine="4" d="M114.5,184 C114.5,201.6584 114.5,207.9408 114.5,225.6784 " fill="none" id="PhantomReference-backto-Cleaner" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="114.5,166,108.5,184,120.5,184,114.5,166" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[IqmgBYbAJ2vH24fDIorApKjEjV5FoafDBh7ZIiv9B2vM2CX8p2l9pyMKXeiesDJewcAeuq8NW2XppabDp4ij0W00]--></g></svg>

<p><strong>第二：</strong> Cleaner的父类Reference的静态代码块中会启动一个线程ReferenceHandler，这个线程永远不会退出：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Reference</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ReferenceHandler</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">        ......</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>) &#123; <span class="comment">//while循环永远不会退出</span></span><br><span class="line">                tryHandlePending(<span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="type">ThreadGroup</span> <span class="variable">tg</span> <span class="operator">=</span> Thread.currentThread().getThreadGroup();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">ThreadGroup</span> <span class="variable">tgn</span> <span class="operator">=</span> tg;</span><br><span class="line">             tgn != <span class="literal">null</span>;</span><br><span class="line">             tg = tgn, tgn = tg.getParent());</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReferenceHandler</span>(tg, <span class="string">&quot;Reference Handler&quot;</span>);</span><br><span class="line">        handler.setPriority(Thread.MAX_PRIORITY); <span class="comment">//高优先级</span></span><br><span class="line">        handler.setDaemon(<span class="literal">true</span>);</span><br><span class="line">        handler.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// provide access in SharedSecrets</span></span><br><span class="line">        SharedSecrets.setJavaLangRefAccess(<span class="keyword">new</span> <span class="title class_">JavaLangRefAccess</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">tryHandlePendingReference</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> tryHandlePending(<span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><strong>第三：</strong> pending是一个Reference链表，由GC来赋值。pending链表中的Reference都在等待被加入到ReferenceQueue中，如果Reference没有关联到ReferenceQueue，就不会被添加到pending列表。而ReferenceHandler是一个永远不会退出的线程，一直从链表中获取元素，当元素是Cleaner类型时就会执行Cleaner.clean()方法，否则就会加入到ReferenceQueue队列中。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* List of References waiting to be enqueued.  The collector adds</span></span><br><span class="line"><span class="comment"> * References to this list, while the Reference-handler thread removes</span></span><br><span class="line"><span class="comment"> * them.  This list is protected by the above lock object. The</span></span><br><span class="line"><span class="comment"> * list uses the discovered field to link its elements.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Reference&lt;Object&gt; pending = <span class="literal">null</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">tryHandlePending</span><span class="params">(<span class="type">boolean</span> waitForNotify)</span> &#123;</span><br><span class="line">    Reference&lt;Object&gt; r;</span><br><span class="line">    Cleaner c;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (lock) &#123;</span><br><span class="line">            <span class="keyword">if</span> (pending != <span class="literal">null</span>) &#123;</span><br><span class="line">                r = pending;</span><br><span class="line">                <span class="comment">// &#x27;instanceof&#x27; might throw OutOfMemoryError sometimes</span></span><br><span class="line">                <span class="comment">// so do this before un-linking &#x27;r&#x27; from the &#x27;pending&#x27; chain...</span></span><br><span class="line">                c = r <span class="keyword">instanceof</span> Cleaner ? (Cleaner) r : <span class="literal">null</span>;</span><br><span class="line">                <span class="comment">// unlink &#x27;r&#x27; from &#x27;pending&#x27; chain</span></span><br><span class="line">                pending = r.discovered; <span class="comment">//pending链表指向下一个Reference</span></span><br><span class="line">                r.discovered = <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// The waiting on the lock may cause an OutOfMemoryError</span></span><br><span class="line">                <span class="comment">// because it may try to allocate exception objects.</span></span><br><span class="line">                <span class="keyword">if</span> (waitForNotify) &#123;</span><br><span class="line">                    lock.wait(); <span class="comment">//pending为空，线程阻塞等待。</span></span><br><span class="line">                    <span class="comment">//当GC每次执行收集流程之前都会获取lock，然后将被回收的Reference放到pending链表中，然后唤醒阻塞线程</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// retry if waited</span></span><br><span class="line">                <span class="keyword">return</span> waitForNotify;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (OutOfMemoryError x) &#123;</span><br><span class="line">        <span class="comment">// Give other threads CPU time so they hopefully drop some live references</span></span><br><span class="line">        <span class="comment">// and GC reclaims some space.</span></span><br><span class="line">        <span class="comment">// Also prevent CPU intensive spinning in case &#x27;r instanceof Cleaner&#x27; above</span></span><br><span class="line">        <span class="comment">// persistently throws OOME for some time...</span></span><br><span class="line">        Thread.<span class="keyword">yield</span>();</span><br><span class="line">        <span class="comment">// retry</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException x) &#123;</span><br><span class="line">        <span class="comment">// retry</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Fast path for cleaners</span></span><br><span class="line">    <span class="keyword">if</span> (c != <span class="literal">null</span>) &#123;</span><br><span class="line">        c.clean();  <span class="comment">//执行Cleaner的clean()方法</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ReferenceQueue&lt;? <span class="built_in">super</span> Object&gt; q = r.queue;</span><br><span class="line">    <span class="keyword">if</span> (q != ReferenceQueue.NULL) q.enqueue(r);  <span class="comment">//将其他Reference加入到ReferenceQueue中。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://developer.android.google.cn/guide/topics/graphics/hardware-accel?hl=zh-cn">硬件加速</a><br><a href="https://muyangmin.github.io/glide-docs-cn/doc/hardwarebitmaps.html">硬件位图</a><br><a href="https://www.dazhuanlan.com/zipaiwang/topics/992879">Android硬件位图填坑之获取硬件画布</a></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Bitmap</tag>
      </tags>
  </entry>
  <entry>
    <title>Fresco源码详解</title>
    <url>/posts/863074da.html</url>
    <content><![CDATA[<!-- 
`com.facebook.imagepipeline.image.EncodedImage#getInputStream`是什么？
`com.facebook.imagepipeline.platform.DefaultDecoder#decodeFromStream`会首先通过`mDecodeBuffers.acquire()`获取byteBuffer，如果获取不到就通过`ByteBuffer.allocate`来申请内存。 
-->

<p>通过Fresco加载图片，最简单的方式是通过<code>SimpleDraweeView</code>来展示图片，示例代码如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.facebook.drawee.view.SimpleDraweeView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/my_image_view&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;130dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;130dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">fresco:placeholderImage</span>=<span class="string">&quot;@drawable/my_drawable&quot;</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//示例代码在Fragment#onViewCreated中调用</span></span><br><span class="line"><span class="type">Uri</span> <span class="variable">uri</span> <span class="operator">=</span> Uri.parse(<span class="string">&quot;https://frescolib.org/static/sample-images/animal_a.png&quot;</span>);</span><br><span class="line"><span class="type">SimpleDraweeView</span> <span class="variable">draweeView</span> <span class="operator">=</span> (SimpleDraweeView) findViewById(R.id.my_image_view);</span><br><span class="line">draweeView.setImageURI(uri);</span><br></pre></td></tr></table></figure>

<p>先看一下<code>SimpleDraweeView</code>相关的类图结构：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="510px" preserveAspectRatio="none" style="width:903px;height:510px;background:#FFFFFF;" version="1.1" viewBox="0 0 903 510" width="903px" zoomAndPan="magnify"><defs/><g><!--class ImageView--><g id="elem_ImageView"><rect fill="#F1F1F1" height="48" id="ImageView" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="110" x="88.5" y="7"/><ellipse cx="103.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M105.8438,18.6719 C104.9063,18.2344 104.3125,18.0938 103.4375,18.0938 C100.8125,18.0938 98.8125,20.1719 98.8125,22.8906 L98.8125,24.0156 C98.8125,26.5938 100.9219,28.4844 103.8125,28.4844 C105.0313,28.4844 106.1875,28.1875 106.9375,27.6406 C107.5156,27.2344 107.8438,26.7813 107.8438,26.3906 C107.8438,25.9375 107.4531,25.5469 106.9844,25.5469 C106.7656,25.5469 106.5625,25.625 106.375,25.8125 C105.9219,26.2969 105.9219,26.2969 105.7344,26.3906 C105.3125,26.6563 104.625,26.7813 103.8594,26.7813 C101.8125,26.7813 100.5156,25.6875 100.5156,23.9844 L100.5156,22.8906 C100.5156,21.1094 101.7656,19.7969 103.5,19.7969 C104.0781,19.7969 104.6875,19.9531 105.1563,20.2031 C105.6406,20.4844 105.8125,20.7031 105.9063,21.1094 C105.9688,21.5156 106,21.6406 106.1406,21.7656 C106.2813,21.9063 106.5156,22.0156 106.7344,22.0156 C107,22.0156 107.2656,21.875 107.4375,21.6563 C107.5469,21.5 107.5781,21.3125 107.5781,20.8906 L107.5781,19.4688 C107.5781,19.0313 107.5625,18.9063 107.4688,18.75 C107.3125,18.4844 107.0313,18.3438 106.7344,18.3438 C106.4375,18.3438 106.2344,18.4375 106.0156,18.75 L105.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="117.5" y="27.8467">ImageView</text><line style="stroke:#181818;stroke-width:0.5;" x1="89.5" x2="197.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="89.5" x2="197.5" y1="47" y2="47"/></g><!--class DraweeView--><g id="elem_DraweeView"><rect codeLine="3" fill="#F1F1F1" height="48" id="DraweeView" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="273" x="7" y="123"/><ellipse cx="22" cy="139" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,134.6719 C23.4063,134.2344 22.8125,134.0938 21.9375,134.0938 C19.3125,134.0938 17.3125,136.1719 17.3125,138.8906 L17.3125,140.0156 C17.3125,142.5938 19.4219,144.4844 22.3125,144.4844 C23.5313,144.4844 24.6875,144.1875 25.4375,143.6406 C26.0156,143.2344 26.3438,142.7813 26.3438,142.3906 C26.3438,141.9375 25.9531,141.5469 25.4844,141.5469 C25.2656,141.5469 25.0625,141.625 24.875,141.8125 C24.4219,142.2969 24.4219,142.2969 24.2344,142.3906 C23.8125,142.6563 23.125,142.7813 22.3594,142.7813 C20.3125,142.7813 19.0156,141.6875 19.0156,139.9844 L19.0156,138.8906 C19.0156,137.1094 20.2656,135.7969 22,135.7969 C22.5781,135.7969 23.1875,135.9531 23.6563,136.2031 C24.1406,136.4844 24.3125,136.7031 24.4063,137.1094 C24.4688,137.5156 24.5,137.6406 24.6406,137.7656 C24.7813,137.9063 25.0156,138.0156 25.2344,138.0156 C25.5,138.0156 25.7656,137.875 25.9375,137.6563 C26.0469,137.5 26.0781,137.3125 26.0781,136.8906 L26.0781,135.4688 C26.0781,135.0313 26.0625,134.9063 25.9688,134.75 C25.8125,134.4844 25.5313,134.3438 25.2344,134.3438 C24.9375,134.3438 24.7344,134.4375 24.5156,134.75 L24.3438,134.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="36" y="143.8467">DraweeView</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="151" x="132" y="120"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="149" x="133" y="132.1387">GenericDraweeHierarchy</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="279" y1="155" y2="155"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="279" y1="163" y2="163"/></g><!--class GenericDraweeView--><g id="elem_GenericDraweeView"><rect fill="#F1F1F1" height="48" id="GenericDraweeView" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="176" x="79.5" y="239"/><ellipse cx="94.5" cy="255" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M96.8438,250.6719 C95.9063,250.2344 95.3125,250.0938 94.4375,250.0938 C91.8125,250.0938 89.8125,252.1719 89.8125,254.8906 L89.8125,256.0156 C89.8125,258.5938 91.9219,260.4844 94.8125,260.4844 C96.0313,260.4844 97.1875,260.1875 97.9375,259.6406 C98.5156,259.2344 98.8438,258.7813 98.8438,258.3906 C98.8438,257.9375 98.4531,257.5469 97.9844,257.5469 C97.7656,257.5469 97.5625,257.625 97.375,257.8125 C96.9219,258.2969 96.9219,258.2969 96.7344,258.3906 C96.3125,258.6563 95.625,258.7813 94.8594,258.7813 C92.8125,258.7813 91.5156,257.6875 91.5156,255.9844 L91.5156,254.8906 C91.5156,253.1094 92.7656,251.7969 94.5,251.7969 C95.0781,251.7969 95.6875,251.9531 96.1563,252.2031 C96.6406,252.4844 96.8125,252.7031 96.9063,253.1094 C96.9688,253.5156 97,253.6406 97.1406,253.7656 C97.2813,253.9063 97.5156,254.0156 97.7344,254.0156 C98,254.0156 98.2656,253.875 98.4375,253.6563 C98.5469,253.5 98.5781,253.3125 98.5781,252.8906 L98.5781,251.4688 C98.5781,251.0313 98.5625,250.9063 98.4688,250.75 C98.3125,250.4844 98.0313,250.3438 97.7344,250.3438 C97.4375,250.3438 97.2344,250.4375 97.0156,250.75 L96.8438,250.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="108.5" y="259.8467">GenericDraweeView</text><line style="stroke:#181818;stroke-width:0.5;" x1="80.5" x2="254.5" y1="271" y2="271"/><line style="stroke:#181818;stroke-width:0.5;" x1="80.5" x2="254.5" y1="279" y2="279"/></g><!--class SimpleDraweeView--><g id="elem_SimpleDraweeView"><rect codeLine="5" fill="#ADD8E6" height="48" id="SimpleDraweeView" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="170" x="96.5" y="347"/><ellipse cx="111.5" cy="363" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M113.8438,358.6719 C112.9063,358.2344 112.3125,358.0938 111.4375,358.0938 C108.8125,358.0938 106.8125,360.1719 106.8125,362.8906 L106.8125,364.0156 C106.8125,366.5938 108.9219,368.4844 111.8125,368.4844 C113.0313,368.4844 114.1875,368.1875 114.9375,367.6406 C115.5156,367.2344 115.8438,366.7813 115.8438,366.3906 C115.8438,365.9375 115.4531,365.5469 114.9844,365.5469 C114.7656,365.5469 114.5625,365.625 114.375,365.8125 C113.9219,366.2969 113.9219,366.2969 113.7344,366.3906 C113.3125,366.6563 112.625,366.7813 111.8594,366.7813 C109.8125,366.7813 108.5156,365.6875 108.5156,363.9844 L108.5156,362.8906 C108.5156,361.1094 109.7656,359.7969 111.5,359.7969 C112.0781,359.7969 112.6875,359.9531 113.1563,360.2031 C113.6406,360.4844 113.8125,360.7031 113.9063,361.1094 C113.9688,361.5156 114,361.6406 114.1406,361.7656 C114.2813,361.9063 114.5156,362.0156 114.7344,362.0156 C115,362.0156 115.2656,361.875 115.4375,361.6563 C115.5469,361.5 115.5781,361.3125 115.5781,360.8906 L115.5781,359.4688 C115.5781,359.0313 115.5625,358.9063 115.4688,358.75 C115.3125,358.4844 115.0313,358.3438 114.7344,358.3438 C114.4375,358.3438 114.2344,358.4375 114.0156,358.75 L113.8438,358.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="125.5" y="367.8467">SimpleDraweeView</text><line style="stroke:#181818;stroke-width:0.5;" x1="97.5" x2="265.5" y1="379" y2="379"/><line style="stroke:#181818;stroke-width:0.5;" x1="97.5" x2="265.5" y1="387" y2="387"/></g><!--class DraweeHierarchy--><g id="elem_DraweeHierarchy"><rect codeLine="10" fill="#F1F1F1" height="64.2969" id="DraweeHierarchy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="260" x="636.5" y="115"/><ellipse cx="699.75" cy="131" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M700.7031,127.7813 L702.4219,127.7813 C702.8125,127.7813 703,127.75 703.125,127.6719 C703.3906,127.5156 703.5313,127.2344 703.5313,126.9375 C703.5313,126.6719 703.4219,126.4063 703.1875,126.2344 C703.0156,126.125 702.875,126.0938 702.4219,126.0938 L697.2813,126.0938 C696.8438,126.0938 696.7188,126.1094 696.5625,126.2031 C696.3125,126.3594 696.1563,126.6563 696.1563,126.9375 C696.1563,127.2188 696.2969,127.4688 696.5156,127.6406 C696.6719,127.75 696.8594,127.7813 697.2813,127.7813 L699,127.7813 L699,134.2969 L697.2813,134.2969 C696.8438,134.2969 696.7188,134.3125 696.5625,134.4219 C696.3125,134.5781 696.1563,134.8594 696.1563,135.1563 C696.1563,135.4063 696.2969,135.6719 696.5156,135.8281 C696.6719,135.9531 696.875,136 697.2813,136 L702.4219,136 C703.1719,136 703.5313,135.7188 703.5313,135.1563 C703.5313,134.875 703.4219,134.625 703.1875,134.4531 C703.0156,134.3281 702.875,134.2969 702.4219,134.2969 L700.7031,134.2969 L700.7031,127.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="125" x="720.25" y="135.8467">DraweeHierarchy</text><line style="stroke:#181818;stroke-width:0.5;" x1="637.5" x2="895.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="637.5" x2="895.5" y1="155" y2="155"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="642.5" y="171.9951">getTopLevelDrawable() : Drawable</text></g><!--class SettableDraweeHierarchy--><g id="elem_SettableDraweeHierarchy"><rect codeLine="13" fill="#F1F1F1" height="48" id="SettableDraweeHierarchy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="216" x="658.5" y="239"/><ellipse cx="673.5" cy="255" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M674.4531,251.7813 L676.1719,251.7813 C676.5625,251.7813 676.75,251.75 676.875,251.6719 C677.1406,251.5156 677.2813,251.2344 677.2813,250.9375 C677.2813,250.6719 677.1719,250.4063 676.9375,250.2344 C676.7656,250.125 676.625,250.0938 676.1719,250.0938 L671.0313,250.0938 C670.5938,250.0938 670.4688,250.1094 670.3125,250.2031 C670.0625,250.3594 669.9063,250.6563 669.9063,250.9375 C669.9063,251.2188 670.0469,251.4688 670.2656,251.6406 C670.4219,251.75 670.6094,251.7813 671.0313,251.7813 L672.75,251.7813 L672.75,258.2969 L671.0313,258.2969 C670.5938,258.2969 670.4688,258.3125 670.3125,258.4219 C670.0625,258.5781 669.9063,258.8594 669.9063,259.1563 C669.9063,259.4063 670.0469,259.6719 670.2656,259.8281 C670.4219,259.9531 670.625,260 671.0313,260 L676.1719,260 C676.9219,260 677.2813,259.7188 677.2813,259.1563 C677.2813,258.875 677.1719,258.625 676.9375,258.4531 C676.7656,258.3281 676.625,258.2969 676.1719,258.2969 L674.4531,258.2969 L674.4531,251.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="184" x="687.5" y="259.8467">SettableDraweeHierarchy</text><line style="stroke:#181818;stroke-width:0.5;" x1="659.5" x2="873.5" y1="271" y2="271"/><line style="stroke:#181818;stroke-width:0.5;" x1="659.5" x2="873.5" y1="279" y2="279"/></g><!--class GenericDraweeHierarchy--><g id="elem_GenericDraweeHierarchy"><rect codeLine="14" fill="#F1F1F1" height="48" id="GenericDraweeHierarchy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="210" x="661.5" y="347"/><ellipse cx="676.5" cy="363" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M678.8438,358.6719 C677.9063,358.2344 677.3125,358.0938 676.4375,358.0938 C673.8125,358.0938 671.8125,360.1719 671.8125,362.8906 L671.8125,364.0156 C671.8125,366.5938 673.9219,368.4844 676.8125,368.4844 C678.0313,368.4844 679.1875,368.1875 679.9375,367.6406 C680.5156,367.2344 680.8438,366.7813 680.8438,366.3906 C680.8438,365.9375 680.4531,365.5469 679.9844,365.5469 C679.7656,365.5469 679.5625,365.625 679.375,365.8125 C678.9219,366.2969 678.9219,366.2969 678.7344,366.3906 C678.3125,366.6563 677.625,366.7813 676.8594,366.7813 C674.8125,366.7813 673.5156,365.6875 673.5156,363.9844 L673.5156,362.8906 C673.5156,361.1094 674.7656,359.7969 676.5,359.7969 C677.0781,359.7969 677.6875,359.9531 678.1563,360.2031 C678.6406,360.4844 678.8125,360.7031 678.9063,361.1094 C678.9688,361.5156 679,361.6406 679.1406,361.7656 C679.2813,361.9063 679.5156,362.0156 679.7344,362.0156 C680,362.0156 680.2656,361.875 680.4375,361.6563 C680.5469,361.5 680.5781,361.3125 680.5781,360.8906 L680.5781,359.4688 C680.5781,359.0313 680.5625,358.9063 680.4688,358.75 C680.3125,358.4844 680.0313,358.3438 679.7344,358.3438 C679.4375,358.3438 679.2344,358.4375 679.0156,358.75 L678.8438,358.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="690.5" y="367.8467">GenericDraweeHierarchy</text><line style="stroke:#181818;stroke-width:0.5;" x1="662.5" x2="870.5" y1="379" y2="379"/><line style="stroke:#181818;stroke-width:0.5;" x1="662.5" x2="870.5" y1="387" y2="387"/></g><!--class DraweeController--><g id="elem_DraweeController"><rect codeLine="18" fill="#F1F1F1" height="48" id="DraweeController" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="158" x="353.5" y="239"/><ellipse cx="368.5" cy="255" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M369.4531,251.7813 L371.1719,251.7813 C371.5625,251.7813 371.75,251.75 371.875,251.6719 C372.1406,251.5156 372.2813,251.2344 372.2813,250.9375 C372.2813,250.6719 372.1719,250.4063 371.9375,250.2344 C371.7656,250.125 371.625,250.0938 371.1719,250.0938 L366.0313,250.0938 C365.5938,250.0938 365.4688,250.1094 365.3125,250.2031 C365.0625,250.3594 364.9063,250.6563 364.9063,250.9375 C364.9063,251.2188 365.0469,251.4688 365.2656,251.6406 C365.4219,251.75 365.6094,251.7813 366.0313,251.7813 L367.75,251.7813 L367.75,258.2969 L366.0313,258.2969 C365.5938,258.2969 365.4688,258.3125 365.3125,258.4219 C365.0625,258.5781 364.9063,258.8594 364.9063,259.1563 C364.9063,259.4063 365.0469,259.6719 365.2656,259.8281 C365.4219,259.9531 365.625,260 366.0313,260 L371.1719,260 C371.9219,260 372.2813,259.7188 372.2813,259.1563 C372.2813,258.875 372.1719,258.625 371.9375,258.4531 C371.7656,258.3281 371.625,258.2969 371.1719,258.2969 L369.4531,258.2969 L369.4531,251.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="126" x="382.5" y="259.8467">DraweeController</text><line style="stroke:#181818;stroke-width:0.5;" x1="354.5" x2="510.5" y1="271" y2="271"/><line style="stroke:#181818;stroke-width:0.5;" x1="354.5" x2="510.5" y1="279" y2="279"/></g><!--class DraweeHolder--><g id="elem_DraweeHolder"><rect codeLine="21" fill="#F1F1F1" height="48" id="DraweeHolder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="286" x="315.5" y="123"/><ellipse cx="330.5" cy="139" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M332.8438,134.6719 C331.9063,134.2344 331.3125,134.0938 330.4375,134.0938 C327.8125,134.0938 325.8125,136.1719 325.8125,138.8906 L325.8125,140.0156 C325.8125,142.5938 327.9219,144.4844 330.8125,144.4844 C332.0313,144.4844 333.1875,144.1875 333.9375,143.6406 C334.5156,143.2344 334.8438,142.7813 334.8438,142.3906 C334.8438,141.9375 334.4531,141.5469 333.9844,141.5469 C333.7656,141.5469 333.5625,141.625 333.375,141.8125 C332.9219,142.2969 332.9219,142.2969 332.7344,142.3906 C332.3125,142.6563 331.625,142.7813 330.8594,142.7813 C328.8125,142.7813 327.5156,141.6875 327.5156,139.9844 L327.5156,138.8906 C327.5156,137.1094 328.7656,135.7969 330.5,135.7969 C331.0781,135.7969 331.6875,135.9531 332.1563,136.2031 C332.6406,136.4844 332.8125,136.7031 332.9063,137.1094 C332.9688,137.5156 333,137.6406 333.1406,137.7656 C333.2813,137.9063 333.5156,138.0156 333.7344,138.0156 C334,138.0156 334.2656,137.875 334.4375,137.6563 C334.5469,137.5 334.5781,137.3125 334.5781,136.8906 L334.5781,135.4688 C334.5781,135.0313 334.5625,134.9063 334.4688,134.75 C334.3125,134.4844 334.0313,134.3438 333.7344,134.3438 C333.4375,134.3438 333.2344,134.4375 333.0156,134.75 L332.8438,134.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="344.5" y="143.8467">DraweeHolder</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="151" x="453.5" y="120"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="149" x="454.5" y="132.1387">GenericDraweeHierarchy</text><line style="stroke:#181818;stroke-width:0.5;" x1="316.5" x2="600.5" y1="155" y2="155"/><line style="stroke:#181818;stroke-width:0.5;" x1="316.5" x2="600.5" y1="163" y2="163"/></g><!--class VisibilityCallback--><g id="elem_VisibilityCallback"><rect codeLine="25" fill="#F1F1F1" height="48" id="VisibilityCallback" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="152" x="382.5" y="7"/><ellipse cx="397.5" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M398.4531,19.7813 L400.1719,19.7813 C400.5625,19.7813 400.75,19.75 400.875,19.6719 C401.1406,19.5156 401.2813,19.2344 401.2813,18.9375 C401.2813,18.6719 401.1719,18.4063 400.9375,18.2344 C400.7656,18.125 400.625,18.0938 400.1719,18.0938 L395.0313,18.0938 C394.5938,18.0938 394.4688,18.1094 394.3125,18.2031 C394.0625,18.3594 393.9063,18.6563 393.9063,18.9375 C393.9063,19.2188 394.0469,19.4688 394.2656,19.6406 C394.4219,19.75 394.6094,19.7813 395.0313,19.7813 L396.75,19.7813 L396.75,26.2969 L395.0313,26.2969 C394.5938,26.2969 394.4688,26.3125 394.3125,26.4219 C394.0625,26.5781 393.9063,26.8594 393.9063,27.1563 C393.9063,27.4063 394.0469,27.6719 394.2656,27.8281 C394.4219,27.9531 394.625,28 395.0313,28 L400.1719,28 C400.9219,28 401.2813,27.7188 401.2813,27.1563 C401.2813,26.875 401.1719,26.625 400.9375,26.4531 C400.7656,26.3281 400.625,26.2969 400.1719,26.2969 L398.4531,26.2969 L398.4531,19.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="120" x="411.5" y="27.8467">VisibilityCallback</text><line style="stroke:#181818;stroke-width:0.5;" x1="383.5" x2="533.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="383.5" x2="533.5" y1="47" y2="47"/></g><!--class RootDrawable--><g id="elem_RootDrawable"><rect fill="#F1F1F1" height="48" id="RootDrawable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="134" x="699.5" y="455"/><ellipse cx="714.5" cy="471" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M716.8438,466.6719 C715.9063,466.2344 715.3125,466.0938 714.4375,466.0938 C711.8125,466.0938 709.8125,468.1719 709.8125,470.8906 L709.8125,472.0156 C709.8125,474.5938 711.9219,476.4844 714.8125,476.4844 C716.0313,476.4844 717.1875,476.1875 717.9375,475.6406 C718.5156,475.2344 718.8438,474.7813 718.8438,474.3906 C718.8438,473.9375 718.4531,473.5469 717.9844,473.5469 C717.7656,473.5469 717.5625,473.625 717.375,473.8125 C716.9219,474.2969 716.9219,474.2969 716.7344,474.3906 C716.3125,474.6563 715.625,474.7813 714.8594,474.7813 C712.8125,474.7813 711.5156,473.6875 711.5156,471.9844 L711.5156,470.8906 C711.5156,469.1094 712.7656,467.7969 714.5,467.7969 C715.0781,467.7969 715.6875,467.9531 716.1563,468.2031 C716.6406,468.4844 716.8125,468.7031 716.9063,469.1094 C716.9688,469.5156 717,469.6406 717.1406,469.7656 C717.2813,469.9063 717.5156,470.0156 717.7344,470.0156 C718,470.0156 718.2656,469.875 718.4375,469.6563 C718.5469,469.5 718.5781,469.3125 718.5781,468.8906 L718.5781,467.4688 C718.5781,467.0313 718.5625,466.9063 718.4688,466.75 C718.3125,466.4844 718.0313,466.3438 717.7344,466.3438 C717.4375,466.3438 717.2344,466.4375 717.0156,466.75 L716.8438,466.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="728.5" y="475.8467">RootDrawable</text><line style="stroke:#181818;stroke-width:0.5;" x1="700.5" x2="832.5" y1="487" y2="487"/><line style="stroke:#181818;stroke-width:0.5;" x1="700.5" x2="832.5" y1="495" y2="495"/></g><!--class AbstractDraweeController--><g id="elem_AbstractDraweeController"><rect codeLine="32" fill="#F1F1F1" height="48" id="AbstractDraweeController" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="217" x="324" y="347"/><ellipse cx="339" cy="363" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M341.0781,364.8125 L341.4688,365.7969 L341.0781,365.7969 C340.625,365.7969 340.5156,365.8125 340.3594,365.9219 C340.1094,366.0781 339.9531,366.3594 339.9531,366.6563 C339.9531,366.9219 340.0938,367.1719 340.3125,367.3281 C340.4531,367.4531 340.6563,367.5 341.0781,367.5 L343.4375,367.5 C343.7969,367.5 344.0156,367.4688 344.1563,367.375 C344.4063,367.2344 344.5625,366.9375 344.5625,366.6563 C344.5625,366.375 344.4219,366.125 344.2031,365.9688 C344.0313,365.8281 343.875,365.7969 343.4063,365.7969 L340.0156,357.5938 L336.3438,357.5938 C335.8906,357.5938 335.7656,357.6094 335.6094,357.7031 C335.3594,357.875 335.2031,358.1563 335.2031,358.4375 C335.2031,358.7188 335.3438,358.9688 335.5625,359.1406 C335.7344,359.25 335.9063,359.2813 336.3438,359.2813 L337.4219,359.2813 L334.7813,365.7969 C334.3594,365.7969 334.2031,365.8125 334.0469,365.9219 C333.7969,366.0781 333.6406,366.3594 333.6406,366.6563 C333.6406,367.2188 334.0156,367.5 334.7656,367.5 L337.0313,367.5 C337.3906,367.5 337.6094,367.4688 337.7344,367.375 C338,367.2344 338.1406,366.9375 338.1406,366.6563 C338.1406,366.375 338.0156,366.125 337.7969,365.9531 C337.625,365.8281 337.4844,365.7969 337.0313,365.7969 L336.6406,365.7969 L337.0313,364.8125 L341.0781,364.8125 Z M340.375,363.1094 L337.7031,363.1094 L339.0469,359.8438 L340.375,363.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="185" x="353" y="367.8467">AbstractDraweeController</text><line style="stroke:#181818;stroke-width:0.5;" x1="325" x2="540" y1="379" y2="379"/><line style="stroke:#181818;stroke-width:0.5;" x1="325" x2="540" y1="387" y2="387"/></g><!--class PipelineDraweeController--><g id="elem_PipelineDraweeController"><rect fill="#F1F1F1" height="48" id="PipelineDraweeController" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="217" x="324" y="455"/><ellipse cx="339" cy="471" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M341.3438,466.6719 C340.4063,466.2344 339.8125,466.0938 338.9375,466.0938 C336.3125,466.0938 334.3125,468.1719 334.3125,470.8906 L334.3125,472.0156 C334.3125,474.5938 336.4219,476.4844 339.3125,476.4844 C340.5313,476.4844 341.6875,476.1875 342.4375,475.6406 C343.0156,475.2344 343.3438,474.7813 343.3438,474.3906 C343.3438,473.9375 342.9531,473.5469 342.4844,473.5469 C342.2656,473.5469 342.0625,473.625 341.875,473.8125 C341.4219,474.2969 341.4219,474.2969 341.2344,474.3906 C340.8125,474.6563 340.125,474.7813 339.3594,474.7813 C337.3125,474.7813 336.0156,473.6875 336.0156,471.9844 L336.0156,470.8906 C336.0156,469.1094 337.2656,467.7969 339,467.7969 C339.5781,467.7969 340.1875,467.9531 340.6563,468.2031 C341.1406,468.4844 341.3125,468.7031 341.4063,469.1094 C341.4688,469.5156 341.5,469.6406 341.6406,469.7656 C341.7813,469.9063 342.0156,470.0156 342.2344,470.0156 C342.5,470.0156 342.7656,469.875 342.9375,469.6563 C343.0469,469.5 343.0781,469.3125 343.0781,468.8906 L343.0781,467.4688 C343.0781,467.0313 343.0625,466.9063 342.9688,466.75 C342.8125,466.4844 342.5313,466.3438 342.2344,466.3438 C341.9375,466.3438 341.7344,466.4375 341.5156,466.75 L341.3438,466.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="353" y="475.8467">PipelineDraweeController</text><line style="stroke:#181818;stroke-width:0.5;" x1="325" x2="540" y1="487" y2="487"/><line style="stroke:#181818;stroke-width:0.5;" x1="325" x2="540" y1="495" y2="495"/></g><!--reverse link ImageView to DraweeView--><g id="link_ImageView_DraweeView"><path codeLine="2" d="M143.5,73.07 C143.5,92.848 143.5,103.196 143.5,122.965 " fill="none" id="ImageView-backto-DraweeView" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="143.5,55.07,137.5,73.07,149.5,73.07,143.5,55.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DraweeView to GenericDraweeView--><g id="link_DraweeView_GenericDraweeView"><path codeLine="4" d="M152.0654,188.6839 C156.2294,208.4619 158.489,219.196 162.65,238.965 " fill="none" id="DraweeView-backto-GenericDraweeView" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="148.357,171.07,146.1941,189.92,157.9367,187.4477,148.357,171.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link GenericDraweeView to SimpleDraweeView--><g id="link_GenericDraweeView_SimpleDraweeView"><path codeLine="6" d="M172.8947,304.8451 C175.2267,322.5031 176.077,328.941 178.42,346.678 " fill="none" id="GenericDraweeView-backto-SimpleDraweeView" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="170.538,287,166.9464,305.6306,178.8431,304.0595,170.538,287" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link SettableDraweeHierarchy to GenericDraweeHierarchy--><g id="link_SettableDraweeHierarchy_GenericDraweeHierarchy"><path codeLine="15" d="M766.5,305 C766.5,322.658 766.5,328.941 766.5,346.678 " fill="none" id="SettableDraweeHierarchy-backto-GenericDraweeHierarchy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="766.5,287,760.5,305,772.5,305,766.5,287" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DraweeHierarchy to SettableDraweeHierarchy--><g id="link_DraweeHierarchy_SettableDraweeHierarchy"><path codeLine="19" d="M766.5,197.151 C766.5,216.005 766.5,221.647 766.5,238.845 " fill="none" id="DraweeHierarchy-backto-SettableDraweeHierarchy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="766.5,179.151,760.5,197.151,772.5,197.151,766.5,179.151" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DraweeHolder to DraweeController--><g id="link_DraweeHolder_DraweeController"><path codeLine="22" d="M450.5705,182.7695 C446.0595,202.5475 442.262,219.196 437.754,238.965 " fill="none" id="DraweeHolder-backto-DraweeController" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="453.239,171.07,448.0049,176.0303,450.5705,182.7695,455.8046,177.8093,453.239,171.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DraweeHolder to DraweeHierarchy--><g id="link_DraweeHolder_DraweeHierarchy"><path codeLine="23" d="M613.672,147 C625.261,147 624.851,147 636.44,147 " fill="none" id="DraweeHolder-backto-DraweeHierarchy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="601.672,147,607.672,151,613.672,147,607.672,143,601.672,147" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link VisibilityCallback to DraweeHolder--><g id="link_VisibilityCallback_DraweeHolder"><path codeLine="26" d="M458.5,73.07 C458.5,92.848 458.5,103.196 458.5,122.965 " fill="none" id="VisibilityCallback-backto-DraweeHolder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="458.5,55.07,452.5,73.07,464.5,73.07,458.5,55.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DraweeView to DraweeHolder--><g id="link_DraweeView_DraweeHolder"><path codeLine="27" d="M292.082,147 C303.814,147 303.546,147 315.278,147 " fill="none" id="DraweeView-backto-DraweeHolder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="280.082,147,286.082,151,292.082,147,286.082,143,280.082,147" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link GenericDraweeHierarchy to RootDrawable--><g id="link_GenericDraweeHierarchy_RootDrawable"><path codeLine="29" d="M766.5,407 C766.5,424.6584 766.5,436.9408 766.5,454.6784 " fill="none" id="GenericDraweeHierarchy-backto-RootDrawable" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="766.5,395,762.5,401,766.5,407,770.5,401,766.5,395" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DraweeController to SimpleDraweeView--><g id="link_DraweeController_SimpleDraweeView"><path codeLine="31" d="M372.5097,289.3343 C330.5527,307.0533 278.328,329.108 236.29,346.862 " fill="none" id="DraweeController-backto-SimpleDraweeView" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="378.037,287,368.1899,286.8165,373.4309,288.9452,371.3022,294.1863,378.037,287" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DraweeController to AbstractDraweeController--><g id="link_DraweeController_AbstractDraweeController"><path codeLine="33" d="M432.5,305 C432.5,322.658 432.5,328.941 432.5,346.678 " fill="none" id="DraweeController-backto-AbstractDraweeController" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="432.5,287,426.5,305,438.5,305,432.5,287" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link AbstractDraweeController to PipelineDraweeController--><g id="link_AbstractDraweeController_PipelineDraweeController"><path codeLine="34" d="M432.5,413 C432.5,430.6584 432.5,436.9408 432.5,454.6784 " fill="none" id="AbstractDraweeController-backto-PipelineDraweeController" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="432.5,395,426.5,413,438.5,413,432.5,395" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[TL91JiCm4BplArRY0fNy0LHLGaMYI1mGHRqxxf9OREF8SOaguEyuCMtSEBx5kpFZcOoTASbLPF4R49yFigITfWwNFqBWevKT3MU_KopRDXejdwWcgrMOR3HPQLLrMdde20ewLyWhkQq-D4mH_ePrMRc2Z-Gn2I_8JKdm2-366BfsP3-a8fnO6o8YUk2xQLxeYxW7o8BfzWxlyNpmSgF4bfphXnCf2FRdVm5aIBtxlUbgaUFv75FpQrCxQvZ9meoQoFg3kAwDuJtPR64n21UNtjEhpmXCRXjjxtIh2ytQdTQIkP3g4z9H_Bo2AaGbBoOhc3S-M7qpnbsAW-GvYMCZLcaUMRJEIkNmuVyZatWS1CTPU6uHQA-w8TOrJRT_]--></g></svg>

<h2 id="图片加载过程"><a href="#图片加载过程" class="headerlink" title="图片加载过程"></a>图片加载过程</h2><p>这个时序图是以文章开头的<code>SimpleDraweeView</code>的示例代码为例进行绘制。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1171px" preserveAspectRatio="none" style="width:1101px;height:1171px;background:#FFFFFF;" version="1.1" viewBox="0 0 1101 1171" width="1101px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="201" y="97.6953"/><rect fill="#FFFFFF" height="101.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="201" y="183.2578"/><rect fill="#FFFFFF" height="64.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="206" y="220.3906"/><rect fill="#FFFFFF" height="473.8594" style="stroke:#181818;stroke-width:1.0;" width="10" x="386.5" y="515.5859"/><rect fill="#FFFFFF" height="406.7266" style="stroke:#181818;stroke-width:1.0;" width="10" x="391.5" y="582.7188"/><rect fill="#FFFFFF" height="278.1953" style="stroke:#181818;stroke-width:1.0;" width="10" x="396.5" y="682.1172"/><rect fill="#FFFFFF" height="108.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="386.5" y="1018.5781"/><rect fill="#FFFFFF" height="80.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="553.5" y="254.5234"/><rect fill="#FFFFFF" height="101.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="553.5" y="444.3203"/><rect fill="#FFFFFF" height="64.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="558.5" y="481.4531"/><rect fill="#FFFFFF" height="244.0625" style="stroke:#181818;stroke-width:1.0;" width="10" x="851.5" y="716.25"/><rect fill="#FFFFFF" height="164.7969" style="stroke:#181818;stroke-width:1.0;" width="10" x="856.5" y="795.5156"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="206" x2="206" y1="36.2969" y2="1135.9766"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="391" x2="391" y1="136.3438" y2="1135.9766"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="558" x2="558" y1="36.2969" y2="1135.9766"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="730.5" x2="730.5" y1="36.2969" y2="1135.9766"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="856.5" x2="856.5" y1="36.2969" y2="1135.9766"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="1022" x2="1022" y1="840.6484" y2="1135.9766"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="152" x="130" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="137" y="24.9951">SimpleDraweeView</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="152" x="130" y="1134.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="137" y="1154.9717">SimpleDraweeView</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="199" x="292" y="1134.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="299" y="1154.9717">PipelineDraweeController</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="115" x="501" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="508" y="24.9951">DraweeHolder</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="115" x="501" y="1134.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="508" y="1154.9717">DraweeHolder</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="672.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="679.5" y="24.9951">RootDrawable</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="672.5" y="1134.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="679.5" y="1154.9717">RootDrawable</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="798.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="805.5" y="24.9951">ImagePipeline</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="798.5" y="1134.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="805.5" y="1154.9717">ImagePipeline</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="97" x="974" y="1134.9766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="981" y="1154.9717">DataSource</text><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="201" y="97.6953"/><rect fill="#FFFFFF" height="101.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="201" y="183.2578"/><rect fill="#FFFFFF" height="64.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="206" y="220.3906"/><rect fill="#FFFFFF" height="473.8594" style="stroke:#181818;stroke-width:1.0;" width="10" x="386.5" y="515.5859"/><rect fill="#FFFFFF" height="406.7266" style="stroke:#181818;stroke-width:1.0;" width="10" x="391.5" y="582.7188"/><rect fill="#FFFFFF" height="278.1953" style="stroke:#181818;stroke-width:1.0;" width="10" x="396.5" y="682.1172"/><rect fill="#FFFFFF" height="108.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="386.5" y="1018.5781"/><rect fill="#FFFFFF" height="80.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="553.5" y="254.5234"/><rect fill="#FFFFFF" height="101.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="553.5" y="444.3203"/><rect fill="#FFFFFF" height="64.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="558.5" y="481.4531"/><rect fill="#FFFFFF" height="244.0625" style="stroke:#181818;stroke-width:1.0;" width="10" x="851.5" y="716.25"/><rect fill="#FFFFFF" height="164.7969" style="stroke:#181818;stroke-width:1.0;" width="10" x="856.5" y="795.5156"/><ellipse cx="7.5" cy="96.9453" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="189,93.6953,199,97.6953,189,101.6953,193,97.6953" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="195" y1="97.6953" y2="97.6953"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="96" x="15" y="62.3638">setImageURI();</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="174" x="15" y="77.4966">Framework.onViewCreated</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="39" x="15" y="92.6294">&#20013;&#35843;&#29992;</text><polygon fill="#181818" points="280,122.8281,290,126.8281,280,130.8281,284,126.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="206" x2="286" y1="126.8281" y2="126.8281"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="26" x="213" y="121.7622">&#26500;&#36896;</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="199" x="292" y="105.6953"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="299" y="125.6904">PipelineDraweeController</text><ellipse cx="7.5" cy="182.5078" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="189,179.2578,199,183.2578,189,187.2578,193,183.2578" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="195" y1="183.2578" y2="183.2578"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="141" x="15" y="163.0591">onAttachedToWindow</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="15" y="178.1919">&#65288;&#29238;&#31867;&#26041;&#27861;&#65289;</text><line style="stroke:#181818;stroke-width:1.0;" x1="211" x2="258" y1="207.3906" y2="207.3906"/><line style="stroke:#181818;stroke-width:1.0;" x1="258" x2="258" y1="207.3906" y2="220.3906"/><line style="stroke:#181818;stroke-width:1.0;" x1="217" x2="258" y1="220.3906" y2="220.3906"/><polygon fill="#181818" points="227,216.3906,217,220.3906,227,224.3906,223,220.3906" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="58" x="223" y="202.3247">onAttach</text><polygon fill="#181818" points="541.5,250.5234,551.5,254.5234,541.5,258.5234,545.5,254.5234" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="216" x2="547.5" y1="254.5234" y2="254.5234"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="58" x="223" y="249.4575">onAttach</text><line style="stroke:#181818;stroke-width:1.0;" x1="563.5" x2="605.5" y1="333.7891" y2="333.7891"/><line style="stroke:#181818;stroke-width:1.0;" x1="605.5" x2="605.5" y1="333.7891" y2="346.7891"/><line style="stroke:#181818;stroke-width:1.0;" x1="558.5" x2="605.5" y1="346.7891" y2="346.7891"/><polygon fill="#181818" points="568.5,342.7891,558.5,346.7891,568.5,350.7891,564.5,346.7891" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="148" x="570.5" y="313.5903">&#27492;&#26102;&#36824;&#26410;&#35774;&#32622;visible,&#19981;&#20250;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="129" x="570.5" y="328.7231">&#35843;&#29992;attachController</text><ellipse cx="7.5" cy="385.3047" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="194,382.0547,204,386.0547,194,390.0547,198,386.0547" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="200" y1="386.0547" y2="386.0547"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="143" x="15" y="365.856">onVisibilityAggregated</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="146" x="15" y="380.9888">(&#29238;&#31867;ImageView&#30340;&#26041;&#27861;)</text><polygon fill="#181818" points="718.5,411.1875,728.5,415.1875,718.5,419.1875,722.5,415.1875" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="206" x2="724.5" y1="415.1875" y2="415.1875"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="61" x="213" y="410.1216">setVisible</text><polygon fill="#181818" points="574.5,440.3203,564.5,444.3203,574.5,448.3203,570.5,444.3203" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="568.5" x2="729.5" y1="444.3203" y2="444.3203"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="117" x="580.5" y="439.2544">onVisibilityChange</text><line style="stroke:#181818;stroke-width:1.0;" x1="563.5" x2="610.5" y1="468.4531" y2="468.4531"/><line style="stroke:#181818;stroke-width:1.0;" x1="610.5" x2="610.5" y1="468.4531" y2="481.4531"/><line style="stroke:#181818;stroke-width:1.0;" x1="569.5" x2="610.5" y1="481.4531" y2="481.4531"/><polygon fill="#181818" points="579.5,477.4531,569.5,481.4531,579.5,485.4531,575.5,481.4531" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="103" x="575.5" y="463.3872">attachController</text><polygon fill="#181818" points="407.5,511.5859,397.5,515.5859,407.5,519.5859,403.5,515.5859" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="401.5" x2="557.5" y1="515.5859" y2="515.5859"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="58" x="413.5" y="510.52">onAttach</text><line style="stroke:#181818;stroke-width:1.0;" x1="396.5" x2="443.5" y1="569.7188" y2="569.7188"/><line style="stroke:#181818;stroke-width:1.0;" x1="443.5" x2="443.5" y1="569.7188" y2="582.7188"/><line style="stroke:#181818;stroke-width:1.0;" x1="402.5" x2="443.5" y1="582.7188" y2="582.7188"/><polygon fill="#181818" points="412.5,578.7188,402.5,582.7188,412.5,586.7188,408.5,582.7188" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="97" x="408.5" y="564.6528">submitRequest</text><line style="stroke:#181818;stroke-width:1.0;" x1="401.5" x2="443.5" y1="631.9844" y2="631.9844"/><line style="stroke:#181818;stroke-width:1.0;" x1="443.5" x2="443.5" y1="631.9844" y2="644.9844"/><line style="stroke:#181818;stroke-width:1.0;" x1="402.5" x2="443.5" y1="644.9844" y2="644.9844"/><polygon fill="#181818" points="412.5,640.9844,402.5,644.9844,412.5,648.9844,408.5,644.9844" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="109" x="408.5" y="611.7856">getCachedImage</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="97" x="408.5" y="626.9185">&#33719;&#21462;&#32531;&#23384;Bitmap</text><line style="stroke:#181818;stroke-width:1.0;" x1="401.5" x2="448.5" y1="669.1172" y2="669.1172"/><line style="stroke:#181818;stroke-width:1.0;" x1="448.5" x2="448.5" y1="669.1172" y2="682.1172"/><line style="stroke:#181818;stroke-width:1.0;" x1="407.5" x2="448.5" y1="682.1172" y2="682.1172"/><polygon fill="#181818" points="417.5,678.1172,407.5,682.1172,417.5,686.1172,413.5,682.1172" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="96" x="413.5" y="664.0513">getDataSource</text><polygon fill="#181818" points="839.5,712.25,849.5,716.25,839.5,720.25,843.5,716.25" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="406.5" x2="845.5" y1="716.25" y2="716.25"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="130" x="413.5" y="711.1841">fetchDecodedImage</text><line style="stroke:#181818;stroke-width:1.0;" x1="861.5" x2="903.5" y1="745.3828" y2="745.3828"/><line style="stroke:#181818;stroke-width:1.0;" x1="903.5" x2="903.5" y1="745.3828" y2="758.3828"/><line style="stroke:#181818;stroke-width:1.0;" x1="862.5" x2="903.5" y1="758.3828" y2="758.3828"/><polygon fill="#181818" points="872.5,754.3828,862.5,758.3828,872.5,762.3828,868.5,758.3828" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="91" x="868.5" y="740.3169">&#29983;&#25104;&#29983;&#20135;&#32773;&#24207;&#21015;</text><line style="stroke:#181818;stroke-width:1.0;" x1="861.5" x2="908.5" y1="782.5156" y2="782.5156"/><line style="stroke:#181818;stroke-width:1.0;" x1="908.5" x2="908.5" y1="782.5156" y2="795.5156"/><line style="stroke:#181818;stroke-width:1.0;" x1="867.5" x2="908.5" y1="795.5156" y2="795.5156"/><polygon fill="#181818" points="877.5,791.5156,867.5,795.5156,877.5,799.5156,873.5,795.5156" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="142" x="873.5" y="777.4497">submitFetchRequest()</text><polygon fill="#181818" points="962,840.7813,972,844.7813,962,848.7813,966,844.7813" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="866.5" x2="968" y1="844.7813" y2="844.7813"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="65" x="873.5" y="824.5825">&#26500;&#36896;&#26102;&#20256;&#20837;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="65" x="873.5" y="839.7153">&#29983;&#20135;&#32773;&#38431;&#21015;</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="97" x="974" y="811.4844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="981" y="831.4795">DataSource</text><line style="stroke:#181818;stroke-width:1.0;" x1="1022.5" x2="1064.5" y1="889.0469" y2="889.0469"/><line style="stroke:#181818;stroke-width:1.0;" x1="1064.5" x2="1064.5" y1="889.0469" y2="902.0469"/><line style="stroke:#181818;stroke-width:1.0;" x1="1023.5" x2="1064.5" y1="902.0469" y2="902.0469"/><polygon fill="#181818" points="1033.5,898.0469,1023.5,902.0469,1033.5,906.0469,1029.5,902.0469" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="65" x="1029.5" y="868.8481">&#29983;&#20135;&#32773;&#38431;&#21015;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="1029.5" y="883.981">&#21551;&#21160;&#25191;&#34892;</text><polygon fill="#181818" points="877.5,927.1797,867.5,931.1797,877.5,935.1797,873.5,931.1797" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="871.5" x2="1021.5" y1="931.1797" y2="931.1797"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="883.5" y="926.1138">&#36820;&#22238;&#23454;&#20363;</text><polygon fill="#181818" points="412.5,956.3125,402.5,960.3125,412.5,964.3125,408.5,960.3125" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="406.5" x2="855.5" y1="960.3125" y2="960.3125"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="375" x="418.5" y="955.2466">&#36820;&#22238; DataSource&lt;CloseableReference&lt;CloseableImage&gt;&gt;</text><polygon fill="#181818" points="1010.5,985.4453,1020.5,989.4453,1010.5,993.4453,1014.5,989.4453" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="391.5" x2="1016.5" y1="989.4453" y2="989.4453"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="242" x="398.5" y="984.3794">&#160;&#160;subscribe(DataSubscriber)&#27880;&#20876;&#35746;&#38405;&#32773;</text><polygon fill="#181818" points="407.5,1014.5781,397.5,1018.5781,407.5,1022.5781,403.5,1018.5781" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="401.5" x2="1021.5" y1="1018.5781" y2="1018.5781"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="343" x="413.5" y="1013.5122">&#36820;&#22238;&#22270;&#29255;Bitmap&#12290;&#29238;&#31867;&#30340;onNewResultInternal()&#20250;&#34987;&#25191;&#34892;</text><line style="stroke:#181818;stroke-width:1.0;" x1="396.5" x2="438.5" y1="1047.7109" y2="1047.7109"/><line style="stroke:#181818;stroke-width:1.0;" x1="438.5" x2="438.5" y1="1047.7109" y2="1060.7109"/><line style="stroke:#181818;stroke-width:1.0;" x1="397.5" x2="438.5" y1="1060.7109" y2="1060.7109"/><polygon fill="#181818" points="407.5,1056.7109,397.5,1060.7109,407.5,1064.7109,403.5,1060.7109" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="102" x="403.5" y="1042.645">createDrawable</text><line style="stroke:#181818;stroke-width:1.0;" x1="396.5" x2="438.5" y1="1104.9766" y2="1104.9766"/><line style="stroke:#181818;stroke-width:1.0;" x1="438.5" x2="438.5" y1="1104.9766" y2="1117.9766"/><line style="stroke:#181818;stroke-width:1.0;" x1="397.5" x2="438.5" y1="1117.9766" y2="1117.9766"/><polygon fill="#181818" points="407.5,1113.9766,397.5,1117.9766,407.5,1121.9766,403.5,1117.9766" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="134" x="403.5" y="1084.7778">hierarchy.setImage()</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="403.5" y="1099.9106">&#26174;&#31034;&#22270;&#29255;</text><!--SRC=[dLLDJnD16BxlhzZ4nBJK4hruA8O4IuXSZ2cA1_OoR5_QYTkPEftIS2CAs2eAYGWD6422WMYe6X94hEN7sFtWn5zmThUbk_rOII-RxCpxFEypppCVKpGwB4_WJ5Q3KOOA09CO2d8a4fDpmCSpA0LF4kEXy912nXZAG86oPuEKs4Ln1eX3KY7rqoFh-qjpxL3gu17SZt0MD4mQet5AEAEQ1amU691Zih6zS36_AoK1gHpF2huEBP8qrLCY9IES8pKDoSVqAIP9Mb38PRLe5a_C7x-DzL_6yOVBQgchh6vyJRgk0FVl0TMIGhktUQ3ue3aVOtk7Q5IOSxHlR9nOvsNZunUhKZF_L6Pn3azhSAj- -hPUtLI8wpjoTBIixU6OBNdI9i0QvdCZgHI3b9jWo7NCYTikDJSNNFV2NQr8KChj4IIaEFjaqfKbUITwUDOI44yZae9W5snCn-hQ4JrtM2HYkzWj9o-5r1CVmEqSaFnq1lC4FCz3ZlV58Y990OyxEzWnNoJwxgU-icvMt-j7vVkOPr2sFsPReE0UHHnDq3nJ8P36QTuiSB0pmDNqAAWqsP0c-MiwG37PNDinYglYMpyxiEONzRCLlRZnFrZBo36xOyFDKBWJrrgAz-eG1wHUtTKNFolaglD5USVkx07uuOvKRwb2zDLl-kj3etHWVLhs0RkiqpfVqxUszSfslVQcNMPG9D7e5TYZvbvSepcmJqm2Pe01yGuvxCF3tgthQ-YTwDKtC7YVApTltBbxUyZzYanoAiFJ479AcdyiR1mVwalBLcNlehme3BoMWklK-DCAtDUD0BPgPkcLUqR-phzmhp1nSr7o40e9oEKrFauuC8AqK5ZSbjRUrqQ-VHvLrNdmclTRlonf30mnDJqts7nWGs656EMQkN_cBkaV]--></g></svg>

<p>上图中DateSource是一个<code>CloseableProducerToDataSourceAdapter</code>实例，如下图类图所示：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="428px" preserveAspectRatio="none" style="width:977px;height:428px;background:#FFFFFF;" version="1.1" viewBox="0 0 977 428" width="977px" zoomAndPan="magnify"><defs/><g><!--class DataSource--><g id="elem_DataSource"><rect codeLine="1" fill="#F1F1F1" height="48" id="DataSource" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="349" x="478.5" y="10"/><ellipse cx="493.5" cy="26" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M495.8438,21.6719 C494.9063,21.2344 494.3125,21.0938 493.4375,21.0938 C490.8125,21.0938 488.8125,23.1719 488.8125,25.8906 L488.8125,27.0156 C488.8125,29.5938 490.9219,31.4844 493.8125,31.4844 C495.0313,31.4844 496.1875,31.1875 496.9375,30.6406 C497.5156,30.2344 497.8438,29.7813 497.8438,29.3906 C497.8438,28.9375 497.4531,28.5469 496.9844,28.5469 C496.7656,28.5469 496.5625,28.625 496.375,28.8125 C495.9219,29.2969 495.9219,29.2969 495.7344,29.3906 C495.3125,29.6563 494.625,29.7813 493.8594,29.7813 C491.8125,29.7813 490.5156,28.6875 490.5156,26.9844 L490.5156,25.8906 C490.5156,24.1094 491.7656,22.7969 493.5,22.7969 C494.0781,22.7969 494.6875,22.9531 495.1563,23.2031 C495.6406,23.4844 495.8125,23.7031 495.9063,24.1094 C495.9688,24.5156 496,24.6406 496.1406,24.7656 C496.2813,24.9063 496.5156,25.0156 496.7344,25.0156 C497,25.0156 497.2656,24.875 497.4375,24.6563 C497.5469,24.5 497.5781,24.3125 497.5781,23.8906 L497.5781,22.4688 C497.5781,22.0313 497.5625,21.9063 497.4688,21.75 C497.3125,21.4844 497.0313,21.3438 496.7344,21.3438 C496.4375,21.3438 496.2344,21.4375 496.0156,21.75 L495.8438,21.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="507.5" y="30.8467">DataSource</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="232" x="598.5" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="230" x="599.5" y="19.1387">CloseableReference&lt;CloseableImage&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="479.5" x2="826.5" y1="42" y2="42"/><line style="stroke:#181818;stroke-width:0.5;" x1="479.5" x2="826.5" y1="50" y2="50"/></g><!--class Producer--><g id="elem_Producer"><rect codeLine="2" fill="#F1F1F1" height="64.2969" id="Producer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="401" x="12.5" y="357"/><ellipse cx="59.75" cy="373" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M62.0938,368.6719 C61.1563,368.2344 60.5625,368.0938 59.6875,368.0938 C57.0625,368.0938 55.0625,370.1719 55.0625,372.8906 L55.0625,374.0156 C55.0625,376.5938 57.1719,378.4844 60.0625,378.4844 C61.2813,378.4844 62.4375,378.1875 63.1875,377.6406 C63.7656,377.2344 64.0938,376.7813 64.0938,376.3906 C64.0938,375.9375 63.7031,375.5469 63.2344,375.5469 C63.0156,375.5469 62.8125,375.625 62.625,375.8125 C62.1719,376.2969 62.1719,376.2969 61.9844,376.3906 C61.5625,376.6563 60.875,376.7813 60.1094,376.7813 C58.0625,376.7813 56.7656,375.6875 56.7656,373.9844 L56.7656,372.8906 C56.7656,371.1094 58.0156,369.7969 59.75,369.7969 C60.3281,369.7969 60.9375,369.9531 61.4063,370.2031 C61.8906,370.4844 62.0625,370.7031 62.1563,371.1094 C62.2188,371.5156 62.25,371.6406 62.3906,371.7656 C62.5313,371.9063 62.7656,372.0156 62.9844,372.0156 C63.25,372.0156 63.5156,371.875 63.6875,371.6563 C63.7969,371.5 63.8281,371.3125 63.8281,370.8906 L63.8281,369.4688 C63.8281,369.0313 63.8125,368.9063 63.7188,368.75 C63.5625,368.4844 63.2813,368.3438 62.9844,368.3438 C62.6875,368.3438 62.4844,368.4375 62.2656,368.75 L62.0938,368.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="80.25" y="377.8467">Producer</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="232" x="184.5" y="354"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="230" x="185.5" y="366.1387">CloseableReference&lt;CloseableImage&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="13.5" x2="412.5" y1="389" y2="389"/><line style="stroke:#181818;stroke-width:0.5;" x1="13.5" x2="412.5" y1="397" y2="397"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="389" x="18.5" y="413.9951">void produceResults(Consumer&lt;T&gt;, ProducerContext)</text></g><!--class AbstractDataSource--><g id="elem_AbstractDataSource"><rect codeLine="5" fill="#F1F1F1" height="48" id="AbstractDataSource" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="409" x="448.5" y="119"/><ellipse cx="463.5" cy="135" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M465.5781,136.8125 L465.9688,137.7969 L465.5781,137.7969 C465.125,137.7969 465.0156,137.8125 464.8594,137.9219 C464.6094,138.0781 464.4531,138.3594 464.4531,138.6563 C464.4531,138.9219 464.5938,139.1719 464.8125,139.3281 C464.9531,139.4531 465.1563,139.5 465.5781,139.5 L467.9375,139.5 C468.2969,139.5 468.5156,139.4688 468.6563,139.375 C468.9063,139.2344 469.0625,138.9375 469.0625,138.6563 C469.0625,138.375 468.9219,138.125 468.7031,137.9688 C468.5313,137.8281 468.375,137.7969 467.9063,137.7969 L464.5156,129.5938 L460.8438,129.5938 C460.3906,129.5938 460.2656,129.6094 460.1094,129.7031 C459.8594,129.875 459.7031,130.1563 459.7031,130.4375 C459.7031,130.7188 459.8438,130.9688 460.0625,131.1406 C460.2344,131.25 460.4063,131.2813 460.8438,131.2813 L461.9219,131.2813 L459.2813,137.7969 C458.8594,137.7969 458.7031,137.8125 458.5469,137.9219 C458.2969,138.0781 458.1406,138.3594 458.1406,138.6563 C458.1406,139.2188 458.5156,139.5 459.2656,139.5 L461.5313,139.5 C461.8906,139.5 462.1094,139.4688 462.2344,139.375 C462.5,139.2344 462.6406,138.9375 462.6406,138.6563 C462.6406,138.375 462.5156,138.125 462.2969,137.9531 C462.125,137.8281 461.9844,137.7969 461.5313,137.7969 L461.1406,137.7969 L461.5313,136.8125 L465.5781,136.8125 Z M464.875,135.1094 L462.2031,135.1094 L463.5469,131.8438 L464.875,135.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="143" x="477.5" y="139.8467">AbstractDataSource</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="232" x="628.5" y="116"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="230" x="629.5" y="128.1387">CloseableReference&lt;CloseableImage&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="449.5" x2="856.5" y1="151" y2="151"/><line style="stroke:#181818;stroke-width:0.5;" x1="449.5" x2="856.5" y1="159" y2="159"/></g><!--class AbstractProducerToDataSourceAdapter--><g id="elem_AbstractProducerToDataSourceAdapter"><rect codeLine="6" fill="#F1F1F1" height="48" id="AbstractProducerToDataSourceAdapter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="548" x="7" y="228"/><ellipse cx="22" cy="244" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.0781,245.8125 L24.4688,246.7969 L24.0781,246.7969 C23.625,246.7969 23.5156,246.8125 23.3594,246.9219 C23.1094,247.0781 22.9531,247.3594 22.9531,247.6563 C22.9531,247.9219 23.0938,248.1719 23.3125,248.3281 C23.4531,248.4531 23.6563,248.5 24.0781,248.5 L26.4375,248.5 C26.7969,248.5 27.0156,248.4688 27.1563,248.375 C27.4063,248.2344 27.5625,247.9375 27.5625,247.6563 C27.5625,247.375 27.4219,247.125 27.2031,246.9688 C27.0313,246.8281 26.875,246.7969 26.4063,246.7969 L23.0156,238.5938 L19.3438,238.5938 C18.8906,238.5938 18.7656,238.6094 18.6094,238.7031 C18.3594,238.875 18.2031,239.1563 18.2031,239.4375 C18.2031,239.7188 18.3438,239.9688 18.5625,240.1406 C18.7344,240.25 18.9063,240.2813 19.3438,240.2813 L20.4219,240.2813 L17.7813,246.7969 C17.3594,246.7969 17.2031,246.8125 17.0469,246.9219 C16.7969,247.0781 16.6406,247.3594 16.6406,247.6563 C16.6406,248.2188 17.0156,248.5 17.7656,248.5 L20.0313,248.5 C20.3906,248.5 20.6094,248.4688 20.7344,248.375 C21,248.2344 21.1406,247.9375 21.1406,247.6563 C21.1406,247.375 21.0156,247.125 20.7969,246.9531 C20.625,246.8281 20.4844,246.7969 20.0313,246.7969 L19.6406,246.7969 L20.0313,245.8125 L24.0781,245.8125 Z M23.375,244.1094 L20.7031,244.1094 L22.0469,240.8438 L23.375,244.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="282" x="36" y="248.8467">AbstractProducerToDataSourceAdapter</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="232" x="326" y="225"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="230" x="327" y="237.1387">CloseableReference&lt;CloseableImage&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="554" y1="260" y2="260"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="554" y1="268" y2="268"/></g><!--class CloseableProducerToDataSourceAdapter--><g id="elem_CloseableProducerToDataSourceAdapter"><rect codeLine="7" fill="#F1F1F1" height="48" id="CloseableProducerToDataSourceAdapter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="424" x="457" y="365"/><ellipse cx="472" cy="381" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M474.3438,376.6719 C473.4063,376.2344 472.8125,376.0938 471.9375,376.0938 C469.3125,376.0938 467.3125,378.1719 467.3125,380.8906 L467.3125,382.0156 C467.3125,384.5938 469.4219,386.4844 472.3125,386.4844 C473.5313,386.4844 474.6875,386.1875 475.4375,385.6406 C476.0156,385.2344 476.3438,384.7813 476.3438,384.3906 C476.3438,383.9375 475.9531,383.5469 475.4844,383.5469 C475.2656,383.5469 475.0625,383.625 474.875,383.8125 C474.4219,384.2969 474.4219,384.2969 474.2344,384.3906 C473.8125,384.6563 473.125,384.7813 472.3594,384.7813 C470.3125,384.7813 469.0156,383.6875 469.0156,381.9844 L469.0156,380.8906 C469.0156,379.1094 470.2656,377.7969 472,377.7969 C472.5781,377.7969 473.1875,377.9531 473.6563,378.2031 C474.1406,378.4844 474.3125,378.7031 474.4063,379.1094 C474.4688,379.5156 474.5,379.6406 474.6406,379.7656 C474.7813,379.9063 475.0156,380.0156 475.2344,380.0156 C475.5,380.0156 475.7656,379.875 475.9375,379.6563 C476.0469,379.5 476.0781,379.3125 476.0781,378.8906 L476.0781,377.4688 C476.0781,377.0313 476.0625,376.9063 475.9688,376.75 C475.8125,376.4844 475.5313,376.3438 475.2344,376.3438 C474.9375,376.3438 474.7344,376.4375 474.5156,376.75 L474.3438,376.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="294" x="486" y="385.8467">CloseableProducerToDataSourceAdapter</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="96" x="788" y="362"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="94" x="789" y="374.1387">CloseableImage</text><line style="stroke:#181818;stroke-width:0.5;" x1="458" x2="880" y1="397" y2="397"/><line style="stroke:#181818;stroke-width:0.5;" x1="458" x2="880" y1="405" y2="405"/></g><!--class DataSubscriber--><g id="elem_DataSubscriber"><rect codeLine="13" fill="#F1F1F1" height="48" id="DataSubscriber" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="376" x="590" y="228"/><ellipse cx="605" cy="244" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M605.9531,240.7813 L607.6719,240.7813 C608.0625,240.7813 608.25,240.75 608.375,240.6719 C608.6406,240.5156 608.7813,240.2344 608.7813,239.9375 C608.7813,239.6719 608.6719,239.4063 608.4375,239.2344 C608.2656,239.125 608.125,239.0938 607.6719,239.0938 L602.5313,239.0938 C602.0938,239.0938 601.9688,239.1094 601.8125,239.2031 C601.5625,239.3594 601.4063,239.6563 601.4063,239.9375 C601.4063,240.2188 601.5469,240.4688 601.7656,240.6406 C601.9219,240.75 602.1094,240.7813 602.5313,240.7813 L604.25,240.7813 L604.25,247.2969 L602.5313,247.2969 C602.0938,247.2969 601.9688,247.3125 601.8125,247.4219 C601.5625,247.5781 601.4063,247.8594 601.4063,248.1563 C601.4063,248.4063 601.5469,248.6719 601.7656,248.8281 C601.9219,248.9531 602.125,249 602.5313,249 L607.6719,249 C608.4219,249 608.7813,248.7188 608.7813,248.1563 C608.7813,247.875 608.6719,247.625 608.4375,247.4531 C608.2656,247.3281 608.125,247.2969 607.6719,247.2969 L605.9531,247.2969 L605.9531,240.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="110" x="619" y="248.8467">DataSubscriber</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="232" x="737" y="225"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="230" x="738" y="237.1387">CloseableReference&lt;CloseableImage&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="591" x2="965" y1="260" y2="260"/><line style="stroke:#181818;stroke-width:0.5;" x1="591" x2="965" y1="268" y2="268"/></g><!--reverse link DataSource to AbstractDataSource--><g id="link_DataSource_AbstractDataSource"><path codeLine="8" d="M653,76.217 C653,94.165 653,100.892 653,118.828 " fill="none" id="DataSource-backto-AbstractDataSource" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="653,58.217,647,76.217,659,76.217,653,58.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link AbstractDataSource to AbstractProducerToDataSourceAdapter--><g id="link_AbstractDataSource_AbstractProducerToDataSourceAdapter"><path codeLine="9" d="M555.4413,172.0615 C492.8593,190.0615 423.662,209.966 361.117,227.956 " fill="none" id="AbstractDataSource-backto-AbstractProducerToDataSourceAdapter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="572.74,167.086,553.7828,166.2953,557.0998,177.8277,572.74,167.086" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link AbstractProducerToDataSourceAdapter to CloseableProducerToDataSourceAdapter--><g id="link_AbstractProducerToDataSourceAdapter_CloseableProducerToDataSourceAdapter"><path codeLine="10" d="M406.7091,280.351 C440.0571,288.553 459.151,294.381 492,306 C538.775,322.544 589.98,347.0071 625.226,364.9074 " fill="none" id="AbstractProducerToDataSourceAdapter-backto-CloseableProducerToDataSourceAdapter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="389.23,276.052,405.2761,286.1774,408.1421,274.5247,389.23,276.052" style="stroke:#181818;stroke-width:1.0;"/></g><!--link AbstractProducerToDataSourceAdapter to Producer--><g id="link_AbstractProducerToDataSourceAdapter_Producer"><path codeLine="11" d="M236.869,276.157 C226.12,284.084 215.998,294.037 210,306 C202.849,320.263 201.7812,331.7876 203.6842,346.9377 " fill="none" id="AbstractProducerToDataSourceAdapter-to-Producer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="204.432,352.8909,207.2791,343.4625,203.8088,347.9299,199.3415,344.4596,204.432,352.8909" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="26" x="211" y="319.0669">&#20381;&#36182;</text></g><!--link AbstractProducerToDataSourceAdapter to Producer--><g id="link_AbstractProducerToDataSourceAdapter_Producer"><path codeLine="12" d="M331.172,276.183 C361.05,292.931 396.466,318.65 414,353 C425.317,375.1714 445.893,409 421,409 " fill="none" id="AbstractProducerToDataSourceAdapter-to-Producer-1" style="stroke:#0000FF;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#0000FF" points="415,409,424,413,420,409,424,405,415,409" style="stroke:#0000FF;stroke-width:1.0;"/><text fill="#0000FF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="91" x="392" y="319.0669">&#26500;&#36896;&#20989;&#25968;&#20013;&#35843;&#29992;</text></g><!--reverse link AbstractDataSource to DataSubscriber--><g id="link_AbstractDataSource_DataSubscriber"><path codeLine="14" d="M689.2392,175.0206 C710.2062,192.9686 729.976,209.892 750.93,227.828 " fill="none" id="AbstractDataSource-backto-DataSubscriber" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="680.123,167.217,682.0799,174.1575,689.2392,175.0206,687.2823,168.0801,680.123,167.217" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="677.7592" y="187.0311">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="734.9683" y="216.796">n</text></g><!--SRC=[Iyv9B2vMS4aiIGpEBorAJhLnpialJarCoaaDIarBBKhDGnRop4rCJxMpuqe6QmeeoayfJKuj8aQBGZMN0X2KvMUcA1H0z0Mb5fVcb1HhEEVd5PVc0eq9iTE1cmaKB4cjAD7agkLAJ2ekAKfCBb5mX398T2o6VfWT8Va8annJ4WjAYFCArFTmOQACW-ZbGgXGiAdHrSNY9IvC8LIbUApZ8a8Dn31Y74-KQRgwTl0uKx1IUB9lxekjqqZMQMM5cYOKb9DoIbEjSpBpKlLI4eipKbEiGQd12YGAjENPl9QN3GkUjkzzDdN3anrhNsneVZvb1LScCCKKfIK2mmjiMMbISN9HPXAHSOebr9KCbHIqW66bbAU4PY80]--></g></svg>

<p>Producer就是图片的生产者队列，会执行网络请求、缓存读写、图片解码等等图片处理任务。下文会详细介绍生产者队列。</p>
<h3 id="PipelineDraweeController的构造过程"><a href="#PipelineDraweeController的构造过程" class="headerlink" title="PipelineDraweeController的构造过程"></a>PipelineDraweeController的构造过程</h3><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="609px" preserveAspectRatio="none" style="width:982px;height:609px;background:#FFFFFF;" version="1.1" viewBox="0 0 982 609" width="982px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="114.6953" style="stroke:#181818;stroke-width:1.0;" width="10" x="108" y="67.4297"/><rect fill="#FFFFFF" height="353.7578" style="stroke:#181818;stroke-width:1.0;" width="10" x="108" y="211.2578"/><rect fill="#FFFFFF" height="85.5625" style="stroke:#181818;stroke-width:1.0;" width="10" x="348.5" y="96.5625"/><rect fill="#FFFFFF" height="266.3594" style="stroke:#181818;stroke-width:1.0;" width="10" x="637.5" y="298.6563"/><rect fill="#FFFFFF" height="214.0938" style="stroke:#181818;stroke-width:1.0;" width="10" x="642.5" y="350.9219"/><rect fill="#FFFFFF" height="171.9609" style="stroke:#181818;stroke-width:1.0;" width="10" x="647.5" y="393.0547"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="113" x2="113" y1="36.2969" y2="574.0156"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="353" x2="353" y1="36.2969" y2="574.0156"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="642" x2="642" y1="135.2109" y2="574.0156"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="876" x2="876" y1="436.7031" y2="574.0156"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="152" x="37" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="44" y="24.9951">SimpleDraweeView</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="152" x="37" y="573.0156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="44" y="593.0107">SimpleDraweeView</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="309" x="199" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="206" y="24.9951">PipelineDraweeControllerBuilderSupplier</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="309" x="199" y="573.0156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="206" y="593.0107">PipelineDraweeControllerBuilderSupplier</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="249" x="518" y="573.0156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="235" x="525" y="593.0107">PipelineDraweeControllerBuilder</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="199" x="777" y="573.0156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="784" y="593.0107">PipelineDraweeController</text><rect fill="#FFFFFF" height="114.6953" style="stroke:#181818;stroke-width:1.0;" width="10" x="108" y="67.4297"/><rect fill="#FFFFFF" height="353.7578" style="stroke:#181818;stroke-width:1.0;" width="10" x="108" y="211.2578"/><rect fill="#FFFFFF" height="85.5625" style="stroke:#181818;stroke-width:1.0;" width="10" x="348.5" y="96.5625"/><rect fill="#FFFFFF" height="266.3594" style="stroke:#181818;stroke-width:1.0;" width="10" x="637.5" y="298.6563"/><rect fill="#FFFFFF" height="214.0938" style="stroke:#181818;stroke-width:1.0;" width="10" x="642.5" y="350.9219"/><rect fill="#FFFFFF" height="171.9609" style="stroke:#181818;stroke-width:1.0;" width="10" x="647.5" y="393.0547"/><ellipse cx="7.5" cy="66.6797" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="96,63.4297,106,67.4297,96,71.4297,100,67.4297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="102" y1="67.4297" y2="67.4297"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="19" x="15" y="62.3638">init</text><polygon fill="#181818" points="336.5,92.5625,346.5,96.5625,336.5,100.5625,340.5,96.5625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="118" x2="342.5" y1="96.5625" y2="96.5625"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="31" x="125" y="91.4966">get()</text><polygon fill="#181818" points="506,106.5625,516,110.5625,506,114.5625,510,110.5625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="358.5" x2="512" y1="110.5625" y2="110.5625"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="249" x="518" y="104.5625"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="235" x="525" y="124.5576">PipelineDraweeControllerBuilder</text><polygon fill="#181818" points="124,178.125,114,182.125,124,186.125,120,182.125" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="118" x2="352.5" y1="182.125" y2="182.125"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="26" x="130" y="161.9263">&#36820;&#22238;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="204" x="130" y="177.0591">PipelineDraweeControllerBuilder</text><ellipse cx="7.5" cy="210.5078" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="96,207.2578,106,211.2578,96,215.2578,100,211.2578" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="102" y1="211.2578" y2="211.2578"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="81" x="15" y="206.1919">setImageURI</text><polygon fill="#181818" points="630.5,236.3906,640.5,240.3906,630.5,244.3906,634.5,240.3906" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="118" x2="636.5" y1="240.3906" y2="240.3906"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="47" x="125" y="235.3247">setUri()</text><polygon fill="#181818" points="630.5,265.5234,640.5,269.5234,630.5,273.5234,634.5,269.5234" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="118" x2="636.5" y1="269.5234" y2="269.5234"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="113" x="125" y="264.4575">setOldController()</text><polygon fill="#181818" points="625.5,294.6563,635.5,298.6563,625.5,302.6563,629.5,298.6563" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="118" x2="631.5" y1="298.6563" y2="298.6563"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="92" x="125" y="293.5903">&#35843;&#29992;&#29238;&#31867;build()</text><line style="stroke:#181818;stroke-width:1.0;" x1="647.5" x2="694.5" y1="337.9219" y2="337.9219"/><line style="stroke:#181818;stroke-width:1.0;" x1="694.5" x2="694.5" y1="337.9219" y2="350.9219"/><line style="stroke:#181818;stroke-width:1.0;" x1="653.5" x2="694.5" y1="350.9219" y2="350.9219"/><polygon fill="#181818" points="663.5,346.9219,653.5,350.9219,663.5,354.9219,659.5,350.9219" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="659.5" y="317.7231">&#35843;&#29992;&#29238;&#31867;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="102" x="659.5" y="332.856">buildController()</text><line style="stroke:#181818;stroke-width:1.0;" x1="652.5" x2="699.5" y1="380.0547" y2="380.0547"/><line style="stroke:#181818;stroke-width:1.0;" x1="699.5" x2="699.5" y1="380.0547" y2="393.0547"/><line style="stroke:#181818;stroke-width:1.0;" x1="658.5" x2="699.5" y1="393.0547" y2="393.0547"/><polygon fill="#181818" points="668.5,389.0547,658.5,393.0547,668.5,397.0547,664.5,393.0547" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="112" x="664.5" y="374.9888">obtainController()</text><polygon fill="#181818" points="765,423.1875,775,427.1875,765,431.1875,769,427.1875" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="657.5" x2="771" y1="427.1875" y2="427.1875"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="664.5" y="422.1216">new</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="199" x="777" y="406.0547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="784" y="426.0498">PipelineDraweeController</text><line style="stroke:#181818;stroke-width:1.0;" x1="657.5" x2="699.5" y1="513.8828" y2="513.8828"/><line style="stroke:#181818;stroke-width:1.0;" x1="699.5" x2="699.5" y1="513.8828" y2="526.8828"/><line style="stroke:#181818;stroke-width:1.0;" x1="658.5" x2="699.5" y1="526.8828" y2="526.8828"/><polygon fill="#181818" points="668.5,522.8828,658.5,526.8828,668.5,530.8828,664.5,526.8828" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="664.5" y="463.4185">&#35843;&#29992;&#29238;&#31867;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="189" x="664.5" y="478.5513">obtainDataSourceSupplier()&#65292;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="91" x="664.5" y="493.6841">&#36820;&#22238;&#19968;&#20010;&#20869;&#37096;&#31867;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="174" x="664.5" y="508.8169">Supplier&lt;DataSource&lt;T&gt;&gt;</text><polygon fill="#181818" points="129,552.0156,119,556.0156,129,560.0156,125,556.0156" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="123" x2="646.5" y1="556.0156" y2="556.0156"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="187" x="135" y="550.9497">&#36820;&#22238;PipelineDraweeController</text><!--SRC=[YyxNjLC8pimjo4brAKeiJqqDoqmjLz3MjbB8pCiiuSAG0QfM2iWiICt9p8CAE-VdbHJbv-Ia5ZcLPkQaf1O5bnOKv6Ic5Yaf91Ohm3X08nMi5D9JIpGqkU1YH1W6DWJALj3IGjABpTswkbOAB_PFUJfxNamU0OEvKb8Jaqioon9BKZ7CuOh66Ih5gIMUkOdfgQ51dbW31-PKiChGeaoGTmafyyz9GJYFW0QG6rviQ7u-PSNpZctFD-vE0ea3zS3ayIYDoGChHh4AXxRyf9B4p3nSAd766JYo45nWV04zc0SCJopMeBiDOgLBOabYS7vfKN8gBA8rDD_lwOd9WyJganqDJtQiUjhM-h9v1LWNJ9KDGgDDY9qTma9iyGXB8xYy0G00]--></g></svg>

<p>上图中的Supplier是<code>Supplier&lt;DataSource&lt;CloseableReference&lt;CloseableImage&gt;&gt;&gt;</code>是一个内部类,这个类就是DataSource提供者。如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//AbstractDraweeControllerBuilder.java</span></span><br><span class="line">  <span class="keyword">protected</span> Supplier&lt;DataSource&lt;IMAGE&gt;&gt; <span class="title function_">getDataSourceSupplierForRequest</span><span class="params">(</span></span><br><span class="line"><span class="params">      <span class="keyword">final</span> REQUEST imageRequest,</span></span><br><span class="line"><span class="params">      <span class="keyword">final</span> <span class="type">boolean</span> bitmapCacheOnly)</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">Object</span> <span class="variable">callerContext</span> <span class="operator">=</span> getCallerContext();</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Supplier</span>&lt;DataSource&lt;IMAGE&gt;&gt;() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> DataSource&lt;IMAGE&gt; <span class="title function_">get</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getDataSourceForRequest(imageRequest, callerContext, bitmapCacheOnly);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.toStringHelper(<span class="built_in">this</span>)</span><br><span class="line">            .add(<span class="string">&quot;request&quot;</span>, imageRequest.toString())</span><br><span class="line">            .toString();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//PipelineDraweeControllerBuilder.java</span></span><br><span class="line">  <span class="keyword">protected</span> DataSource&lt;CloseableReference&lt;CloseableImage&gt;&gt; <span class="title function_">getDataSourceForRequest</span><span class="params">(</span></span><br><span class="line"><span class="params">      DraweeController controller,</span></span><br><span class="line"><span class="params">      String controllerId,</span></span><br><span class="line"><span class="params">      ImageRequest imageRequest,</span></span><br><span class="line"><span class="params">      Object callerContext,</span></span><br><span class="line"><span class="params">      AbstractDraweeControllerBuilder.CacheLevel cacheLevel)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> mImagePipeline.fetchDecodedImage(</span><br><span class="line">        imageRequest,</span><br><span class="line">        callerContext,</span><br><span class="line">        convertCacheLevelToRequestLevel(cacheLevel),</span><br><span class="line">        getRequestListener(controller),</span><br><span class="line">        controllerId);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>下面是与PipelineDraweeController构造相关的类图：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="448px" preserveAspectRatio="none" style="width:830px;height:448px;background:#FFFFFF;" version="1.1" viewBox="0 0 830 448" width="830px" zoomAndPan="magnify"><defs/><g><!--class PipelineDraweeControllerBuilderSupplier--><g id="elem_PipelineDraweeControllerBuilderSupplier"><rect codeLine="1" fill="#F1F1F1" height="64.2969" id="PipelineDraweeControllerBuilderSupplier" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="327" x="88" y="268"/><ellipse cx="103" cy="284" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M105.3438,279.6719 C104.4063,279.2344 103.8125,279.0938 102.9375,279.0938 C100.3125,279.0938 98.3125,281.1719 98.3125,283.8906 L98.3125,285.0156 C98.3125,287.5938 100.4219,289.4844 103.3125,289.4844 C104.5313,289.4844 105.6875,289.1875 106.4375,288.6406 C107.0156,288.2344 107.3438,287.7813 107.3438,287.3906 C107.3438,286.9375 106.9531,286.5469 106.4844,286.5469 C106.2656,286.5469 106.0625,286.625 105.875,286.8125 C105.4219,287.2969 105.4219,287.2969 105.2344,287.3906 C104.8125,287.6563 104.125,287.7813 103.3594,287.7813 C101.3125,287.7813 100.0156,286.6875 100.0156,284.9844 L100.0156,283.8906 C100.0156,282.1094 101.2656,280.7969 103,280.7969 C103.5781,280.7969 104.1875,280.9531 104.6563,281.2031 C105.1406,281.4844 105.3125,281.7031 105.4063,282.1094 C105.4688,282.5156 105.5,282.6406 105.6406,282.7656 C105.7813,282.9063 106.0156,283.0156 106.2344,283.0156 C106.5,283.0156 106.7656,282.875 106.9375,282.6563 C107.0469,282.5 107.0781,282.3125 107.0781,281.8906 L107.0781,280.4688 C107.0781,280.0313 107.0625,279.9063 106.9688,279.75 C106.8125,279.4844 106.5313,279.3438 106.2344,279.3438 C105.9375,279.3438 105.7344,279.4375 105.5156,279.75 L105.3438,279.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="117" y="288.8467">PipelineDraweeControllerBuilderSupplier</text><line style="stroke:#181818;stroke-width:0.5;" x1="89" x2="414" y1="300" y2="300"/><line style="stroke:#181818;stroke-width:0.5;" x1="89" x2="414" y1="308" y2="308"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="274" x="94" y="324.9951">PipelineDraweeControllerBuilder get()</text></g><g id="elem_GMN3"><path d="M6,287.5 L6,312.6328 A0,0 0 0 0 6,312.6328 L53,312.6328 A0,0 0 0 0 53,312.6328 L53,305.5 L87.7921,300 L53,297.5 L53,297.5 L43,287.5 L6,287.5 A0,0 0 0 0 6,287.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M43,287.5 L43,297.5 L53,297.5 L43,287.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="26" x="12" y="304.5669">&#21333;&#20363;</text></g><!--class ImagePipeline--><g id="elem_ImagePipeline"><rect fill="#F1F1F1" height="48" id="ImagePipeline" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="134" x="222.5" y="393"/><ellipse cx="237.5" cy="409" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M239.8438,404.6719 C238.9063,404.2344 238.3125,404.0938 237.4375,404.0938 C234.8125,404.0938 232.8125,406.1719 232.8125,408.8906 L232.8125,410.0156 C232.8125,412.5938 234.9219,414.4844 237.8125,414.4844 C239.0313,414.4844 240.1875,414.1875 240.9375,413.6406 C241.5156,413.2344 241.8438,412.7813 241.8438,412.3906 C241.8438,411.9375 241.4531,411.5469 240.9844,411.5469 C240.7656,411.5469 240.5625,411.625 240.375,411.8125 C239.9219,412.2969 239.9219,412.2969 239.7344,412.3906 C239.3125,412.6563 238.625,412.7813 237.8594,412.7813 C235.8125,412.7813 234.5156,411.6875 234.5156,409.9844 L234.5156,408.8906 C234.5156,407.1094 235.7656,405.7969 237.5,405.7969 C238.0781,405.7969 238.6875,405.9531 239.1563,406.2031 C239.6406,406.4844 239.8125,406.7031 239.9063,407.1094 C239.9688,407.5156 240,407.6406 240.1406,407.7656 C240.2813,407.9063 240.5156,408.0156 240.7344,408.0156 C241,408.0156 241.2656,407.875 241.4375,407.6563 C241.5469,407.5 241.5781,407.3125 241.5781,406.8906 L241.5781,405.4688 C241.5781,405.0313 241.5625,404.9063 241.4688,404.75 C241.3125,404.4844 241.0313,404.3438 240.7344,404.3438 C240.4375,404.3438 240.2344,404.4375 240.0156,404.75 L239.8438,404.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="251.5" y="413.8467">ImagePipeline</text><line style="stroke:#181818;stroke-width:0.5;" x1="223.5" x2="355.5" y1="425" y2="425"/><line style="stroke:#181818;stroke-width:0.5;" x1="223.5" x2="355.5" y1="433" y2="433"/></g><!--class PipelineDraweeControllerBuilder--><g id="elem_PipelineDraweeControllerBuilder"><rect fill="#F1F1F1" height="48" id="PipelineDraweeControllerBuilder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="267" x="478" y="276"/><ellipse cx="493" cy="292" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M495.3438,287.6719 C494.4063,287.2344 493.8125,287.0938 492.9375,287.0938 C490.3125,287.0938 488.3125,289.1719 488.3125,291.8906 L488.3125,293.0156 C488.3125,295.5938 490.4219,297.4844 493.3125,297.4844 C494.5313,297.4844 495.6875,297.1875 496.4375,296.6406 C497.0156,296.2344 497.3438,295.7813 497.3438,295.3906 C497.3438,294.9375 496.9531,294.5469 496.4844,294.5469 C496.2656,294.5469 496.0625,294.625 495.875,294.8125 C495.4219,295.2969 495.4219,295.2969 495.2344,295.3906 C494.8125,295.6563 494.125,295.7813 493.3594,295.7813 C491.3125,295.7813 490.0156,294.6875 490.0156,292.9844 L490.0156,291.8906 C490.0156,290.1094 491.2656,288.7969 493,288.7969 C493.5781,288.7969 494.1875,288.9531 494.6563,289.2031 C495.1406,289.4844 495.3125,289.7031 495.4063,290.1094 C495.4688,290.5156 495.5,290.6406 495.6406,290.7656 C495.7813,290.9063 496.0156,291.0156 496.2344,291.0156 C496.5,291.0156 496.7656,290.875 496.9375,290.6563 C497.0469,290.5 497.0781,290.3125 497.0781,289.8906 L497.0781,288.4688 C497.0781,288.0313 497.0625,287.9063 496.9688,287.75 C496.8125,287.4844 496.5313,287.3438 496.2344,287.3438 C495.9375,287.3438 495.7344,287.4375 495.5156,287.75 L495.3438,287.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="235" x="507" y="296.8467">PipelineDraweeControllerBuilder</text><line style="stroke:#181818;stroke-width:0.5;" x1="479" x2="744" y1="308" y2="308"/><line style="stroke:#181818;stroke-width:0.5;" x1="479" x2="744" y1="316" y2="316"/></g><!--class PipelineDraweeControllerFactory--><g id="elem_PipelineDraweeControllerFactory"><rect fill="#F1F1F1" height="48" id="PipelineDraweeControllerFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="271" x="407" y="393"/><ellipse cx="422" cy="409" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M424.3438,404.6719 C423.4063,404.2344 422.8125,404.0938 421.9375,404.0938 C419.3125,404.0938 417.3125,406.1719 417.3125,408.8906 L417.3125,410.0156 C417.3125,412.5938 419.4219,414.4844 422.3125,414.4844 C423.5313,414.4844 424.6875,414.1875 425.4375,413.6406 C426.0156,413.2344 426.3438,412.7813 426.3438,412.3906 C426.3438,411.9375 425.9531,411.5469 425.4844,411.5469 C425.2656,411.5469 425.0625,411.625 424.875,411.8125 C424.4219,412.2969 424.4219,412.2969 424.2344,412.3906 C423.8125,412.6563 423.125,412.7813 422.3594,412.7813 C420.3125,412.7813 419.0156,411.6875 419.0156,409.9844 L419.0156,408.8906 C419.0156,407.1094 420.2656,405.7969 422,405.7969 C422.5781,405.7969 423.1875,405.9531 423.6563,406.2031 C424.1406,406.4844 424.3125,406.7031 424.4063,407.1094 C424.4688,407.5156 424.5,407.6406 424.6406,407.7656 C424.7813,407.9063 425.0156,408.0156 425.2344,408.0156 C425.5,408.0156 425.7656,407.875 425.9375,407.6563 C426.0469,407.5 426.0781,407.3125 426.0781,406.8906 L426.0781,405.4688 C426.0781,405.0313 426.0625,404.9063 425.9688,404.75 C425.8125,404.4844 425.5313,404.3438 425.2344,404.3438 C424.9375,404.3438 424.7344,404.4375 424.5156,404.75 L424.3438,404.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="436" y="413.8467">PipelineDraweeControllerFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="408" x2="677" y1="425" y2="425"/><line style="stroke:#181818;stroke-width:0.5;" x1="408" x2="677" y1="433" y2="433"/></g><!--class AbstractDraweeControllerBuilder--><g id="elem_AbstractDraweeControllerBuilder"><rect codeLine="12" fill="#F1F1F1" height="64.2969" id="AbstractDraweeControllerBuilder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="272" x="475.5" y="139"/><ellipse cx="492.3" cy="155" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M494.3781,156.8125 L494.7688,157.7969 L494.3781,157.7969 C493.925,157.7969 493.8156,157.8125 493.6594,157.9219 C493.4094,158.0781 493.2531,158.3594 493.2531,158.6563 C493.2531,158.9219 493.3938,159.1719 493.6125,159.3281 C493.7531,159.4531 493.9563,159.5 494.3781,159.5 L496.7375,159.5 C497.0969,159.5 497.3156,159.4688 497.4563,159.375 C497.7063,159.2344 497.8625,158.9375 497.8625,158.6563 C497.8625,158.375 497.7219,158.125 497.5031,157.9688 C497.3313,157.8281 497.175,157.7969 496.7063,157.7969 L493.3156,149.5938 L489.6438,149.5938 C489.1906,149.5938 489.0656,149.6094 488.9094,149.7031 C488.6594,149.875 488.5031,150.1563 488.5031,150.4375 C488.5031,150.7188 488.6438,150.9688 488.8625,151.1406 C489.0344,151.25 489.2063,151.2813 489.6438,151.2813 L490.7219,151.2813 L488.0813,157.7969 C487.6594,157.7969 487.5031,157.8125 487.3469,157.9219 C487.0969,158.0781 486.9406,158.3594 486.9406,158.6563 C486.9406,159.2188 487.3156,159.5 488.0656,159.5 L490.3313,159.5 C490.6906,159.5 490.9094,159.4688 491.0344,159.375 C491.3,159.2344 491.4406,158.9375 491.4406,158.6563 C491.4406,158.375 491.3156,158.125 491.0969,157.9531 C490.925,157.8281 490.7844,157.7969 490.3313,157.7969 L489.9406,157.7969 L490.3313,156.8125 L494.3781,156.8125 Z M493.675,155.1094 L491.0031,155.1094 L492.3469,151.8438 L493.675,155.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="236" x="506.7" y="159.8467">AbstractDraweeControllerBuilder</text><line style="stroke:#181818;stroke-width:0.5;" x1="476.5" x2="746.5" y1="171" y2="171"/><line style="stroke:#181818;stroke-width:0.5;" x1="476.5" x2="746.5" y1="179" y2="179"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="260" x="481.5" y="195.9951">getDataSourceSupplierForRequest()</text></g><!--class Supplier--><g id="elem_Supplier"><rect codeLine="11" fill="#F1F1F1" height="48" id="Supplier" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="416" x="403.5" y="10"/><ellipse cx="418.5" cy="26" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M420.8438,21.6719 C419.9063,21.2344 419.3125,21.0938 418.4375,21.0938 C415.8125,21.0938 413.8125,23.1719 413.8125,25.8906 L413.8125,27.0156 C413.8125,29.5938 415.9219,31.4844 418.8125,31.4844 C420.0313,31.4844 421.1875,31.1875 421.9375,30.6406 C422.5156,30.2344 422.8438,29.7813 422.8438,29.3906 C422.8438,28.9375 422.4531,28.5469 421.9844,28.5469 C421.7656,28.5469 421.5625,28.625 421.375,28.8125 C420.9219,29.2969 420.9219,29.2969 420.7344,29.3906 C420.3125,29.6563 419.625,29.7813 418.8594,29.7813 C416.8125,29.7813 415.5156,28.6875 415.5156,26.9844 L415.5156,25.8906 C415.5156,24.1094 416.7656,22.7969 418.5,22.7969 C419.0781,22.7969 419.6875,22.9531 420.1563,23.2031 C420.6406,23.4844 420.8125,23.7031 420.9063,24.1094 C420.9688,24.5156 421,24.6406 421.1406,24.7656 C421.2813,24.9063 421.5156,25.0156 421.7344,25.0156 C422,25.0156 422.2656,24.875 422.4375,24.6563 C422.5469,24.5 422.5781,24.3125 422.5781,23.8906 L422.5781,22.4688 C422.5781,22.0313 422.5625,21.9063 422.4688,21.75 C422.3125,21.4844 422.0313,21.3438 421.7344,21.3438 C421.4375,21.3438 421.2344,21.4375 421.0156,21.75 L420.8438,21.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="432.5" y="30.8467">Supplier</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="322" x="500.5" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="320" x="501.5" y="19.1387">DataSource&lt;CloseableReference&lt;CloseableImage&gt;&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="404.5" x2="818.5" y1="42" y2="42"/><line style="stroke:#181818;stroke-width:0.5;" x1="404.5" x2="818.5" y1="50" y2="50"/></g><!--reverse link PipelineDraweeControllerBuilderSupplier to ImagePipeline--><g id="link_PipelineDraweeControllerBuilderSupplier_ImagePipeline"><path codeLine="5" d="M265.5484,343.5149 C271.8794,362.672 276.092,375.4234 281.862,392.8836 " fill="none" id="PipelineDraweeControllerBuilderSupplier-backto-ImagePipeline" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="261.783,332.121,259.8677,339.0731,265.5484,343.5149,267.4637,336.5628,261.783,332.121" style="stroke:#181818;stroke-width:1.0;"/></g><!--link PipelineDraweeControllerBuilderSupplier to PipelineDraweeControllerBuilder--><g id="link_PipelineDraweeControllerBuilderSupplier_PipelineDraweeControllerBuilder"><path codeLine="6" d="M415.172,300 C436.161,300 451.448,300 471.88,300 " fill="none" id="PipelineDraweeControllerBuilderSupplier-to-PipelineDraweeControllerBuilder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="477.88,300,468.88,296,472.88,300,468.88,304,477.88,300" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="26" x="433.5" y="293.0669">&#26500;&#36896;</text></g><!--reverse link PipelineDraweeControllerBuilder to ImagePipeline--><g id="link_PipelineDraweeControllerBuilder_ImagePipeline"><path codeLine="7" d="M535.4251,328.1699 C479.4111,348.1744 410.154,372.9093 354.171,392.9033 " fill="none" id="PipelineDraweeControllerBuilder-backto-ImagePipeline" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="546.726,324.134,539.7302,322.385,535.4251,328.1699,542.4208,329.919,546.726,324.134" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link PipelineDraweeControllerBuilderSupplier to PipelineDraweeControllerFactory--><g id="link_PipelineDraweeControllerBuilderSupplier_PipelineDraweeControllerFactory"><path codeLine="8" d="M341.4092,336.5313 C389.8862,355.6884 439.824,375.4234 484.006,392.8836 " fill="none" id="PipelineDraweeControllerBuilderSupplier-backto-PipelineDraweeControllerFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="330.249,332.121,334.359,338.0462,341.4092,336.5313,337.2992,330.6061,330.249,332.121" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link PipelineDraweeControllerBuilder to PipelineDraweeControllerFactory--><g id="link_PipelineDraweeControllerBuilder_PipelineDraweeControllerFactory"><path codeLine="9" d="M591.3631,334.5619 C579.3921,354.5138 568.408,372.8207 556.442,392.7626 " fill="none" id="PipelineDraweeControllerBuilder-backto-PipelineDraweeControllerFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="597.537,324.272,591.0201,327.359,591.3631,334.5619,597.88,331.4749,597.537,324.272" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link AbstractDraweeControllerBuilder to PipelineDraweeControllerBuilder--><g id="link_AbstractDraweeControllerBuilder_PipelineDraweeControllerBuilder"><path codeLine="10" d="M611.5,225.039 C611.5,246.919 611.5,256.482 611.5,275.7 " fill="none" id="AbstractDraweeControllerBuilder-backto-PipelineDraweeControllerBuilder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="611.5,207.039,605.5,225.039,617.5,225.039,611.5,207.039" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Supplier to AbstractDraweeControllerBuilder--><g id="link_Supplier_AbstractDraweeControllerBuilder"><path codeLine="15" d="M668.3825,60.9716 C698.8505,77.6166 729.594,100.378 747.5,135 C758.936,157.111 773.393,191 748.5,191 " fill="none" id="Supplier-backto-AbstractDraweeControllerBuilder" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="663.117,58.095,669.0975,65.9202,667.5049,60.4922,672.9329,58.8996,663.117,58.095" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="91" x="724.5" y="101.0669">&#26500;&#36896;&#20869;&#37096;&#31867;&#36820;&#22238;</text></g><!--SRC=[Iyv9B2vM2CWiICt9p4jrAKeiJqrrpiyhAShFoKajSYhDp4b9BGekBIZ8oKmjKgZcKW020geLqbDBD3IvQhdoyajI5N9IqqeKyjE8ji9AuMdlr2Vxkhc8rQ2bgwlWcPkOdWhJGBHENJk2Nh5IU3QlvMN30a9cKk0Aa4vSQjqIaqloYog9ifsG6Ov9nIL5G3OkCsngy1W2LSIL34ukCBVRk2IM90RdbnObfzeuv-GNfoOcvQG6fQQb5gNc8Gk10yREpeuh4Ue61OWvX9m4IMx0v8Im1sQrMtvHK6fXQMen9AaHCCdAYe0X2dgb1Nfs2aYf41BlJzjQNpQlUBvnzulzKvxEdWS0]--></g></svg>

<h2 id="三级缓存机制"><a href="#三级缓存机制" class="headerlink" title="三级缓存机制"></a>三级缓存机制</h2><p>Fresco采用了三级缓存机制，两级内存，一级磁盘。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="471px" preserveAspectRatio="none" style="width:1107px;height:471px;background:#FFFFFF;" version="1.1" viewBox="0 0 1107 471" width="1107px" zoomAndPan="magnify"><defs/><g><!--cluster Bitmap????--><g id="cluster_Bitmap&#20869;&#23384;&#32531;&#23384;"><path d="M8.5,149 L128.5,149 A3.75,3.75 0 0 1 131,151.5 L138,171.2969 L421.5,171.2969 A2.5,2.5 0 0 1 424,173.7969 L424,461.5 A2.5,2.5 0 0 1 421.5,464 L8.5,464 A2.5,2.5 0 0 1 6,461.5 L6,151.5 A2.5,2.5 0 0 1 8.5,149 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="138" y1="171.2969" y2="171.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="119" x="10" y="163.9951">Bitmap&#20869;&#23384;&#32531;&#23384;</text></g><!--cluster ????????--><g id="cluster_&#21407;&#22987;&#22270;&#29255;&#20869;&#23384;&#32531;&#23384;"><path d="M450.5,149 L571.5,149 A3.75,3.75 0 0 1 574,151.5 L581,171.2969 L871.5,171.2969 A2.5,2.5 0 0 1 874,173.7969 L874,461.5 A2.5,2.5 0 0 1 871.5,464 L450.5,464 A2.5,2.5 0 0 1 448,461.5 L448,151.5 A2.5,2.5 0 0 1 450.5,149 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="448" x2="581" y1="171.2969" y2="171.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="120" x="452" y="163.9951">&#21407;&#22987;&#22270;&#29255;&#20869;&#23384;&#32531;&#23384;</text></g><!--cluster ????--><g id="cluster_&#30913;&#30424;&#32531;&#23384;"><path d="M900.5,149 L961.5,149 A3.75,3.75 0 0 1 964,151.5 L971,171.2969 L1097.5,171.2969 A2.5,2.5 0 0 1 1100,173.7969 L1100,461.5 A2.5,2.5 0 0 1 1097.5,464 L900.5,464 A2.5,2.5 0 0 1 898,461.5 L898,151.5 A2.5,2.5 0 0 1 900.5,149 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="898" x2="971" y1="171.2969" y2="171.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="60" x="902" y="163.9951">&#30913;&#30424;&#32531;&#23384;</text></g><!--class MemoryCache--><g id="elem_MemoryCache"><rect codeLine="9" fill="#F1F1F1" height="48" id="MemoryCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="300" x="87" y="184"/><ellipse cx="102" cy="200" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M102.9531,196.7813 L104.6719,196.7813 C105.0625,196.7813 105.25,196.75 105.375,196.6719 C105.6406,196.5156 105.7813,196.2344 105.7813,195.9375 C105.7813,195.6719 105.6719,195.4063 105.4375,195.2344 C105.2656,195.125 105.125,195.0938 104.6719,195.0938 L99.5313,195.0938 C99.0938,195.0938 98.9688,195.1094 98.8125,195.2031 C98.5625,195.3594 98.4063,195.6563 98.4063,195.9375 C98.4063,196.2188 98.5469,196.4688 98.7656,196.6406 C98.9219,196.75 99.1094,196.7813 99.5313,196.7813 L101.25,196.7813 L101.25,203.2969 L99.5313,203.2969 C99.0938,203.2969 98.9688,203.3125 98.8125,203.4219 C98.5625,203.5781 98.4063,203.8594 98.4063,204.1563 C98.4063,204.4063 98.5469,204.6719 98.7656,204.8281 C98.9219,204.9531 99.125,205 99.5313,205 L104.6719,205 C105.4219,205 105.7813,204.7188 105.7813,204.1563 C105.7813,203.875 105.6719,203.625 105.4375,203.4531 C105.2656,203.3281 105.125,203.2969 104.6719,203.2969 L102.9531,203.2969 L102.9531,196.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="103" x="116" y="204.8467">MemoryCache</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="163" x="227" y="181"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="161" x="228" y="193.1387">CacheKey, CloseableImage</text><line style="stroke:#181818;stroke-width:0.5;" x1="88" x2="386" y1="216" y2="216"/><line style="stroke:#181818;stroke-width:0.5;" x1="88" x2="386" y1="224" y2="224"/></g><!--class CountingMemoryCache--><g id="elem_CountingMemoryCache"><rect codeLine="10" fill="#F1F1F1" height="48" id="CountingMemoryCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="364" x="38" y="292"/><ellipse cx="53" cy="308" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M53.9531,304.7813 L55.6719,304.7813 C56.0625,304.7813 56.25,304.75 56.375,304.6719 C56.6406,304.5156 56.7813,304.2344 56.7813,303.9375 C56.7813,303.6719 56.6719,303.4063 56.4375,303.2344 C56.2656,303.125 56.125,303.0938 55.6719,303.0938 L50.5313,303.0938 C50.0938,303.0938 49.9688,303.1094 49.8125,303.2031 C49.5625,303.3594 49.4063,303.6563 49.4063,303.9375 C49.4063,304.2188 49.5469,304.4688 49.7656,304.6406 C49.9219,304.75 50.1094,304.7813 50.5313,304.7813 L52.25,304.7813 L52.25,311.2969 L50.5313,311.2969 C50.0938,311.2969 49.9688,311.3125 49.8125,311.4219 C49.5625,311.5781 49.4063,311.8594 49.4063,312.1563 C49.4063,312.4063 49.5469,312.6719 49.7656,312.8281 C49.9219,312.9531 50.125,313 50.5313,313 L55.6719,313 C56.4219,313 56.7813,312.7188 56.7813,312.1563 C56.7813,311.875 56.6719,311.625 56.4375,311.4531 C56.2656,311.3281 56.125,311.2969 55.6719,311.2969 L53.9531,311.2969 L53.9531,304.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="167" x="67" y="312.8467">CountingMemoryCache</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="163" x="242" y="289"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="161" x="243" y="301.1387">CacheKey, CloseableImage</text><line style="stroke:#181818;stroke-width:0.5;" x1="39" x2="401" y1="324" y2="324"/><line style="stroke:#181818;stroke-width:0.5;" x1="39" x2="401" y1="332" y2="332"/></g><!--class LruCountingMemoryCache--><g id="elem_LruCountingMemoryCache"><rect codeLine="11" fill="#F1F1F1" height="48" id="LruCountingMemoryCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="386" x="22" y="400"/><ellipse cx="37" cy="416" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M39.3438,411.6719 C38.4063,411.2344 37.8125,411.0938 36.9375,411.0938 C34.3125,411.0938 32.3125,413.1719 32.3125,415.8906 L32.3125,417.0156 C32.3125,419.5938 34.4219,421.4844 37.3125,421.4844 C38.5313,421.4844 39.6875,421.1875 40.4375,420.6406 C41.0156,420.2344 41.3438,419.7813 41.3438,419.3906 C41.3438,418.9375 40.9531,418.5469 40.4844,418.5469 C40.2656,418.5469 40.0625,418.625 39.875,418.8125 C39.4219,419.2969 39.4219,419.2969 39.2344,419.3906 C38.8125,419.6563 38.125,419.7813 37.3594,419.7813 C35.3125,419.7813 34.0156,418.6875 34.0156,416.9844 L34.0156,415.8906 C34.0156,414.1094 35.2656,412.7969 37,412.7969 C37.5781,412.7969 38.1875,412.9531 38.6563,413.2031 C39.1406,413.4844 39.3125,413.7031 39.4063,414.1094 C39.4688,414.5156 39.5,414.6406 39.6406,414.7656 C39.7813,414.9063 40.0156,415.0156 40.2344,415.0156 C40.5,415.0156 40.7656,414.875 40.9375,414.6563 C41.0469,414.5 41.0781,414.3125 41.0781,413.8906 L41.0781,412.4688 C41.0781,412.0313 41.0625,411.9063 40.9688,411.75 C40.8125,411.4844 40.5313,411.3438 40.2344,411.3438 C39.9375,411.3438 39.7344,411.4375 39.5156,411.75 L39.3438,411.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="51" y="420.8467">LruCountingMemoryCache</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="163" x="248" y="397"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="161" x="249" y="409.1387">CacheKey, CloseableImage</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="407" y1="432" y2="432"/><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="407" y1="440" y2="440"/></g><!--class MemoryCache2--><g id="elem_MemoryCache2"><rect codeLine="15" fill="#F1F1F1" height="48" id="MemoryCache2" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="308" x="533" y="184"/><ellipse cx="548" cy="200" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M548.9531,196.7813 L550.6719,196.7813 C551.0625,196.7813 551.25,196.75 551.375,196.6719 C551.6406,196.5156 551.7813,196.2344 551.7813,195.9375 C551.7813,195.6719 551.6719,195.4063 551.4375,195.2344 C551.2656,195.125 551.125,195.0938 550.6719,195.0938 L545.5313,195.0938 C545.0938,195.0938 544.9688,195.1094 544.8125,195.2031 C544.5625,195.3594 544.4063,195.6563 544.4063,195.9375 C544.4063,196.2188 544.5469,196.4688 544.7656,196.6406 C544.9219,196.75 545.1094,196.7813 545.5313,196.7813 L547.25,196.7813 L547.25,203.2969 L545.5313,203.2969 C545.0938,203.2969 544.9688,203.3125 544.8125,203.4219 C544.5625,203.5781 544.4063,203.8594 544.4063,204.1563 C544.4063,204.4063 544.5469,204.6719 544.7656,204.8281 C544.9219,204.9531 545.125,205 545.5313,205 L550.6719,205 C551.4219,205 551.7813,204.7188 551.7813,204.1563 C551.7813,203.875 551.6719,203.625 551.4375,203.4531 C551.2656,203.3281 551.125,203.2969 550.6719,203.2969 L548.9531,203.2969 L548.9531,196.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="103" x="562" y="204.8467">MemoryCache</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="171" x="673" y="181"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="169" x="674" y="193.1387">CacheKey, PooledByteBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="534" x2="840" y1="216" y2="216"/><line style="stroke:#181818;stroke-width:0.5;" x1="534" x2="840" y1="224" y2="224"/></g><!--class CountingMemoryCache2--><g id="elem_CountingMemoryCache2"><rect codeLine="16" fill="#F1F1F1" height="48" id="CountingMemoryCache2" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="372" x="480" y="292"/><ellipse cx="495" cy="308" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M495.9531,304.7813 L497.6719,304.7813 C498.0625,304.7813 498.25,304.75 498.375,304.6719 C498.6406,304.5156 498.7813,304.2344 498.7813,303.9375 C498.7813,303.6719 498.6719,303.4063 498.4375,303.2344 C498.2656,303.125 498.125,303.0938 497.6719,303.0938 L492.5313,303.0938 C492.0938,303.0938 491.9688,303.1094 491.8125,303.2031 C491.5625,303.3594 491.4063,303.6563 491.4063,303.9375 C491.4063,304.2188 491.5469,304.4688 491.7656,304.6406 C491.9219,304.75 492.1094,304.7813 492.5313,304.7813 L494.25,304.7813 L494.25,311.2969 L492.5313,311.2969 C492.0938,311.2969 491.9688,311.3125 491.8125,311.4219 C491.5625,311.5781 491.4063,311.8594 491.4063,312.1563 C491.4063,312.4063 491.5469,312.6719 491.7656,312.8281 C491.9219,312.9531 492.125,313 492.5313,313 L497.6719,313 C498.4219,313 498.7813,312.7188 498.7813,312.1563 C498.7813,311.875 498.6719,311.625 498.4375,311.4531 C498.2656,311.3281 498.125,311.2969 497.6719,311.2969 L495.9531,311.2969 L495.9531,304.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="167" x="509" y="312.8467">CountingMemoryCache</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="171" x="684" y="289"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="169" x="685" y="301.1387">CacheKey, PooledByteBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="481" x2="851" y1="324" y2="324"/><line style="stroke:#181818;stroke-width:0.5;" x1="481" x2="851" y1="332" y2="332"/></g><!--class LruCountingMemoryCache2--><g id="elem_LruCountingMemoryCache2"><rect codeLine="17" fill="#F1F1F1" height="48" id="LruCountingMemoryCache2" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="394" x="464" y="400"/><ellipse cx="479" cy="416" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M481.3438,411.6719 C480.4063,411.2344 479.8125,411.0938 478.9375,411.0938 C476.3125,411.0938 474.3125,413.1719 474.3125,415.8906 L474.3125,417.0156 C474.3125,419.5938 476.4219,421.4844 479.3125,421.4844 C480.5313,421.4844 481.6875,421.1875 482.4375,420.6406 C483.0156,420.2344 483.3438,419.7813 483.3438,419.3906 C483.3438,418.9375 482.9531,418.5469 482.4844,418.5469 C482.2656,418.5469 482.0625,418.625 481.875,418.8125 C481.4219,419.2969 481.4219,419.2969 481.2344,419.3906 C480.8125,419.6563 480.125,419.7813 479.3594,419.7813 C477.3125,419.7813 476.0156,418.6875 476.0156,416.9844 L476.0156,415.8906 C476.0156,414.1094 477.2656,412.7969 479,412.7969 C479.5781,412.7969 480.1875,412.9531 480.6563,413.2031 C481.1406,413.4844 481.3125,413.7031 481.4063,414.1094 C481.4688,414.5156 481.5,414.6406 481.6406,414.7656 C481.7813,414.9063 482.0156,415.0156 482.2344,415.0156 C482.5,415.0156 482.7656,414.875 482.9375,414.6563 C483.0469,414.5 483.0781,414.3125 483.0781,413.8906 L483.0781,412.4688 C483.0781,412.0313 483.0625,411.9063 482.9688,411.75 C482.8125,411.4844 482.5313,411.3438 482.2344,411.3438 C481.9375,411.3438 481.7344,411.4375 481.5156,411.75 L481.3438,411.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="493" y="420.8467">LruCountingMemoryCache</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="171" x="690" y="397"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="169" x="691" y="409.1387">CacheKey, PooledByteBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="465" x2="857" y1="432" y2="432"/><line style="stroke:#181818;stroke-width:0.5;" x1="465" x2="857" y1="440" y2="440"/></g><!--class BufferedDiskCache--><g id="elem_BufferedDiskCache"><rect fill="#F1F1F1" height="48" id="BufferedDiskCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="170" x="914" y="184"/><ellipse cx="929" cy="200" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M931.3438,195.6719 C930.4063,195.2344 929.8125,195.0938 928.9375,195.0938 C926.3125,195.0938 924.3125,197.1719 924.3125,199.8906 L924.3125,201.0156 C924.3125,203.5938 926.4219,205.4844 929.3125,205.4844 C930.5313,205.4844 931.6875,205.1875 932.4375,204.6406 C933.0156,204.2344 933.3438,203.7813 933.3438,203.3906 C933.3438,202.9375 932.9531,202.5469 932.4844,202.5469 C932.2656,202.5469 932.0625,202.625 931.875,202.8125 C931.4219,203.2969 931.4219,203.2969 931.2344,203.3906 C930.8125,203.6563 930.125,203.7813 929.3594,203.7813 C927.3125,203.7813 926.0156,202.6875 926.0156,200.9844 L926.0156,199.8906 C926.0156,198.1094 927.2656,196.7969 929,196.7969 C929.5781,196.7969 930.1875,196.9531 930.6563,197.2031 C931.1406,197.4844 931.3125,197.7031 931.4063,198.1094 C931.4688,198.5156 931.5,198.6406 931.6406,198.7656 C931.7813,198.9063 932.0156,199.0156 932.2344,199.0156 C932.5,199.0156 932.7656,198.875 932.9375,198.6563 C933.0469,198.5 933.0781,198.3125 933.0781,197.8906 L933.0781,196.4688 C933.0781,196.0313 933.0625,195.9063 932.9688,195.75 C932.8125,195.4844 932.5313,195.3438 932.2344,195.3438 C931.9375,195.3438 931.7344,195.4375 931.5156,195.75 L931.3438,195.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="943" y="204.8467">BufferedDiskCache</text><line style="stroke:#181818;stroke-width:0.5;" x1="915" x2="1083" y1="216" y2="216"/><line style="stroke:#181818;stroke-width:0.5;" x1="915" x2="1083" y1="224" y2="224"/></g><!--class FileCache--><g id="elem_FileCache"><rect codeLine="28" fill="#F1F1F1" height="48" id="FileCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="102" x="948" y="292"/><ellipse cx="963" cy="308" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M963.9531,304.7813 L965.6719,304.7813 C966.0625,304.7813 966.25,304.75 966.375,304.6719 C966.6406,304.5156 966.7813,304.2344 966.7813,303.9375 C966.7813,303.6719 966.6719,303.4063 966.4375,303.2344 C966.2656,303.125 966.125,303.0938 965.6719,303.0938 L960.5313,303.0938 C960.0938,303.0938 959.9688,303.1094 959.8125,303.2031 C959.5625,303.3594 959.4063,303.6563 959.4063,303.9375 C959.4063,304.2188 959.5469,304.4688 959.7656,304.6406 C959.9219,304.75 960.1094,304.7813 960.5313,304.7813 L962.25,304.7813 L962.25,311.2969 L960.5313,311.2969 C960.0938,311.2969 959.9688,311.3125 959.8125,311.4219 C959.5625,311.5781 959.4063,311.8594 959.4063,312.1563 C959.4063,312.4063 959.5469,312.6719 959.7656,312.8281 C959.9219,312.9531 960.125,313 960.5313,313 L965.6719,313 C966.4219,313 966.7813,312.7188 966.7813,312.1563 C966.7813,311.875 966.6719,311.625 966.4375,311.4531 C966.2656,311.3281 966.125,311.2969 965.6719,311.2969 L963.9531,311.2969 L963.9531,304.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="70" x="977" y="312.8467">FileCache</text><line style="stroke:#181818;stroke-width:0.5;" x1="949" x2="1049" y1="324" y2="324"/><line style="stroke:#181818;stroke-width:0.5;" x1="949" x2="1049" y1="332" y2="332"/></g><!--class DiskStorageCache--><g id="elem_DiskStorageCache"><rect fill="#F1F1F1" height="48" id="DiskStorageCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="164" x="917" y="400"/><ellipse cx="932" cy="416" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M934.3438,411.6719 C933.4063,411.2344 932.8125,411.0938 931.9375,411.0938 C929.3125,411.0938 927.3125,413.1719 927.3125,415.8906 L927.3125,417.0156 C927.3125,419.5938 929.4219,421.4844 932.3125,421.4844 C933.5313,421.4844 934.6875,421.1875 935.4375,420.6406 C936.0156,420.2344 936.3438,419.7813 936.3438,419.3906 C936.3438,418.9375 935.9531,418.5469 935.4844,418.5469 C935.2656,418.5469 935.0625,418.625 934.875,418.8125 C934.4219,419.2969 934.4219,419.2969 934.2344,419.3906 C933.8125,419.6563 933.125,419.7813 932.3594,419.7813 C930.3125,419.7813 929.0156,418.6875 929.0156,416.9844 L929.0156,415.8906 C929.0156,414.1094 930.2656,412.7969 932,412.7969 C932.5781,412.7969 933.1875,412.9531 933.6563,413.2031 C934.1406,413.4844 934.3125,413.7031 934.4063,414.1094 C934.4688,414.5156 934.5,414.6406 934.6406,414.7656 C934.7813,414.9063 935.0156,415.0156 935.2344,415.0156 C935.5,415.0156 935.7656,414.875 935.9375,414.6563 C936.0469,414.5 936.0781,414.3125 936.0781,413.8906 L936.0781,412.4688 C936.0781,412.0313 936.0625,411.9063 935.9688,411.75 C935.8125,411.4844 935.5313,411.3438 935.2344,411.3438 C934.9375,411.3438 934.7344,411.4375 934.5156,411.75 L934.3438,411.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="946" y="420.8467">DiskStorageCache</text><line style="stroke:#181818;stroke-width:0.5;" x1="918" x2="1080" y1="432" y2="432"/><line style="stroke:#181818;stroke-width:0.5;" x1="918" x2="1080" y1="440" y2="440"/></g><!--class ImagePipeline--><g id="elem_ImagePipeline"><rect codeLine="1" fill="#F1F1F1" height="113.1875" id="ImagePipeline" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="247" x="718.5" y="7"/><ellipse cx="786.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M789.0938,18.6719 C788.1563,18.2344 787.5625,18.0938 786.6875,18.0938 C784.0625,18.0938 782.0625,20.1719 782.0625,22.8906 L782.0625,24.0156 C782.0625,26.5938 784.1719,28.4844 787.0625,28.4844 C788.2813,28.4844 789.4375,28.1875 790.1875,27.6406 C790.7656,27.2344 791.0938,26.7813 791.0938,26.3906 C791.0938,25.9375 790.7031,25.5469 790.2344,25.5469 C790.0156,25.5469 789.8125,25.625 789.625,25.8125 C789.1719,26.2969 789.1719,26.2969 788.9844,26.3906 C788.5625,26.6563 787.875,26.7813 787.1094,26.7813 C785.0625,26.7813 783.7656,25.6875 783.7656,23.9844 L783.7656,22.8906 C783.7656,21.1094 785.0156,19.7969 786.75,19.7969 C787.3281,19.7969 787.9375,19.9531 788.4063,20.2031 C788.8906,20.4844 789.0625,20.7031 789.1563,21.1094 C789.2188,21.5156 789.25,21.6406 789.3906,21.7656 C789.5313,21.9063 789.7656,22.0156 789.9844,22.0156 C790.25,22.0156 790.5156,21.875 790.6875,21.6563 C790.7969,21.5 790.8281,21.3125 790.8281,20.8906 L790.8281,19.4688 C790.8281,19.0313 790.8125,18.9063 790.7188,18.75 C790.5625,18.4844 790.2813,18.3438 789.9844,18.3438 C789.6875,18.3438 789.4844,18.4375 789.2656,18.75 L789.0938,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="807.25" y="27.8467">ImagePipeline</text><line style="stroke:#181818;stroke-width:0.5;" x1="719.5" x2="964.5" y1="39" y2="39"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="724.5" y="55.9951">mBitmapMemoryCache</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="724.5" y="72.292">mEncodedMemoryCache</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="724.5" y="88.5889">mMainBufferedDiskCache</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="235" x="724.5" y="104.8857">mSmallImageBufferedDiskCache</text><line style="stroke:#181818;stroke-width:0.5;" x1="719.5" x2="964.5" y1="112.1875" y2="112.1875"/></g><!--reverse link MemoryCache2 to CountingMemoryCache2--><g id="link_MemoryCache2_CountingMemoryCache2"><path codeLine="19" d="M678.9452,249.6569 C675.4472,267.3149 674.134,273.941 670.62,291.678 " fill="none" id="MemoryCache2-backto-CountingMemoryCache2" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="682.443,232,673.0596,248.491,684.8308,250.8228,682.443,232" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CountingMemoryCache2 to LruCountingMemoryCache2--><g id="link_CountingMemoryCache2_LruCountingMemoryCache2"><path codeLine="20" d="M664.0668,357.98 C663.2338,375.638 662.937,381.9408 662.1,399.6784 " fill="none" id="CountingMemoryCache2-backto-LruCountingMemoryCache2" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="664.915,340,658.0735,357.6973,670.0601,358.2627,664.915,340" style="stroke:#181818;stroke-width:1.0;"/></g><!--link ImagePipeline to MemoryCache--><g id="link_ImagePipeline_MemoryCache"><path codeLine="21" d="M718,51.5 C547.961,51.5 365.0855,137.7529 283.6265,181.0709 " fill="none" id="ImagePipeline-to-MemoryCache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="278.329,183.888,288.1534,183.194,282.7436,181.5404,284.3972,176.1306,278.329,183.888" style="stroke:#181818;stroke-width:1.0;"/></g><!--link ImagePipeline to MemoryCache2--><g id="link_ImagePipeline_MemoryCache2"><path codeLine="22" d="M718,67.5 C670.862,67.5 675.7047,138.4119 681.8067,178.0339 " fill="none" id="ImagePipeline-to-MemoryCache2" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="682.72,183.964,685.3035,174.46,681.9589,179.0223,677.3967,175.6777,682.72,183.964" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link MemoryCache to CountingMemoryCache--><g id="link_MemoryCache_CountingMemoryCache"><path codeLine="23" d="M230.4606,249.7729 C227.6286,267.4309 226.585,273.941 223.74,291.678 " fill="none" id="MemoryCache-backto-CountingMemoryCache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="233.311,232,224.5363,248.8227,236.3849,250.723,233.311,232" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CountingMemoryCache to LruCountingMemoryCache--><g id="link_CountingMemoryCache_LruCountingMemoryCache"><path codeLine="24" d="M218.0668,357.98 C217.2338,375.638 216.937,381.9408 216.1,399.6784 " fill="none" id="CountingMemoryCache-backto-LruCountingMemoryCache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="218.915,340,212.0735,357.6973,224.0601,358.2627,218.915,340" style="stroke:#181818;stroke-width:1.0;"/></g><!--link ImagePipeline to BufferedDiskCache--><g id="link_ImagePipeline_BufferedDiskCache"><path codeLine="26" d="M967,83.5 C1007.98,83.5 1007.1067,142.0332 1003.1067,177.8082 " fill="none" id="ImagePipeline-to-BufferedDiskCache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1002.44,183.771,1007.4153,175.2712,1002.9956,178.802,999.4648,174.3823,1002.44,183.771" style="stroke:#181818;stroke-width:1.0;"/></g><!--link ImagePipeline to BufferedDiskCache--><g id="link_ImagePipeline_BufferedDiskCache"><path codeLine="27" d="M967,99.5 C1001.95,99.5 1004.0218,146.3655 1001.9018,177.9525 " fill="none" id="ImagePipeline-to-BufferedDiskCache-1" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1001.5,183.939,1006.0937,175.2271,1001.8348,178.9502,998.1117,174.6913,1001.5,183.939" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link FileCache to DiskStorageCache--><g id="link_FileCache_DiskStorageCache"><path codeLine="29" d="M999,358 C999,375.658 999,381.9408 999,399.6784 " fill="none" id="FileCache-backto-DiskStorageCache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="999,340,993,358,1005,358,999,340" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BufferedDiskCache to FileCache--><g id="link_BufferedDiskCache_FileCache"><path codeLine="30" d="M999,244 C999,261.658 999,273.941 999,291.678 " fill="none" id="BufferedDiskCache-backto-FileCache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="999,232,995,238,999,244,1003,238,999,232" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[bLEzJiCm4Dxp55P6H9QCLPKX0IG4bIhr2OnpALOTEyhF44471a08YOK5gGC30nDlW7YRAA-1cz36IPm06QpuVDztttUw8mmd2JeDyHBcD096EQ0h0yalT6aQucW6eOXp3vDBgCF7d0WV_5vyXYbtio206FmZcgoKfqM86Qjgz1FMXX5Xif9loAmh5dUtnSTB-VaiJxCIGtaASO098ANgj3hF83z47XC9u0i6LGsdXV14nbFAbtz5ageXvt7sFw1getXwBTuVYyrN-N0_PiRKKy-5OE2xUVhJBST4E56TsssMSQ5wDWt6tfitVtMl9zN3RDaRzOgcrvQb5w0Brkb3rAt1dKpwCuiior5xrqFqnxaBiLNvW-fruiUqD-DIljsKczQ8T3LgLwkIgLkuBdfa-mOvcl4weGnsqVr_RMmBMAGYbioxZ7w50vdOSAo_0G00]--></g></svg>

<h3 id="内存缓存池"><a href="#内存缓存池" class="headerlink" title="内存缓存池"></a>内存缓存池</h3><p>Fresco的第一级和第二级内存缓存都是采用<code>LruCountingMemoryCache</code>来进行内存管理。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="344px" preserveAspectRatio="none" style="width:545px;height:344px;background:#FFFFFF;" version="1.1" viewBox="0 0 545 344" width="545px" zoomAndPan="magnify"><defs/><g><!--class LruCountingMemoryCache--><g id="elem_LruCountingMemoryCache"><rect codeLine="1" fill="#F1F1F1" height="80.5938" id="LruCountingMemoryCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="397" x="71.5" y="7"/><ellipse cx="171.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M173.5938,18.6719 C172.6563,18.2344 172.0625,18.0938 171.1875,18.0938 C168.5625,18.0938 166.5625,20.1719 166.5625,22.8906 L166.5625,24.0156 C166.5625,26.5938 168.6719,28.4844 171.5625,28.4844 C172.7813,28.4844 173.9375,28.1875 174.6875,27.6406 C175.2656,27.2344 175.5938,26.7813 175.5938,26.3906 C175.5938,25.9375 175.2031,25.5469 174.7344,25.5469 C174.5156,25.5469 174.3125,25.625 174.125,25.8125 C173.6719,26.2969 173.6719,26.2969 173.4844,26.3906 C173.0625,26.6563 172.375,26.7813 171.6094,26.7813 C169.5625,26.7813 168.2656,25.6875 168.2656,23.9844 L168.2656,22.8906 C168.2656,21.1094 169.5156,19.7969 171.25,19.7969 C171.8281,19.7969 172.4375,19.9531 172.9063,20.2031 C173.3906,20.4844 173.5625,20.7031 173.6563,21.1094 C173.7188,21.5156 173.75,21.6406 173.8906,21.7656 C174.0313,21.9063 174.2656,22.0156 174.4844,22.0156 C174.75,22.0156 175.0156,21.875 175.1875,21.6563 C175.2969,21.5 175.3281,21.3125 175.3281,20.8906 L175.3281,19.4688 C175.3281,19.0313 175.3125,18.9063 175.2188,18.75 C175.0625,18.4844 174.7813,18.3438 174.4844,18.3438 C174.1875,18.3438 173.9844,18.4375 173.7656,18.75 L173.5938,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="191.75" y="27.8467">LruCountingMemoryCache</text><line style="stroke:#181818;stroke-width:0.5;" x1="72.5" x2="467.5" y1="39" y2="39"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="385" x="77.5" y="55.9951">CountingLruMap&lt;K, Entry&lt;K, V&gt;&gt; mExclusiveEntries;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="373" x="77.5" y="72.292">CountingLruMap&lt;K, Entry&lt;K, V&gt;&gt; mCachedEntries;</text><line style="stroke:#181818;stroke-width:0.5;" x1="72.5" x2="467.5" y1="79.5938" y2="79.5938"/></g><!--class clm1--><g id="elem_clm1"><rect codeLine="5" fill="#F1F1F1" height="80.5938" id="clm1" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="246" x="7" y="148"/><ellipse cx="22" cy="164" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,159.6719 C23.4063,159.2344 22.8125,159.0938 21.9375,159.0938 C19.3125,159.0938 17.3125,161.1719 17.3125,163.8906 L17.3125,165.0156 C17.3125,167.5938 19.4219,169.4844 22.3125,169.4844 C23.5313,169.4844 24.6875,169.1875 25.4375,168.6406 C26.0156,168.2344 26.3438,167.7813 26.3438,167.3906 C26.3438,166.9375 25.9531,166.5469 25.4844,166.5469 C25.2656,166.5469 25.0625,166.625 24.875,166.8125 C24.4219,167.2969 24.4219,167.2969 24.2344,167.3906 C23.8125,167.6563 23.125,167.7813 22.3594,167.7813 C20.3125,167.7813 19.0156,166.6875 19.0156,164.9844 L19.0156,163.8906 C19.0156,162.1094 20.2656,160.7969 22,160.7969 C22.5781,160.7969 23.1875,160.9531 23.6563,161.2031 C24.1406,161.4844 24.3125,161.7031 24.4063,162.1094 C24.4688,162.5156 24.5,162.6406 24.6406,162.7656 C24.7813,162.9063 25.0156,163.0156 25.2344,163.0156 C25.5,163.0156 25.7656,162.875 25.9375,162.6563 C26.0469,162.5 26.0781,162.3125 26.0781,161.8906 L26.0781,160.4688 C26.0781,160.0313 26.0625,159.9063 25.9688,159.75 C25.8125,159.4844 25.5313,159.3438 25.2344,159.3438 C24.9375,159.3438 24.7344,159.4375 24.5156,159.75 L24.3438,159.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="36" y="168.8467">CountingLruMap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="95" x="161" y="145"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="93" x="162" y="157.1387">K, Entry&lt;K, V&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="252" y1="180" y2="180"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="13" y="196.9951">LinkedHashMap&lt;K, V&gt; mMap;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="13" y="213.292">int mSizeInBytes = 0;</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="252" y1="220.5938" y2="220.5938"/></g><!--class clm2--><g id="elem_clm2"><rect codeLine="9" fill="#F1F1F1" height="80.5938" id="clm2" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="246" x="288" y="148"/><ellipse cx="303" cy="164" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M305.3438,159.6719 C304.4063,159.2344 303.8125,159.0938 302.9375,159.0938 C300.3125,159.0938 298.3125,161.1719 298.3125,163.8906 L298.3125,165.0156 C298.3125,167.5938 300.4219,169.4844 303.3125,169.4844 C304.5313,169.4844 305.6875,169.1875 306.4375,168.6406 C307.0156,168.2344 307.3438,167.7813 307.3438,167.3906 C307.3438,166.9375 306.9531,166.5469 306.4844,166.5469 C306.2656,166.5469 306.0625,166.625 305.875,166.8125 C305.4219,167.2969 305.4219,167.2969 305.2344,167.3906 C304.8125,167.6563 304.125,167.7813 303.3594,167.7813 C301.3125,167.7813 300.0156,166.6875 300.0156,164.9844 L300.0156,163.8906 C300.0156,162.1094 301.2656,160.7969 303,160.7969 C303.5781,160.7969 304.1875,160.9531 304.6563,161.2031 C305.1406,161.4844 305.3125,161.7031 305.4063,162.1094 C305.4688,162.5156 305.5,162.6406 305.6406,162.7656 C305.7813,162.9063 306.0156,163.0156 306.2344,163.0156 C306.5,163.0156 306.7656,162.875 306.9375,162.6563 C307.0469,162.5 307.0781,162.3125 307.0781,161.8906 L307.0781,160.4688 C307.0781,160.0313 307.0625,159.9063 306.9688,159.75 C306.8125,159.4844 306.5313,159.3438 306.2344,159.3438 C305.9375,159.3438 305.7344,159.4375 305.5156,159.75 L305.3438,159.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="317" y="168.8467">CountingLruMap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="95" x="442" y="145"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="93" x="443" y="157.1387">K, Entry&lt;K, V&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="289" x2="533" y1="180" y2="180"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="294" y="196.9951">LinkedHashMap&lt;K, V&gt; mMap;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="294" y="213.292">int mSizeInBytes = 0;</text><line style="stroke:#181818;stroke-width:0.5;" x1="289" x2="533" y1="220.5938" y2="220.5938"/></g><!--class lhm1--><g id="elem_lhm1"><rect codeLine="15" fill="#F1F1F1" height="48" id="lhm1" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="172" x="44" y="289"/><ellipse cx="59" cy="305" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M61.3438,300.6719 C60.4063,300.2344 59.8125,300.0938 58.9375,300.0938 C56.3125,300.0938 54.3125,302.1719 54.3125,304.8906 L54.3125,306.0156 C54.3125,308.5938 56.4219,310.4844 59.3125,310.4844 C60.5313,310.4844 61.6875,310.1875 62.4375,309.6406 C63.0156,309.2344 63.3438,308.7813 63.3438,308.3906 C63.3438,307.9375 62.9531,307.5469 62.4844,307.5469 C62.2656,307.5469 62.0625,307.625 61.875,307.8125 C61.4219,308.2969 61.4219,308.2969 61.2344,308.3906 C60.8125,308.6563 60.125,308.7813 59.3594,308.7813 C57.3125,308.7813 56.0156,307.6875 56.0156,305.9844 L56.0156,304.8906 C56.0156,303.1094 57.2656,301.7969 59,301.7969 C59.5781,301.7969 60.1875,301.9531 60.6563,302.2031 C61.1406,302.4844 61.3125,302.7031 61.4063,303.1094 C61.4688,303.5156 61.5,303.6406 61.6406,303.7656 C61.7813,303.9063 62.0156,304.0156 62.2344,304.0156 C62.5,304.0156 62.7656,303.875 62.9375,303.6563 C63.0469,303.5 63.0781,303.3125 63.0781,302.8906 L63.0781,301.4688 C63.0781,301.0313 63.0625,300.9063 62.9688,300.75 C62.8125,300.4844 62.5313,300.3438 62.2344,300.3438 C61.9375,300.3438 61.7344,300.4375 61.5156,300.75 L61.3438,300.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="73" y="309.8467">LinkedHashMap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="26" x="193" y="286"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="24" x="194" y="298.1387">K, V</text><line style="stroke:#181818;stroke-width:0.5;" x1="45" x2="215" y1="321" y2="321"/><line style="stroke:#181818;stroke-width:0.5;" x1="45" x2="215" y1="329" y2="329"/></g><!--class lhm2--><g id="elem_lhm2"><rect codeLine="16" fill="#F1F1F1" height="48" id="lhm2" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="172" x="325" y="289"/><ellipse cx="340" cy="305" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M342.3438,300.6719 C341.4063,300.2344 340.8125,300.0938 339.9375,300.0938 C337.3125,300.0938 335.3125,302.1719 335.3125,304.8906 L335.3125,306.0156 C335.3125,308.5938 337.4219,310.4844 340.3125,310.4844 C341.5313,310.4844 342.6875,310.1875 343.4375,309.6406 C344.0156,309.2344 344.3438,308.7813 344.3438,308.3906 C344.3438,307.9375 343.9531,307.5469 343.4844,307.5469 C343.2656,307.5469 343.0625,307.625 342.875,307.8125 C342.4219,308.2969 342.4219,308.2969 342.2344,308.3906 C341.8125,308.6563 341.125,308.7813 340.3594,308.7813 C338.3125,308.7813 337.0156,307.6875 337.0156,305.9844 L337.0156,304.8906 C337.0156,303.1094 338.2656,301.7969 340,301.7969 C340.5781,301.7969 341.1875,301.9531 341.6563,302.2031 C342.1406,302.4844 342.3125,302.7031 342.4063,303.1094 C342.4688,303.5156 342.5,303.6406 342.6406,303.7656 C342.7813,303.9063 343.0156,304.0156 343.2344,304.0156 C343.5,304.0156 343.7656,303.875 343.9375,303.6563 C344.0469,303.5 344.0781,303.3125 344.0781,302.8906 L344.0781,301.4688 C344.0781,301.0313 344.0625,300.9063 343.9688,300.75 C343.8125,300.4844 343.5313,300.3438 343.2344,300.3438 C342.9375,300.3438 342.7344,300.4375 342.5156,300.75 L342.3438,300.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="354" y="309.8467">LinkedHashMap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="26" x="474" y="286"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="24" x="475" y="298.1387">K, V</text><line style="stroke:#181818;stroke-width:0.5;" x1="326" x2="496" y1="321" y2="321"/><line style="stroke:#181818;stroke-width:0.5;" x1="326" x2="496" y1="329" y2="329"/></g><!--reverse link LruCountingMemoryCache to clm1--><g id="link_LruCountingMemoryCache_clm1"><path codeLine="13" d="M221.3663,96.7868 C202.6203,115.3988 188.871,129.05 170.124,147.662 " fill="none" id="LruCountingMemoryCache-backto-clm1" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="229.882,88.332,222.8059,89.7208,221.3663,96.7868,228.4424,95.3979,229.882,88.332" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link LruCountingMemoryCache to clm2--><g id="link_LruCountingMemoryCache_clm2"><path codeLine="14" d="M318.9505,96.7566 C337.8295,115.3686 351.709,129.05 370.589,147.662 " fill="none" id="LruCountingMemoryCache-backto-clm2" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="310.405,88.332,311.8695,95.3928,318.9505,96.7566,317.486,89.6958,310.405,88.332" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link clm1 to lhm1--><g id="link_clm1_lhm1"><path codeLine="17" d="M130,241.272 C130,260.9732 130,272.0687 130,288.8428 " fill="none" id="clm1-backto-lhm1" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="130,229.272,126,235.272,130,241.272,134,235.272,130,229.272" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link clm2 to lhm2--><g id="link_clm2_lhm2"><path codeLine="18" d="M411,241.272 C411,260.9732 411,272.0687 411,288.8428 " fill="none" id="clm2-backto-lhm2" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="411,229.272,407,235.272,411,241.272,415,235.272,411,229.272" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[fL2z3e8m4DvvYWkZaKHPLGODYKQOJDYRqaXZMmmjHZI-kzTQd5GqThhUVNztL12j8MlQLTqgmzK-Px9kkXMX5ODh0FZw2O9oSfnlnv0gqtIsA984P7gcejNyn6oRCptxYkKSoYVb5b2N9FpC2u5ee49EVRQCgmChrqHN7boWD9QF35mPa3j-OHkrx0pJi839prRnNrPlBZkA8hV6m3pkexumT_b4XHh36Ak3DxEgde5h-Lzy1m00]--></g></svg>

<p>LruCountingMemoryCache包含了两个CountingLruMap：<code>mCachedEntries</code>保存所有缓存数据，即缓存池；<code>mExclusiveEntries</code>是回收队列，用于保存不再被使用的数据，这些数据是可以被安全回收的。<code>CountingLruMap</code>中的数据通过<code>LinkedHashMap</code>来保存，同时CountingLruMap中有一个mSizeInBytes变量，表示缓存数据的总大小，在每次添加和删除数据时都会更新mSizeInBytes。</p>
<p>缓存池中保存的是<code>Entry&lt;K, V&gt;</code>数据类型，然而添加和获取缓存数据都会通过<code>newClientReference</code>方法来创建一个<code>CloseableReference&lt;V&gt;</code>返回的是一个<code>CloseableReference&lt;V&gt;</code>类型的数据：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//LruCountingMemoryCache.java</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">synchronized</span> CloseableReference&lt;V&gt; <span class="title function_">newClientReference</span><span class="params">(<span class="keyword">final</span> Entry&lt;K, V&gt; entry)</span> &#123;</span><br><span class="line">    increaseClientCount(entry);</span><br><span class="line">    <span class="keyword">return</span> CloseableReference.of(</span><br><span class="line">        entry.valueRef.get(),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">ResourceReleaser</span>&lt;V&gt;() &#123;</span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">release</span><span class="params">(V unused)</span> &#123; <span class="comment">//当CloseableReference#close被调用时就会执行release方法</span></span><br><span class="line">            releaseClientReference(entry);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** Called when the client closes its reference. */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">releaseClientReference</span><span class="params">(<span class="keyword">final</span> Entry&lt;K, V&gt; entry)</span> &#123;</span><br><span class="line">    Preconditions.checkNotNull(entry);</span><br><span class="line">    <span class="type">boolean</span> isExclusiveAdded;</span><br><span class="line">    CloseableReference&lt;V&gt; oldRefToClose;</span><br><span class="line">    <span class="keyword">synchronized</span> (<span class="built_in">this</span>) &#123;</span><br><span class="line">      decreaseClientCount(entry);</span><br><span class="line">      isExclusiveAdded = maybeAddToExclusives(entry);</span><br><span class="line">      oldRefToClose = referenceToClose(entry);</span><br><span class="line">    &#125;</span><br><span class="line">    CloseableReference.closeSafely(oldRefToClose);</span><br><span class="line">    maybeNotifyExclusiveEntryInsertion(isExclusiveAdded ? entry : <span class="literal">null</span>);</span><br><span class="line">    maybeUpdateCacheParams();</span><br><span class="line">    maybeEvictEntries();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** Adds the entry to the exclusively owned queue if it is viable for eviction. */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">synchronized</span> <span class="type">boolean</span> <span class="title function_">maybeAddToExclusives</span><span class="params">(Entry&lt;K, V&gt; entry)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!entry.isOrphan &amp;&amp; entry.clientCount == <span class="number">0</span>) &#123;</span><br><span class="line">      mExclusiveEntries.put(entry.key, entry); <span class="comment">//添加到回收队列中</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>当数据消费者不再使用这条数据时，CloseableReference#close()就会被调用，进而调用到上面代码中的release回调方法，当这条数据的使用者数量为零时，就会把这条数据添加到<code>mExclusiveEntries</code>回收队列中，<code>mCachedEntries</code>依然会保留这条数据。当从缓存池get数据时，如果这条数据在回收队列中，将会从回收队列中移除掉，因为这条数据有了使用者，就不能被回收了。</p>
<p>再来看下缓存池的配置参数：</p>
<ul>
<li>maxCacheSize 缓存的最大大小，以字节为单位；</li>
<li>maxCacheEntries 缓存中能够保存的最大数量；</li>
<li>maxEvictionQueueSize 回收队列用于存储准备回收的数据，这个字段表示回收队列的最大字节数；</li>
<li>maxEvictionQueueEntries 回收队列可以保存的最大数量；</li>
<li>maxCacheEntrySize 单个缓存数据的最大内存；</li>
<li>paramsCheckIntervalMs 检查配置参数更新的间隔时间(以毫秒为单位)。当添加缓存、获取缓存等操作时，都会检查距离上次更新配置参数是否超过这个值，如果超过了，就会重新后去这些配置参数。</li>
</ul>
<p>上面这些参数用于确定缓存池的最大容量，当超过容量限制时就会触发回收动作，回收时只会删除已经在回收队列中的数据，不在回收队列中的数据说明还再被使用，是不能回收的。在添加、获取缓存数据时都会调用<code>maybeEvictEntries</code>来判断是否要对缓存池进行清理回收：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">maybeEvictEntries</span><span class="params">()</span> &#123;</span><br><span class="line">  ArrayList&lt;Entry&lt;K, V&gt;&gt; oldEntries;</span><br><span class="line">  <span class="keyword">synchronized</span> (<span class="built_in">this</span>) &#123;</span><br><span class="line">    <span class="comment">//计算回收队列要保留的数据个数</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">maxCount</span> <span class="operator">=</span></span><br><span class="line">        Math.min(</span><br><span class="line">            mMemoryCacheParams.maxEvictionQueueEntries,</span><br><span class="line">            mMemoryCacheParams.maxCacheEntries - getInUseCount());</span><br><span class="line">    <span class="comment">//计算回收队列要保留数据的总大小</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">maxSize</span> <span class="operator">=</span></span><br><span class="line">        Math.min(</span><br><span class="line">            mMemoryCacheParams.maxEvictionQueueSize,</span><br><span class="line">            mMemoryCacheParams.maxCacheSize - getInUseSizeInBytes());</span><br><span class="line">    oldEntries = trimExclusivelyOwnedEntries(maxCount, maxSize);</span><br><span class="line">    makeOrphans(oldEntries);</span><br><span class="line">  &#125;</span><br><span class="line">  maybeClose(oldEntries);</span><br><span class="line">  maybeNotifyExclusiveEntryRemoval(oldEntries);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取正在被使用的数据的个数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="type">int</span> <span class="title function_">getInUseCount</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> mCachedEntries.getCount() - mExclusiveEntries.getCount();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//执行回收工作</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">synchronized</span> ArrayList&lt;Entry&lt;K, V&gt;&gt; <span class="title function_">trimExclusivelyOwnedEntries</span><span class="params">(<span class="type">int</span> count, <span class="type">int</span> size)</span> &#123;</span><br><span class="line">  count = Math.max(count, <span class="number">0</span>);</span><br><span class="line">  size = Math.max(size, <span class="number">0</span>);</span><br><span class="line">  <span class="comment">// fast path without array allocation if no eviction is necessary</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">this</span>.mExclusiveEntries.getCount() &lt;= count &amp;&amp; mExclusiveEntries.getSizeInBytes() &lt;= size) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  ArrayList&lt;Entry&lt;K, V&gt;&gt; oldEntries = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">  <span class="comment">//循环从回收队列删除数据，直到同时满足小于等于size和count</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">this</span>.mExclusiveEntries.getCount() &gt; count || mExclusiveEntries.getSizeInBytes() &gt; size) &#123;</span><br><span class="line">    <span class="meta">@Nullable</span> <span class="type">K</span> <span class="variable">key</span> <span class="operator">=</span> mExclusiveEntries.getFirstKey(); <span class="comment">//获取回收队列中最早添加的数据</span></span><br><span class="line">    ......</span><br><span class="line">    mExclusiveEntries.remove(key); <span class="comment">//从回收队列中删除</span></span><br><span class="line">    oldEntries.add(mCachedEntries.remove(key)); <span class="comment">//从缓存池删除</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> oldEntries;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="内存块缓存池-MemoryChunkPool"><a href="#内存块缓存池-MemoryChunkPool" class="headerlink" title="内存块缓存池-MemoryChunkPool"></a>内存块缓存池-MemoryChunkPool</h3><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="608px" preserveAspectRatio="none" style="width:977px;height:608px;background:#FFFFFF;" version="1.1" viewBox="0 0 977 608" width="977px" zoomAndPan="magnify"><defs/><g><!--class MemoryChunkPool--><g id="elem_MemoryChunkPool"><rect codeLine="1" fill="#F1F1F1" height="48" id="MemoryChunkPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="165" x="386" y="139"/><ellipse cx="401" cy="155" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M403.0781,156.8125 L403.4688,157.7969 L403.0781,157.7969 C402.625,157.7969 402.5156,157.8125 402.3594,157.9219 C402.1094,158.0781 401.9531,158.3594 401.9531,158.6563 C401.9531,158.9219 402.0938,159.1719 402.3125,159.3281 C402.4531,159.4531 402.6563,159.5 403.0781,159.5 L405.4375,159.5 C405.7969,159.5 406.0156,159.4688 406.1563,159.375 C406.4063,159.2344 406.5625,158.9375 406.5625,158.6563 C406.5625,158.375 406.4219,158.125 406.2031,157.9688 C406.0313,157.8281 405.875,157.7969 405.4063,157.7969 L402.0156,149.5938 L398.3438,149.5938 C397.8906,149.5938 397.7656,149.6094 397.6094,149.7031 C397.3594,149.875 397.2031,150.1563 397.2031,150.4375 C397.2031,150.7188 397.3438,150.9688 397.5625,151.1406 C397.7344,151.25 397.9063,151.2813 398.3438,151.2813 L399.4219,151.2813 L396.7813,157.7969 C396.3594,157.7969 396.2031,157.8125 396.0469,157.9219 C395.7969,158.0781 395.6406,158.3594 395.6406,158.6563 C395.6406,159.2188 396.0156,159.5 396.7656,159.5 L399.0313,159.5 C399.3906,159.5 399.6094,159.4688 399.7344,159.375 C400,159.2344 400.1406,158.9375 400.1406,158.6563 C400.1406,158.375 400.0156,158.125 399.7969,157.9531 C399.625,157.8281 399.4844,157.7969 399.0313,157.7969 L398.6406,157.7969 L399.0313,156.8125 L403.0781,156.8125 Z M402.375,155.1094 L399.7031,155.1094 L401.0469,151.8438 L402.375,155.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="133" x="415" y="159.8467">MemoryChunkPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="387" x2="550" y1="171" y2="171"/><line style="stroke:#181818;stroke-width:0.5;" x1="387" x2="550" y1="179" y2="179"/></g><!--class BufferMemoryChunkPool--><g id="elem_BufferMemoryChunkPool"><rect fill="#F1F1F1" height="48" id="BufferMemoryChunkPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="211" x="7" y="319"/><ellipse cx="22" cy="335" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,330.6719 C23.4063,330.2344 22.8125,330.0938 21.9375,330.0938 C19.3125,330.0938 17.3125,332.1719 17.3125,334.8906 L17.3125,336.0156 C17.3125,338.5938 19.4219,340.4844 22.3125,340.4844 C23.5313,340.4844 24.6875,340.1875 25.4375,339.6406 C26.0156,339.2344 26.3438,338.7813 26.3438,338.3906 C26.3438,337.9375 25.9531,337.5469 25.4844,337.5469 C25.2656,337.5469 25.0625,337.625 24.875,337.8125 C24.4219,338.2969 24.4219,338.2969 24.2344,338.3906 C23.8125,338.6563 23.125,338.7813 22.3594,338.7813 C20.3125,338.7813 19.0156,337.6875 19.0156,335.9844 L19.0156,334.8906 C19.0156,333.1094 20.2656,331.7969 22,331.7969 C22.5781,331.7969 23.1875,331.9531 23.6563,332.2031 C24.1406,332.4844 24.3125,332.7031 24.4063,333.1094 C24.4688,333.5156 24.5,333.6406 24.6406,333.7656 C24.7813,333.9063 25.0156,334.0156 25.2344,334.0156 C25.5,334.0156 25.7656,333.875 25.9375,333.6563 C26.0469,333.5 26.0781,333.3125 26.0781,332.8906 L26.0781,331.4688 C26.0781,331.0313 26.0625,330.9063 25.9688,330.75 C25.8125,330.4844 25.5313,330.3438 25.2344,330.3438 C24.9375,330.3438 24.7344,330.4375 24.5156,330.75 L24.3438,330.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="36" y="339.8467">BufferMemoryChunkPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="217" y1="351" y2="351"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="217" y1="359" y2="359"/></g><!--class BufferMemoryChunk--><g id="elem_BufferMemoryChunk"><rect fill="#F1F1F1" height="48" id="BufferMemoryChunk" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="180" x="49.5" y="444"/><ellipse cx="64.5" cy="460" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M66.8438,455.6719 C65.9063,455.2344 65.3125,455.0938 64.4375,455.0938 C61.8125,455.0938 59.8125,457.1719 59.8125,459.8906 L59.8125,461.0156 C59.8125,463.5938 61.9219,465.4844 64.8125,465.4844 C66.0313,465.4844 67.1875,465.1875 67.9375,464.6406 C68.5156,464.2344 68.8438,463.7813 68.8438,463.3906 C68.8438,462.9375 68.4531,462.5469 67.9844,462.5469 C67.7656,462.5469 67.5625,462.625 67.375,462.8125 C66.9219,463.2969 66.9219,463.2969 66.7344,463.3906 C66.3125,463.6563 65.625,463.7813 64.8594,463.7813 C62.8125,463.7813 61.5156,462.6875 61.5156,460.9844 L61.5156,459.8906 C61.5156,458.1094 62.7656,456.7969 64.5,456.7969 C65.0781,456.7969 65.6875,456.9531 66.1563,457.2031 C66.6406,457.4844 66.8125,457.7031 66.9063,458.1094 C66.9688,458.5156 67,458.6406 67.1406,458.7656 C67.2813,458.9063 67.5156,459.0156 67.7344,459.0156 C68,459.0156 68.2656,458.875 68.4375,458.6563 C68.5469,458.5 68.5781,458.3125 68.5781,457.8906 L68.5781,456.4688 C68.5781,456.0313 68.5625,455.9063 68.4688,455.75 C68.3125,455.4844 68.0313,455.3438 67.7344,455.3438 C67.4375,455.3438 67.2344,455.4375 67.0156,455.75 L66.8438,455.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="78.5" y="464.8467">BufferMemoryChunk</text><line style="stroke:#181818;stroke-width:0.5;" x1="50.5" x2="228.5" y1="476" y2="476"/><line style="stroke:#181818;stroke-width:0.5;" x1="50.5" x2="228.5" y1="484" y2="484"/></g><!--class AshmemMemoryChunkPool--><g id="elem_AshmemMemoryChunkPool"><rect fill="#F1F1F1" height="48" id="AshmemMemoryChunkPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="229" x="253" y="319"/><ellipse cx="268" cy="335" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M270.3438,330.6719 C269.4063,330.2344 268.8125,330.0938 267.9375,330.0938 C265.3125,330.0938 263.3125,332.1719 263.3125,334.8906 L263.3125,336.0156 C263.3125,338.5938 265.4219,340.4844 268.3125,340.4844 C269.5313,340.4844 270.6875,340.1875 271.4375,339.6406 C272.0156,339.2344 272.3438,338.7813 272.3438,338.3906 C272.3438,337.9375 271.9531,337.5469 271.4844,337.5469 C271.2656,337.5469 271.0625,337.625 270.875,337.8125 C270.4219,338.2969 270.4219,338.2969 270.2344,338.3906 C269.8125,338.6563 269.125,338.7813 268.3594,338.7813 C266.3125,338.7813 265.0156,337.6875 265.0156,335.9844 L265.0156,334.8906 C265.0156,333.1094 266.2656,331.7969 268,331.7969 C268.5781,331.7969 269.1875,331.9531 269.6563,332.2031 C270.1406,332.4844 270.3125,332.7031 270.4063,333.1094 C270.4688,333.5156 270.5,333.6406 270.6406,333.7656 C270.7813,333.9063 271.0156,334.0156 271.2344,334.0156 C271.5,334.0156 271.7656,333.875 271.9375,333.6563 C272.0469,333.5 272.0781,333.3125 272.0781,332.8906 L272.0781,331.4688 C272.0781,331.0313 272.0625,330.9063 271.9688,330.75 C271.8125,330.4844 271.5313,330.3438 271.2344,330.3438 C270.9375,330.3438 270.7344,330.4375 270.5156,330.75 L270.3438,330.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="282" y="339.8467">AshmemMemoryChunkPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="254" x2="481" y1="351" y2="351"/><line style="stroke:#181818;stroke-width:0.5;" x1="254" x2="481" y1="359" y2="359"/></g><!--class NativeMemoryChunkPool--><g id="elem_NativeMemoryChunkPool"><rect fill="#F1F1F1" height="48" id="NativeMemoryChunkPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="212" x="517.5" y="319"/><ellipse cx="532.5" cy="335" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M534.8438,330.6719 C533.9063,330.2344 533.3125,330.0938 532.4375,330.0938 C529.8125,330.0938 527.8125,332.1719 527.8125,334.8906 L527.8125,336.0156 C527.8125,338.5938 529.9219,340.4844 532.8125,340.4844 C534.0313,340.4844 535.1875,340.1875 535.9375,339.6406 C536.5156,339.2344 536.8438,338.7813 536.8438,338.3906 C536.8438,337.9375 536.4531,337.5469 535.9844,337.5469 C535.7656,337.5469 535.5625,337.625 535.375,337.8125 C534.9219,338.2969 534.9219,338.2969 534.7344,338.3906 C534.3125,338.6563 533.625,338.7813 532.8594,338.7813 C530.8125,338.7813 529.5156,337.6875 529.5156,335.9844 L529.5156,334.8906 C529.5156,333.1094 530.7656,331.7969 532.5,331.7969 C533.0781,331.7969 533.6875,331.9531 534.1563,332.2031 C534.6406,332.4844 534.8125,332.7031 534.9063,333.1094 C534.9688,333.5156 535,333.6406 535.1406,333.7656 C535.2813,333.9063 535.5156,334.0156 535.7344,334.0156 C536,334.0156 536.2656,333.875 536.4375,333.6563 C536.5469,333.5 536.5781,333.3125 536.5781,332.8906 L536.5781,331.4688 C536.5781,331.0313 536.5625,330.9063 536.4688,330.75 C536.3125,330.4844 536.0313,330.3438 535.7344,330.3438 C535.4375,330.3438 535.2344,330.4375 535.0156,330.75 L534.8438,330.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="180" x="546.5" y="339.8467">NativeMemoryChunkPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="518.5" x2="728.5" y1="351" y2="351"/><line style="stroke:#181818;stroke-width:0.5;" x1="518.5" x2="728.5" y1="359" y2="359"/></g><!--class NativeMemoryChunk--><g id="elem_NativeMemoryChunk"><rect fill="#F1F1F1" height="48" id="NativeMemoryChunk" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="181" x="510" y="444"/><ellipse cx="525" cy="460" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M527.3438,455.6719 C526.4063,455.2344 525.8125,455.0938 524.9375,455.0938 C522.3125,455.0938 520.3125,457.1719 520.3125,459.8906 L520.3125,461.0156 C520.3125,463.5938 522.4219,465.4844 525.3125,465.4844 C526.5313,465.4844 527.6875,465.1875 528.4375,464.6406 C529.0156,464.2344 529.3438,463.7813 529.3438,463.3906 C529.3438,462.9375 528.9531,462.5469 528.4844,462.5469 C528.2656,462.5469 528.0625,462.625 527.875,462.8125 C527.4219,463.2969 527.4219,463.2969 527.2344,463.3906 C526.8125,463.6563 526.125,463.7813 525.3594,463.7813 C523.3125,463.7813 522.0156,462.6875 522.0156,460.9844 L522.0156,459.8906 C522.0156,458.1094 523.2656,456.7969 525,456.7969 C525.5781,456.7969 526.1875,456.9531 526.6563,457.2031 C527.1406,457.4844 527.3125,457.7031 527.4063,458.1094 C527.4688,458.5156 527.5,458.6406 527.6406,458.7656 C527.7813,458.9063 528.0156,459.0156 528.2344,459.0156 C528.5,459.0156 528.7656,458.875 528.9375,458.6563 C529.0469,458.5 529.0781,458.3125 529.0781,457.8906 L529.0781,456.4688 C529.0781,456.0313 529.0625,455.9063 528.9688,455.75 C528.8125,455.4844 528.5313,455.3438 528.2344,455.3438 C527.9375,455.3438 527.7344,455.4375 527.5156,455.75 L527.3438,455.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="539" y="464.8467">NativeMemoryChunk</text><line style="stroke:#181818;stroke-width:0.5;" x1="511" x2="690" y1="476" y2="476"/><line style="stroke:#181818;stroke-width:0.5;" x1="511" x2="690" y1="484" y2="484"/></g><!--class MemoryChunk--><g id="elem_MemoryChunk"><rect codeLine="7" fill="#F1F1F1" height="48" id="MemoryChunk" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="135" x="396" y="553"/><ellipse cx="411" cy="569" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M411.9531,565.7813 L413.6719,565.7813 C414.0625,565.7813 414.25,565.75 414.375,565.6719 C414.6406,565.5156 414.7813,565.2344 414.7813,564.9375 C414.7813,564.6719 414.6719,564.4063 414.4375,564.2344 C414.2656,564.125 414.125,564.0938 413.6719,564.0938 L408.5313,564.0938 C408.0938,564.0938 407.9688,564.1094 407.8125,564.2031 C407.5625,564.3594 407.4063,564.6563 407.4063,564.9375 C407.4063,565.2188 407.5469,565.4688 407.7656,565.6406 C407.9219,565.75 408.1094,565.7813 408.5313,565.7813 L410.25,565.7813 L410.25,572.2969 L408.5313,572.2969 C408.0938,572.2969 407.9688,572.3125 407.8125,572.4219 C407.5625,572.5781 407.4063,572.8594 407.4063,573.1563 C407.4063,573.4063 407.5469,573.6719 407.7656,573.8281 C407.9219,573.9531 408.125,574 408.5313,574 L413.6719,574 C414.4219,574 414.7813,573.7188 414.7813,573.1563 C414.7813,572.875 414.6719,572.625 414.4375,572.4531 C414.2656,572.3281 414.125,572.2969 413.6719,572.2969 L411.9531,572.2969 L411.9531,565.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="103" x="425" y="573.8467">MemoryChunk</text><line style="stroke:#181818;stroke-width:0.5;" x1="397" x2="530" y1="585" y2="585"/><line style="stroke:#181818;stroke-width:0.5;" x1="397" x2="530" y1="593" y2="593"/></g><!--class AshmemMemoryChunk--><g id="elem_AshmemMemoryChunk"><rect fill="#F1F1F1" height="48" id="AshmemMemoryChunk" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="198" x="274.5" y="444"/><ellipse cx="289.5" cy="460" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M291.8438,455.6719 C290.9063,455.2344 290.3125,455.0938 289.4375,455.0938 C286.8125,455.0938 284.8125,457.1719 284.8125,459.8906 L284.8125,461.0156 C284.8125,463.5938 286.9219,465.4844 289.8125,465.4844 C291.0313,465.4844 292.1875,465.1875 292.9375,464.6406 C293.5156,464.2344 293.8438,463.7813 293.8438,463.3906 C293.8438,462.9375 293.4531,462.5469 292.9844,462.5469 C292.7656,462.5469 292.5625,462.625 292.375,462.8125 C291.9219,463.2969 291.9219,463.2969 291.7344,463.3906 C291.3125,463.6563 290.625,463.7813 289.8594,463.7813 C287.8125,463.7813 286.5156,462.6875 286.5156,460.9844 L286.5156,459.8906 C286.5156,458.1094 287.7656,456.7969 289.5,456.7969 C290.0781,456.7969 290.6875,456.9531 291.1563,457.2031 C291.6406,457.4844 291.8125,457.7031 291.9063,458.1094 C291.9688,458.5156 292,458.6406 292.1406,458.7656 C292.2813,458.9063 292.5156,459.0156 292.7344,459.0156 C293,459.0156 293.2656,458.875 293.4375,458.6563 C293.5469,458.5 293.5781,458.3125 293.5781,457.8906 L293.5781,456.4688 C293.5781,456.0313 293.5625,455.9063 293.4688,455.75 C293.3125,455.4844 293.0313,455.3438 292.7344,455.3438 C292.4375,455.3438 292.2344,455.4375 292.0156,455.75 L291.8438,455.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="303.5" y="464.8467">AshmemMemoryChunk</text><line style="stroke:#181818;stroke-width:0.5;" x1="275.5" x2="471.5" y1="476" y2="476"/><line style="stroke:#181818;stroke-width:0.5;" x1="275.5" x2="471.5" y1="484" y2="484"/></g><!--class BasePool--><g id="elem_BasePool"><rect codeLine="13" fill="#F1F1F1" height="64.2969" id="BasePool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="373" x="383" y="10"/><ellipse cx="487.25" cy="26" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M489.3281,27.8125 L489.7188,28.7969 L489.3281,28.7969 C488.875,28.7969 488.7656,28.8125 488.6094,28.9219 C488.3594,29.0781 488.2031,29.3594 488.2031,29.6563 C488.2031,29.9219 488.3438,30.1719 488.5625,30.3281 C488.7031,30.4531 488.9063,30.5 489.3281,30.5 L491.6875,30.5 C492.0469,30.5 492.2656,30.4688 492.4063,30.375 C492.6563,30.2344 492.8125,29.9375 492.8125,29.6563 C492.8125,29.375 492.6719,29.125 492.4531,28.9688 C492.2813,28.8281 492.125,28.7969 491.6563,28.7969 L488.2656,20.5938 L484.5938,20.5938 C484.1406,20.5938 484.0156,20.6094 483.8594,20.7031 C483.6094,20.875 483.4531,21.1563 483.4531,21.4375 C483.4531,21.7188 483.5938,21.9688 483.8125,22.1406 C483.9844,22.25 484.1563,22.2813 484.5938,22.2813 L485.6719,22.2813 L483.0313,28.7969 C482.6094,28.7969 482.4531,28.8125 482.2969,28.9219 C482.0469,29.0781 481.8906,29.3594 481.8906,29.6563 C481.8906,30.2188 482.2656,30.5 483.0156,30.5 L485.2813,30.5 C485.6406,30.5 485.8594,30.4688 485.9844,30.375 C486.25,30.2344 486.3906,29.9375 486.3906,29.6563 C486.3906,29.375 486.2656,29.125 486.0469,28.9531 C485.875,28.8281 485.7344,28.7969 485.2813,28.7969 L484.8906,28.7969 L485.2813,27.8125 L489.3281,27.8125 Z M488.625,26.1094 L485.9531,26.1094 L487.2969,22.8438 L488.625,26.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="65" x="507.75" y="30.8467">BasePool</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="89" x="670" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="87" x="671" y="19.1387">MemoryChunk</text><line style="stroke:#181818;stroke-width:0.5;" x1="384" x2="755" y1="42" y2="42"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="361" x="389" y="58.9951">SparseArray&lt;Bucket&lt;MemoryChunk&gt;&gt; mBuckets</text><line style="stroke:#181818;stroke-width:0.5;" x1="384" x2="755" y1="66.2969" y2="66.2969"/></g><!--class Bucket--><g id="elem_Bucket"><rect codeLine="19" fill="#F1F1F1" height="64.2969" id="Bucket" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="258" x="626.5" y="221"/><ellipse cx="680.25" cy="237" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M682.5938,232.6719 C681.6563,232.2344 681.0625,232.0938 680.1875,232.0938 C677.5625,232.0938 675.5625,234.1719 675.5625,236.8906 L675.5625,238.0156 C675.5625,240.5938 677.6719,242.4844 680.5625,242.4844 C681.7813,242.4844 682.9375,242.1875 683.6875,241.6406 C684.2656,241.2344 684.5938,240.7813 684.5938,240.3906 C684.5938,239.9375 684.2031,239.5469 683.7344,239.5469 C683.5156,239.5469 683.3125,239.625 683.125,239.8125 C682.6719,240.2969 682.6719,240.2969 682.4844,240.3906 C682.0625,240.6563 681.375,240.7813 680.6094,240.7813 C678.5625,240.7813 677.2656,239.6875 677.2656,237.9844 L677.2656,236.8906 C677.2656,235.1094 678.5156,233.7969 680.25,233.7969 C680.8281,233.7969 681.4375,233.9531 681.9063,234.2031 C682.3906,234.4844 682.5625,234.7031 682.6563,235.1094 C682.7188,235.5156 682.75,235.6406 682.8906,235.7656 C683.0313,235.9063 683.2656,236.0156 683.4844,236.0156 C683.75,236.0156 684.0156,235.875 684.1875,235.6563 C684.2969,235.5 684.3281,235.3125 684.3281,234.8906 L684.3281,233.4688 C684.3281,233.0313 684.3125,232.9063 684.2188,232.75 C684.0625,232.4844 683.7813,232.3438 683.4844,232.3438 C683.1875,232.3438 682.9844,232.4375 682.7656,232.75 L682.5938,232.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="700.75" y="241.8467">Bucket</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="89" x="798.5" y="218"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="87" x="799.5" y="230.1387">MemoryChunk</text><line style="stroke:#181818;stroke-width:0.5;" x1="627.5" x2="883.5" y1="253" y2="253"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="246" x="632.5" y="269.9951">Queue&lt;MemoryChunk&gt; mFreeList</text><line style="stroke:#181818;stroke-width:0.5;" x1="627.5" x2="883.5" y1="277.2969" y2="277.2969"/></g><!--link BufferMemoryChunkPool to BufferMemoryChunk--><g id="link_BufferMemoryChunkPool_BufferMemoryChunk"><path codeLine="2" d="M117.578,367.135 C122.406,389.126 128.3387,416.1515 133.1577,438.1075 " fill="none" id="BufferMemoryChunkPool-to-BufferMemoryChunk" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="134.444,443.968,136.4216,434.3197,133.3721,439.0842,128.6076,436.0348,134.444,443.968" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="129.5" y="410.0669">new</text></g><!--reverse link MemoryChunkPool to BufferMemoryChunkPool--><g id="link_MemoryChunkPool_BufferMemoryChunkPool"><path codeLine="3" d="M406.2243,195.1378 C337.9313,229.2838 226.84,284.83 158.594,318.953 " fill="none" id="MemoryChunkPool-backto-BufferMemoryChunkPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="422.324,187.088,403.541,189.7712,408.9075,200.5043,422.324,187.088" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link MemoryChunkPool to AshmemMemoryChunkPool--><g id="link_MemoryChunkPool_AshmemMemoryChunkPool"><path codeLine="4" d="M446.4128,202.9253 C427.0558,237.0393 400.066,284.607 380.707,318.724 " fill="none" id="MemoryChunkPool-backto-AshmemMemoryChunkPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="455.296,187.27,441.1944,199.9643,451.6313,205.8864,455.296,187.27" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link MemoryChunkPool to NativeMemoryChunkPool--><g id="link_MemoryChunkPool_NativeMemoryChunkPool"><path codeLine="5" d="M500.5844,200.8449 C530.2894,234.9589 573.523,284.607 603.231,318.724 " fill="none" id="MemoryChunkPool-backto-NativeMemoryChunkPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="488.764,187.27,496.0595,204.785,505.1094,196.9047,488.764,187.27" style="stroke:#181818;stroke-width:1.0;"/></g><!--link NativeMemoryChunkPool to NativeMemoryChunk--><g id="link_NativeMemoryChunkPool_NativeMemoryChunk"><path codeLine="6" d="M619.174,367.135 C615.062,389.126 610.0147,416.1142 605.9097,438.0702 " fill="none" id="NativeMemoryChunkPool-to-NativeMemoryChunk" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="604.807,443.968,610.3929,435.8564,605.7259,439.0532,602.5292,434.3862,604.807,443.968" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="614.5" y="410.0669">new</text></g><!--link NativeMemoryChunk to MemoryChunk--><g id="link_NativeMemoryChunk_MemoryChunk"><path codeLine="8" d="M570.773,492.217 C547.794,510.1649 530.32,523.8122 507.355,541.7483 " fill="none" id="NativeMemoryChunk-to-MemoryChunk" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="493.169,552.8279,511.0482,546.477,503.6618,537.0197,493.169,552.8279" style="stroke:#181818;stroke-width:1.0;"/></g><!--link BufferMemoryChunk to MemoryChunk--><g id="link_BufferMemoryChunk_MemoryChunk"><path codeLine="9" d="M209.404,492.086 C264.655,510.3321 324.2149,530.0016 378.8479,548.044 " fill="none" id="BufferMemoryChunk-to-MemoryChunk" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="395.94,553.6886,380.7295,542.3466,376.9664,553.7413,395.94,553.6886" style="stroke:#181818;stroke-width:1.0;"/></g><!--link AshmemMemoryChunkPool to AshmemMemoryChunk--><g id="link_AshmemMemoryChunkPool_AshmemMemoryChunk"><path codeLine="10" d="M368.629,367.135 C369.701,389.126 371.0124,416.0191 372.0844,437.9751 " fill="none" id="AshmemMemoryChunkPool-to-AshmemMemoryChunk" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="372.377,443.968,375.9333,434.7836,372.1332,438.9739,367.9429,435.1738,372.377,443.968" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="372.5" y="410.0669">new</text></g><!--link AshmemMemoryChunk to MemoryChunk--><g id="link_AshmemMemoryChunk_MemoryChunk"><path codeLine="11" d="M393.029,492.217 C408.125,510.1649 417.3367,521.1166 432.4227,539.0527 " fill="none" id="AshmemMemoryChunk-to-MemoryChunk" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="444.009,552.8279,437.0144,535.1906,427.8309,542.9148,444.009,552.8279" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BasePool to MemoryChunkPool--><g id="link_BasePool_MemoryChunkPool"><path codeLine="16" d="M528.0954,91.7835 C511.4534,111.3915 502.822,121.562 488.161,138.835 " fill="none" id="BasePool-backto-MemoryChunkPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="539.743,78.06,523.5209,87.9009,532.6699,95.666,539.743,78.06" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BasePool to Bucket--><g id="link_BasePool_Bucket"><path codeLine="22" d="M769.5,54 C833.785,54 791.086,159.65 769.868,216.602 " fill="none" id="BasePool-backto-Bucket" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="757.5,54,763.5,58,769.5,54,763.5,50,757.5,54" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="763.8" y="51.2119">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="762.759" y="209.8894">n</text></g><!--reverse link Bucket to MemoryChunk--><g id="link_Bucket_MemoryChunk"><path codeLine="23" d="M897.5,265 C922.835,265 970.476,315.296 708.5,492 C654.447,528.459 583.026,550.5653 531.253,562.8812 " fill="none" id="Bucket-backto-MemoryChunk" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="885.5,265,891.5,269,897.5,265,891.5,261,885.5,265" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="892.4094" y="262.2947">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="539.101" y="557.5908">n</text></g><!--SRC=[ZPBFYi8m48VlynH3ZmivU2sbO1SygQpi4yoMAHPDA_cp8kgxRxGDj9qSDfV2_BvyCqbAFzOPgXtMPx8MTwnxS_iy-kxqrVTdg7pJi5bKKQaIHO8vTdo59LiybCAa9eskxL6p_XUw9zV-yX9DLjyZYsGSkUqScuPgdXvVUeBZKSuGUGS2IHxdFOr8ncbaNKY1ugjLPFbbB2PnYNV0iBulP2olZQ5RKVdwn6v6bQY7geMdk5_bBw-cKGy0m_-Hy8pT3fuzpmEzCSpRrhhG89hoF7R5R9NXHtZ6hCj6BmoVmCITCsWY_mC0]--></g></svg>

<p>Fresco默认使用<code>NativeMemoryChunkPool</code>，而如果要使用<code>AshmemMemoryChunkPool</code>则必须配置开发打开，并且8.1及以上的android版本才能使用（<code>ImagePipelineConfig#getMemoryChunkType</code>）。</p>
<ul>
<li>NativeMemoryChunk使用nativce内存，通过C函数malloc来申请内存；</li>
<li>AshmemMemoryChunk使用匿名共享内存，通过<code>android.os.SharedMemory#create</code>来申请内存；</li>
<li>BufferMemoryChunk使用Java堆上的内存，通过<code>java.nio.ByteBuffer#allocateDirect</code>来申请内存；</li>
</ul>
<p>MemoryChunkPool中维护了一个int数组（mBucketSizes），是内存块大小列表，数组的值来自<code>PoolParams#bucketSizes</code>的keys，此处不会使用其value值。<code>PoolParams#bucketSizes</code>是个SparseIntArray类型，相当于map类型，key、value都是int。key表示内存块大小、value表示该大小的内存块的个数。默认值如下<small>（<em>默认值在<code>DefaultNativeMemoryChunkPoolParams#get</code>赋值</em>）</small>：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="264px" preserveAspectRatio="none" style="width:212px;height:264px;background:#FFFFFF;" version="1.1" viewBox="0 0 212 264" width="212px" zoomAndPan="magnify"><defs/><g><g id="elem_bucketSizes"><rect fill="#F1F1F1" height="243.5625" style="stroke:#181818;stroke-width:0.5;" width="191" x="7" y="7"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="14" y="21.9951">bucketSizes key=&gt;value</text><line style="stroke:#181818;stroke-width:1.0;" x1="7" x2="198" y1="27.2969" y2="27.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="29.5" y="42.292">1024 (1KB)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="9" x="134" y="42.292">5</text><line style="stroke:#181818;stroke-width:1.0;" x1="129" x2="129" y1="27.2969" y2="47.5938"/><line style="stroke:#181818;stroke-width:1.0;" x1="7" x2="198" y1="47.5938" y2="47.5938"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="30.5" y="62.5889">2048 (2KB)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="9" x="134" y="62.5889">5</text><line style="stroke:#181818;stroke-width:1.0;" x1="129" x2="129" y1="47.5938" y2="67.8906"/><line style="stroke:#181818;stroke-width:1.0;" x1="7" x2="198" y1="67.8906" y2="67.8906"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="29.5" y="82.8857">4096 (4KB)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="9" x="134" y="82.8857">5</text><line style="stroke:#181818;stroke-width:1.0;" x1="129" x2="129" y1="67.8906" y2="88.1875"/><line style="stroke:#181818;stroke-width:1.0;" x1="7" x2="198" y1="88.1875" y2="88.1875"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="30" y="103.1826">8192 (8KB)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="9" x="134" y="103.1826">5</text><line style="stroke:#181818;stroke-width:1.0;" x1="129" x2="129" y1="88.1875" y2="108.4844"/><line style="stroke:#181818;stroke-width:1.0;" x1="7" x2="198" y1="108.4844" y2="108.4844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="20.5" y="123.4795">16384 (16KB)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="9" x="134" y="123.4795">5</text><line style="stroke:#181818;stroke-width:1.0;" x1="129" x2="129" y1="108.4844" y2="128.7813"/><line style="stroke:#181818;stroke-width:1.0;" x1="7" x2="198" y1="128.7813" y2="128.7813"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="21" y="143.7764">32768 (32KB)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="9" x="134" y="143.7764">5</text><line style="stroke:#181818;stroke-width:1.0;" x1="129" x2="129" y1="128.7813" y2="149.0781"/><line style="stroke:#181818;stroke-width:1.0;" x1="7" x2="198" y1="149.0781" y2="149.0781"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="20" y="164.0732">65536 (64KB)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="9" x="134" y="164.0732">5</text><line style="stroke:#181818;stroke-width:1.0;" x1="129" x2="129" y1="149.0781" y2="169.375"/><line style="stroke:#181818;stroke-width:1.0;" x1="7" x2="198" y1="169.375" y2="169.375"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="12" y="184.3701">131072 (128KB)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="9" x="134" y="184.3701">5</text><line style="stroke:#181818;stroke-width:1.0;" x1="129" x2="129" y1="169.375" y2="189.6719"/><line style="stroke:#181818;stroke-width:1.0;" x1="7" x2="198" y1="189.6719" y2="189.6719"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="13" y="204.667">262144 (256KB)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="8" x="134" y="204.667">2</text><line style="stroke:#181818;stroke-width:1.0;" x1="129" x2="129" y1="189.6719" y2="209.9688"/><line style="stroke:#181818;stroke-width:1.0;" x1="7" x2="198" y1="209.9688" y2="209.9688"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="13.5" y="224.9639">524288 (512KB)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="8" x="134" y="224.9639">2</text><line style="stroke:#181818;stroke-width:1.0;" x1="129" x2="129" y1="209.9688" y2="230.2656"/><line style="stroke:#181818;stroke-width:1.0;" x1="7" x2="198" y1="230.2656" y2="230.2656"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="15" y="245.2607">1048576 (1MB)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="8" x="134" y="245.2607">2</text><line style="stroke:#181818;stroke-width:1.0;" x1="129" x2="129" y1="230.2656" y2="250.5625"/></g><!--SRC=[LS-n2i903CRntQS8dSxjahlahaCxk8gJJt3A3L85eQsWuhiR2mMJyH_umNShTsXEytceq_7ogYCCzTdrZtATQmDbXF_NUmDww2c2m_rk2rqFl3JoCOCZqw9l1LmqBMDBuB9fA27_G34rK18bWpM5EIWgLiM0FgcBP6KImgWqyMhJqfaYPSKPoNJK5PpKnyEQFry0]--></g></svg>

<p>当需要获取内存块时，会调用<code>MemoryChunkPool#get(int size)</code>来获取一个MemoryChunk。比如要获取一个60KB大小的内存块，就会在mBucketSizes数组中找大于等于60KB的最小值，所以，最终内存块大小是64KB。申请内存块时，如果内存池中已经有对应大小的内存块就返回，否则会创建一个新的内存块，并申请内存。</p>
<p><code>Bucket&lt;MemoryChunk&gt;</code>中维护的都是相同大小的内存块，使用一个Queue维护空闲的内存块，当内存块被取走后，就在Queue中删除了。当内存块使用完后再放入Queue中。</p>
<p><strong>使用场景：</strong></p>
<ul>
<li>NetworkFetchProducer中，图片从网络下载后，原始图片数据就会写入到一个MemoryChunk中。</li>
</ul>
<h3 id="字节内存缓存池-ByteArrayPool"><a href="#字节内存缓存池-ByteArrayPool" class="headerlink" title="字节内存缓存池 ByteArrayPool"></a>字节内存缓存池 ByteArrayPool</h3><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="281px" preserveAspectRatio="none" style="width:342px;height:281px;background:#FFFFFF;" version="1.1" viewBox="0 0 342 281" width="342px" zoomAndPan="magnify"><defs/><g><!--class BasePool--><g id="elem_BasePool"><rect codeLine="1" fill="#F1F1F1" height="48" id="BasePool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="160" x="7" y="118"/><ellipse cx="22" cy="134" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,129.6719 C23.4063,129.2344 22.8125,129.0938 21.9375,129.0938 C19.3125,129.0938 17.3125,131.1719 17.3125,133.8906 L17.3125,135.0156 C17.3125,137.5938 19.4219,139.4844 22.3125,139.4844 C23.5313,139.4844 24.6875,139.1875 25.4375,138.6406 C26.0156,138.2344 26.3438,137.7813 26.3438,137.3906 C26.3438,136.9375 25.9531,136.5469 25.4844,136.5469 C25.2656,136.5469 25.0625,136.625 24.875,136.8125 C24.4219,137.2969 24.4219,137.2969 24.2344,137.3906 C23.8125,137.6563 23.125,137.7813 22.3594,137.7813 C20.3125,137.7813 19.0156,136.6875 19.0156,134.9844 L19.0156,133.8906 C19.0156,132.1094 20.2656,130.7969 22,130.7969 C22.5781,130.7969 23.1875,130.9531 23.6563,131.2031 C24.1406,131.4844 24.3125,131.7031 24.4063,132.1094 C24.4688,132.5156 24.5,132.6406 24.6406,132.7656 C24.7813,132.9063 25.0156,133.0156 25.2344,133.0156 C25.5,133.0156 25.7656,132.875 25.9375,132.6563 C26.0469,132.5 26.0781,132.3125 26.0781,131.8906 L26.0781,130.4688 C26.0781,130.0313 26.0625,129.9063 25.9688,129.75 C25.8125,129.4844 25.5313,129.3438 25.2344,129.3438 C24.9375,129.3438 24.7344,129.4375 24.5156,129.75 L24.3438,129.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="36" y="138.8467">BasePool</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="61" x="109" y="115"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="59" x="110" y="127.1387">ByteArray</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="166" y1="150" y2="150"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="166" y1="158" y2="158"/></g><!--class Pool--><g id="elem_Pool"><rect codeLine="2" fill="#F1F1F1" height="48" id="Pool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="107" x="215.5" y="10"/><ellipse cx="230.5" cy="26" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M231.4531,22.7813 L233.1719,22.7813 C233.5625,22.7813 233.75,22.75 233.875,22.6719 C234.1406,22.5156 234.2813,22.2344 234.2813,21.9375 C234.2813,21.6719 234.1719,21.4063 233.9375,21.2344 C233.7656,21.125 233.625,21.0938 233.1719,21.0938 L228.0313,21.0938 C227.5938,21.0938 227.4688,21.1094 227.3125,21.2031 C227.0625,21.3594 226.9063,21.6563 226.9063,21.9375 C226.9063,22.2188 227.0469,22.4688 227.2656,22.6406 C227.4219,22.75 227.6094,22.7813 228.0313,22.7813 L229.75,22.7813 L229.75,29.2969 L228.0313,29.2969 C227.5938,29.2969 227.4688,29.3125 227.3125,29.4219 C227.0625,29.5781 226.9063,29.8594 226.9063,30.1563 C226.9063,30.4063 227.0469,30.6719 227.2656,30.8281 C227.4219,30.9531 227.625,31 228.0313,31 L233.1719,31 C233.9219,31 234.2813,30.7188 234.2813,30.1563 C234.2813,29.875 234.1719,29.625 233.9375,29.4531 C233.7656,29.3281 233.625,29.2969 233.1719,29.2969 L231.4531,29.2969 L231.4531,22.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="30" x="244.5" y="30.8467">Pool</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="43" x="282.5" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="41" x="283.5" y="19.1387">byte []</text><line style="stroke:#181818;stroke-width:0.5;" x1="216.5" x2="321.5" y1="42" y2="42"/><line style="stroke:#181818;stroke-width:0.5;" x1="216.5" x2="321.5" y1="50" y2="50"/></g><!--class ByteArrayPool--><g id="elem_ByteArrayPool"><rect codeLine="3" fill="#F1F1F1" height="48" id="ByteArrayPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="202.5" y="118"/><ellipse cx="217.5" cy="134" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M218.4531,130.7813 L220.1719,130.7813 C220.5625,130.7813 220.75,130.75 220.875,130.6719 C221.1406,130.5156 221.2813,130.2344 221.2813,129.9375 C221.2813,129.6719 221.1719,129.4063 220.9375,129.2344 C220.7656,129.125 220.625,129.0938 220.1719,129.0938 L215.0313,129.0938 C214.5938,129.0938 214.4688,129.1094 214.3125,129.2031 C214.0625,129.3594 213.9063,129.6563 213.9063,129.9375 C213.9063,130.2188 214.0469,130.4688 214.2656,130.6406 C214.4219,130.75 214.6094,130.7813 215.0313,130.7813 L216.75,130.7813 L216.75,137.2969 L215.0313,137.2969 C214.5938,137.2969 214.4688,137.3125 214.3125,137.4219 C214.0625,137.5781 213.9063,137.8594 213.9063,138.1563 C213.9063,138.4063 214.0469,138.6719 214.2656,138.8281 C214.4219,138.9531 214.625,139 215.0313,139 L220.1719,139 C220.9219,139 221.2813,138.7188 221.2813,138.1563 C221.2813,137.875 221.1719,137.625 220.9375,137.4531 C220.7656,137.3281 220.625,137.2969 220.1719,137.2969 L218.4531,137.2969 L218.4531,130.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="101" x="231.5" y="138.8467">ByteArrayPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="203.5" x2="334.5" y1="150" y2="150"/><line style="stroke:#181818;stroke-width:0.5;" x1="203.5" x2="334.5" y1="158" y2="158"/></g><!--class GenericByteArrayPool--><g id="elem_GenericByteArrayPool"><rect fill="#F1F1F1" height="48" id="GenericByteArrayPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="191" x="82.5" y="226"/><ellipse cx="97.5" cy="242" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M99.8438,237.6719 C98.9063,237.2344 98.3125,237.0938 97.4375,237.0938 C94.8125,237.0938 92.8125,239.1719 92.8125,241.8906 L92.8125,243.0156 C92.8125,245.5938 94.9219,247.4844 97.8125,247.4844 C99.0313,247.4844 100.1875,247.1875 100.9375,246.6406 C101.5156,246.2344 101.8438,245.7813 101.8438,245.3906 C101.8438,244.9375 101.4531,244.5469 100.9844,244.5469 C100.7656,244.5469 100.5625,244.625 100.375,244.8125 C99.9219,245.2969 99.9219,245.2969 99.7344,245.3906 C99.3125,245.6563 98.625,245.7813 97.8594,245.7813 C95.8125,245.7813 94.5156,244.6875 94.5156,242.9844 L94.5156,241.8906 C94.5156,240.1094 95.7656,238.7969 97.5,238.7969 C98.0781,238.7969 98.6875,238.9531 99.1563,239.2031 C99.6406,239.4844 99.8125,239.7031 99.9063,240.1094 C99.9688,240.5156 100,240.6406 100.1406,240.7656 C100.2813,240.9063 100.5156,241.0156 100.7344,241.0156 C101,241.0156 101.2656,240.875 101.4375,240.6563 C101.5469,240.5 101.5781,240.3125 101.5781,239.8906 L101.5781,238.4688 C101.5781,238.0313 101.5625,237.9063 101.4688,237.75 C101.3125,237.4844 101.0313,237.3438 100.7344,237.3438 C100.4375,237.3438 100.2344,237.4375 100.0156,237.75 L99.8438,237.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="111.5" y="246.8467">GenericByteArrayPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="83.5" x2="272.5" y1="258" y2="258"/><line style="stroke:#181818;stroke-width:0.5;" x1="83.5" x2="272.5" y1="266" y2="266"/></g><!--reverse link Pool to ByteArrayPool--><g id="link_Pool_ByteArrayPool"><path codeLine="4" d="M269,76 C269,93.658 269,99.941 269,117.678 " fill="none" id="Pool-backto-ByteArrayPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="269,58,263,76,275,76,269,58" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ByteArrayPool to GenericByteArrayPool--><g id="link_ByteArrayPool_GenericByteArrayPool"><path codeLine="5" d="M237.5294,179.6577 C222.3704,197.3161 213.249,207.9408 198.021,225.6784 " fill="none" id="ByteArrayPool-backto-GenericByteArrayPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="249.254,166,232.9768,175.7495,242.082,183.5659,249.254,166" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BasePool to GenericByteArrayPool--><g id="link_BasePool_GenericByteArrayPool"><path codeLine="6" d="M118.4704,179.6576 C133.6298,197.316 142.751,207.9408 157.979,225.6784 " fill="none" id="BasePool-backto-GenericByteArrayPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="106.7456,166,113.9178,183.5658,123.0229,175.7493,106.7456,166" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[Iyv9B2vMS4eiJWt8py-nSQeiINKiAagijEFAp2j9BKfBJ4vL0Cia0MKKecEHnU6AGGguG8I2JOskBfeu2W-Ym3qrBxKeCnbD7TGDk9K00000]--></g></svg>

<p>字节缓存池与内存块缓存池的机制是一样的，区别是内存块缓存池使用了1KB、2KB、4KB等一系列大小的内存块，而字节内存缓存池只有16KB大小的一种缓存块。一般作为一个临时内存来使用，使用完成后立马放回缓存池，</p>
<p><strong>使用场景：</strong></p>
<ul>
<li>网络请求数据从输入流中读数据到一个临时的buffer中，这个buffer就是从字节内存缓存池中拿到的；</li>
<li>图片缓存到磁盘中时，内存的输入流中先读取数据到一个buffer中，然后从buffer写入到磁盘的输出流，其中buffer也是从字节内存缓存池中拿到；</li>
</ul>
<h2 id="图片解码器"><a href="#图片解码器" class="headerlink" title="图片解码器"></a>图片解码器</h2><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="567px" preserveAspectRatio="none" style="width:1034px;height:567px;background:#FFFFFF;" version="1.1" viewBox="0 0 1034 567" width="1034px" zoomAndPan="magnify"><defs/><g><!--class ImageDecoder--><g id="elem_ImageDecoder"><rect codeLine="1" fill="#F1F1F1" height="48" id="ImageDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="138" x="530" y="7"/><ellipse cx="545" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M545.9531,19.7813 L547.6719,19.7813 C548.0625,19.7813 548.25,19.75 548.375,19.6719 C548.6406,19.5156 548.7813,19.2344 548.7813,18.9375 C548.7813,18.6719 548.6719,18.4063 548.4375,18.2344 C548.2656,18.125 548.125,18.0938 547.6719,18.0938 L542.5313,18.0938 C542.0938,18.0938 541.9688,18.1094 541.8125,18.2031 C541.5625,18.3594 541.4063,18.6563 541.4063,18.9375 C541.4063,19.2188 541.5469,19.4688 541.7656,19.6406 C541.9219,19.75 542.1094,19.7813 542.5313,19.7813 L544.25,19.7813 L544.25,26.2969 L542.5313,26.2969 C542.0938,26.2969 541.9688,26.3125 541.8125,26.4219 C541.5625,26.5781 541.4063,26.8594 541.4063,27.1563 C541.4063,27.4063 541.5469,27.6719 541.7656,27.8281 C541.9219,27.9531 542.125,28 542.5313,28 L547.6719,28 C548.4219,28 548.7813,27.7188 548.7813,27.1563 C548.7813,26.875 548.6719,26.625 548.4375,26.4531 C548.2656,26.3281 548.125,26.2969 547.6719,26.2969 L545.9531,26.2969 L545.9531,19.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="106" x="559" y="27.8467">ImageDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="531" x2="667" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="531" x2="667" y1="47" y2="47"/></g><!--class DefaultImageDecoder--><g id="elem_DefaultImageDecoder"><rect codeLine="3" fill="#F1F1F1" height="113.1875" id="DefaultImageDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="308" x="445" y="119"/><ellipse cx="515.75" cy="135" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M518.0938,130.6719 C517.1563,130.2344 516.5625,130.0938 515.6875,130.0938 C513.0625,130.0938 511.0625,132.1719 511.0625,134.8906 L511.0625,136.0156 C511.0625,138.5938 513.1719,140.4844 516.0625,140.4844 C517.2813,140.4844 518.4375,140.1875 519.1875,139.6406 C519.7656,139.2344 520.0938,138.7813 520.0938,138.3906 C520.0938,137.9375 519.7031,137.5469 519.2344,137.5469 C519.0156,137.5469 518.8125,137.625 518.625,137.8125 C518.1719,138.2969 518.1719,138.2969 517.9844,138.3906 C517.5625,138.6563 516.875,138.7813 516.1094,138.7813 C514.0625,138.7813 512.7656,137.6875 512.7656,135.9844 L512.7656,134.8906 C512.7656,133.1094 514.0156,131.7969 515.75,131.7969 C516.3281,131.7969 516.9375,131.9531 517.4063,132.2031 C517.8906,132.4844 518.0625,132.7031 518.1563,133.1094 C518.2188,133.5156 518.25,133.6406 518.3906,133.7656 C518.5313,133.9063 518.7656,134.0156 518.9844,134.0156 C519.25,134.0156 519.5156,133.875 519.6875,133.6563 C519.7969,133.5 519.8281,133.3125 519.8281,132.8906 L519.8281,131.4688 C519.8281,131.0313 519.8125,130.9063 519.7188,130.75 C519.5625,130.4844 519.2813,130.3438 518.9844,130.3438 C518.6875,130.3438 518.4844,130.4375 518.2656,130.75 L518.0938,130.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="536.25" y="139.8467">DefaultImageDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="446" x2="752" y1="151" y2="151"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="275" x="451" y="167.9951">ImageDecoder mAnimatedGifDecoder</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="296" x="451" y="184.292">ImageDecoder mAnimatedWebPDecoder</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="266" x="451" y="200.5889">PlatformDecoder mPlatformDecoder</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="237" x="451" y="216.8857">ImageDecoder mDefaultDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="446" x2="752" y1="224.1875" y2="224.1875"/></g><path d="M796.5,158 L796.5,166.5664 L688,212.0391 L796.5,174.5664 L796.5,183.1328 A0,0 0 0 0 796.5,183.1328 L1027.5,183.1328 A0,0 0 0 0 1027.5,183.1328 L1027.5,168 L1017.5,158 L796.5,158 A0,0 0 0 0 796.5,158 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1017.5,158 L1017.5,168 L1027.5,168 L1017.5,158 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="210" x="802.5" y="175.0669">&#20869;&#37096;&#31867;&#65292;&#26681;&#25454;&#22270;&#29255;&#26684;&#24335;&#36873;&#25321;Decoder</text><!--class PlatformDecoder--><g id="elem_PlatformDecoder"><rect codeLine="13" fill="#F1F1F1" height="48" id="PlatformDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="153" x="248.5" y="151.5"/><ellipse cx="263.5" cy="167.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M264.4531,164.2813 L266.1719,164.2813 C266.5625,164.2813 266.75,164.25 266.875,164.1719 C267.1406,164.0156 267.2813,163.7344 267.2813,163.4375 C267.2813,163.1719 267.1719,162.9063 266.9375,162.7344 C266.7656,162.625 266.625,162.5938 266.1719,162.5938 L261.0313,162.5938 C260.5938,162.5938 260.4688,162.6094 260.3125,162.7031 C260.0625,162.8594 259.9063,163.1563 259.9063,163.4375 C259.9063,163.7188 260.0469,163.9688 260.2656,164.1406 C260.4219,164.25 260.6094,164.2813 261.0313,164.2813 L262.75,164.2813 L262.75,170.7969 L261.0313,170.7969 C260.5938,170.7969 260.4688,170.8125 260.3125,170.9219 C260.0625,171.0781 259.9063,171.3594 259.9063,171.6563 C259.9063,171.9063 260.0469,172.1719 260.2656,172.3281 C260.4219,172.4531 260.625,172.5 261.0313,172.5 L266.1719,172.5 C266.9219,172.5 267.2813,172.2188 267.2813,171.6563 C267.2813,171.375 267.1719,171.125 266.9375,170.9531 C266.7656,170.8281 266.625,170.7969 266.1719,170.7969 L264.4531,170.7969 L264.4531,164.2813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="121" x="277.5" y="172.3467">PlatformDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="249.5" x2="400.5" y1="183.5" y2="183.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="249.5" x2="400.5" y1="191.5" y2="191.5"/></g><!--class DefaultDecoder--><g id="elem_DefaultDecoder"><rect codeLine="14" fill="#F1F1F1" height="48" id="DefaultDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="145" x="70.5" y="296"/><ellipse cx="85.5" cy="312" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M87.5781,313.8125 L87.9688,314.7969 L87.5781,314.7969 C87.125,314.7969 87.0156,314.8125 86.8594,314.9219 C86.6094,315.0781 86.4531,315.3594 86.4531,315.6563 C86.4531,315.9219 86.5938,316.1719 86.8125,316.3281 C86.9531,316.4531 87.1563,316.5 87.5781,316.5 L89.9375,316.5 C90.2969,316.5 90.5156,316.4688 90.6563,316.375 C90.9063,316.2344 91.0625,315.9375 91.0625,315.6563 C91.0625,315.375 90.9219,315.125 90.7031,314.9688 C90.5313,314.8281 90.375,314.7969 89.9063,314.7969 L86.5156,306.5938 L82.8438,306.5938 C82.3906,306.5938 82.2656,306.6094 82.1094,306.7031 C81.8594,306.875 81.7031,307.1563 81.7031,307.4375 C81.7031,307.7188 81.8438,307.9688 82.0625,308.1406 C82.2344,308.25 82.4063,308.2813 82.8438,308.2813 L83.9219,308.2813 L81.2813,314.7969 C80.8594,314.7969 80.7031,314.8125 80.5469,314.9219 C80.2969,315.0781 80.1406,315.3594 80.1406,315.6563 C80.1406,316.2188 80.5156,316.5 81.2656,316.5 L83.5313,316.5 C83.8906,316.5 84.1094,316.4688 84.2344,316.375 C84.5,316.2344 84.6406,315.9375 84.6406,315.6563 C84.6406,315.375 84.5156,315.125 84.2969,314.9531 C84.125,314.8281 83.9844,314.7969 83.5313,314.7969 L83.1406,314.7969 L83.5313,313.8125 L87.5781,313.8125 Z M86.875,312.1094 L84.2031,312.1094 L85.5469,308.8438 L86.875,312.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="113" x="99.5" y="316.8467">DefaultDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="71.5" x2="214.5" y1="328" y2="328"/><line style="stroke:#181818;stroke-width:0.5;" x1="71.5" x2="214.5" y1="336" y2="336"/></g><!--class OreoDecoder--><g id="elem_OreoDecoder"><rect fill="#F1F1F1" height="48" id="OreoDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="128" x="158" y="404"/><ellipse cx="173" cy="420" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M175.3438,415.6719 C174.4063,415.2344 173.8125,415.0938 172.9375,415.0938 C170.3125,415.0938 168.3125,417.1719 168.3125,419.8906 L168.3125,421.0156 C168.3125,423.5938 170.4219,425.4844 173.3125,425.4844 C174.5313,425.4844 175.6875,425.1875 176.4375,424.6406 C177.0156,424.2344 177.3438,423.7813 177.3438,423.3906 C177.3438,422.9375 176.9531,422.5469 176.4844,422.5469 C176.2656,422.5469 176.0625,422.625 175.875,422.8125 C175.4219,423.2969 175.4219,423.2969 175.2344,423.3906 C174.8125,423.6563 174.125,423.7813 173.3594,423.7813 C171.3125,423.7813 170.0156,422.6875 170.0156,420.9844 L170.0156,419.8906 C170.0156,418.1094 171.2656,416.7969 173,416.7969 C173.5781,416.7969 174.1875,416.9531 174.6563,417.2031 C175.1406,417.4844 175.3125,417.7031 175.4063,418.1094 C175.4688,418.5156 175.5,418.6406 175.6406,418.7656 C175.7813,418.9063 176.0156,419.0156 176.2344,419.0156 C176.5,419.0156 176.7656,418.875 176.9375,418.6563 C177.0469,418.5 177.0781,418.3125 177.0781,417.8906 L177.0781,416.4688 C177.0781,416.0313 177.0625,415.9063 176.9688,415.75 C176.8125,415.4844 176.5313,415.3438 176.2344,415.3438 C175.9375,415.3438 175.7344,415.4375 175.5156,415.75 L175.3438,415.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="187" y="424.8467">OreoDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="159" x2="285" y1="436" y2="436"/><line style="stroke:#181818;stroke-width:0.5;" x1="159" x2="285" y1="444" y2="444"/></g><!--class ArtDecoder--><g id="elem_ArtDecoder"><rect fill="#F1F1F1" height="48" id="ArtDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="7" y="404"/><ellipse cx="22" cy="420" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,415.6719 C23.4063,415.2344 22.8125,415.0938 21.9375,415.0938 C19.3125,415.0938 17.3125,417.1719 17.3125,419.8906 L17.3125,421.0156 C17.3125,423.5938 19.4219,425.4844 22.3125,425.4844 C23.5313,425.4844 24.6875,425.1875 25.4375,424.6406 C26.0156,424.2344 26.3438,423.7813 26.3438,423.3906 C26.3438,422.9375 25.9531,422.5469 25.4844,422.5469 C25.2656,422.5469 25.0625,422.625 24.875,422.8125 C24.4219,423.2969 24.4219,423.2969 24.2344,423.3906 C23.8125,423.6563 23.125,423.7813 22.3594,423.7813 C20.3125,423.7813 19.0156,422.6875 19.0156,420.9844 L19.0156,419.8906 C19.0156,418.1094 20.2656,416.7969 22,416.7969 C22.5781,416.7969 23.1875,416.9531 23.6563,417.2031 C24.1406,417.4844 24.3125,417.7031 24.4063,418.1094 C24.4688,418.5156 24.5,418.6406 24.6406,418.7656 C24.7813,418.9063 25.0156,419.0156 25.2344,419.0156 C25.5,419.0156 25.7656,418.875 25.9375,418.6563 C26.0469,418.5 26.0781,418.3125 26.0781,417.8906 L26.0781,416.4688 C26.0781,416.0313 26.0625,415.9063 25.9688,415.75 C25.8125,415.4844 25.5313,415.3438 25.2344,415.3438 C24.9375,415.3438 24.7344,415.4375 24.5156,415.75 L24.3438,415.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="36" y="424.8467">ArtDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="122" y1="436" y2="436"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="122" y1="444" y2="444"/></g><!--class PlatformDecoderFactory--><g id="elem_PlatformDecoderFactory"><rect fill="#F1F1F1" height="48" id="PlatformDecoderFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="210" x="219" y="512"/><ellipse cx="234" cy="528" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M236.3438,523.6719 C235.4063,523.2344 234.8125,523.0938 233.9375,523.0938 C231.3125,523.0938 229.3125,525.1719 229.3125,527.8906 L229.3125,529.0156 C229.3125,531.5938 231.4219,533.4844 234.3125,533.4844 C235.5313,533.4844 236.6875,533.1875 237.4375,532.6406 C238.0156,532.2344 238.3438,531.7813 238.3438,531.3906 C238.3438,530.9375 237.9531,530.5469 237.4844,530.5469 C237.2656,530.5469 237.0625,530.625 236.875,530.8125 C236.4219,531.2969 236.4219,531.2969 236.2344,531.3906 C235.8125,531.6563 235.125,531.7813 234.3594,531.7813 C232.3125,531.7813 231.0156,530.6875 231.0156,528.9844 L231.0156,527.8906 C231.0156,526.1094 232.2656,524.7969 234,524.7969 C234.5781,524.7969 235.1875,524.9531 235.6563,525.2031 C236.1406,525.4844 236.3125,525.7031 236.4063,526.1094 C236.4688,526.5156 236.5,526.6406 236.6406,526.7656 C236.7813,526.9063 237.0156,527.0156 237.2344,527.0156 C237.5,527.0156 237.7656,526.875 237.9375,526.6563 C238.0469,526.5 238.0781,526.3125 238.0781,525.8906 L238.0781,524.4688 C238.0781,524.0313 238.0625,523.9063 237.9688,523.75 C237.8125,523.4844 237.5313,523.3438 237.2344,523.3438 C236.9375,523.3438 236.7344,523.4375 236.5156,523.75 L236.3438,523.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="248" y="532.8467">PlatformDecoderFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="220" x2="428" y1="544" y2="544"/><line style="stroke:#181818;stroke-width:0.5;" x1="220" x2="428" y1="552" y2="552"/></g><!--class GingerbreadPurgeableDecoder--><g id="elem_GingerbreadPurgeableDecoder"><rect fill="#F1F1F1" height="48" id="GingerbreadPurgeableDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="255" x="567.5" y="404"/><ellipse cx="582.5" cy="420" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M584.8438,415.6719 C583.9063,415.2344 583.3125,415.0938 582.4375,415.0938 C579.8125,415.0938 577.8125,417.1719 577.8125,419.8906 L577.8125,421.0156 C577.8125,423.5938 579.9219,425.4844 582.8125,425.4844 C584.0313,425.4844 585.1875,425.1875 585.9375,424.6406 C586.5156,424.2344 586.8438,423.7813 586.8438,423.3906 C586.8438,422.9375 586.4531,422.5469 585.9844,422.5469 C585.7656,422.5469 585.5625,422.625 585.375,422.8125 C584.9219,423.2969 584.9219,423.2969 584.7344,423.3906 C584.3125,423.6563 583.625,423.7813 582.8594,423.7813 C580.8125,423.7813 579.5156,422.6875 579.5156,420.9844 L579.5156,419.8906 C579.5156,418.1094 580.7656,416.7969 582.5,416.7969 C583.0781,416.7969 583.6875,416.9531 584.1563,417.2031 C584.6406,417.4844 584.8125,417.7031 584.9063,418.1094 C584.9688,418.5156 585,418.6406 585.1406,418.7656 C585.2813,418.9063 585.5156,419.0156 585.7344,419.0156 C586,419.0156 586.2656,418.875 586.4375,418.6563 C586.5469,418.5 586.5781,418.3125 586.5781,417.8906 L586.5781,416.4688 C586.5781,416.0313 586.5625,415.9063 586.4688,415.75 C586.3125,415.4844 586.0313,415.3438 585.7344,415.3438 C585.4375,415.3438 585.2344,415.4375 585.0156,415.75 L584.8438,415.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="596.5" y="424.8467">GingerbreadPurgeableDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="568.5" x2="821.5" y1="436" y2="436"/><line style="stroke:#181818;stroke-width:0.5;" x1="568.5" x2="821.5" y1="444" y2="444"/></g><!--class KitKatPurgeableDecoder--><g id="elem_KitKatPurgeableDecoder"><rect fill="#F1F1F1" height="48" id="KitKatPurgeableDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="211" x="321.5" y="404"/><ellipse cx="336.5" cy="420" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M338.8438,415.6719 C337.9063,415.2344 337.3125,415.0938 336.4375,415.0938 C333.8125,415.0938 331.8125,417.1719 331.8125,419.8906 L331.8125,421.0156 C331.8125,423.5938 333.9219,425.4844 336.8125,425.4844 C338.0313,425.4844 339.1875,425.1875 339.9375,424.6406 C340.5156,424.2344 340.8438,423.7813 340.8438,423.3906 C340.8438,422.9375 340.4531,422.5469 339.9844,422.5469 C339.7656,422.5469 339.5625,422.625 339.375,422.8125 C338.9219,423.2969 338.9219,423.2969 338.7344,423.3906 C338.3125,423.6563 337.625,423.7813 336.8594,423.7813 C334.8125,423.7813 333.5156,422.6875 333.5156,420.9844 L333.5156,419.8906 C333.5156,418.1094 334.7656,416.7969 336.5,416.7969 C337.0781,416.7969 337.6875,416.9531 338.1563,417.2031 C338.6406,417.4844 338.8125,417.7031 338.9063,418.1094 C338.9688,418.5156 339,418.6406 339.1406,418.7656 C339.2813,418.9063 339.5156,419.0156 339.7344,419.0156 C340,419.0156 340.2656,418.875 340.4375,418.6563 C340.5469,418.5 340.5781,418.3125 340.5781,417.8906 L340.5781,416.4688 C340.5781,416.0313 340.5625,415.9063 340.4688,415.75 C340.3125,415.4844 340.0313,415.3438 339.7344,415.3438 C339.4375,415.3438 339.2344,415.4375 339.0156,415.75 L338.8438,415.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="350.5" y="424.8467">KitKatPurgeableDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="322.5" x2="531.5" y1="436" y2="436"/><line style="stroke:#181818;stroke-width:0.5;" x1="322.5" x2="531.5" y1="444" y2="444"/></g><!--class DalvikPurgeableDecoder--><g id="elem_DalvikPurgeableDecoder"><rect codeLine="23" fill="#F1F1F1" height="48" id="DalvikPurgeableDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="209" x="402.5" y="296"/><ellipse cx="417.5" cy="312" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M419.5781,313.8125 L419.9688,314.7969 L419.5781,314.7969 C419.125,314.7969 419.0156,314.8125 418.8594,314.9219 C418.6094,315.0781 418.4531,315.3594 418.4531,315.6563 C418.4531,315.9219 418.5938,316.1719 418.8125,316.3281 C418.9531,316.4531 419.1563,316.5 419.5781,316.5 L421.9375,316.5 C422.2969,316.5 422.5156,316.4688 422.6563,316.375 C422.9063,316.2344 423.0625,315.9375 423.0625,315.6563 C423.0625,315.375 422.9219,315.125 422.7031,314.9688 C422.5313,314.8281 422.375,314.7969 421.9063,314.7969 L418.5156,306.5938 L414.8438,306.5938 C414.3906,306.5938 414.2656,306.6094 414.1094,306.7031 C413.8594,306.875 413.7031,307.1563 413.7031,307.4375 C413.7031,307.7188 413.8438,307.9688 414.0625,308.1406 C414.2344,308.25 414.4063,308.2813 414.8438,308.2813 L415.9219,308.2813 L413.2813,314.7969 C412.8594,314.7969 412.7031,314.8125 412.5469,314.9219 C412.2969,315.0781 412.1406,315.3594 412.1406,315.6563 C412.1406,316.2188 412.5156,316.5 413.2656,316.5 L415.5313,316.5 C415.8906,316.5 416.1094,316.4688 416.2344,316.375 C416.5,316.2344 416.6406,315.9375 416.6406,315.6563 C416.6406,315.375 416.5156,315.125 416.2969,314.9531 C416.125,314.8281 415.9844,314.7969 415.5313,314.7969 L415.1406,314.7969 L415.5313,313.8125 L419.5781,313.8125 Z M418.875,312.1094 L416.2031,312.1094 L417.5469,308.8438 L418.875,312.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="177" x="431.5" y="316.8467">DalvikPurgeableDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="403.5" x2="610.5" y1="328" y2="328"/><line style="stroke:#181818;stroke-width:0.5;" x1="403.5" x2="610.5" y1="336" y2="336"/></g><!--class BitmapPool--><g id="elem_BitmapPool"><rect fill="#F1F1F1" height="48" id="BitmapPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="251" y="296"/><ellipse cx="266" cy="312" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M268.3438,307.6719 C267.4063,307.2344 266.8125,307.0938 265.9375,307.0938 C263.3125,307.0938 261.3125,309.1719 261.3125,311.8906 L261.3125,313.0156 C261.3125,315.5938 263.4219,317.4844 266.3125,317.4844 C267.5313,317.4844 268.6875,317.1875 269.4375,316.6406 C270.0156,316.2344 270.3438,315.7813 270.3438,315.3906 C270.3438,314.9375 269.9531,314.5469 269.4844,314.5469 C269.2656,314.5469 269.0625,314.625 268.875,314.8125 C268.4219,315.2969 268.4219,315.2969 268.2344,315.3906 C267.8125,315.6563 267.125,315.7813 266.3594,315.7813 C264.3125,315.7813 263.0156,314.6875 263.0156,312.9844 L263.0156,311.8906 C263.0156,310.1094 264.2656,308.7969 266,308.7969 C266.5781,308.7969 267.1875,308.9531 267.6563,309.2031 C268.1406,309.4844 268.3125,309.7031 268.4063,310.1094 C268.4688,310.5156 268.5,310.6406 268.6406,310.7656 C268.7813,310.9063 269.0156,311.0156 269.2344,311.0156 C269.5,311.0156 269.7656,310.875 269.9375,310.6563 C270.0469,310.5 270.0781,310.3125 270.0781,309.8906 L270.0781,308.4688 C270.0781,308.0313 270.0625,307.9063 269.9688,307.75 C269.8125,307.4844 269.5313,307.3438 269.2344,307.3438 C268.9375,307.3438 268.7344,307.4375 268.5156,307.75 L268.3438,307.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="280" y="316.8467">BitmapPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="252" x2="366" y1="328" y2="328"/><line style="stroke:#181818;stroke-width:0.5;" x1="252" x2="366" y1="336" y2="336"/></g><!--reverse link ImageDecoder to DefaultImageDecoder--><g id="link_ImageDecoder_DefaultImageDecoder"><path codeLine="2" d="M599,73.212 C599,89.38 599,93.724 599,114.707 " fill="none" id="ImageDecoder-backto-DefaultImageDecoder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="599,55.212,593,73.212,605,73.212,599,55.212" style="stroke:#181818;stroke-width:1.0;"/></g><!--link PlatformDecoder to DefaultImageDecoder--><g id="link_PlatformDecoder_DefaultImageDecoder"><path codeLine="15" d="M401.536,192.152 C415.581,194.15 418.182,195.5 432,195.5 " fill="none" id="PlatformDecoder-to-DefaultImageDecoder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="444,195.5,438,191.5,432,195.5,438,199.5,444,195.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link PlatformDecoder to DefaultDecoder--><g id="link_PlatformDecoder_DefaultDecoder"><path codeLine="16" d="M281.1804,210.8088 C247.3364,237.3078 206.473,269.303 172.634,295.798 " fill="none" id="PlatformDecoder-backto-DefaultDecoder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="295.353,199.712,277.4815,206.0846,284.8794,215.533,295.353,199.712" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DefaultDecoder to OreoDecoder--><g id="link_DefaultDecoder_OreoDecoder"><path codeLine="17" d="M170.8983,358.4327 C184.0583,376.0907 191.399,385.941 204.619,403.678 " fill="none" id="DefaultDecoder-backto-OreoDecoder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="160.142,344,166.0874,362.0181,175.7092,354.8473,160.142,344" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DefaultDecoder to ArtDecoder--><g id="link_DefaultDecoder_ArtDecoder"><path codeLine="18" d="M115.4071,358.4981 C102.4141,376.1561 95.2134,385.941 82.1612,403.678 " fill="none" id="DefaultDecoder-backto-ArtDecoder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="126.075,344,110.5744,354.9421,120.2398,362.0541,126.075,344" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link OreoDecoder to PlatformDecoderFactory--><g id="link_OreoDecoder_PlatformDecoderFactory"><path codeLine="19" d="M248.2923,456.3234 C265.2843,473.9818 284.49,493.9408 301.558,511.6784 " fill="none" id="OreoDecoder-backto-PlatformDecoderFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="244.132,452,247.4901,461.2587,247.5989,455.6029,253.2547,455.7116,244.132,452" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ArtDecoder to PlatformDecoderFactory--><g id="link_ArtDecoder_PlatformDecoderFactory"><path codeLine="20" d="M126.7519,454.2727 C170.0459,471.992 224.085,494.1083 267.464,511.8617 " fill="none" id="ArtDecoder-backto-PlatformDecoderFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="121.199,452,128.0132,459.111,125.8264,453.8939,131.0435,451.7071,121.199,452" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link GingerbreadPurgeableDecoder to PlatformDecoderFactory--><g id="link_GingerbreadPurgeableDecoder_PlatformDecoderFactory"><path codeLine="21" d="M608.7299,453.6484 C546.6069,471.3981 466.827,494.1922 404.664,511.9531 " fill="none" id="GingerbreadPurgeableDecoder-backto-PlatformDecoderFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="614.499,452,604.7464,450.6264,609.6914,453.3736,606.9442,458.3186,614.499,452" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link KitKatPurgeableDecoder to PlatformDecoderFactory--><g id="link_KitKatPurgeableDecoder_PlatformDecoderFactory"><path codeLine="22" d="M400.4696,456.3031 C383.3106,473.9615 363.897,493.9408 346.662,511.6784 " fill="none" id="KitKatPurgeableDecoder-backto-PlatformDecoderFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="404.651,452,395.5103,455.667,401.1665,455.5859,401.2477,461.2421,404.651,452" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link PlatformDecoder to DalvikPurgeableDecoder--><g id="link_PlatformDecoder_DalvikPurgeableDecoder"><path codeLine="24" d="M368.8196,210.8088 C402.6636,237.3078 443.527,269.303 477.366,295.798 " fill="none" id="PlatformDecoder-backto-DalvikPurgeableDecoder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="354.647,199.712,365.1206,215.533,372.5185,206.0846,354.647,199.712" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DalvikPurgeableDecoder to GingerbreadPurgeableDecoder--><g id="link_DalvikPurgeableDecoder_GingerbreadPurgeableDecoder"><path codeLine="25" d="M563.4724,352.8406 C594.8984,370.5596 622.475,386.108 653.962,403.862 " fill="none" id="DalvikPurgeableDecoder-backto-GingerbreadPurgeableDecoder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="547.793,344,560.5256,358.067,566.4193,347.6141,547.793,344" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DalvikPurgeableDecoder to KitKatPurgeableDecoder--><g id="link_DalvikPurgeableDecoder_KitKatPurgeableDecoder"><path codeLine="26" d="M478.7976,358.3673 C465.4706,376.0253 457.988,385.941 444.601,403.678 " fill="none" id="DalvikPurgeableDecoder-backto-KitKatPurgeableDecoder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="489.641,344,474.0085,354.7528,483.5867,361.9818,489.641,344" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DefaultDecoder to BitmapPool--><g id="link_DefaultDecoder_BitmapPool"><path codeLine="27" d="M227.625,320 C239.297,320 238.969,320 250.641,320 " fill="none" id="DefaultDecoder-backto-BitmapPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="215.625,320,221.625,324,227.625,320,221.625,316,215.625,320" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[ZP71IiD048RlUOez5_O5YWYLOf4UpCtp99cDYvjisKm4KK4GbQBY0tZfKI-2Hp7uDatfgQzWYqr9jaditdRc-__vTrR6X4Q0Z-meWX3xwEi0ZLE-iBqhpbaV1QIAAfIl84dgEkpIOSjJAKMzM4P060oaA0oQeHFqt3BbAY2XJRG1hKADrJfN0LmxiIPaHeQdnBIeYztjsgALw_J-RdxxDllyNcHF-UGhV_wOllxCnW_v99jcB_ERSVxuNl0O1smrnd7aPh5sKl0ICk0JgwolwDR7if_VuGe5yIrlcoj_dJMXWXmRr6tzdg664OVBbsXpmNWwuliLdrPmLyE1Z4Cqda48tDI429x2dOH3IKEWBOszV53dykm_v_KQwzdwyf-aBNsRhY6yzJCTpWuaHJ1ojLQ_]--></g></svg>

<h3 id="Bitmap内存占用"><a href="#Bitmap内存占用" class="headerlink" title="Bitmap内存占用"></a>Bitmap内存占用</h3><ul>
<li>Android 2.3.3 (API level 10)以及更早的Android版本中，Bitmap的像素数据保存在native内存中，像素数据内存的回收则在finalize()中进行回收，存在很大的不确定性，很容易导致OOM的发生；</li>
<li>从Android 3.0 (API level 11) 到Android 7.1 (API level 25)，像素数据存放在Java Heap中，跟Bitmap对象一起回收。但由于图片是内存消耗大户，所以也很容易导致OOM，以及频繁的GC导致内存抖动问题。</li>
<li>在Android 8.0 (API level 26)以及更高的版本中，像素数据保存在native heap中。通过一个辅助类<code>NativeAllocationRegistry</code>来实现native内存的回收。</li>
</ul>
<p>Android5.0及以上的版本，Fresco采用标准的Bitmap解码，通过BitmapFactoty.decodeXXX系列函数进行位图解码，pixel数据内存的分配完全由Android系统决定，可以参考<a href="/posts/68833f9e.html" title="Bitmap内存分配以及回收">Bitmap内存分配以及回收</a>，所以这里就不介绍了。</p>
<p>本节重点介绍在Android5.0以下的系统上，Fresco是如何把pixel数据放在了共享内存中的？</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//imagepipeline-native/src/main/java/com/facebook/imagepipeline/nativecode/DalvikPurgeableDecoder.java</span></span><br><span class="line">  <span class="keyword">public</span> CloseableReference&lt;Bitmap&gt; <span class="title function_">decodeJPEGFromEncodedImageWithColorSpace</span><span class="params">(</span></span><br><span class="line"><span class="params">      <span class="keyword">final</span> EncodedImage encodedImage,</span></span><br><span class="line"><span class="params">      Bitmap.Config bitmapConfig,</span></span><br><span class="line"><span class="params">      <span class="meta">@Nullable</span> Rect regionToDecode,</span></span><br><span class="line"><span class="params">      <span class="type">int</span> length,</span></span><br><span class="line"><span class="params">      <span class="meta">@Nullable</span> <span class="keyword">final</span> ColorSpace colorSpace)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置解码配置信息，函数实现见下方代码</span></span><br><span class="line">    BitmapFactory.<span class="type">Options</span> <span class="variable">options</span> <span class="operator">=</span></span><br><span class="line">        getBitmapFactoryOptions(encodedImage.getSampleSize(), bitmapConfig); </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span><br><span class="line">      OreoUtils.setColorSpace(options, colorSpace);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> CloseableReference&lt;PooledByteBuffer&gt; bytesRef = encodedImage.getByteBufferRef();</span><br><span class="line">    Preconditions.checkNotNull(bytesRef);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">//最终会调用BitmapFactory.decodeByteArray或BitmapFactory.decodeFileDescriptor来解码位图</span></span><br><span class="line">      <span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> decodeJPEGByteArrayAsPurgeable(bytesRef, length, options);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//通过jni最终调用framework中的AndroidBitmap_lockPixels（c++函数），待会儿再介绍作用</span></span><br><span class="line">      <span class="keyword">return</span> pinBitmap(bitmap); </span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      CloseableReference.closeSafely(bytesRef);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> BitmapFactory.Options <span class="title function_">getBitmapFactoryOptions</span><span class="params">(</span></span><br><span class="line"><span class="params">      <span class="type">int</span> sampleSize, Bitmap.Config bitmapConfig)</span> &#123;</span><br><span class="line">    BitmapFactory.<span class="type">Options</span> <span class="variable">options</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BitmapFactory</span>.Options();</span><br><span class="line">    options.inDither = <span class="literal">true</span>; <span class="comment">// known to improve picture quality at low cost</span></span><br><span class="line">    options.inPreferredConfig = bitmapConfig;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Decode the image into a &#x27;purgeable&#x27; bitmap that lives on the ashmem heap</span></span><br><span class="line">    <span class="comment">//BitmapFactory.cpp中doDecode时会读取这个配置，从而使用共享内存</span></span><br><span class="line">    options.inPurgeable = <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">// Enable copy of of bitmap to enable purgeable decoding by filedescriptor</span></span><br><span class="line">    options.inInputShareable = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sample size should ONLY be different than 1 when downsampling is enabled in the pipeline</span></span><br><span class="line">    options.inSampleSize = sampleSize;</span><br><span class="line">    options.inMutable = <span class="literal">true</span>; <span class="comment">// no known perf difference; allows postprocessing to work</span></span><br><span class="line">    <span class="keyword">return</span> options;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>继续看以下android framework 中bitmap解码的实现：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//android-4.4.4_r1\frameworks\base\core\jni\android\graphics\BitmapFactory.cpp</span></span><br><span class="line"><span class="function"><span class="type">static</span> jobject <span class="title">doDecode</span><span class="params">(JNIEnv* env, SkStreamRewindable* stream, jobject padding,</span></span></span><br><span class="line"><span class="params"><span class="function">        jobject options, <span class="type">bool</span> allowPurgeable, <span class="type">bool</span> forcePurgeable = <span class="literal">false</span>)</span> </span>&#123;</span><br><span class="line">    ...... <span class="comment">//代码省略</span></span><br><span class="line">    <span class="type">bool</span> isPurgeable = forcePurgeable || (allowPurgeable &amp;&amp; <span class="built_in">optionsPurgeable</span>(env, options));</span><br><span class="line">    ......</span><br><span class="line">    <span class="type">const</span> <span class="type">bool</span> willScale = scale != <span class="number">1.0f</span>;</span><br><span class="line">    isPurgeable &amp;= !willScale;  <span class="comment">//如果配置了按比例缩放，则isPurgeable不生效</span></span><br><span class="line">    ......</span><br><span class="line">    <span class="comment">//如果配置了isPurgeable，将会使用kDecodeBounds_Mode解码模式，即只解析长宽等信息，不会申请piexel内存</span></span><br><span class="line">    SkImageDecoder::Mode decodeMode = isPurgeable ? SkImageDecoder::kDecodeBounds_Mode : mode;</span><br><span class="line"></span><br><span class="line">    <span class="function">JavaPixelAllocator <span class="title">javaAllocator</span><span class="params">(env)</span></span>;</span><br><span class="line">    <span class="function">RecyclingPixelAllocator <span class="title">recyclingAllocator</span><span class="params">(outputBitmap-&gt;pixelRef(), existingBufferSize)</span></span>;</span><br><span class="line">    <span class="function">ScaleCheckingAllocator <span class="title">scaleCheckingAllocator</span><span class="params">(scale, existingBufferSize)</span></span>;</span><br><span class="line">    SkBitmap::Allocator* outputAllocator = (javaBitmap != <span class="literal">NULL</span>) ?</span><br><span class="line">            (SkBitmap::Allocator*)&amp;recyclingAllocator : (SkBitmap::Allocator*)&amp;javaAllocator;</span><br><span class="line">    <span class="keyword">if</span> (decodeMode != SkImageDecoder::kDecodeBounds_Mode) &#123;</span><br><span class="line">        <span class="comment">//isPurgeable为true时，不会走入这个if判断，所以decoder不会设置allocator</span></span><br><span class="line">        <span class="keyword">if</span> (!willScale) &#123;</span><br><span class="line">            <span class="comment">// If the java allocator is being used to allocate the pixel memory, the decoder</span></span><br><span class="line">            <span class="comment">// need not write zeroes, since the memory is initialized to 0.</span></span><br><span class="line">            decoder-&gt;<span class="built_in">setSkipWritingZeroes</span>(outputAllocator == &amp;javaAllocator);</span><br><span class="line">            decoder-&gt;<span class="built_in">setAllocator</span>(outputAllocator);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (javaBitmap != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="comment">// check for eventual scaled bounds at allocation time, so we don&#x27;t decode the bitmap</span></span><br><span class="line">            <span class="comment">// only to find the scaled result too large to fit in the allocation</span></span><br><span class="line">            decoder-&gt;<span class="built_in">setAllocator</span>(&amp;scaleCheckingAllocator);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">    SkBitmap decodingBitmap;</span><br><span class="line">    <span class="comment">//使用SkImageDecoder::kDecodeBounds_Mode模式进行解码，所以decodingBitmap中没有pixel数据</span></span><br><span class="line">    <span class="keyword">if</span> (!decoder-&gt;<span class="built_in">decode</span>(stream, &amp;decodingBitmap, prefConfig, decodeMode)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">nullObjectReturn</span>(<span class="string">&quot;decoder-&gt;decode returned false&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">    <span class="comment">// if we&#x27;re in justBounds mode, return now (skip the java bitmap)</span></span><br><span class="line">    <span class="comment">//此处并没有使用decodeMode来判断，所以不会返回，还会继续执行后面的代码</span></span><br><span class="line">    <span class="keyword">if</span> (mode == SkImageDecoder::kDecodeBounds_Mode) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">    SkPixelRef* pr;</span><br><span class="line">    <span class="keyword">if</span> (isPurgeable) &#123;</span><br><span class="line">        <span class="comment">//installPixelRef函数实现见下文</span></span><br><span class="line">        pr = <span class="built_in">installPixelRef</span>(outputBitmap, stream, sampleSize, doDither);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// if we get here, we&#x27;re in kDecodePixels_Mode and will therefore</span></span><br><span class="line">        <span class="comment">// already have a pixelref installed.</span></span><br><span class="line">        pr = outputBitmap-&gt;<span class="built_in">pixelRef</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (pr == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">nullObjectReturn</span>(<span class="string">&quot;Got null SkPixelRef&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">    <span class="comment">// now create the java bitmap</span></span><br><span class="line">    <span class="keyword">return</span> GraphicsJNI::<span class="built_in">createBitmap</span>(env, outputBitmap, javaAllocator.<span class="built_in">getStorageObj</span>(),</span><br><span class="line">            bitmapCreateFlags, ninePatchChunk, layoutBounds, <span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> SkPixelRef* <span class="title">installPixelRef</span><span class="params">(SkBitmap* bitmap, SkStreamRewindable* stream,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="type">int</span> sampleSize, <span class="type">bool</span> ditherImage)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    SkImageInfo bitmapInfo;</span><br><span class="line">    <span class="keyword">if</span> (!bitmap-&gt;<span class="built_in">asImageInfo</span>(&amp;bitmapInfo)) &#123;</span><br><span class="line">        <span class="built_in">ALOGW</span>(<span class="string">&quot;bitmap has unknown configuration so no memory has been allocated&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SkImageRef* pr;</span><br><span class="line">    <span class="comment">// only use ashmem for large images, since mmaps come at a price</span></span><br><span class="line">    <span class="comment">//当Bitmap内存超过32K时，才会使用共享内存</span></span><br><span class="line">    <span class="keyword">if</span> (bitmap-&gt;<span class="built_in">getSize</span>() &gt;= <span class="number">32</span> * <span class="number">1024</span>) &#123;</span><br><span class="line">        pr = <span class="keyword">new</span> <span class="built_in">SkImageRef_ashmem</span>(bitmapInfo, stream, sampleSize);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//会走到SkBitmap::allocPixels默认申请内存native内存的分支，并通过一个全局缓存池进行管理</span></span><br><span class="line">        pr = <span class="keyword">new</span> <span class="built_in">SkImageRef_GlobalPool</span>(bitmapInfo, stream, sampleSize);</span><br><span class="line">    &#125;</span><br><span class="line">    pr-&gt;<span class="built_in">setDitherImage</span>(ditherImage);</span><br><span class="line">    bitmap-&gt;<span class="built_in">setPixelRef</span>(pr)-&gt;<span class="built_in">unref</span>();</span><br><span class="line">    pr-&gt;<span class="built_in">isOpaque</span>(bitmap);</span><br><span class="line">    <span class="keyword">return</span> pr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>从上面代码可以看出，当isPurgeable==true时，并没有解码pixel数据，而且内存也没有申请，那么什么时候进行解码呢？还记得Fresco调用BitmapFactory解码后有个pinBitmap的函数调用吧，这个函数通过jni调用AndroidBitmap_lockPixels函数，进而调用到<code>SkImageRef::onLockPixels</code>，从而触发pixel解码。下面代码介绍了触发解码的过程，以及共享内存的分配：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//android-4.4.4_r1\external\skia\src\images\SkImageRef.cpp</span></span><br><span class="line"><span class="comment">//Fresco的pinBitmap最终就会调用这个函数，进而触发pixel解码，pixel数据存放在共享内存</span></span><br><span class="line"><span class="function"><span class="type">void</span>* <span class="title">SkImageRef::onLockPixels</span><span class="params">(SkColorTable** ct)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == fBitmap.<span class="built_in">getPixels</span>()) &#123;</span><br><span class="line">        (<span class="type">void</span>)<span class="keyword">this</span>-&gt;<span class="built_in">prepareBitmap</span>(SkImageDecoder::kDecodePixels_Mode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ct) &#123;</span><br><span class="line">        *ct = fBitmap.<span class="built_in">getColorTable</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fBitmap.<span class="built_in">getPixels</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//SkImageRef_ashmem就是SkImageRef的子类，prepareBitmap会调用onDecode</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">SkImageRef::prepareBitmap</span><span class="params">(SkImageDecoder::Mode mode)</span> </span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    SkImageDecoder* codec;</span><br><span class="line">    <span class="keyword">if</span> (fFactory) &#123; <span class="comment">//默认是null，不走这个分支</span></span><br><span class="line">        codec = fFactory-&gt;<span class="built_in">newDecoder</span>(fStream);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        codec = SkImageDecoder::<span class="built_in">Factory</span>(fStream);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (codec) &#123;</span><br><span class="line">        <span class="function">SkAutoTDelete&lt;SkImageDecoder&gt; <span class="title">ad</span><span class="params">(codec)</span></span>;</span><br><span class="line"></span><br><span class="line">        codec-&gt;<span class="built_in">setSampleSize</span>(fSampleSize);</span><br><span class="line">        codec-&gt;<span class="built_in">setDitherImage</span>(fDoDither);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//此处就是SkImageRef_ashmem::onDecode，见下面函数定义</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>-&gt;<span class="built_in">onDecode</span>(codec, fStream, &amp;fBitmap, fBitmap.<span class="built_in">config</span>(), mode)) &#123;</span><br><span class="line">            <span class="built_in">SkDEBUGCODE</span>(SkImageInfo info;)</span><br><span class="line">            <span class="built_in">SkASSERT</span>(!fBitmap.<span class="built_in">asImageInfo</span>(&amp;info) || <span class="keyword">this</span>-&gt;<span class="built_in">info</span>().fColorType == info.fColorType);</span><br><span class="line">            <span class="built_in">SkASSERT</span>(<span class="keyword">this</span>-&gt;<span class="built_in">info</span>().fWidth == fBitmap.<span class="built_in">width</span>());</span><br><span class="line">            <span class="built_in">SkASSERT</span>(<span class="keyword">this</span>-&gt;<span class="built_in">info</span>().fHeight == fBitmap.<span class="built_in">height</span>());</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//android-4.4.4_r1\external\skia\src\images\SkImageRef_ashmem.cpp</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">SkImageRef_ashmem::onDecode</span><span class="params">(SkImageDecoder* codec, SkStreamRewindable* stream,</span></span></span><br><span class="line"><span class="params"><span class="function">                                 SkBitmap* bitmap, SkBitmap::Config config,</span></span></span><br><span class="line"><span class="params"><span class="function">                                 SkImageDecoder::Mode mode)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (SkImageDecoder::kDecodeBounds_Mode == mode) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>-&gt;INHERITED::<span class="built_in">onDecode</span>(codec, stream, bitmap, config, mode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Ashmem memory is guaranteed to be initialized to 0.</span></span><br><span class="line">    codec-&gt;<span class="built_in">setSkipWritingZeroes</span>(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这就是我们的主角，共享内存分配器</span></span><br><span class="line">    <span class="function">AshmemAllocator <span class="title">alloc</span><span class="params">(&amp;fRec, <span class="keyword">this</span>-&gt;getURI())</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//向解码器中注册共享内存分配器。如果不注册将会采用默认的内存分配器</span></span><br><span class="line">    codec-&gt;<span class="built_in">setAllocator</span>(&amp;alloc);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调用父类的onDecode，父类会调用codec-&gt;decode进行位图解码，见下面函数定义</span></span><br><span class="line">    <span class="type">bool</span> success = <span class="keyword">this</span>-&gt;INHERITED::<span class="built_in">onDecode</span>(codec, stream, bitmap, config,</span><br><span class="line">                                             mode);</span><br><span class="line">    <span class="comment">// remove the allocator, since its on the stack</span></span><br><span class="line">    codec-&gt;<span class="built_in">setAllocator</span>(<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (success) &#123;</span><br><span class="line">        <span class="comment">// remember the colortable (if any)</span></span><br><span class="line">        <span class="built_in">SkRefCnt_SafeAssign</span>(fCT, bitmap-&gt;<span class="built_in">getColorTable</span>());</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (fRec.fPinned) &#123;</span><br><span class="line">            <span class="built_in">ashmem_unpin_region</span>(fRec.fFD, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            fRec.fPinned = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">closeFD</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">SkImageRef::onDecode</span><span class="params">(SkImageDecoder* codec, SkStreamRewindable* stream,</span></span></span><br><span class="line"><span class="params"><span class="function">                          SkBitmap* bitmap, SkBitmap::Config config,</span></span></span><br><span class="line"><span class="params"><span class="function">                          SkImageDecoder::Mode mode)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> codec-&gt;<span class="built_in">decode</span>(stream, bitmap, config, mode);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//android-4.4.4_r1\external\skia\src\images\SkImageDecoder_libjpeg.cpp</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">SkJPEGImageDecoder::onDecode</span><span class="params">(SkStream* stream, SkBitmap* bm, Mode mode)</span> </span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">if</span> (SkImageDecoder::kDecodeBounds_Mode == mode) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">this</span>-&gt;<span class="built_in">allocPixelRef</span>(bm, <span class="literal">NULL</span>)) &#123; <span class="comment">//调用父类函数</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">return_false</span>(cinfo, *bm, <span class="string">&quot;allocPixelRef&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//android-4.4.4_r1\external\skia\src\core\SkBitmap.cpp</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">SkImageDecoder::allocPixelRef</span><span class="params">(SkBitmap* bitmap,</span></span></span><br><span class="line"><span class="params"><span class="function">                                   SkColorTable* ctable)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">    <span class="comment">//调用bitmap分配pixel内存，fAllocator就是前面我们设置的共享内存分配器</span></span><br><span class="line">    <span class="keyword">return</span> bitmap-&gt;<span class="built_in">allocPixels</span>(fAllocator, ctable);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">SkBitmap::allocPixels</span><span class="params">(Allocator* allocator, SkColorTable* ctable)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//这是默认内存分配器，因为我们传入了allocator参数，所以不会使用默认内存分配器</span></span><br><span class="line">    <span class="comment">//上面代码中介绍的SkImageRef_GlobalPool就会使用这个默认的内存分配器</span></span><br><span class="line">    HeapAllocator stdalloc;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == allocator) &#123;</span><br><span class="line">        allocator = &amp;stdalloc;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//调用AshmemAllocator::allocPixelRef来分配内存</span></span><br><span class="line">    <span class="keyword">return</span> allocator-&gt;<span class="built_in">allocPixelRef</span>(<span class="keyword">this</span>, ctable);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AshmemAllocator</span> : <span class="keyword">public</span> SkBitmap::Allocator &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">AshmemAllocator</span>(SkAshmemRec* rec, <span class="type">const</span> <span class="type">char</span> name[])</span><br><span class="line">        : <span class="built_in">fRec</span>(rec), <span class="built_in">fName</span>(name) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">bool</span> <span class="title">allocPixelRef</span><span class="params">(SkBitmap* bm, SkColorTable* ct)</span> </span>&#123;</span><br><span class="line">        <span class="type">const</span> <span class="type">size_t</span> size = <span class="built_in">roundToPageSize</span>(bm-&gt;<span class="built_in">getSize</span>());</span><br><span class="line">        <span class="type">int</span> fd = fRec-&gt;fFD;</span><br><span class="line">        <span class="type">void</span>* addr = fRec-&gt;fAddr;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">SkASSERT</span>(!fRec-&gt;fPinned);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="number">-1</span> == fd) &#123;</span><br><span class="line">            <span class="built_in">SkASSERT</span>(<span class="literal">NULL</span> == addr);</span><br><span class="line">            <span class="built_in">SkASSERT</span>(<span class="number">0</span> == fRec-&gt;fSize);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//打开/dev/ashmem虚拟设备，然后ioctl配置name和size</span></span><br><span class="line">            fd = <span class="built_in">ashmem_create_region</span>(fName, size);</span><br><span class="line">            ......</span><br><span class="line"></span><br><span class="line">            <span class="comment">//调用mmap分配内存</span></span><br><span class="line">            addr = <span class="built_in">mmap</span>(<span class="literal">NULL</span>, size, PROT_READ | PROT_WRITE, MAP_PRIVATE, fd, <span class="number">0</span>);</span><br><span class="line">            ......</span><br><span class="line"></span><br><span class="line">            fRec-&gt;fFD = fd;</span><br><span class="line">            fRec-&gt;fAddr = addr;</span><br><span class="line">            fRec-&gt;fSize = size;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">SkASSERT</span>(addr);</span><br><span class="line">            <span class="built_in">SkASSERT</span>(size == fRec-&gt;fSize);</span><br><span class="line">            (<span class="type">void</span>)<span class="built_in">ashmem_pin_region</span>(fd, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        bm-&gt;<span class="built_in">setPixels</span>(addr, ct);</span><br><span class="line">        fRec-&gt;fPinned = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">// we just point to our caller&#x27;s memory, these are not copies</span></span><br><span class="line">    SkAshmemRec* fRec;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>*  fName;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="Bitmap复用"><a href="#Bitmap复用" class="headerlink" title="Bitmap复用"></a>Bitmap复用</h3><p>通过<code>android.graphics.BitmapFactory#decodeStream(...)</code>接口进行图片解码时可以通过设置<code>BitmapFactory.Options#inBitmap</code>来复用旧的Bitmap实例，这样可以避免频繁申请内存。但是有如下限制条件：</p>
<ol>
<li>被复用的Bitmap的isMutable属性必须为true；</li>
<li>Android4.4及以上版本，只要新图片需要的pixels内存小于等于inBitmap的即可；</li>
<li>Android4.4以下版本有额外的限制，图片必须是jpeg或png格式，而且pixels内存大小必须相等，且inSampleSize必须是1；而且新图片的inPreferredConfig属性将会被inBitmap覆盖。</li>
</ol>
<p>解码时Bitmap的复用代码在<code>DefaultDecoder#decodeFromStream</code>中。被复用的Bitmap保存在BitmapPool中。当一个Bitmap不再被使用后（引用计数为0）就会被放到BitmapPool中：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="405px" preserveAspectRatio="none" style="width:718px;height:405px;background:#FFFFFF;" version="1.1" viewBox="0 0 718 405" width="718px" zoomAndPan="magnify"><defs/><g><!--class Pool--><g id="elem_Pool"><rect codeLine="1" fill="#F1F1F1" height="48" id="Pool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="109" x="323.5" y="10"/><ellipse cx="338.5" cy="26" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M339.4531,22.7813 L341.1719,22.7813 C341.5625,22.7813 341.75,22.75 341.875,22.6719 C342.1406,22.5156 342.2813,22.2344 342.2813,21.9375 C342.2813,21.6719 342.1719,21.4063 341.9375,21.2344 C341.7656,21.125 341.625,21.0938 341.1719,21.0938 L336.0313,21.0938 C335.5938,21.0938 335.4688,21.1094 335.3125,21.2031 C335.0625,21.3594 334.9063,21.6563 334.9063,21.9375 C334.9063,22.2188 335.0469,22.4688 335.2656,22.6406 C335.4219,22.75 335.6094,22.7813 336.0313,22.7813 L337.75,22.7813 L337.75,29.2969 L336.0313,29.2969 C335.5938,29.2969 335.4688,29.3125 335.3125,29.4219 C335.0625,29.5781 334.9063,29.8594 334.9063,30.1563 C334.9063,30.4063 335.0469,30.6719 335.2656,30.8281 C335.4219,30.9531 335.625,31 336.0313,31 L341.1719,31 C341.9219,31 342.2813,30.7188 342.2813,30.1563 C342.2813,29.875 342.1719,29.625 341.9375,29.4531 C341.7656,29.3281 341.625,29.2969 341.1719,29.2969 L339.4531,29.2969 L339.4531,22.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="30" x="352.5" y="30.8467">Pool</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="45" x="390.5" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="43" x="391.5" y="19.1387">Bitmap</text><line style="stroke:#181818;stroke-width:0.5;" x1="324.5" x2="431.5" y1="42" y2="42"/><line style="stroke:#181818;stroke-width:0.5;" x1="324.5" x2="431.5" y1="50" y2="50"/></g><!--class BitmapPool--><g id="elem_BitmapPool"><rect codeLine="2" fill="#ADD8E6" height="48" id="BitmapPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="113" x="229.5" y="118"/><ellipse cx="244.5" cy="134" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M245.4531,130.7813 L247.1719,130.7813 C247.5625,130.7813 247.75,130.75 247.875,130.6719 C248.1406,130.5156 248.2813,130.2344 248.2813,129.9375 C248.2813,129.6719 248.1719,129.4063 247.9375,129.2344 C247.7656,129.125 247.625,129.0938 247.1719,129.0938 L242.0313,129.0938 C241.5938,129.0938 241.4688,129.1094 241.3125,129.2031 C241.0625,129.3594 240.9063,129.6563 240.9063,129.9375 C240.9063,130.2188 241.0469,130.4688 241.2656,130.6406 C241.4219,130.75 241.6094,130.7813 242.0313,130.7813 L243.75,130.7813 L243.75,137.2969 L242.0313,137.2969 C241.5938,137.2969 241.4688,137.3125 241.3125,137.4219 C241.0625,137.5781 240.9063,137.8594 240.9063,138.1563 C240.9063,138.4063 241.0469,138.6719 241.2656,138.8281 C241.4219,138.9531 241.625,139 242.0313,139 L247.1719,139 C247.9219,139 248.2813,138.7188 248.2813,138.1563 C248.2813,137.875 248.1719,137.625 247.9375,137.4531 C247.7656,137.3281 247.625,137.2969 247.1719,137.2969 L245.4531,137.2969 L245.4531,130.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="81" x="258.5" y="138.8467">BitmapPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="230.5" x2="341.5" y1="150" y2="150"/><line style="stroke:#181818;stroke-width:0.5;" x1="230.5" x2="341.5" y1="158" y2="158"/></g><!--class BasePool--><g id="elem_BasePool"><rect codeLine="4" fill="#F1F1F1" height="48" id="BasePool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="144" x="398" y="118"/><ellipse cx="413" cy="134" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M415.0781,135.8125 L415.4688,136.7969 L415.0781,136.7969 C414.625,136.7969 414.5156,136.8125 414.3594,136.9219 C414.1094,137.0781 413.9531,137.3594 413.9531,137.6563 C413.9531,137.9219 414.0938,138.1719 414.3125,138.3281 C414.4531,138.4531 414.6563,138.5 415.0781,138.5 L417.4375,138.5 C417.7969,138.5 418.0156,138.4688 418.1563,138.375 C418.4063,138.2344 418.5625,137.9375 418.5625,137.6563 C418.5625,137.375 418.4219,137.125 418.2031,136.9688 C418.0313,136.8281 417.875,136.7969 417.4063,136.7969 L414.0156,128.5938 L410.3438,128.5938 C409.8906,128.5938 409.7656,128.6094 409.6094,128.7031 C409.3594,128.875 409.2031,129.1563 409.2031,129.4375 C409.2031,129.7188 409.3438,129.9688 409.5625,130.1406 C409.7344,130.25 409.9063,130.2813 410.3438,130.2813 L411.4219,130.2813 L408.7813,136.7969 C408.3594,136.7969 408.2031,136.8125 408.0469,136.9219 C407.7969,137.0781 407.6406,137.3594 407.6406,137.6563 C407.6406,138.2188 408.0156,138.5 408.7656,138.5 L411.0313,138.5 C411.3906,138.5 411.6094,138.4688 411.7344,138.375 C412,138.2344 412.1406,137.9375 412.1406,137.6563 C412.1406,137.375 412.0156,137.125 411.7969,136.9531 C411.625,136.8281 411.4844,136.7969 411.0313,136.7969 L410.6406,136.7969 L411.0313,135.8125 L415.0781,135.8125 Z M414.375,134.1094 L411.7031,134.1094 L413.0469,130.8438 L414.375,134.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="65" x="427" y="138.8467">BasePool</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="45" x="500" y="115"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="43" x="501" y="127.1387">Bitmap</text><line style="stroke:#181818;stroke-width:0.5;" x1="399" x2="541" y1="150" y2="150"/><line style="stroke:#181818;stroke-width:0.5;" x1="399" x2="541" y1="158" y2="158"/></g><!--class BucketsBitmapPool--><g id="elem_BucketsBitmapPool"><rect fill="#F1F1F1" height="48" id="BucketsBitmapPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="174" x="387" y="226"/><ellipse cx="402" cy="242" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M404.3438,237.6719 C403.4063,237.2344 402.8125,237.0938 401.9375,237.0938 C399.3125,237.0938 397.3125,239.1719 397.3125,241.8906 L397.3125,243.0156 C397.3125,245.5938 399.4219,247.4844 402.3125,247.4844 C403.5313,247.4844 404.6875,247.1875 405.4375,246.6406 C406.0156,246.2344 406.3438,245.7813 406.3438,245.3906 C406.3438,244.9375 405.9531,244.5469 405.4844,244.5469 C405.2656,244.5469 405.0625,244.625 404.875,244.8125 C404.4219,245.2969 404.4219,245.2969 404.2344,245.3906 C403.8125,245.6563 403.125,245.7813 402.3594,245.7813 C400.3125,245.7813 399.0156,244.6875 399.0156,242.9844 L399.0156,241.8906 C399.0156,240.1094 400.2656,238.7969 402,238.7969 C402.5781,238.7969 403.1875,238.9531 403.6563,239.2031 C404.1406,239.4844 404.3125,239.7031 404.4063,240.1094 C404.4688,240.5156 404.5,240.6406 404.6406,240.7656 C404.7813,240.9063 405.0156,241.0156 405.2344,241.0156 C405.5,241.0156 405.7656,240.875 405.9375,240.6563 C406.0469,240.5 406.0781,240.3125 406.0781,239.8906 L406.0781,238.4688 C406.0781,238.0313 406.0625,237.9063 405.9688,237.75 C405.8125,237.4844 405.5313,237.3438 405.2344,237.3438 C404.9375,237.3438 404.7344,237.4375 404.5156,237.75 L404.3438,237.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="416" y="246.8467">BucketsBitmapPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="388" x2="560" y1="258" y2="258"/><line style="stroke:#181818;stroke-width:0.5;" x1="388" x2="560" y1="266" y2="266"/></g><!--class DummyBitmapPool--><g id="elem_DummyBitmapPool"><rect fill="#F1F1F1" height="48" id="DummyBitmapPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="171" x="180.5" y="226"/><ellipse cx="195.5" cy="242" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M197.8438,237.6719 C196.9063,237.2344 196.3125,237.0938 195.4375,237.0938 C192.8125,237.0938 190.8125,239.1719 190.8125,241.8906 L190.8125,243.0156 C190.8125,245.5938 192.9219,247.4844 195.8125,247.4844 C197.0313,247.4844 198.1875,247.1875 198.9375,246.6406 C199.5156,246.2344 199.8438,245.7813 199.8438,245.3906 C199.8438,244.9375 199.4531,244.5469 198.9844,244.5469 C198.7656,244.5469 198.5625,244.625 198.375,244.8125 C197.9219,245.2969 197.9219,245.2969 197.7344,245.3906 C197.3125,245.6563 196.625,245.7813 195.8594,245.7813 C193.8125,245.7813 192.5156,244.6875 192.5156,242.9844 L192.5156,241.8906 C192.5156,240.1094 193.7656,238.7969 195.5,238.7969 C196.0781,238.7969 196.6875,238.9531 197.1563,239.2031 C197.6406,239.4844 197.8125,239.7031 197.9063,240.1094 C197.9688,240.5156 198,240.6406 198.1406,240.7656 C198.2813,240.9063 198.5156,241.0156 198.7344,241.0156 C199,241.0156 199.2656,240.875 199.4375,240.6563 C199.5469,240.5 199.5781,240.3125 199.5781,239.8906 L199.5781,238.4688 C199.5781,238.0313 199.5625,237.9063 199.4688,237.75 C199.3125,237.4844 199.0313,237.3438 198.7344,237.3438 C198.4375,237.3438 198.2344,237.4375 198.0156,237.75 L197.8438,237.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="209.5" y="246.8467">DummyBitmapPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="181.5" x2="350.5" y1="258" y2="258"/><line style="stroke:#181818;stroke-width:0.5;" x1="181.5" x2="350.5" y1="266" y2="266"/></g><!--class LruBitmapPool--><g id="elem_LruBitmapPool"><rect fill="#F1F1F1" height="48" id="LruBitmapPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="138" x="7" y="226"/><ellipse cx="22" cy="242" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,237.6719 C23.4063,237.2344 22.8125,237.0938 21.9375,237.0938 C19.3125,237.0938 17.3125,239.1719 17.3125,241.8906 L17.3125,243.0156 C17.3125,245.5938 19.4219,247.4844 22.3125,247.4844 C23.5313,247.4844 24.6875,247.1875 25.4375,246.6406 C26.0156,246.2344 26.3438,245.7813 26.3438,245.3906 C26.3438,244.9375 25.9531,244.5469 25.4844,244.5469 C25.2656,244.5469 25.0625,244.625 24.875,244.8125 C24.4219,245.2969 24.4219,245.2969 24.2344,245.3906 C23.8125,245.6563 23.125,245.7813 22.3594,245.7813 C20.3125,245.7813 19.0156,244.6875 19.0156,242.9844 L19.0156,241.8906 C19.0156,240.1094 20.2656,238.7969 22,238.7969 C22.5781,238.7969 23.1875,238.9531 23.6563,239.2031 C24.1406,239.4844 24.3125,239.7031 24.4063,240.1094 C24.4688,240.5156 24.5,240.6406 24.6406,240.7656 C24.7813,240.9063 25.0156,241.0156 25.2344,241.0156 C25.5,241.0156 25.7656,240.875 25.9375,240.6563 C26.0469,240.5 26.0781,240.3125 26.0781,239.8906 L26.0781,238.4688 C26.0781,238.0313 26.0625,237.9063 25.9688,237.75 C25.8125,237.4844 25.5313,237.3438 25.2344,237.3438 C24.9375,237.3438 24.7344,237.4375 24.5156,237.75 L24.3438,237.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="36" y="246.8467">LruBitmapPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="144" y1="258" y2="258"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="144" y1="266" y2="266"/></g><!--class PoolFactory--><g id="elem_PoolFactory"><rect codeLine="10" fill="#F1F1F1" height="64.2969" id="PoolFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="219" x="156.5" y="334"/><ellipse cx="219.25" cy="350" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M221.5938,345.6719 C220.6563,345.2344 220.0625,345.0938 219.1875,345.0938 C216.5625,345.0938 214.5625,347.1719 214.5625,349.8906 L214.5625,351.0156 C214.5625,353.5938 216.6719,355.4844 219.5625,355.4844 C220.7813,355.4844 221.9375,355.1875 222.6875,354.6406 C223.2656,354.2344 223.5938,353.7813 223.5938,353.3906 C223.5938,352.9375 223.2031,352.5469 222.7344,352.5469 C222.5156,352.5469 222.3125,352.625 222.125,352.8125 C221.6719,353.2969 221.6719,353.2969 221.4844,353.3906 C221.0625,353.6563 220.375,353.7813 219.6094,353.7813 C217.5625,353.7813 216.2656,352.6875 216.2656,350.9844 L216.2656,349.8906 C216.2656,348.1094 217.5156,346.7969 219.25,346.7969 C219.8281,346.7969 220.4375,346.9531 220.9063,347.2031 C221.3906,347.4844 221.5625,347.7031 221.6563,348.1094 C221.7188,348.5156 221.75,348.6406 221.8906,348.7656 C222.0313,348.9063 222.2656,349.0156 222.4844,349.0156 C222.75,349.0156 223.0156,348.875 223.1875,348.6563 C223.2969,348.5 223.3281,348.3125 223.3281,347.8906 L223.3281,346.4688 C223.3281,346.0313 223.3125,345.9063 223.2188,345.75 C223.0625,345.4844 222.7813,345.3438 222.4844,345.3438 C222.1875,345.3438 221.9844,345.4375 221.7656,345.75 L221.5938,345.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="239.75" y="354.8467">PoolFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="157.5" x2="374.5" y1="366" y2="366"/><line style="stroke:#181818;stroke-width:0.5;" x1="157.5" x2="374.5" y1="374" y2="374"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="162.5" y="390.9951">BitmapPool getBitmapPool()</text></g><!--class Bucket--><g id="elem_Bucket"><rect codeLine="16" fill="#F1F1F1" height="48" id="Bucket" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="130" x="577" y="118"/><ellipse cx="592" cy="134" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M594.3438,129.6719 C593.4063,129.2344 592.8125,129.0938 591.9375,129.0938 C589.3125,129.0938 587.3125,131.1719 587.3125,133.8906 L587.3125,135.0156 C587.3125,137.5938 589.4219,139.4844 592.3125,139.4844 C593.5313,139.4844 594.6875,139.1875 595.4375,138.6406 C596.0156,138.2344 596.3438,137.7813 596.3438,137.3906 C596.3438,136.9375 595.9531,136.5469 595.4844,136.5469 C595.2656,136.5469 595.0625,136.625 594.875,136.8125 C594.4219,137.2969 594.4219,137.2969 594.2344,137.3906 C593.8125,137.6563 593.125,137.7813 592.3594,137.7813 C590.3125,137.7813 589.0156,136.6875 589.0156,134.9844 L589.0156,133.8906 C589.0156,132.1094 590.2656,130.7969 592,130.7969 C592.5781,130.7969 593.1875,130.9531 593.6563,131.2031 C594.1406,131.4844 594.3125,131.7031 594.4063,132.1094 C594.4688,132.5156 594.5,132.6406 594.6406,132.7656 C594.7813,132.9063 595.0156,133.0156 595.2344,133.0156 C595.5,133.0156 595.7656,132.875 595.9375,132.6563 C596.0469,132.5 596.0781,132.3125 596.0781,131.8906 L596.0781,130.4688 C596.0781,130.0313 596.0625,129.9063 595.9688,129.75 C595.8125,129.4844 595.5313,129.3438 595.2344,129.3438 C594.9375,129.3438 594.7344,129.4375 594.5156,129.75 L594.3438,129.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="606" y="138.8467">Bucket</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="45" x="665" y="115"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="43" x="666" y="127.1387">Bitmap</text><line style="stroke:#181818;stroke-width:0.5;" x1="578" x2="706" y1="150" y2="150"/><line style="stroke:#181818;stroke-width:0.5;" x1="578" x2="706" y1="158" y2="158"/></g><!--class Bitmap--><g id="elem_Bitmap"><rect fill="#F1F1F1" height="48" id="Bitmap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="85" x="599.5" y="226"/><ellipse cx="614.5" cy="242" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M616.8438,237.6719 C615.9063,237.2344 615.3125,237.0938 614.4375,237.0938 C611.8125,237.0938 609.8125,239.1719 609.8125,241.8906 L609.8125,243.0156 C609.8125,245.5938 611.9219,247.4844 614.8125,247.4844 C616.0313,247.4844 617.1875,247.1875 617.9375,246.6406 C618.5156,246.2344 618.8438,245.7813 618.8438,245.3906 C618.8438,244.9375 618.4531,244.5469 617.9844,244.5469 C617.7656,244.5469 617.5625,244.625 617.375,244.8125 C616.9219,245.2969 616.9219,245.2969 616.7344,245.3906 C616.3125,245.6563 615.625,245.7813 614.8594,245.7813 C612.8125,245.7813 611.5156,244.6875 611.5156,242.9844 L611.5156,241.8906 C611.5156,240.1094 612.7656,238.7969 614.5,238.7969 C615.0781,238.7969 615.6875,238.9531 616.1563,239.2031 C616.6406,239.4844 616.8125,239.7031 616.9063,240.1094 C616.9688,240.5156 617,240.6406 617.1406,240.7656 C617.2813,240.9063 617.5156,241.0156 617.7344,241.0156 C618,241.0156 618.2656,240.875 618.4375,240.6563 C618.5469,240.5 618.5781,240.3125 618.5781,239.8906 L618.5781,238.4688 C618.5781,238.0313 618.5625,237.9063 618.4688,237.75 C618.3125,237.4844 618.0313,237.3438 617.7344,237.3438 C617.4375,237.3438 617.2344,237.4375 617.0156,237.75 L616.8438,237.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="628.5" y="246.8467">Bitmap</text><line style="stroke:#181818;stroke-width:0.5;" x1="600.5" x2="683.5" y1="258" y2="258"/><line style="stroke:#181818;stroke-width:0.5;" x1="600.5" x2="683.5" y1="266" y2="266"/></g><!--reverse link Pool to BitmapPool--><g id="link_Pool_BitmapPool"><path codeLine="3" d="M346.2388,71.5942 C330.9138,89.2522 321.636,99.941 306.241,117.678 " fill="none" id="Pool-backto-BitmapPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="358.037,58,341.7074,67.6615,350.7703,75.527,358.037,58" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Pool to BasePool--><g id="link_Pool_BasePool"><path codeLine="5" d="M409.7612,71.5942 C425.0862,89.2522 434.364,99.941 449.759,117.678 " fill="none" id="Pool-backto-BasePool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="397.963,58,405.2297,75.527,414.2926,67.6615,397.963,58" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BasePool to BucketsBitmapPool--><g id="link_BasePool_BucketsBitmapPool"><path codeLine="6" d="M471.5464,183.9872 C472.2124,201.6452 472.451,207.941 473.12,225.678 " fill="none" id="BasePool-backto-BucketsBitmapPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="470.868,166,465.5507,184.2133,477.5422,183.7611,470.868,166" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BitmapPool to BucketsBitmapPool--><g id="link_BitmapPool_BucketsBitmapPool"><path codeLine="7" d="M342.4724,174.8406 C373.8984,192.5596 401.475,208.108 432.962,225.862 " fill="none" id="BitmapPool-backto-BucketsBitmapPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="326.793,166,339.5256,180.067,345.4193,169.6141,326.793,166" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BitmapPool to DummyBitmapPool--><g id="link_BitmapPool_DummyBitmapPool"><path codeLine="8" d="M278.3233,183.688 C274.9923,201.346 273.747,207.941 270.4,225.678 " fill="none" id="BitmapPool-backto-DummyBitmapPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="281.66,166,272.4273,182.5758,284.2193,184.8003,281.66,166" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BitmapPool to LruBitmapPool--><g id="link_BitmapPool_LruBitmapPool"><path codeLine="9" d="M224.3641,174.1111 C189.2611,191.8301 157.012,208.108 121.84,225.862 " fill="none" id="BitmapPool-backto-LruBitmapPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="240.433,166,221.6604,168.7548,227.0678,179.4674,240.433,166" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BucketsBitmapPool to PoolFactory--><g id="link_BucketsBitmapPool_PoolFactory"><path codeLine="13" d="M426.6464,276.9538 C395.1894,294.1948 357.112,315.0637 322.618,333.969 " fill="none" id="BucketsBitmapPool-backto-PoolFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="431.908,274.07,422.0932,274.8879,427.5234,276.4731,425.9382,281.9033,431.908,274.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DummyBitmapPool to PoolFactory--><g id="link_DummyBitmapPool_PoolFactory"><path codeLine="14" d="M266,280.07 C266,297.246 266,314.8845 266,333.7548 " fill="none" id="DummyBitmapPool-backto-PoolFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="266,274.07,262,283.07,266,279.07,270,283.07,266,274.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link LruBitmapPool to PoolFactory--><g id="link_LruBitmapPool_PoolFactory"><path codeLine="15" d="M119.594,277.1569 C148.33,294.3979 182.773,315.0637 214.282,333.969 " fill="none" id="LruBitmapPool-backto-PoolFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="114.449,274.07,120.1086,282.1303,118.7365,276.6424,124.2244,275.2703,114.449,274.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BasePool to Bucket--><g id="link_BasePool_Bucket"><path codeLine="17" d="M554.227,142 C565.789,142 565.351,142 576.913,142 " fill="none" id="BasePool-backto-Bucket" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="542.227,142,548.227,146,554.227,142,548.227,138,542.227,142" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="550.0879" y="138.3003">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="560.9248" y="138.2074">n</text></g><!--reverse link Bucket to Bitmap--><g id="link_Bucket_Bitmap"><path codeLine="18" d="M642,178 C642,195.658 642,207.941 642,225.678 " fill="none" id="Bucket-backto-Bitmap" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="642,166,638,172,642,178,646,172,642,166" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="632.975" y="186.1558">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="633.025" y="215.0045">n</text></g><!--SRC=[ZL2x3i8m3Dpp5LPO02a3UzMXGamC_48QfIKYVQXnXWhuTr9IYg4L8fDzTpvVR6hKNI6LXbFJs2GpMCasPMQ28pAGiBAcF6DklMRFFha9GNWcSuUTL0ZAIkSWaqv_c9AXaMAlOeIzkcXqn99i_rEnzrNL_-2FdITiJ3gKXn2ywNguCWYFJ9KQtzrwm-wCoeLlHReGQwxv3ZPNB4MBpjC9OmkyvY2iBb1iWUyukUV81smRFZleukW3]--></g></svg>

<p>BitmapPool默认情况下使用BucketsBitmapPool和DummyBitmapPool，Android5.0及以上使用BucketsBitmapPool。</p>
<p>Bitmap是如何被放到BitmapPool中的呢？<code>DefaultDecoder.decodeFromStream</code>生成Bitmap后并不是直接返回一个Bitmap，而是一个CloseableReference，CloseableReference就会把Bitmap与BitmapPool进行关联，代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//DefaultDecoder.java</span></span><br><span class="line">  <span class="keyword">private</span> CloseableReference&lt;Bitmap&gt; <span class="title function_">decodeFromStream</span><span class="params">(</span></span><br><span class="line"><span class="params">      InputStream inputStream,</span></span><br><span class="line"><span class="params">      BitmapFactory.Options options,</span></span><br><span class="line"><span class="params">      <span class="meta">@Nullable</span> Rect regionToDecode,</span></span><br><span class="line"><span class="params">      <span class="meta">@Nullable</span> <span class="keyword">final</span> ColorSpace colorSpace)</span> &#123;</span><br><span class="line">    ...... <span class="comment">//代码省略</span></span><br><span class="line">    <span class="keyword">return</span> CloseableReference.of(decodedBitmap, mBitmapPool);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>每次<code>CloseableReference#close</code>都会导致Bitmap的引用计数减一，当计数为零后，就会调用到<code>BitmapPool#release</code>，把Bitmap放到BitmapPool中。release的含义就是把不再使用的Bitmap放到缓存池中备用。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="504px" preserveAspectRatio="none" style="width:583px;height:504px;background:#FFFFFF;" version="1.1" viewBox="0 0 583 504" width="583px" zoomAndPan="magnify"><defs/><g><!--class CloseableReference--><g id="elem_CloseableReference"><rect codeLine="1" fill="#F1F1F1" height="64.2969" id="CloseableReference" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="223" x="155" y="10"/><ellipse cx="170" cy="26" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M172.0781,27.8125 L172.4688,28.7969 L172.0781,28.7969 C171.625,28.7969 171.5156,28.8125 171.3594,28.9219 C171.1094,29.0781 170.9531,29.3594 170.9531,29.6563 C170.9531,29.9219 171.0938,30.1719 171.3125,30.3281 C171.4531,30.4531 171.6563,30.5 172.0781,30.5 L174.4375,30.5 C174.7969,30.5 175.0156,30.4688 175.1563,30.375 C175.4063,30.2344 175.5625,29.9375 175.5625,29.6563 C175.5625,29.375 175.4219,29.125 175.2031,28.9688 C175.0313,28.8281 174.875,28.7969 174.4063,28.7969 L171.0156,20.5938 L167.3438,20.5938 C166.8906,20.5938 166.7656,20.6094 166.6094,20.7031 C166.3594,20.875 166.2031,21.1563 166.2031,21.4375 C166.2031,21.7188 166.3438,21.9688 166.5625,22.1406 C166.7344,22.25 166.9063,22.2813 167.3438,22.2813 L168.4219,22.2813 L165.7813,28.7969 C165.3594,28.7969 165.2031,28.8125 165.0469,28.9219 C164.7969,29.0781 164.6406,29.3594 164.6406,29.6563 C164.6406,30.2188 165.0156,30.5 165.7656,30.5 L168.0313,30.5 C168.3906,30.5 168.6094,30.4688 168.7344,30.375 C169,30.2344 169.1406,29.9375 169.1406,29.6563 C169.1406,29.375 169.0156,29.125 168.7969,28.9531 C168.625,28.8281 168.4844,28.7969 168.0313,28.7969 L167.6406,28.7969 L168.0313,27.8125 L172.0781,27.8125 Z M171.375,26.1094 L168.7031,26.1094 L170.0469,22.8438 L171.375,26.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="144" x="184" y="30.8467">CloseableReference</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="45" x="336" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="43" x="337" y="19.1387">Bitmap</text><line style="stroke:#181818;stroke-width:0.5;" x1="156" x2="377" y1="42" y2="42"/><line style="stroke:#181818;stroke-width:0.5;" x1="156" x2="377" y1="50" y2="50"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="161" y="66.9951">void close()</text></g><!--class SharedReference--><g id="elem_SharedReference"><rect codeLine="4" fill="#F1F1F1" height="80.5938" id="SharedReference" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="204" x="165.5" y="159"/><ellipse cx="180.5" cy="175" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M182.8438,170.6719 C181.9063,170.2344 181.3125,170.0938 180.4375,170.0938 C177.8125,170.0938 175.8125,172.1719 175.8125,174.8906 L175.8125,176.0156 C175.8125,178.5938 177.9219,180.4844 180.8125,180.4844 C182.0313,180.4844 183.1875,180.1875 183.9375,179.6406 C184.5156,179.2344 184.8438,178.7813 184.8438,178.3906 C184.8438,177.9375 184.4531,177.5469 183.9844,177.5469 C183.7656,177.5469 183.5625,177.625 183.375,177.8125 C182.9219,178.2969 182.9219,178.2969 182.7344,178.3906 C182.3125,178.6563 181.625,178.7813 180.8594,178.7813 C178.8125,178.7813 177.5156,177.6875 177.5156,175.9844 L177.5156,174.8906 C177.5156,173.1094 178.7656,171.7969 180.5,171.7969 C181.0781,171.7969 181.6875,171.9531 182.1563,172.2031 C182.6406,172.4844 182.8125,172.7031 182.9063,173.1094 C182.9688,173.5156 183,173.6406 183.1406,173.7656 C183.2813,173.9063 183.5156,174.0156 183.7344,174.0156 C184,174.0156 184.2656,173.875 184.4375,173.6563 C184.5469,173.5 184.5781,173.3125 184.5781,172.8906 L184.5781,171.4688 C184.5781,171.0313 184.5625,170.9063 184.4688,170.75 C184.3125,170.4844 184.0313,170.3438 183.7344,170.3438 C183.4375,170.3438 183.2344,170.4375 183.0156,170.75 L182.8438,170.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="194.5" y="179.8467">SharedReference</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="45" x="327.5" y="156"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="43" x="328.5" y="168.1387">Bitmap</text><line style="stroke:#181818;stroke-width:0.5;" x1="166.5" x2="368.5" y1="191" y2="191"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176" x="171.5" y="207.9951">int mRefCount //&#24341;&#29992;&#35745;&#25968;</text><line style="stroke:#181818;stroke-width:0.5;" x1="166.5" x2="368.5" y1="215.2969" y2="215.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="171.5" y="232.292">deleteReference()</text></g><!--class ResourceReleaser--><g id="elem_ResourceReleaser"><rect codeLine="10" fill="#F1F1F1" height="64.2969" id="ResourceReleaser" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="209" x="163" y="304"/><ellipse cx="178" cy="320" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M178.9531,316.7813 L180.6719,316.7813 C181.0625,316.7813 181.25,316.75 181.375,316.6719 C181.6406,316.5156 181.7813,316.2344 181.7813,315.9375 C181.7813,315.6719 181.6719,315.4063 181.4375,315.2344 C181.2656,315.125 181.125,315.0938 180.6719,315.0938 L175.5313,315.0938 C175.0938,315.0938 174.9688,315.1094 174.8125,315.2031 C174.5625,315.3594 174.4063,315.6563 174.4063,315.9375 C174.4063,316.2188 174.5469,316.4688 174.7656,316.6406 C174.9219,316.75 175.1094,316.7813 175.5313,316.7813 L177.25,316.7813 L177.25,323.2969 L175.5313,323.2969 C175.0938,323.2969 174.9688,323.3125 174.8125,323.4219 C174.5625,323.5781 174.4063,323.8594 174.4063,324.1563 C174.4063,324.4063 174.5469,324.6719 174.7656,324.8281 C174.9219,324.9531 175.125,325 175.5313,325 L180.6719,325 C181.4219,325 181.7813,324.7188 181.7813,324.1563 C181.7813,323.875 181.6719,323.625 181.4375,323.4531 C181.2656,323.3281 181.125,323.2969 180.6719,323.2969 L178.9531,323.2969 L178.9531,316.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="130" x="192" y="324.8467">ResourceReleaser</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="45" x="330" y="301"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="43" x="331" y="313.1387">Bitmap</text><line style="stroke:#181818;stroke-width:0.5;" x1="164" x2="371" y1="336" y2="336"/><line style="stroke:#181818;stroke-width:0.5;" x1="164" x2="371" y1="344" y2="344"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="169" y="360.9951">void release(Bitmap v)</text></g><!--class BitmapPool--><g id="elem_BitmapPool"><rect codeLine="13" fill="#F1F1F1" height="64.2969" id="BitmapPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="173" x="181" y="433"/><ellipse cx="223" cy="449" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M223.9531,445.7813 L225.6719,445.7813 C226.0625,445.7813 226.25,445.75 226.375,445.6719 C226.6406,445.5156 226.7813,445.2344 226.7813,444.9375 C226.7813,444.6719 226.6719,444.4063 226.4375,444.2344 C226.2656,444.125 226.125,444.0938 225.6719,444.0938 L220.5313,444.0938 C220.0938,444.0938 219.9688,444.1094 219.8125,444.2031 C219.5625,444.3594 219.4063,444.6563 219.4063,444.9375 C219.4063,445.2188 219.5469,445.4688 219.7656,445.6406 C219.9219,445.75 220.1094,445.7813 220.5313,445.7813 L222.25,445.7813 L222.25,452.2969 L220.5313,452.2969 C220.0938,452.2969 219.9688,452.3125 219.8125,452.4219 C219.5625,452.5781 219.4063,452.8594 219.4063,453.1563 C219.4063,453.4063 219.5469,453.6719 219.7656,453.8281 C219.9219,453.9531 220.125,454 220.5313,454 L225.6719,454 C226.4219,454 226.7813,453.7188 226.7813,453.1563 C226.7813,452.875 226.6719,452.625 226.4375,452.4531 C226.2656,452.3281 226.125,452.2969 225.6719,452.2969 L223.9531,452.2969 L223.9531,445.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="81" x="243" y="453.8467">BitmapPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="182" x2="353" y1="465" y2="465"/><line style="stroke:#181818;stroke-width:0.5;" x1="182" x2="353" y1="473" y2="473"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="187" y="489.9951">void release(Bitmap v)</text></g><!--class Bitmap--><g id="elem_Bitmap"><rect fill="#F1F1F1" height="48" id="Bitmap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="85" x="7" y="175"/><ellipse cx="22" cy="191" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,186.6719 C23.4063,186.2344 22.8125,186.0938 21.9375,186.0938 C19.3125,186.0938 17.3125,188.1719 17.3125,190.8906 L17.3125,192.0156 C17.3125,194.5938 19.4219,196.4844 22.3125,196.4844 C23.5313,196.4844 24.6875,196.1875 25.4375,195.6406 C26.0156,195.2344 26.3438,194.7813 26.3438,194.3906 C26.3438,193.9375 25.9531,193.5469 25.4844,193.5469 C25.2656,193.5469 25.0625,193.625 24.875,193.8125 C24.4219,194.2969 24.4219,194.2969 24.2344,194.3906 C23.8125,194.6563 23.125,194.7813 22.3594,194.7813 C20.3125,194.7813 19.0156,193.6875 19.0156,191.9844 L19.0156,190.8906 C19.0156,189.1094 20.2656,187.7969 22,187.7969 C22.5781,187.7969 23.1875,187.9531 23.6563,188.2031 C24.1406,188.4844 24.3125,188.7031 24.4063,189.1094 C24.4688,189.5156 24.5,189.6406 24.6406,189.7656 C24.7813,189.9063 25.0156,190.0156 25.2344,190.0156 C25.5,190.0156 25.7656,189.875 25.9375,189.6563 C26.0469,189.5 26.0781,189.3125 26.0781,188.8906 L26.0781,187.4688 C26.0781,187.0313 26.0625,186.9063 25.9688,186.75 C25.8125,186.4844 25.5313,186.3438 25.2344,186.3438 C24.9375,186.3438 24.7344,186.4375 24.5156,186.75 L24.3438,186.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="36" y="195.8467">Bitmap</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="91" y1="207" y2="207"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="91" y1="215" y2="215"/></g><!--reverse link CloseableReference to SharedReference--><g id="link_CloseableReference_SharedReference"><path codeLine="8" d="M261.5641,89.9909 C260.6671,99.6829 260.948,98.264 260.5,108 C259.801,123.186 260.636,139.785 261.944,154.546 " fill="none" id="CloseableReference-backto-SharedReference" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="262.67,78.042,258.1341,83.6478,261.5641,89.9909,266.1,84.3851,262.67,78.042" style="stroke:#181818;stroke-width:1.0;"/></g><!--link CloseableReference to SharedReference--><g id="link_CloseableReference_SharedReference"><path codeLine="9" d="M379.5,62 C452.942,62 449.942,227 376.5,227 " fill="none" id="CloseableReference-to-SharedReference" style="stroke:#008000;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#008000" points="370.5,227,379.5,231,375.5,227,379.5,223,370.5,227" style="stroke:#008000;stroke-width:1.0;"/><text fill="#008000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="26" x="430.5" y="121.0669">&#35843;&#29992;</text></g><!--reverse link ResourceReleaser to BitmapPool--><g id="link_ResourceReleaser_BitmapPool"><path codeLine="16" d="M267.5,386.068 C267.5,404.426 267.5,409.7285 267.5,428.7697 " fill="none" id="ResourceReleaser-backto-BitmapPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="267.5,368.068,261.5,386.068,273.5,386.068,267.5,368.068" style="stroke:#181818;stroke-width:1.0;"/></g><!--link Bitmap to SharedReference--><g id="link_Bitmap_SharedReference"><path codeLine="17" d="M92.0781,199 C113.777,199 123.477,199 145.176,199 " fill="none" id="Bitmap-to-SharedReference" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="157.176,199,151.176,195,145.176,199,151.176,203,157.176,199" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link SharedReference to ResourceReleaser--><g id="link_SharedReference_ResourceReleaser"><path codeLine="18" d="M267.5,255.086 C267.5,274.84 267.5,285.819 267.5,303.859 " fill="none" id="SharedReference-backto-ResourceReleaser" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="267.5,243.086,263.5,249.086,267.5,255.086,271.5,249.086,267.5,243.086" style="stroke:#181818;stroke-width:1.0;"/></g><!--link SharedReference to BitmapPool--><g id="link_SharedReference_BitmapPool"><path codeLine="19" d="M370.5,227 C485.36,227 476.36,485 361.5,485 " fill="none" id="SharedReference-to-BitmapPool" style="stroke:#0000FF;stroke-width:1.0;stroke-dasharray:1.0,3.0;"/><polygon fill="#0000FF" points="355.5,485,364.5,489,360.5,485,364.5,481,355.5,485" style="stroke:#0000FF;stroke-width:1.0;"/><text fill="#0000FF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="125" x="450.5" y="340.5669">&#24403;&#24341;&#29992;&#35745;&#25968;&#20026;0&#26102;&#35843;&#29992;</text></g><!--link Bitmap to BitmapPool--><g id="link_Bitmap_BitmapPool"><path codeLine="20" d="M41.2317,223.047 C30.6095,256.691 16.0516,320.417 38.5,368 C73.3909,441.957 92.7258,485 174.5,485 " fill="none" id="Bitmap-to-BitmapPool" style="stroke:#FF0000;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#FF0000" points="180.5,485,171.5,481,175.5,485,171.5,489,180.5,485" style="stroke:#FF0000;stroke-width:1.0;"/><text fill="#FF0000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="105" x="39.5" y="333.0669">release&#25226;Bitmap</text><text fill="#FF0000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="91" x="46.5" y="348.1997">&#37322;&#25918;&#21040;&#32531;&#23384;&#27744;&#20013;</text></g><!--SRC=[XL7DJi904BxtAIRXWYO5pmlX82zWyEfbQGTfidJDxa9Cr9C7JQz0zAWtBnYy66BGfw45tyBf3wbf8VJKp7n_yotlQgEuOy0HN6je2wcHTmLsi8SAVGURfvuPyAiMt5X0tqXwBc49LJsoxgoKTTxd2jrz5CytCA1bMmxfhruFbzFrv6tp_XfDvmd0HO4cTqo4oq7WsBQBJZjWZ2NfmBPRHJHZ1IUeN2f4lo4y7sikrtrq6mQl3Kl6m60plwUe5bs0giU9q44jXyeX2O5SezhLZaftrNG5e_YSN26Tdaaf3d6ANj2yfGPolbKuZmeIs3DRo8wrNSfl7QmexZ7tP2nB2fMk66BMd3HcsrmyfUB2x_7_PrujlawYfy-ipkp8McsFCWKgFmaDIJV3H46GCY_ytuSWclo4Z_FrSXpEdgEFbzLYzWS0]--></g></svg>

<p><strong><em>什么时候引用计数加一呢？</em></strong> 调用<code>CloseableReference</code>子类clone方法克隆一个新的CloseableReference时，就等价于增加了一个使用者，应用计数就会加一。 新和旧的CloseableReference持有同一个SharedReference实例。</p>
<p><strong><em>BitmapPool</em></strong> 不会无限扩张，最大支持多少个Bitmap？是否有清理策略？</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="543px" preserveAspectRatio="none" style="width:960px;height:543px;background:#FFFFFF;" version="1.1" viewBox="0 0 960 543" width="960px" zoomAndPan="magnify"><defs/><g><!--class SharedReference--><g id="elem_SharedReference"><rect codeLine="1" fill="#F1F1F1" height="96.8906" id="SharedReference" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="361" x="588" y="331"/><ellipse cx="678.25" cy="347" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M680.5938,342.6719 C679.6563,342.2344 679.0625,342.0938 678.1875,342.0938 C675.5625,342.0938 673.5625,344.1719 673.5625,346.8906 L673.5625,348.0156 C673.5625,350.5938 675.6719,352.4844 678.5625,352.4844 C679.7813,352.4844 680.9375,352.1875 681.6875,351.6406 C682.2656,351.2344 682.5938,350.7813 682.5938,350.3906 C682.5938,349.9375 682.2031,349.5469 681.7344,349.5469 C681.5156,349.5469 681.3125,349.625 681.125,349.8125 C680.6719,350.2969 680.6719,350.2969 680.4844,350.3906 C680.0625,350.6563 679.375,350.7813 678.6094,350.7813 C676.5625,350.7813 675.2656,349.6875 675.2656,347.9844 L675.2656,346.8906 C675.2656,345.1094 676.5156,343.7969 678.25,343.7969 C678.8281,343.7969 679.4375,343.9531 679.9063,344.2031 C680.3906,344.4844 680.5625,344.7031 680.6563,345.1094 C680.7188,345.5156 680.75,345.6406 680.8906,345.7656 C681.0313,345.9063 681.2656,346.0156 681.4844,346.0156 C681.75,346.0156 682.0156,345.875 682.1875,345.6563 C682.2969,345.5 682.3281,345.3125 682.3281,344.8906 L682.3281,343.4688 C682.3281,343.0313 682.3125,342.9063 682.2188,342.75 C682.0625,342.4844 681.7813,342.3438 681.4844,342.3438 C681.1875,342.3438 680.9844,342.4375 680.7656,342.75 L680.5938,342.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="698.75" y="351.8467">SharedReference</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="45" x="907" y="328"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="43" x="908" y="340.1387">Bitmap</text><line style="stroke:#181818;stroke-width:0.5;" x1="589" x2="948" y1="363" y2="363"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="594" y="379.9951">Bitmap mValue</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="594" y="396.292">int mRefCount</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="349" x="594" y="412.5889">ResourceReleaser&lt;Bitmap&gt; mResourceReleaser</text><line style="stroke:#181818;stroke-width:0.5;" x1="589" x2="948" y1="419.8906" y2="419.8906"/></g><!--class Bitmap--><g id="elem_Bitmap"><rect fill="#F1F1F1" height="48" id="Bitmap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="85" x="529" y="223"/><ellipse cx="544" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M546.3438,234.6719 C545.4063,234.2344 544.8125,234.0938 543.9375,234.0938 C541.3125,234.0938 539.3125,236.1719 539.3125,238.8906 L539.3125,240.0156 C539.3125,242.5938 541.4219,244.4844 544.3125,244.4844 C545.5313,244.4844 546.6875,244.1875 547.4375,243.6406 C548.0156,243.2344 548.3438,242.7813 548.3438,242.3906 C548.3438,241.9375 547.9531,241.5469 547.4844,241.5469 C547.2656,241.5469 547.0625,241.625 546.875,241.8125 C546.4219,242.2969 546.4219,242.2969 546.2344,242.3906 C545.8125,242.6563 545.125,242.7813 544.3594,242.7813 C542.3125,242.7813 541.0156,241.6875 541.0156,239.9844 L541.0156,238.8906 C541.0156,237.1094 542.2656,235.7969 544,235.7969 C544.5781,235.7969 545.1875,235.9531 545.6563,236.2031 C546.1406,236.4844 546.3125,236.7031 546.4063,237.1094 C546.4688,237.5156 546.5,237.6406 546.6406,237.7656 C546.7813,237.9063 547.0156,238.0156 547.2344,238.0156 C547.5,238.0156 547.7656,237.875 547.9375,237.6563 C548.0469,237.5 548.0781,237.3125 548.0781,236.8906 L548.0781,235.4688 C548.0781,235.0313 548.0625,234.9063 547.9688,234.75 C547.8125,234.4844 547.5313,234.3438 547.2344,234.3438 C546.9375,234.3438 546.7344,234.4375 546.5156,234.75 L546.3438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="558" y="243.8467">Bitmap</text><line style="stroke:#181818;stroke-width:0.5;" x1="530" x2="613" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="530" x2="613" y1="263" y2="263"/></g><!--class CloseableReference--><g id="elem_CloseableReference"><rect codeLine="7" fill="#F1F1F1" height="48" id="CloseableReference" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="223" x="330" y="355.5"/><ellipse cx="345" cy="371.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M347.0781,373.3125 L347.4688,374.2969 L347.0781,374.2969 C346.625,374.2969 346.5156,374.3125 346.3594,374.4219 C346.1094,374.5781 345.9531,374.8594 345.9531,375.1563 C345.9531,375.4219 346.0938,375.6719 346.3125,375.8281 C346.4531,375.9531 346.6563,376 347.0781,376 L349.4375,376 C349.7969,376 350.0156,375.9688 350.1563,375.875 C350.4063,375.7344 350.5625,375.4375 350.5625,375.1563 C350.5625,374.875 350.4219,374.625 350.2031,374.4688 C350.0313,374.3281 349.875,374.2969 349.4063,374.2969 L346.0156,366.0938 L342.3438,366.0938 C341.8906,366.0938 341.7656,366.1094 341.6094,366.2031 C341.3594,366.375 341.2031,366.6563 341.2031,366.9375 C341.2031,367.2188 341.3438,367.4688 341.5625,367.6406 C341.7344,367.75 341.9063,367.7813 342.3438,367.7813 L343.4219,367.7813 L340.7813,374.2969 C340.3594,374.2969 340.2031,374.3125 340.0469,374.4219 C339.7969,374.5781 339.6406,374.8594 339.6406,375.1563 C339.6406,375.7188 340.0156,376 340.7656,376 L343.0313,376 C343.3906,376 343.6094,375.9688 343.7344,375.875 C344,375.7344 344.1406,375.4375 344.1406,375.1563 C344.1406,374.875 344.0156,374.625 343.7969,374.4531 C343.625,374.3281 343.4844,374.2969 343.0313,374.2969 L342.6406,374.2969 L343.0313,373.3125 L347.0781,373.3125 Z M346.375,371.6094 L343.7031,371.6094 L345.0469,368.3438 L346.375,371.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="144" x="359" y="376.3467">CloseableReference</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="45" x="511" y="352.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="43" x="512" y="364.6387">Bitmap</text><line style="stroke:#181818;stroke-width:0.5;" x1="331" x2="552" y1="387.5" y2="387.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="331" x2="552" y1="395.5" y2="395.5"/></g><!--class DefaultCloseableReference--><g id="elem_DefaultCloseableReference"><rect codeLine="8" fill="#F1F1F1" height="48" id="DefaultCloseableReference" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="277" x="321" y="488"/><ellipse cx="336" cy="504" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M338.3438,499.6719 C337.4063,499.2344 336.8125,499.0938 335.9375,499.0938 C333.3125,499.0938 331.3125,501.1719 331.3125,503.8906 L331.3125,505.0156 C331.3125,507.5938 333.4219,509.4844 336.3125,509.4844 C337.5313,509.4844 338.6875,509.1875 339.4375,508.6406 C340.0156,508.2344 340.3438,507.7813 340.3438,507.3906 C340.3438,506.9375 339.9531,506.5469 339.4844,506.5469 C339.2656,506.5469 339.0625,506.625 338.875,506.8125 C338.4219,507.2969 338.4219,507.2969 338.2344,507.3906 C337.8125,507.6563 337.125,507.7813 336.3594,507.7813 C334.3125,507.7813 333.0156,506.6875 333.0156,504.9844 L333.0156,503.8906 C333.0156,502.1094 334.2656,500.7969 336,500.7969 C336.5781,500.7969 337.1875,500.9531 337.6563,501.2031 C338.1406,501.4844 338.3125,501.7031 338.4063,502.1094 C338.4688,502.5156 338.5,502.6406 338.6406,502.7656 C338.7813,502.9063 339.0156,503.0156 339.2344,503.0156 C339.5,503.0156 339.7656,502.875 339.9375,502.6563 C340.0469,502.5 340.0781,502.3125 340.0781,501.8906 L340.0781,500.4688 C340.0781,500.0313 340.0625,499.9063 339.9688,499.75 C339.8125,499.4844 339.5313,499.3438 339.2344,499.3438 C338.9375,499.3438 338.7344,499.4375 338.5156,499.75 L338.3438,499.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198" x="350" y="508.8467">DefaultCloseableReference</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="45" x="556" y="485"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="43" x="557" y="497.1387">Bitmap</text><line style="stroke:#181818;stroke-width:0.5;" x1="322" x2="597" y1="520" y2="520"/><line style="stroke:#181818;stroke-width:0.5;" x1="322" x2="597" y1="528" y2="528"/></g><!--class CloseableImage--><g id="elem_CloseableImage"><rect codeLine="12" fill="#F1F1F1" height="48" id="CloseableImage" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="147" x="118" y="7"/><ellipse cx="133" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M133.9531,19.7813 L135.6719,19.7813 C136.0625,19.7813 136.25,19.75 136.375,19.6719 C136.6406,19.5156 136.7813,19.2344 136.7813,18.9375 C136.7813,18.6719 136.6719,18.4063 136.4375,18.2344 C136.2656,18.125 136.125,18.0938 135.6719,18.0938 L130.5313,18.0938 C130.0938,18.0938 129.9688,18.1094 129.8125,18.2031 C129.5625,18.3594 129.4063,18.6563 129.4063,18.9375 C129.4063,19.2188 129.5469,19.4688 129.7656,19.6406 C129.9219,19.75 130.1094,19.7813 130.5313,19.7813 L132.25,19.7813 L132.25,26.2969 L130.5313,26.2969 C130.0938,26.2969 129.9688,26.3125 129.8125,26.4219 C129.5625,26.5781 129.4063,26.8594 129.4063,27.1563 C129.4063,27.4063 129.5469,27.6719 129.7656,27.8281 C129.9219,27.9531 130.125,28 130.5313,28 L135.6719,28 C136.4219,28 136.7813,27.7188 136.7813,27.1563 C136.7813,26.875 136.6719,26.625 136.4375,26.4531 C136.2656,26.3281 136.125,26.2969 135.6719,26.2969 L133.9531,26.2969 L133.9531,19.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="115" x="147" y="27.8467">CloseableImage</text><line style="stroke:#181818;stroke-width:0.5;" x1="119" x2="264" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="119" x2="264" y1="47" y2="47"/></g><!--class CloseableBitmap--><g id="elem_CloseableBitmap"><rect codeLine="13" fill="#F1F1F1" height="48" id="CloseableBitmap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="153" x="14" y="115"/><ellipse cx="29" cy="131" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M29.9531,127.7813 L31.6719,127.7813 C32.0625,127.7813 32.25,127.75 32.375,127.6719 C32.6406,127.5156 32.7813,127.2344 32.7813,126.9375 C32.7813,126.6719 32.6719,126.4063 32.4375,126.2344 C32.2656,126.125 32.125,126.0938 31.6719,126.0938 L26.5313,126.0938 C26.0938,126.0938 25.9688,126.1094 25.8125,126.2031 C25.5625,126.3594 25.4063,126.6563 25.4063,126.9375 C25.4063,127.2188 25.5469,127.4688 25.7656,127.6406 C25.9219,127.75 26.1094,127.7813 26.5313,127.7813 L28.25,127.7813 L28.25,134.2969 L26.5313,134.2969 C26.0938,134.2969 25.9688,134.3125 25.8125,134.4219 C25.5625,134.5781 25.4063,134.8594 25.4063,135.1563 C25.4063,135.4063 25.5469,135.6719 25.7656,135.8281 C25.9219,135.9531 26.125,136 26.5313,136 L31.6719,136 C32.4219,136 32.7813,135.7188 32.7813,135.1563 C32.7813,134.875 32.6719,134.625 32.4375,134.4531 C32.2656,134.3281 32.125,134.2969 31.6719,134.2969 L29.9531,134.2969 L29.9531,127.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="121" x="43" y="135.8467">CloseableBitmap</text><line style="stroke:#181818;stroke-width:0.5;" x1="15" x2="166" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="15" x2="166" y1="155" y2="155"/></g><!--class CloseableStaticBitmap--><g id="elem_CloseableStaticBitmap"><rect codeLine="14" fill="#F1F1F1" height="48" id="CloseableStaticBitmap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="193" x="7" y="223"/><ellipse cx="22" cy="239" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M22.9531,235.7813 L24.6719,235.7813 C25.0625,235.7813 25.25,235.75 25.375,235.6719 C25.6406,235.5156 25.7813,235.2344 25.7813,234.9375 C25.7813,234.6719 25.6719,234.4063 25.4375,234.2344 C25.2656,234.125 25.125,234.0938 24.6719,234.0938 L19.5313,234.0938 C19.0938,234.0938 18.9688,234.1094 18.8125,234.2031 C18.5625,234.3594 18.4063,234.6563 18.4063,234.9375 C18.4063,235.2188 18.5469,235.4688 18.7656,235.6406 C18.9219,235.75 19.1094,235.7813 19.5313,235.7813 L21.25,235.7813 L21.25,242.2969 L19.5313,242.2969 C19.0938,242.2969 18.9688,242.3125 18.8125,242.4219 C18.5625,242.5781 18.4063,242.8594 18.4063,243.1563 C18.4063,243.4063 18.5469,243.6719 18.7656,243.8281 C18.9219,243.9531 19.125,244 19.5313,244 L24.6719,244 C25.4219,244 25.7813,243.7188 25.7813,243.1563 C25.7813,242.875 25.6719,242.625 25.4375,242.4531 C25.2656,242.3281 25.125,242.2969 24.6719,242.2969 L22.9531,242.2969 L22.9531,235.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="161" x="36" y="243.8467">CloseableStaticBitmap</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="199" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="199" y1="263" y2="263"/></g><!--class BaseCloseableImage--><g id="elem_BaseCloseableImage"><rect codeLine="17" fill="#F1F1F1" height="48" id="BaseCloseableImage" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="182" x="202.5" y="115"/><ellipse cx="217.5" cy="131" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M219.5781,132.8125 L219.9688,133.7969 L219.5781,133.7969 C219.125,133.7969 219.0156,133.8125 218.8594,133.9219 C218.6094,134.0781 218.4531,134.3594 218.4531,134.6563 C218.4531,134.9219 218.5938,135.1719 218.8125,135.3281 C218.9531,135.4531 219.1563,135.5 219.5781,135.5 L221.9375,135.5 C222.2969,135.5 222.5156,135.4688 222.6563,135.375 C222.9063,135.2344 223.0625,134.9375 223.0625,134.6563 C223.0625,134.375 222.9219,134.125 222.7031,133.9688 C222.5313,133.8281 222.375,133.7969 221.9063,133.7969 L218.5156,125.5938 L214.8438,125.5938 C214.3906,125.5938 214.2656,125.6094 214.1094,125.7031 C213.8594,125.875 213.7031,126.1563 213.7031,126.4375 C213.7031,126.7188 213.8438,126.9688 214.0625,127.1406 C214.2344,127.25 214.4063,127.2813 214.8438,127.2813 L215.9219,127.2813 L213.2813,133.7969 C212.8594,133.7969 212.7031,133.8125 212.5469,133.9219 C212.2969,134.0781 212.1406,134.3594 212.1406,134.6563 C212.1406,135.2188 212.5156,135.5 213.2656,135.5 L215.5313,135.5 C215.8906,135.5 216.1094,135.4688 216.2344,135.375 C216.5,135.2344 216.6406,134.9375 216.6406,134.6563 C216.6406,134.375 216.5156,134.125 216.2969,133.9531 C216.125,133.8281 215.9844,133.7969 215.5313,133.7969 L215.1406,133.7969 L215.5313,132.8125 L219.5781,132.8125 Z M218.875,131.1094 L216.2031,131.1094 L217.5469,127.8438 L218.875,131.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="150" x="231.5" y="135.8467">BaseCloseableImage</text><line style="stroke:#181818;stroke-width:0.5;" x1="203.5" x2="383.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="203.5" x2="383.5" y1="155" y2="155"/></g><!--class BaseCloseableStaticBitmap--><g id="elem_BaseCloseableStaticBitmap"><rect fill="#F1F1F1" height="48" id="BaseCloseableStaticBitmap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="232" x="62.5" y="355.5"/><ellipse cx="77.5" cy="371.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M79.8438,367.1719 C78.9063,366.7344 78.3125,366.5938 77.4375,366.5938 C74.8125,366.5938 72.8125,368.6719 72.8125,371.3906 L72.8125,372.5156 C72.8125,375.0938 74.9219,376.9844 77.8125,376.9844 C79.0313,376.9844 80.1875,376.6875 80.9375,376.1406 C81.5156,375.7344 81.8438,375.2813 81.8438,374.8906 C81.8438,374.4375 81.4531,374.0469 80.9844,374.0469 C80.7656,374.0469 80.5625,374.125 80.375,374.3125 C79.9219,374.7969 79.9219,374.7969 79.7344,374.8906 C79.3125,375.1563 78.625,375.2813 77.8594,375.2813 C75.8125,375.2813 74.5156,374.1875 74.5156,372.4844 L74.5156,371.3906 C74.5156,369.6094 75.7656,368.2969 77.5,368.2969 C78.0781,368.2969 78.6875,368.4531 79.1563,368.7031 C79.6406,368.9844 79.8125,369.2031 79.9063,369.6094 C79.9688,370.0156 80,370.1406 80.1406,370.2656 C80.2813,370.4063 80.5156,370.5156 80.7344,370.5156 C81,370.5156 81.2656,370.375 81.4375,370.1563 C81.5469,370 81.5781,369.8125 81.5781,369.3906 L81.5781,367.9688 C81.5781,367.5313 81.5625,367.4063 81.4688,367.25 C81.3125,366.9844 81.0313,366.8438 80.7344,366.8438 C80.4375,366.8438 80.2344,366.9375 80.0156,367.25 L79.8438,367.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="91.5" y="376.3467">BaseCloseableStaticBitmap</text><line style="stroke:#181818;stroke-width:0.5;" x1="63.5" x2="293.5" y1="387.5" y2="387.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="63.5" x2="293.5" y1="395.5" y2="395.5"/></g><!--class DefaultCloseableStaticBitmap--><g id="elem_DefaultCloseableStaticBitmap"><rect fill="#F1F1F1" height="48" id="DefaultCloseableStaticBitmap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="251" x="35" y="488"/><ellipse cx="50" cy="504" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M52.3438,499.6719 C51.4063,499.2344 50.8125,499.0938 49.9375,499.0938 C47.3125,499.0938 45.3125,501.1719 45.3125,503.8906 L45.3125,505.0156 C45.3125,507.5938 47.4219,509.4844 50.3125,509.4844 C51.5313,509.4844 52.6875,509.1875 53.4375,508.6406 C54.0156,508.2344 54.3438,507.7813 54.3438,507.3906 C54.3438,506.9375 53.9531,506.5469 53.4844,506.5469 C53.2656,506.5469 53.0625,506.625 52.875,506.8125 C52.4219,507.2969 52.4219,507.2969 52.2344,507.3906 C51.8125,507.6563 51.125,507.7813 50.3594,507.7813 C48.3125,507.7813 47.0156,506.6875 47.0156,504.9844 L47.0156,503.8906 C47.0156,502.1094 48.2656,500.7969 50,500.7969 C50.5781,500.7969 51.1875,500.9531 51.6563,501.2031 C52.1406,501.4844 52.3125,501.7031 52.4063,502.1094 C52.4688,502.5156 52.5,502.6406 52.6406,502.7656 C52.7813,502.9063 53.0156,503.0156 53.2344,503.0156 C53.5,503.0156 53.7656,502.875 53.9375,502.6563 C54.0469,502.5 54.0781,502.3125 54.0781,501.8906 L54.0781,500.4688 C54.0781,500.0313 54.0625,499.9063 53.9688,499.75 C53.8125,499.4844 53.5313,499.3438 53.2344,499.3438 C52.9375,499.3438 52.7344,499.4375 52.5156,499.75 L52.3438,499.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="64" y="508.8467">DefaultCloseableStaticBitmap</text><line style="stroke:#181818;stroke-width:0.5;" x1="36" x2="285" y1="520" y2="520"/><line style="stroke:#181818;stroke-width:0.5;" x1="36" x2="285" y1="528" y2="528"/></g><!--reverse link SharedReference to Bitmap--><g id="link_SharedReference_Bitmap"><path codeLine="6" d="M686.554,324.2158 C655.761,303.8168 631.23,287.567 606.266,271.03 " fill="none" id="SharedReference-backto-Bitmap" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="696.558,330.843,693.7651,324.1947,686.554,324.2158,689.3469,330.8641,696.558,330.843" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CloseableReference to DefaultCloseableReference--><g id="link_CloseableReference_DefaultCloseableReference"><path codeLine="9" d="M447.1364,421.3612 C450.4064,445.0692 453.014,463.9771 456.295,487.7609 " fill="none" id="CloseableReference-backto-DefaultCloseableReference" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="444.677,403.53,441.1927,422.181,453.0802,420.5414,444.677,403.53" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CloseableReference to SharedReference--><g id="link_CloseableReference_SharedReference"><path codeLine="10" d="M565.268,379.5 C576.758,379.5 576.248,379.5 587.738,379.5 " fill="none" id="CloseableReference-backto-SharedReference" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="553.268,379.5,559.268,383.5,565.268,379.5,559.268,375.5,553.268,379.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CloseableImage to CloseableBitmap--><g id="link_CloseableImage_CloseableBitmap"><path codeLine="15" d="M157.1678,68.0312 C140.3418,85.6892 129.622,96.941 112.722,114.678 " fill="none" id="CloseableImage-backto-CloseableBitmap" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="169.585,55,152.824,63.8921,161.5115,72.1703,169.585,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CloseableBitmap to CloseableStaticBitmap--><g id="link_CloseableBitmap_CloseableStaticBitmap"><path codeLine="16" d="M95.5119,180.8661 C97.6775,198.5241 98.4644,204.941 100.6398,222.678 " fill="none" id="CloseableBitmap-backto-CloseableStaticBitmap" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="93.3208,163,89.5565,181.5965,101.4673,180.1358,93.3208,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CloseableImage to BaseCloseableImage--><g id="link_CloseableImage_BaseCloseableImage"><path codeLine="18" d="M226.113,67.9702 C243.105,85.6282 253.99,96.941 271.058,114.678 " fill="none" id="CloseableImage-backto-BaseCloseableImage" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="213.632,55,221.7896,72.1305,230.4364,63.8098,213.632,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CloseableStaticBitmap to BaseCloseableStaticBitmap--><g id="link_CloseableStaticBitmap_BaseCloseableStaticBitmap"><path codeLine="19" d="M125.705,286.6363 C139.33,310.3443 151.475,331.477 165.144,355.261 " fill="none" id="CloseableStaticBitmap-backto-BaseCloseableStaticBitmap" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="116.736,271.03,120.5029,289.626,130.9071,283.6467,116.736,271.03" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BaseCloseableImage to BaseCloseableStaticBitmap--><g id="link_BaseCloseableImage_BaseCloseableStaticBitmap"><path codeLine="20" d="M274.446,179.5165 C252.404,225.2285 211.554,309.949 189.612,355.454 " fill="none" id="BaseCloseableImage-backto-BaseCloseableStaticBitmap" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="282.264,163.303,269.0415,176.9105,279.8505,182.1225,282.264,163.303" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BaseCloseableStaticBitmap to DefaultCloseableStaticBitmap--><g id="link_BaseCloseableStaticBitmap_DefaultCloseableStaticBitmap"><path codeLine="21" d="M172.8636,421.3612 C169.5936,445.0692 166.986,463.9771 163.705,487.7609 " fill="none" id="BaseCloseableStaticBitmap-backto-DefaultCloseableStaticBitmap" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="175.323,403.53,166.9198,420.5414,178.8073,422.181,175.323,403.53" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BaseCloseableStaticBitmap to CloseableReference--><g id="link_BaseCloseableStaticBitmap_CloseableReference"><path codeLine="22" d="M306.59,379.5 C318.354,379.5 318.118,379.5 329.883,379.5 " fill="none" id="BaseCloseableStaticBitmap-backto-CloseableReference" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="294.59,379.5,300.59,383.5,306.59,379.5,300.59,375.5,294.59,379.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--link Bitmap to BaseCloseableStaticBitmap--><g id="link_Bitmap_BaseCloseableStaticBitmap"><path codeLine="23" d="M528.747,261.261 C477.29,277.324 388.334,305.415 312.5,331 C289.581,338.733 275.8766,343.4804 253.7366,351.3644 " fill="none" id="Bitmap-to-BaseCloseableStaticBitmap" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="242.432,355.39,249.4262,357.1454,253.7366,351.3644,246.7425,349.609,242.432,355.39" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[bLAz3e8m4Dxx59rDU0FY02wkaBWVzVX9MZ3jTLBVtGQGo569Thj-VzUxAWtEoR85YzS2QxJOAqopZWpSZl8kP3XJ9Sq5jCVnfkj9ca3F1z_JU5EW6xnLMA16S6WN2yCHyHGiJXwIP0uHK3coe4YgiR5S3mwXqhZfJKo44zRWDUtmjf1C7o7mgpAcE2IsQrfA-AI42AD0MqFWBBApWGPZmFp6258IKATcV6qqTSizMCr8ApisqYmiWRKQ2zoZVTf7sAlqhSzVYcqKtzkFscM3aONlgVpj_JTV]--></g></svg>

<p><code>com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams#get</code></p>
<h3 id="解码的临时缓存"><a href="#解码的临时缓存" class="headerlink" title="解码的临时缓存"></a>解码的临时缓存</h3><p>DefaultDecoder在解码图片生成BitMap时可以设置临时缓存，防止频繁GC，通过<code>android.graphics.BitmapFactory.Options#inTempStorage</code>来设置图片解码临时缓存，api文档中临时缓存大小建议为16K左右。临时缓存使用Pools.Pool&lt;ByteBuffer&gt;，是<code>SynchronizedPool</code>，缓存的个数默认是java虚拟机可使用的处理器个数<small>（可等同于cpu的核心数，但不是完全对等）</small>。这个是解码器独用的内存池，在Java堆上申请内存。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// PlatformDecoderFactory.kt</span></span><br><span class="line">  <span class="function"><span class="keyword">fun</span> <span class="title">createPool</span><span class="params">(poolFactory: <span class="type">PoolFactory</span>, useDecodeBufferHelper: <span class="type">Boolean</span>)</span></span>: Pools.Pool&lt;ByteBuffer&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (useDecodeBufferHelper) &#123;</span><br><span class="line">      <span class="keyword">return</span> DecodeBufferHelper.INSTANCE</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">val</span> maxNumThreads = poolFactory.flexByteArrayPoolMaxNumThreads</span><br><span class="line">    <span class="keyword">val</span> pool: Pools.Pool&lt;ByteBuffer&gt; = SynchronizedPool(maxNumThreads)</span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">0</span> until maxNumThreads) &#123;</span><br><span class="line">      <span class="comment">//release这个函数含义是：将实例释放到缓存池中，提供给后续使用。</span></span><br><span class="line">      <span class="comment">//每个buffer的默认大小是16K</span></span><br><span class="line">      pool.release(ByteBuffer.allocate(DecodeBufferHelper.getRecommendedDecodeBufferSize()))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pool</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h2 id="图片处理生产者序列"><a href="#图片处理生产者序列" class="headerlink" title="图片处理生产者序列"></a>图片处理生产者序列</h2><p>Fresco从一个图片的URL下载图片并解码成Bitmap需要经过一个生产者序列的处理。在<code>ImagePipeline#fetchDecodedImage</code>中开始生成队列并执行任务序列。下图展示了图片处理的所有生产者，其中有些序列默认是不使用的，除非进行特别配置或者特定场景。图中箭头的方向是图片数据流动的方向，而调用顺序正好相反，后面的Producer持有前面的Producer，当然这个持有只是对Producer接口的依赖，并不是直接依赖实现类。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="447px" preserveAspectRatio="none" style="width:1091px;height:447px;background:#FFFFFF;" version="1.1" viewBox="0 0 1091 447" width="1091px" zoomAndPan="magnify"><defs/><g><!--entity ????--><g id="elem_&#22270;&#29255;&#25968;&#25454;"><ellipse cx="137.5" cy="25" fill="#F1F1F1" rx="8" ry="8" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="109.5" y="54.9951">&#22270;&#29255;&#25968;&#25454;</text></g><!--entity NetworkFetchProducer--><g id="elem_NetworkFetchProducer"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="186" x="181.5" y="7"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="191.5" y="29.9951">NetworkFetchProducer</text></g><!--entity WebpTranscodeProducer--><g id="elem_WebpTranscodeProducer"><rect fill="#FFFFFF" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,3.0;" width="201" x="403" y="7"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="413" y="29.9951">WebpTranscodeProducer</text></g><!--entity PartialDiskCacheProducer--><g id="elem_PartialDiskCacheProducer"><rect fill="#FFFFFF" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,3.0;" width="205" x="639" y="7"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="649" y="29.9951">PartialDiskCacheProducer</text></g><!--entity DiskCacheWriteProducer--><g id="elem_DiskCacheWriteProducer"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="199" x="879" y="7"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="889" y="29.9951">DiskCacheWriteProducer</text></g><!--entity DiskCacheReadProducer--><g id="elem_DiskCacheReadProducer"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="195" x="881" y="103"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="891" y="125.9951">DiskCacheReadProducer</text></g><!--entity EncodedMemoryCacheProducer--><g id="elem_EncodedMemoryCacheProducer"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="248" x="597.5" y="103"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="228" x="607.5" y="125.9951">EncodedMemoryCacheProducer</text></g><!--entity EncodedProbeProducer--><g id="elem_EncodedProbeProducer"><rect fill="#FFFFFF" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,3.0;" width="189" x="373" y="103"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="383" y="125.9951">EncodedProbeProducer</text></g><!--entity EncodedCacheKeyMultiplexProducer--><g id="elem_EncodedCacheKeyMultiplexProducer"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="283" x="55" y="103"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="65" y="125.9951">EncodedCacheKeyMultiplexProducer</text></g><!--entity AddImageTransformMetaDataProducer--><g id="elem_AddImageTransformMetaDataProducer"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="300" x="46.5" y="199"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="280" x="56.5" y="221.9951">AddImageTransformMetaDataProducer</text></g><!--entity ResizeAndRotateProducer--><g id="elem_ResizeAndRotateProducer"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="209" x="382" y="199"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="392" y="221.9951">ResizeAndRotateProducer</text></g><!--entity DecodeProducer--><g id="elem_DecodeProducer"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="139" x="626" y="199"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="636" y="221.9951">DecodeProducer</text></g><!--entity BitmapMemoryCacheProducer--><g id="elem_BitmapMemoryCacheProducer"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="239" x="800" y="199"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="810" y="221.9951">BitmapMemoryCacheProducer</text></g><!--entity BitmapMemoryCacheKeyMultiplexProducer--><g id="elem_BitmapMemoryCacheKeyMultiplexProducer"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="332" x="753.5" y="295"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="312" x="763.5" y="317.9951">BitmapMemoryCacheKeyMultiplexProducer</text></g><!--entity ThreadHandoffProducer--><g id="elem_ThreadHandoffProducer"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="191" x="527" y="295"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="537" y="317.9951">ThreadHandoffProducer</text></g><!--entity BitmapMemoryCacheGetProducer--><g id="elem_BitmapMemoryCacheGetProducer"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="266" x="225.5" y="295"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="246" x="235.5" y="317.9951">BitmapMemoryCacheGetProducer</text></g><!--entity BitmapProbeProducer--><g id="elem_BitmapProbeProducer"><rect fill="#FFFFFF" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,3.0;" width="180" x="10.5" y="295"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="20.5" y="317.9951">BitmapProbeProducer</text></g><!--entity PostprocessorProducer--><g id="elem_PostprocessorProducer"><rect fill="#FFFFFF" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,3.0;" width="187" x="7" y="391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="17" y="413.9951">PostprocessorProducer</text></g><!--entity PostprocessedBitmapMemoryCacheProducer--><g id="elem_PostprocessedBitmapMemoryCacheProducer"><rect fill="#FFFFFF" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,3.0;" width="345" x="229" y="391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="325" x="239" y="413.9951">PostprocessedBitmapMemoryCacheProducer</text></g><!--entity BitmapPrepareProducer--><g id="elem_BitmapPrepareProducer"><rect fill="#F1F1F1" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="194" x="609.5" y="391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="619.5" y="413.9951">BitmapPrepareProducer</text></g><!--entity DelayProducer--><g id="elem_DelayProducer"><rect fill="#FFFFFF" height="36.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,3.0;" width="124" x="838.5" y="391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="848.5" y="413.9951">DelayProducer</text></g><!--entity Bitmap--><g id="elem_Bitmap"><ellipse cx="1006.5" cy="409" fill="#F1F1F1" rx="8" ry="8" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="980" y="438.9951">Bitmap</text></g><!--link ???? to NetworkFetchProducer--><g id="link_&#22270;&#29255;&#25968;&#25454;_NetworkFetchProducer"><path d="M146.598,25 C158.089,25 163.58,25 175.071,25 " fill="none" id="&#22270;&#29255;&#25968;&#25454;-to-NetworkFetchProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="181.071,25,172.071,21,176.071,25,172.071,29,181.071,25" style="stroke:#181818;stroke-width:1.0;"/></g><!--link NetworkFetchProducer to WebpTranscodeProducer--><g id="link_NetworkFetchProducer_WebpTranscodeProducer"><path d="M367.531,25 C379.305,25 385.078,25 396.851,25 " fill="none" id="NetworkFetchProducer-to-WebpTranscodeProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="402.851,25,393.851,21,397.851,25,393.851,29,402.851,25" style="stroke:#181818;stroke-width:1.0;"/></g><!--link WebpTranscodeProducer to PartialDiskCacheProducer--><g id="link_WebpTranscodeProducer_PartialDiskCacheProducer"><path d="M604.371,25 C615.888,25 621.404,25 632.921,25 " fill="none" id="WebpTranscodeProducer-to-PartialDiskCacheProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="638.921,25,629.921,21,633.921,25,629.921,29,638.921,25" style="stroke:#181818;stroke-width:1.0;"/></g><!--link PartialDiskCacheProducer to DiskCacheWriteProducer--><g id="link_PartialDiskCacheProducer_DiskCacheWriteProducer"><path d="M844.262,25 C855.798,25 861.334,25 872.87,25 " fill="none" id="PartialDiskCacheProducer-to-DiskCacheWriteProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="878.87,25,869.87,21,873.87,25,869.87,29,878.87,25" style="stroke:#181818;stroke-width:1.0;"/></g><!--link DiskCacheWriteProducer to DiskCacheReadProducer--><g id="link_DiskCacheWriteProducer_DiskCacheReadProducer"><path d="M978.5,43.241 C978.5,60.202 978.5,79.945 978.5,96.868 " fill="none" id="DiskCacheWriteProducer-to-DiskCacheReadProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="978.5,102.868,982.5,93.868,978.5,97.868,974.5,93.868,978.5,102.868" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link EncodedMemoryCacheProducer to DiskCacheReadProducer--><g id="link_EncodedMemoryCacheProducer_DiskCacheReadProducer"><path d="M851.733,121 C863.489,121 869.244,121 881,121 " fill="none" id="EncodedMemoryCacheProducer-backto-DiskCacheReadProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="845.733,121,854.733,125,850.733,121,854.733,117,845.733,121" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link EncodedProbeProducer to EncodedMemoryCacheProducer--><g id="link_EncodedProbeProducer_EncodedMemoryCacheProducer"><path d="M568.254,121 C579.969,121 585.685,121 597.4,121 " fill="none" id="EncodedProbeProducer-backto-EncodedMemoryCacheProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="562.254,121,571.254,125,567.254,121,571.254,117,562.254,121" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link EncodedCacheKeyMultiplexProducer to EncodedProbeProducer--><g id="link_EncodedCacheKeyMultiplexProducer_EncodedProbeProducer"><path d="M344.087,121 C355.714,121 361.341,121 372.968,121 " fill="none" id="EncodedCacheKeyMultiplexProducer-backto-EncodedProbeProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="338.087,121,347.087,125,343.087,121,347.087,117,338.087,121" style="stroke:#181818;stroke-width:1.0;"/></g><!--link EncodedCacheKeyMultiplexProducer to AddImageTransformMetaDataProducer--><g id="link_EncodedCacheKeyMultiplexProducer_AddImageTransformMetaDataProducer"><path d="M196.5,139.241 C196.5,156.202 196.5,175.945 196.5,192.868 " fill="none" id="EncodedCacheKeyMultiplexProducer-to-AddImageTransformMetaDataProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="196.5,198.868,200.5,189.868,196.5,193.868,192.5,189.868,196.5,198.868" style="stroke:#181818;stroke-width:1.0;"/></g><!--link AddImageTransformMetaDataProducer to ResizeAndRotateProducer--><g id="link_AddImageTransformMetaDataProducer_ResizeAndRotateProducer"><path d="M346.598,217 C358.347,217 364.097,217 375.846,217 " fill="none" id="AddImageTransformMetaDataProducer-to-ResizeAndRotateProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="381.846,217,372.846,213,376.846,217,372.846,221,381.846,217" style="stroke:#181818;stroke-width:1.0;"/></g><!--link ResizeAndRotateProducer to DecodeProducer--><g id="link_ResizeAndRotateProducer_DecodeProducer"><path d="M591,217 C602.566,217 608.132,217 619.697,217 " fill="none" id="ResizeAndRotateProducer-to-DecodeProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="625.697,217,616.697,213,620.697,217,616.697,221,625.697,217" style="stroke:#181818;stroke-width:1.0;"/></g><!--link DecodeProducer to BitmapMemoryCacheProducer--><g id="link_DecodeProducer_BitmapMemoryCacheProducer"><path d="M765.062,217 C776.625,217 782.188,217 793.751,217 " fill="none" id="DecodeProducer-to-BitmapMemoryCacheProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="799.751,217,790.751,213,794.751,217,790.751,221,799.751,217" style="stroke:#181818;stroke-width:1.0;"/></g><!--link BitmapMemoryCacheProducer to BitmapMemoryCacheKeyMultiplexProducer--><g id="link_BitmapMemoryCacheProducer_BitmapMemoryCacheKeyMultiplexProducer"><path d="M919.5,235.241 C919.5,252.202 919.5,271.945 919.5,288.868 " fill="none" id="BitmapMemoryCacheProducer-to-BitmapMemoryCacheKeyMultiplexProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="919.5,294.868,923.5,285.868,919.5,289.868,915.5,285.868,919.5,294.868" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ThreadHandoffProducer to BitmapMemoryCacheKeyMultiplexProducer--><g id="link_ThreadHandoffProducer_BitmapMemoryCacheKeyMultiplexProducer"><path d="M724.213,313 C735.876,313 741.539,313 753.202,313 " fill="none" id="ThreadHandoffProducer-backto-BitmapMemoryCacheKeyMultiplexProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="718.213,313,727.213,317,723.213,313,727.213,309,718.213,313" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BitmapMemoryCacheGetProducer to ThreadHandoffProducer--><g id="link_BitmapMemoryCacheGetProducer_ThreadHandoffProducer"><path d="M497.531,313 C509.298,313 515.065,313 526.831,313 " fill="none" id="BitmapMemoryCacheGetProducer-backto-ThreadHandoffProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="491.531,313,500.531,317,496.531,313,500.531,309,491.531,313" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BitmapProbeProducer to BitmapMemoryCacheGetProducer--><g id="link_BitmapProbeProducer_BitmapMemoryCacheGetProducer"><path d="M196.699,313 C208.279,313 213.859,313 225.439,313 " fill="none" id="BitmapProbeProducer-backto-BitmapMemoryCacheGetProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="190.699,313,199.699,317,195.699,313,199.699,309,190.699,313" style="stroke:#181818;stroke-width:1.0;"/></g><!--link BitmapProbeProducer to PostprocessorProducer--><g id="link_BitmapProbeProducer_PostprocessorProducer"><path d="M100.5,331.241 C100.5,348.2017 100.5,367.9455 100.5,384.8683 " fill="none" id="BitmapProbeProducer-to-PostprocessorProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="100.5,390.8683,104.5,381.8683,100.5,385.8683,96.5,381.8683,100.5,390.8683" style="stroke:#181818;stroke-width:1.0;"/></g><!--link PostprocessorProducer to PostprocessedBitmapMemoryCacheProducer--><g id="link_PostprocessorProducer_PostprocessedBitmapMemoryCacheProducer"><path d="M194.269,409 C205.736,409 211.204,409 222.672,409 " fill="none" id="PostprocessorProducer-to-PostprocessedBitmapMemoryCacheProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="228.672,409,219.672,405,223.672,409,219.672,413,228.672,409" style="stroke:#181818;stroke-width:1.0;"/></g><!--link PostprocessedBitmapMemoryCacheProducer to BitmapPrepareProducer--><g id="link_PostprocessedBitmapMemoryCacheProducer_BitmapPrepareProducer"><path d="M574.254,409 C585.963,409 591.672,409 603.382,409 " fill="none" id="PostprocessedBitmapMemoryCacheProducer-to-BitmapPrepareProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="609.382,409,600.382,405,604.382,409,600.382,413,609.382,409" style="stroke:#181818;stroke-width:1.0;"/></g><!--link BitmapPrepareProducer to DelayProducer--><g id="link_BitmapPrepareProducer_DelayProducer"><path d="M803.879,409 C815.327,409 820.776,409 832.225,409 " fill="none" id="BitmapPrepareProducer-to-DelayProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="838.225,409,829.225,405,833.225,409,829.225,413,838.225,409" style="stroke:#181818;stroke-width:1.0;"/></g><!--link DelayProducer to Bitmap--><g id="link_DelayProducer_Bitmap"><path d="M962.609,409 C974.154,409 979.698,409 991.242,409 " fill="none" id="DelayProducer-to-Bitmap" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="997.242,409,988.242,405,992.242,409,988.242,413,997.242,409" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[bLHBJiCm4Dtd59PObmE0X5GeFw6YgbJgec8njITDbCIEdAbAk01YmP8LTq2SWDi0ro2VgasSE8JjpFjCteoJ1BwCGKF4k8fY9L7I7QKXCesSGAv2TBxUFd-UdxvVFxvVtjdWX2rkaJPA1nT8t9je9TOSzRspuxF579VnJ8DCk1AuGx239V3WQEFvXCUXB_5GA28KJhjWOTMkLFMQW2OVmf6V16V0lJvsbl5oFwkQqs6K4tVbkSxyAZHBWmrgh2c2Q2FLwcmGeaivxrpceuinHagdng2LRBQmhBViaqk7QiEwhkbOh4nM8Ng3wNWTaX-7-D1Ki4FAo8P2N4UmmcA1hjBH60b6G52H-XjJx6oAYV-8GoccYg2sD5kdN3NMZz4i5A1JdoA8MnVKqIi_iT6t9DOFjr_2pDFPELs15CfrAphjzJsluNE9r7fl9R3lkNNAckx6lLL_02gXM2kEIQ9qRrlpK8l7twfayKBHiKQhkMLOmxrBs-azH3KypFxnxV6DC8Jq7x7LbROFeYhXc98Pf2J_0W00]--></g></svg>

<h3 id="NetworkFetchProducer"><a href="#NetworkFetchProducer" class="headerlink" title="NetworkFetchProducer"></a>NetworkFetchProducer</h3><p>Fresco默认使用<code>HttpURLConnection</code>而不是Okhttp来请求网络图片，在生成ImagePipelineConfig时需要使用<code>OkHttpImagePipelineConfigFactory</code>来使用Okhttp来请求网络。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="581px" preserveAspectRatio="none" style="width:1048px;height:581px;background:#FFFFFF;" version="1.1" viewBox="0 0 1048 581" width="1048px" zoomAndPan="magnify"><defs/><g><!--class Producer--><g id="elem_Producer"><rect codeLine="1" fill="#F1F1F1" height="48" id="Producer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="191" x="213" y="10"/><ellipse cx="228" cy="26" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M228.9531,22.7813 L230.6719,22.7813 C231.0625,22.7813 231.25,22.75 231.375,22.6719 C231.6406,22.5156 231.7813,22.2344 231.7813,21.9375 C231.7813,21.6719 231.6719,21.4063 231.4375,21.2344 C231.2656,21.125 231.125,21.0938 230.6719,21.0938 L225.5313,21.0938 C225.0938,21.0938 224.9688,21.1094 224.8125,21.2031 C224.5625,21.3594 224.4063,21.6563 224.4063,21.9375 C224.4063,22.2188 224.5469,22.4688 224.7656,22.6406 C224.9219,22.75 225.1094,22.7813 225.5313,22.7813 L227.25,22.7813 L227.25,29.2969 L225.5313,29.2969 C225.0938,29.2969 224.9688,29.3125 224.8125,29.4219 C224.5625,29.5781 224.4063,29.8594 224.4063,30.1563 C224.4063,30.4063 224.5469,30.6719 224.7656,30.8281 C224.9219,30.9531 225.125,31 225.5313,31 L230.6719,31 C231.4219,31 231.7813,30.7188 231.7813,30.1563 C231.7813,29.875 231.6719,29.625 231.4375,29.4531 C231.2656,29.3281 231.125,29.2969 230.6719,29.2969 L228.9531,29.2969 L228.9531,22.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="64" x="242" y="30.8467">Producer</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="93" x="314" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="91" x="315" y="19.1387">EncodedImage</text><line style="stroke:#181818;stroke-width:0.5;" x1="214" x2="403" y1="42" y2="42"/><line style="stroke:#181818;stroke-width:0.5;" x1="214" x2="403" y1="50" y2="50"/></g><!--class NetworkFetchProducer--><g id="elem_NetworkFetchProducer"><rect fill="#F1F1F1" height="48" id="NetworkFetchProducer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="198" x="209.5" y="119"/><ellipse cx="224.5" cy="135" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M226.8438,130.6719 C225.9063,130.2344 225.3125,130.0938 224.4375,130.0938 C221.8125,130.0938 219.8125,132.1719 219.8125,134.8906 L219.8125,136.0156 C219.8125,138.5938 221.9219,140.4844 224.8125,140.4844 C226.0313,140.4844 227.1875,140.1875 227.9375,139.6406 C228.5156,139.2344 228.8438,138.7813 228.8438,138.3906 C228.8438,137.9375 228.4531,137.5469 227.9844,137.5469 C227.7656,137.5469 227.5625,137.625 227.375,137.8125 C226.9219,138.2969 226.9219,138.2969 226.7344,138.3906 C226.3125,138.6563 225.625,138.7813 224.8594,138.7813 C222.8125,138.7813 221.5156,137.6875 221.5156,135.9844 L221.5156,134.8906 C221.5156,133.1094 222.7656,131.7969 224.5,131.7969 C225.0781,131.7969 225.6875,131.9531 226.1563,132.2031 C226.6406,132.4844 226.8125,132.7031 226.9063,133.1094 C226.9688,133.5156 227,133.6406 227.1406,133.7656 C227.2813,133.9063 227.5156,134.0156 227.7344,134.0156 C228,134.0156 228.2656,133.875 228.4375,133.6563 C228.5469,133.5 228.5781,133.3125 228.5781,132.8906 L228.5781,131.4688 C228.5781,131.0313 228.5625,130.9063 228.4688,130.75 C228.3125,130.4844 228.0313,130.3438 227.7344,130.3438 C227.4375,130.3438 227.2344,130.4375 227.0156,130.75 L226.8438,130.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="238.5" y="139.8467">NetworkFetchProducer</text><line style="stroke:#181818;stroke-width:0.5;" x1="210.5" x2="406.5" y1="151" y2="151"/><line style="stroke:#181818;stroke-width:0.5;" x1="210.5" x2="406.5" y1="159" y2="159"/></g><!--class NetworkFetcher--><g id="elem_NetworkFetcher"><rect fill="#F1F1F1" height="48" id="NetworkFetcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="149" x="613" y="119"/><ellipse cx="628" cy="135" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M630.3438,130.6719 C629.4063,130.2344 628.8125,130.0938 627.9375,130.0938 C625.3125,130.0938 623.3125,132.1719 623.3125,134.8906 L623.3125,136.0156 C623.3125,138.5938 625.4219,140.4844 628.3125,140.4844 C629.5313,140.4844 630.6875,140.1875 631.4375,139.6406 C632.0156,139.2344 632.3438,138.7813 632.3438,138.3906 C632.3438,137.9375 631.9531,137.5469 631.4844,137.5469 C631.2656,137.5469 631.0625,137.625 630.875,137.8125 C630.4219,138.2969 630.4219,138.2969 630.2344,138.3906 C629.8125,138.6563 629.125,138.7813 628.3594,138.7813 C626.3125,138.7813 625.0156,137.6875 625.0156,135.9844 L625.0156,134.8906 C625.0156,133.1094 626.2656,131.7969 628,131.7969 C628.5781,131.7969 629.1875,131.9531 629.6563,132.2031 C630.1406,132.4844 630.3125,132.7031 630.4063,133.1094 C630.4688,133.5156 630.5,133.6406 630.6406,133.7656 C630.7813,133.9063 631.0156,134.0156 631.2344,134.0156 C631.5,134.0156 631.7656,133.875 631.9375,133.6563 C632.0469,133.5 632.0781,133.3125 632.0781,132.8906 L632.0781,131.4688 C632.0781,131.0313 632.0625,130.9063 631.9688,130.75 C631.8125,130.4844 631.5313,130.3438 631.2344,130.3438 C630.9375,130.3438 630.7344,130.4375 630.5156,130.75 L630.3438,130.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="642" y="139.8467">NetworkFetcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="614" x2="761" y1="151" y2="151"/><line style="stroke:#181818;stroke-width:0.5;" x1="614" x2="761" y1="159" y2="159"/></g><!--class MemoryChunkPool--><g id="elem_MemoryChunkPool"><rect codeLine="4" fill="#F1F1F1" height="48" id="MemoryChunkPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="165" x="431" y="526"/><ellipse cx="446" cy="542" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M448.0781,543.8125 L448.4688,544.7969 L448.0781,544.7969 C447.625,544.7969 447.5156,544.8125 447.3594,544.9219 C447.1094,545.0781 446.9531,545.3594 446.9531,545.6563 C446.9531,545.9219 447.0938,546.1719 447.3125,546.3281 C447.4531,546.4531 447.6563,546.5 448.0781,546.5 L450.4375,546.5 C450.7969,546.5 451.0156,546.4688 451.1563,546.375 C451.4063,546.2344 451.5625,545.9375 451.5625,545.6563 C451.5625,545.375 451.4219,545.125 451.2031,544.9688 C451.0313,544.8281 450.875,544.7969 450.4063,544.7969 L447.0156,536.5938 L443.3438,536.5938 C442.8906,536.5938 442.7656,536.6094 442.6094,536.7031 C442.3594,536.875 442.2031,537.1563 442.2031,537.4375 C442.2031,537.7188 442.3438,537.9688 442.5625,538.1406 C442.7344,538.25 442.9063,538.2813 443.3438,538.2813 L444.4219,538.2813 L441.7813,544.7969 C441.3594,544.7969 441.2031,544.8125 441.0469,544.9219 C440.7969,545.0781 440.6406,545.3594 440.6406,545.6563 C440.6406,546.2188 441.0156,546.5 441.7656,546.5 L444.0313,546.5 C444.3906,546.5 444.6094,546.4688 444.7344,546.375 C445,546.2344 445.1406,545.9375 445.1406,545.6563 C445.1406,545.375 445.0156,545.125 444.7969,544.9531 C444.625,544.8281 444.4844,544.7969 444.0313,544.7969 L443.6406,544.7969 L444.0313,543.8125 L448.0781,543.8125 Z M447.375,542.1094 L444.7031,542.1094 L446.0469,538.8438 L447.375,542.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="133" x="460" y="546.8467">MemoryChunkPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="432" x2="595" y1="558" y2="558"/><line style="stroke:#181818;stroke-width:0.5;" x1="432" x2="595" y1="566" y2="566"/></g><!--class ByteArrayPool--><g id="elem_ByteArrayPool"><rect fill="#F1F1F1" height="48" id="ByteArrayPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="135" x="443" y="119"/><ellipse cx="458" cy="135" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M460.3438,130.6719 C459.4063,130.2344 458.8125,130.0938 457.9375,130.0938 C455.3125,130.0938 453.3125,132.1719 453.3125,134.8906 L453.3125,136.0156 C453.3125,138.5938 455.4219,140.4844 458.3125,140.4844 C459.5313,140.4844 460.6875,140.1875 461.4375,139.6406 C462.0156,139.2344 462.3438,138.7813 462.3438,138.3906 C462.3438,137.9375 461.9531,137.5469 461.4844,137.5469 C461.2656,137.5469 461.0625,137.625 460.875,137.8125 C460.4219,138.2969 460.4219,138.2969 460.2344,138.3906 C459.8125,138.6563 459.125,138.7813 458.3594,138.7813 C456.3125,138.7813 455.0156,137.6875 455.0156,135.9844 L455.0156,134.8906 C455.0156,133.1094 456.2656,131.7969 458,131.7969 C458.5781,131.7969 459.1875,131.9531 459.6563,132.2031 C460.1406,132.4844 460.3125,132.7031 460.4063,133.1094 C460.4688,133.5156 460.5,133.6406 460.6406,133.7656 C460.7813,133.9063 461.0156,134.0156 461.2344,134.0156 C461.5,134.0156 461.7656,133.875 461.9375,133.6563 C462.0469,133.5 462.0781,133.3125 462.0781,132.8906 L462.0781,131.4688 C462.0781,131.0313 462.0625,130.9063 461.9688,130.75 C461.8125,130.4844 461.5313,130.3438 461.2344,130.3438 C460.9375,130.3438 460.7344,130.4375 460.5156,130.75 L460.3438,130.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="472" y="139.8467">ByteArrayPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="444" x2="577" y1="151" y2="151"/><line style="stroke:#181818;stroke-width:0.5;" x1="444" x2="577" y1="159" y2="159"/></g><!--class BaseNetworkFetcher--><g id="elem_BaseNetworkFetcher"><rect codeLine="6" fill="#F1F1F1" height="48" id="BaseNetworkFetcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="179" x="598" y="240"/><ellipse cx="613" cy="256" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M615.0781,257.8125 L615.4688,258.7969 L615.0781,258.7969 C614.625,258.7969 614.5156,258.8125 614.3594,258.9219 C614.1094,259.0781 613.9531,259.3594 613.9531,259.6563 C613.9531,259.9219 614.0938,260.1719 614.3125,260.3281 C614.4531,260.4531 614.6563,260.5 615.0781,260.5 L617.4375,260.5 C617.7969,260.5 618.0156,260.4688 618.1563,260.375 C618.4063,260.2344 618.5625,259.9375 618.5625,259.6563 C618.5625,259.375 618.4219,259.125 618.2031,258.9688 C618.0313,258.8281 617.875,258.7969 617.4063,258.7969 L614.0156,250.5938 L610.3438,250.5938 C609.8906,250.5938 609.7656,250.6094 609.6094,250.7031 C609.3594,250.875 609.2031,251.1563 609.2031,251.4375 C609.2031,251.7188 609.3438,251.9688 609.5625,252.1406 C609.7344,252.25 609.9063,252.2813 610.3438,252.2813 L611.4219,252.2813 L608.7813,258.7969 C608.3594,258.7969 608.2031,258.8125 608.0469,258.9219 C607.7969,259.0781 607.6406,259.3594 607.6406,259.6563 C607.6406,260.2188 608.0156,260.5 608.7656,260.5 L611.0313,260.5 C611.3906,260.5 611.6094,260.4688 611.7344,260.375 C612,260.2344 612.1406,259.9375 612.1406,259.6563 C612.1406,259.375 612.0156,259.125 611.7969,258.9531 C611.625,258.8281 611.4844,258.7969 611.0313,258.7969 L610.6406,258.7969 L611.0313,257.8125 L615.0781,257.8125 Z M614.375,256.1094 L611.7031,256.1094 L613.0469,252.8438 L614.375,256.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="147" x="627" y="260.8467">BaseNetworkFetcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="599" x2="776" y1="272" y2="272"/><line style="stroke:#181818;stroke-width:0.5;" x1="599" x2="776" y1="280" y2="280"/></g><!--class HttpUrlConnectionNetworkFetcher--><g id="elem_HttpUrlConnectionNetworkFetcher"><rect fill="#F1F1F1" height="48" id="HttpUrlConnectionNetworkFetcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="285" x="518" y="389"/><ellipse cx="533" cy="405" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M535.3438,400.6719 C534.4063,400.2344 533.8125,400.0938 532.9375,400.0938 C530.3125,400.0938 528.3125,402.1719 528.3125,404.8906 L528.3125,406.0156 C528.3125,408.5938 530.4219,410.4844 533.3125,410.4844 C534.5313,410.4844 535.6875,410.1875 536.4375,409.6406 C537.0156,409.2344 537.3438,408.7813 537.3438,408.3906 C537.3438,407.9375 536.9531,407.5469 536.4844,407.5469 C536.2656,407.5469 536.0625,407.625 535.875,407.8125 C535.4219,408.2969 535.4219,408.2969 535.2344,408.3906 C534.8125,408.6563 534.125,408.7813 533.3594,408.7813 C531.3125,408.7813 530.0156,407.6875 530.0156,405.9844 L530.0156,404.8906 C530.0156,403.1094 531.2656,401.7969 533,401.7969 C533.5781,401.7969 534.1875,401.9531 534.6563,402.2031 C535.1406,402.4844 535.3125,402.7031 535.4063,403.1094 C535.4688,403.5156 535.5,403.6406 535.6406,403.7656 C535.7813,403.9063 536.0156,404.0156 536.2344,404.0156 C536.5,404.0156 536.7656,403.875 536.9375,403.6563 C537.0469,403.5 537.0781,403.3125 537.0781,402.8906 L537.0781,401.4688 C537.0781,401.0313 537.0625,400.9063 536.9688,400.75 C536.8125,400.4844 536.5313,400.3438 536.2344,400.3438 C535.9375,400.3438 535.7344,400.4375 535.5156,400.75 L535.3438,400.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="253" x="547" y="409.8467">HttpUrlConnectionNetworkFetcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="519" x2="802" y1="421" y2="421"/><line style="stroke:#181818;stroke-width:0.5;" x1="519" x2="802" y1="429" y2="429"/></g><!--class OkHttpNetworkFetcher--><g id="elem_OkHttpNetworkFetcher"><rect fill="#F1F1F1" height="48" id="OkHttpNetworkFetcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="203" x="838" y="389"/><ellipse cx="853" cy="405" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M855.3438,400.6719 C854.4063,400.2344 853.8125,400.0938 852.9375,400.0938 C850.3125,400.0938 848.3125,402.1719 848.3125,404.8906 L848.3125,406.0156 C848.3125,408.5938 850.4219,410.4844 853.3125,410.4844 C854.5313,410.4844 855.6875,410.1875 856.4375,409.6406 C857.0156,409.2344 857.3438,408.7813 857.3438,408.3906 C857.3438,407.9375 856.9531,407.5469 856.4844,407.5469 C856.2656,407.5469 856.0625,407.625 855.875,407.8125 C855.4219,408.2969 855.4219,408.2969 855.2344,408.3906 C854.8125,408.6563 854.125,408.7813 853.3594,408.7813 C851.3125,408.7813 850.0156,407.6875 850.0156,405.9844 L850.0156,404.8906 C850.0156,403.1094 851.2656,401.7969 853,401.7969 C853.5781,401.7969 854.1875,401.9531 854.6563,402.2031 C855.1406,402.4844 855.3125,402.7031 855.4063,403.1094 C855.4688,403.5156 855.5,403.6406 855.6406,403.7656 C855.7813,403.9063 856.0156,404.0156 856.2344,404.0156 C856.5,404.0156 856.7656,403.875 856.9375,403.6563 C857.0469,403.5 857.0781,403.3125 857.0781,402.8906 L857.0781,401.4688 C857.0781,401.0313 857.0625,400.9063 856.9688,400.75 C856.8125,400.4844 856.5313,400.3438 856.2344,400.3438 C855.9375,400.3438 855.7344,400.4375 855.5156,400.75 L855.3438,400.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="867" y="409.8467">OkHttpNetworkFetcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="839" x2="1040" y1="421" y2="421"/><line style="stroke:#181818;stroke-width:0.5;" x1="839" x2="1040" y1="429" y2="429"/></g><!--class MemoryPooledByteBufferFactory--><g id="elem_MemoryPooledByteBufferFactory"><rect codeLine="15" fill="#F1F1F1" height="64.2969" id="MemoryPooledByteBufferFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="272" x="21.5" y="232"/><ellipse cx="36.5" cy="248" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M38.8438,243.6719 C37.9063,243.2344 37.3125,243.0938 36.4375,243.0938 C33.8125,243.0938 31.8125,245.1719 31.8125,247.8906 L31.8125,249.0156 C31.8125,251.5938 33.9219,253.4844 36.8125,253.4844 C38.0313,253.4844 39.1875,253.1875 39.9375,252.6406 C40.5156,252.2344 40.8438,251.7813 40.8438,251.3906 C40.8438,250.9375 40.4531,250.5469 39.9844,250.5469 C39.7656,250.5469 39.5625,250.625 39.375,250.8125 C38.9219,251.2969 38.9219,251.2969 38.7344,251.3906 C38.3125,251.6563 37.625,251.7813 36.8594,251.7813 C34.8125,251.7813 33.5156,250.6875 33.5156,248.9844 L33.5156,247.8906 C33.5156,246.1094 34.7656,244.7969 36.5,244.7969 C37.0781,244.7969 37.6875,244.9531 38.1563,245.2031 C38.6406,245.4844 38.8125,245.7031 38.9063,246.1094 C38.9688,246.5156 39,246.6406 39.1406,246.7656 C39.2813,246.9063 39.5156,247.0156 39.7344,247.0156 C40,247.0156 40.2656,246.875 40.4375,246.6563 C40.5469,246.5 40.5781,246.3125 40.5781,245.8906 L40.5781,244.4688 C40.5781,244.0313 40.5625,243.9063 40.4688,243.75 C40.3125,243.4844 40.0313,243.3438 39.7344,243.3438 C39.4375,243.3438 39.2344,243.4375 39.0156,243.75 L38.8438,243.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240" x="50.5" y="252.8467">MemoryPooledByteBufferFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="22.5" x2="292.5" y1="264" y2="264"/><line style="stroke:#181818;stroke-width:0.5;" x1="22.5" x2="292.5" y1="272" y2="272"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="27.5" y="288.9951">newOutputStream()</text></g><!--class MemoryPooledByteBufferOutputStream--><g id="elem_MemoryPooledByteBufferOutputStream"><rect codeLine="11" fill="#F1F1F1" height="64.2969" id="MemoryPooledByteBufferOutputStream" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="322" x="125.5" y="381"/><ellipse cx="140.5" cy="397" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M142.8438,392.6719 C141.9063,392.2344 141.3125,392.0938 140.4375,392.0938 C137.8125,392.0938 135.8125,394.1719 135.8125,396.8906 L135.8125,398.0156 C135.8125,400.5938 137.9219,402.4844 140.8125,402.4844 C142.0313,402.4844 143.1875,402.1875 143.9375,401.6406 C144.5156,401.2344 144.8438,400.7813 144.8438,400.3906 C144.8438,399.9375 144.4531,399.5469 143.9844,399.5469 C143.7656,399.5469 143.5625,399.625 143.375,399.8125 C142.9219,400.2969 142.9219,400.2969 142.7344,400.3906 C142.3125,400.6563 141.625,400.7813 140.8594,400.7813 C138.8125,400.7813 137.5156,399.6875 137.5156,397.9844 L137.5156,396.8906 C137.5156,395.1094 138.7656,393.7969 140.5,393.7969 C141.0781,393.7969 141.6875,393.9531 142.1563,394.2031 C142.6406,394.4844 142.8125,394.7031 142.9063,395.1094 C142.9688,395.5156 143,395.6406 143.1406,395.7656 C143.2813,395.9063 143.5156,396.0156 143.7344,396.0156 C144,396.0156 144.2656,395.875 144.4375,395.6563 C144.5469,395.5 144.5781,395.3125 144.5781,394.8906 L144.5781,393.4688 C144.5781,393.0313 144.5625,392.9063 144.4688,392.75 C144.3125,392.4844 144.0313,392.3438 143.7344,392.3438 C143.4375,392.3438 143.2344,392.4375 143.0156,392.75 L142.8438,392.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="154.5" y="401.8467">MemoryPooledByteBufferOutputStream</text><line style="stroke:#181818;stroke-width:0.5;" x1="126.5" x2="446.5" y1="413" y2="413"/><line style="stroke:#181818;stroke-width:0.5;" x1="126.5" x2="446.5" y1="421" y2="421"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="131.5" y="437.9951">MemoryPooledByteBuffer toByteBuffer()</text></g><!--class MemoryPooledByteBuffer--><g id="elem_MemoryPooledByteBuffer"><rect fill="#F1F1F1" height="48" id="MemoryPooledByteBuffer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="218" x="177.5" y="526"/><ellipse cx="192.5" cy="542" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M194.8438,537.6719 C193.9063,537.2344 193.3125,537.0938 192.4375,537.0938 C189.8125,537.0938 187.8125,539.1719 187.8125,541.8906 L187.8125,543.0156 C187.8125,545.5938 189.9219,547.4844 192.8125,547.4844 C194.0313,547.4844 195.1875,547.1875 195.9375,546.6406 C196.5156,546.2344 196.8438,545.7813 196.8438,545.3906 C196.8438,544.9375 196.4531,544.5469 195.9844,544.5469 C195.7656,544.5469 195.5625,544.625 195.375,544.8125 C194.9219,545.2969 194.9219,545.2969 194.7344,545.3906 C194.3125,545.6563 193.625,545.7813 192.8594,545.7813 C190.8125,545.7813 189.5156,544.6875 189.5156,542.9844 L189.5156,541.8906 C189.5156,540.1094 190.7656,538.7969 192.5,538.7969 C193.0781,538.7969 193.6875,538.9531 194.1563,539.2031 C194.6406,539.4844 194.8125,539.7031 194.9063,540.1094 C194.9688,540.5156 195,540.6406 195.1406,540.7656 C195.2813,540.9063 195.5156,541.0156 195.7344,541.0156 C196,541.0156 196.2656,540.875 196.4375,540.6563 C196.5469,540.5 196.5781,540.3125 196.5781,539.8906 L196.5781,538.4688 C196.5781,538.0313 196.5625,537.9063 196.4688,537.75 C196.3125,537.4844 196.0313,537.3438 195.7344,537.3438 C195.4375,537.3438 195.2344,537.4375 195.0156,537.75 L194.8438,537.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="206.5" y="546.8467">MemoryPooledByteBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="178.5" x2="394.5" y1="558" y2="558"/><line style="stroke:#181818;stroke-width:0.5;" x1="178.5" x2="394.5" y1="566" y2="566"/></g><!--class MemoryChunk--><g id="elem_MemoryChunk"><rect fill="#F1F1F1" height="48" id="MemoryChunk" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="135" x="7" y="526"/><ellipse cx="22" cy="542" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,537.6719 C23.4063,537.2344 22.8125,537.0938 21.9375,537.0938 C19.3125,537.0938 17.3125,539.1719 17.3125,541.8906 L17.3125,543.0156 C17.3125,545.5938 19.4219,547.4844 22.3125,547.4844 C23.5313,547.4844 24.6875,547.1875 25.4375,546.6406 C26.0156,546.2344 26.3438,545.7813 26.3438,545.3906 C26.3438,544.9375 25.9531,544.5469 25.4844,544.5469 C25.2656,544.5469 25.0625,544.625 24.875,544.8125 C24.4219,545.2969 24.4219,545.2969 24.2344,545.3906 C23.8125,545.6563 23.125,545.7813 22.3594,545.7813 C20.3125,545.7813 19.0156,544.6875 19.0156,542.9844 L19.0156,541.8906 C19.0156,540.1094 20.2656,538.7969 22,538.7969 C22.5781,538.7969 23.1875,538.9531 23.6563,539.2031 C24.1406,539.4844 24.3125,539.7031 24.4063,540.1094 C24.4688,540.5156 24.5,540.6406 24.6406,540.7656 C24.7813,540.9063 25.0156,541.0156 25.2344,541.0156 C25.5,541.0156 25.7656,540.875 25.9375,540.6563 C26.0469,540.5 26.0781,540.3125 26.0781,539.8906 L26.0781,538.4688 C26.0781,538.0313 26.0625,537.9063 25.9688,537.75 C25.8125,537.4844 25.5313,537.3438 25.2344,537.3438 C24.9375,537.3438 24.7344,537.4375 24.5156,537.75 L24.3438,537.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="36" y="546.8467">MemoryChunk</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="141" y1="558" y2="558"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="141" y1="566" y2="566"/></g><!--reverse link Producer to NetworkFetchProducer--><g id="link_Producer_NetworkFetchProducer"><path codeLine="2" d="M308.5,76.217 C308.5,94.165 308.5,100.892 308.5,118.828 " fill="none" id="Producer-backto-NetworkFetchProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="308.5,58.217,302.5,76.217,314.5,76.217,308.5,58.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link NetworkFetchProducer to NetworkFetcher--><g id="link_NetworkFetchProducer_NetworkFetcher"><path codeLine="3" d="M365.9464,113.911 C391.2334,102.197 412.583,94.429 443,88.5 C501.892,77.022 519.592,74.768 578,88.5 C603.426,94.478 629.697,107.293 650.132,118.994 " fill="none" id="NetworkFetchProducer-backto-NetworkFetcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="355.058,118.955,362.1836,120.0625,365.9464,113.911,358.8209,112.8035,355.058,118.955" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link NetworkFetchProducer to ByteArrayPool--><g id="link_NetworkFetchProducer_ByteArrayPool"><path codeLine="5" d="M419.527,143 C431.326,143 431.125,143 442.924,143 " fill="none" id="NetworkFetchProducer-backto-ByteArrayPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="407.527,143,413.527,147,419.527,143,413.527,139,407.527,143" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BaseNetworkFetcher to HttpUrlConnectionNetworkFetcher--><g id="link_BaseNetworkFetcher_HttpUrlConnectionNetworkFetcher"><path codeLine="7" d="M679.97,305.9968 C674.914,333.5218 669.805,361.339 664.758,388.816 " fill="none" id="BaseNetworkFetcher-backto-HttpUrlConnectionNetworkFetcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="683.222,288.293,674.0688,304.9128,685.8713,307.0808,683.222,288.293" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link NetworkFetcher to BaseNetworkFetcher--><g id="link_NetworkFetcher_BaseNetworkFetcher"><path codeLine="8" d="M687.5,185.227 C687.5,206.195 687.5,218.882 687.5,239.832 " fill="none" id="NetworkFetcher-backto-BaseNetworkFetcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="687.5,167.227,681.5,185.227,693.5,185.227,687.5,167.227" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BaseNetworkFetcher to OkHttpNetworkFetcher--><g id="link_BaseNetworkFetcher_OkHttpNetworkFetcher"><path codeLine="9" d="M742.7,297.1997 C789.827,324.6907 852.456,361.224 899.663,388.762 " fill="none" id="BaseNetworkFetcher-backto-OkHttpNetworkFetcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="727.152,288.13,739.6767,302.3824,745.7232,292.0171,727.152,288.13" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link NetworkFetchProducer to MemoryPooledByteBufferFactory--><g id="link_NetworkFetchProducer_MemoryPooledByteBufferFactory"><path codeLine="10" d="M269.602,174.6547 C247.716,191.9027 226.911,208.299 202.077,227.87 " fill="none" id="NetworkFetchProducer-backto-MemoryPooledByteBufferFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="279.027,167.227,271.8386,167.7992,269.602,174.6547,276.7904,174.0825,279.027,167.227" style="stroke:#181818;stroke-width:1.0;"/></g><!--link MemoryPooledByteBufferOutputStream to MemoryPooledByteBuffer--><g id="link_MemoryPooledByteBufferOutputStream_MemoryPooledByteBuffer"><path codeLine="14" d="M448.5,433 C511.716,433 407.4903,489.4384 339.5973,523.2675 " fill="none" id="MemoryPooledByteBufferOutputStream-to-MemoryPooledByteBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="334.227,525.9434,344.0663,525.5098,338.7022,523.7135,340.4985,518.3494,334.227,525.9434" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="39" x="420.5" y="492.0669">return</text></g><!--link MemoryPooledByteBufferFactory to MemoryPooledByteBufferOutputStream--><g id="link_MemoryPooledByteBufferFactory_MemoryPooledByteBufferOutputStream"><path codeLine="18" d="M294.5,284 C313.147,284 305.2925,332.945 296.7175,370.833 " fill="none" id="MemoryPooledByteBufferFactory-to-MemoryPooledByteBufferOutputStream" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="295.393,376.685,301.281,368.79,296.4967,371.8083,293.4783,367.024,295.393,376.685" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="39" x="305.5" y="343.0669">return</text></g><!--link NetworkFetchProducer to MemoryPooledByteBufferOutputStream--><g id="link_NetworkFetchProducer_MemoryPooledByteBufferOutputStream"><path codeLine="19" d="M321.492,167.02 C341.41,205.515 374.676,284.85 349.5,347 C345.075,357.924 341.8719,363.5882 333.8469,372.4122 " fill="none" id="NetworkFetchProducer-to-MemoryPooledByteBufferOutputStream" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="329.81,376.851,338.8246,372.884,333.1741,373.152,332.9061,367.5015,329.81,376.851" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="91" x="360.5" y="268.5669">toByteBuffer()</text></g><!--reverse link MemoryPooledByteBufferOutputStream to MemoryChunkPool--><g id="link_MemoryPooledByteBufferOutputStream_MemoryChunkPool"><path codeLine="20" d="M429.2386,454.1437 C447.1316,462.2237 453.524,467.105 468.5,479 C484.112,491.4002 495.969,510.7726 503.582,525.997 " fill="none" id="MemoryPooledByteBufferOutputStream-backto-MemoryChunkPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="418.302,449.205,422.1241,455.3199,429.2386,454.1437,425.4165,448.0288,418.302,449.205" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link MemoryPooledByteBufferOutputStream to MemoryChunk--><g id="link_MemoryPooledByteBufferOutputStream_MemoryChunk"><path codeLine="21" d="M221.2311,455.5627 C183.1991,479.7817 143.842,504.8436 110.72,525.9353 " fill="none" id="MemoryPooledByteBufferOutputStream-backto-MemoryChunk" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="231.353,449.117,224.1435,448.9659,221.2311,455.5627,228.4406,455.7138,231.353,449.117" style="stroke:#181818;stroke-width:1.0;"/></g><!--link MemoryChunk to MemoryPooledByteBuffer--><g id="link_MemoryChunk_MemoryPooledByteBuffer"><path codeLine="23" d="M142.406,550 C154.039,550 153.671,550 165.304,550 " fill="none" id="MemoryChunk-to-MemoryPooledByteBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="177.304,550,171.304,546,165.304,550,171.304,554,177.304,550" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[bPDDReCm48Ntd69s_P6S0w08gKIDsaMRI5KFu9eX8C16mrWHQdhtcee2eK0Jxp3lVNxFFwbcf5WgX3sPo2gazQDM9iBekP073BnNvAEXR8kiaby925kAKz1PfaNtWj93mWA6VvrOVbHCKZ6yO66etYHMPtjZyZaAX3NZ0v6iVrITFPGLZj1_fs1z4WAUcCjtoZT6QrIS6ZtoJNckmE-oPe45vg2DQ6itNJ1ggeKsZf6shfARzbGkgsf6ixDSMdvZGbd0fmTkJ0k1JVznU-TzUVy3VNze0Y62ERWFX6n9BsPj-xGnDHw7Qor4Qds-Fx8i13gJTU4czt-rkX0osi0BFFtHzZVwUfjt0zClphKVSsRm3fbZp6VORm00]--></g></svg>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//NetworkFetchProducer.java</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onResponse</span><span class="params">(</span></span><br><span class="line"><span class="params">      FetchState fetchState, InputStream responseData, <span class="type">int</span> responseContentLength)</span></span><br><span class="line">      <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="keyword">final</span> PooledByteBufferOutputStream pooledOutputStream;</span><br><span class="line">    <span class="keyword">if</span> (responseContentLength &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      pooledOutputStream = mPooledByteBufferFactory.newOutputStream(responseContentLength);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      pooledOutputStream = mPooledByteBufferFactory.newOutputStream();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">byte</span>[] ioArray = mByteArrayPool.get(READ_SIZE);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="type">int</span> length;</span><br><span class="line">      <span class="comment">//responseData（InputStream）对应okhttp3.ResponseBody#byteStream，原始图片byte数据流</span></span><br><span class="line">      <span class="comment">//循环从InputStream中读取数据到ioArray中</span></span><br><span class="line">      <span class="keyword">while</span> ((length = responseData.read(ioArray)) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="comment">//将图片数据写入到pooledOutputStream是MemoryPooledByteBufferOutputStream类型</span></span><br><span class="line">          pooledOutputStream.write(ioArray, <span class="number">0</span>, length);</span><br><span class="line">          maybeHandleIntermediateResult(pooledOutputStream, fetchState);</span><br><span class="line">          <span class="type">float</span> <span class="variable">progress</span> <span class="operator">=</span> calculateProgress(pooledOutputStream.size(), responseContentLength);</span><br><span class="line">          fetchState.getConsumer().onProgressUpdate(progress);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      mNetworkFetcher.onFetchCompletion(fetchState, pooledOutputStream.size());</span><br><span class="line">      handleFinalResult(pooledOutputStream, fetchState);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      mByteArrayPool.release(ioArray);</span><br><span class="line">      pooledOutputStream.close();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>NetworkFetchProducer从网络请求的图片数据写入到<code>MemoryPooledByteBufferOutputStream</code>中。<code>MemoryPooledByteBufferOutputStream</code>从内存池中申请内存块（详情参考<a href="#%E5%86%85%E5%AD%98%E5%9D%97%E7%BC%93%E5%AD%98%E6%B1%A0-memorychunkpool">内存块缓存池</a>一节），在OutputStream的close中会把申请的内存块放回到内存池中。</p>
<p>NetworkFetchProducer处理结束时返回一个<code>EncodedImage</code>类型数据，class结构如下，图片数据保存在MemoryChunk中。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="758px" preserveAspectRatio="none" style="width:777px;height:758px;background:#FFFFFF;" version="1.1" viewBox="0 0 777 758" width="777px" zoomAndPan="magnify"><defs/><g><!--class PooledByteBuffer--><g id="elem_PooledByteBuffer"><rect codeLine="1" fill="#F1F1F1" height="48" id="PooledByteBuffer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="156" x="309" y="347"/><ellipse cx="324" cy="363" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M324.9531,359.7813 L326.6719,359.7813 C327.0625,359.7813 327.25,359.75 327.375,359.6719 C327.6406,359.5156 327.7813,359.2344 327.7813,358.9375 C327.7813,358.6719 327.6719,358.4063 327.4375,358.2344 C327.2656,358.125 327.125,358.0938 326.6719,358.0938 L321.5313,358.0938 C321.0938,358.0938 320.9688,358.1094 320.8125,358.2031 C320.5625,358.3594 320.4063,358.6563 320.4063,358.9375 C320.4063,359.2188 320.5469,359.4688 320.7656,359.6406 C320.9219,359.75 321.1094,359.7813 321.5313,359.7813 L323.25,359.7813 L323.25,366.2969 L321.5313,366.2969 C321.0938,366.2969 320.9688,366.3125 320.8125,366.4219 C320.5625,366.5781 320.4063,366.8594 320.4063,367.1563 C320.4063,367.4063 320.5469,367.6719 320.7656,367.8281 C320.9219,367.9531 321.125,368 321.5313,368 L326.6719,368 C327.4219,368 327.7813,367.7188 327.7813,367.1563 C327.7813,366.875 327.6719,366.625 327.4375,366.4531 C327.2656,366.3281 327.125,366.2969 326.6719,366.2969 L324.9531,366.2969 L324.9531,359.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="124" x="338" y="367.8467">PooledByteBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="310" x2="464" y1="379" y2="379"/><line style="stroke:#181818;stroke-width:0.5;" x1="310" x2="464" y1="387" y2="387"/></g><!--class CloseableReference--><g id="elem_CloseableReference"><rect codeLine="2" fill="#F1F1F1" height="48" id="CloseableReference" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="283" x="200.5" y="115"/><ellipse cx="215.5" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M217.8438,126.6719 C216.9063,126.2344 216.3125,126.0938 215.4375,126.0938 C212.8125,126.0938 210.8125,128.1719 210.8125,130.8906 L210.8125,132.0156 C210.8125,134.5938 212.9219,136.4844 215.8125,136.4844 C217.0313,136.4844 218.1875,136.1875 218.9375,135.6406 C219.5156,135.2344 219.8438,134.7813 219.8438,134.3906 C219.8438,133.9375 219.4531,133.5469 218.9844,133.5469 C218.7656,133.5469 218.5625,133.625 218.375,133.8125 C217.9219,134.2969 217.9219,134.2969 217.7344,134.3906 C217.3125,134.6563 216.625,134.7813 215.8594,134.7813 C213.8125,134.7813 212.5156,133.6875 212.5156,131.9844 L212.5156,130.8906 C212.5156,129.1094 213.7656,127.7969 215.5,127.7969 C216.0781,127.7969 216.6875,127.9531 217.1563,128.2031 C217.6406,128.4844 217.8125,128.7031 217.9063,129.1094 C217.9688,129.5156 218,129.6406 218.1406,129.7656 C218.2813,129.9063 218.5156,130.0156 218.7344,130.0156 C219,130.0156 219.2656,129.875 219.4375,129.6563 C219.5469,129.5 219.5781,129.3125 219.5781,128.8906 L219.5781,127.4688 C219.5781,127.0313 219.5625,126.9063 219.4688,126.75 C219.3125,126.4844 219.0313,126.3438 218.7344,126.3438 C218.4375,126.3438 218.2344,126.4375 218.0156,126.75 L217.8438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="229.5" y="135.8467">CloseableReference</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="104" x="382.5" y="112"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="102" x="383.5" y="124.1387">PooledByteBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="201.5" x2="482.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="201.5" x2="482.5" y1="155" y2="155"/></g><!--class EncodedImage--><g id="elem_EncodedImage"><rect fill="#F1F1F1" height="48" id="EncodedImage" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="138" x="273" y="7"/><ellipse cx="288" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M290.3438,18.6719 C289.4063,18.2344 288.8125,18.0938 287.9375,18.0938 C285.3125,18.0938 283.3125,20.1719 283.3125,22.8906 L283.3125,24.0156 C283.3125,26.5938 285.4219,28.4844 288.3125,28.4844 C289.5313,28.4844 290.6875,28.1875 291.4375,27.6406 C292.0156,27.2344 292.3438,26.7813 292.3438,26.3906 C292.3438,25.9375 291.9531,25.5469 291.4844,25.5469 C291.2656,25.5469 291.0625,25.625 290.875,25.8125 C290.4219,26.2969 290.4219,26.2969 290.2344,26.3906 C289.8125,26.6563 289.125,26.7813 288.3594,26.7813 C286.3125,26.7813 285.0156,25.6875 285.0156,23.9844 L285.0156,22.8906 C285.0156,21.1094 286.2656,19.7969 288,19.7969 C288.5781,19.7969 289.1875,19.9531 289.6563,20.2031 C290.1406,20.4844 290.3125,20.7031 290.4063,21.1094 C290.4688,21.5156 290.5,21.6406 290.6406,21.7656 C290.7813,21.9063 291.0156,22.0156 291.2344,22.0156 C291.5,22.0156 291.7656,21.875 291.9375,21.6563 C292.0469,21.5 292.0781,21.3125 292.0781,20.8906 L292.0781,19.4688 C292.0781,19.0313 292.0625,18.9063 291.9688,18.75 C291.8125,18.4844 291.5313,18.3438 291.2344,18.3438 C290.9375,18.3438 290.7344,18.4375 290.5156,18.75 L290.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="302" y="27.8467">EncodedImage</text><line style="stroke:#181818;stroke-width:0.5;" x1="274" x2="410" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="274" x2="410" y1="47" y2="47"/></g><!--class MemoryPooledByteBuffer--><g id="elem_MemoryPooledByteBuffer"><rect codeLine="4" fill="#F1F1F1" height="64.2969" id="MemoryPooledByteBuffer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="218" x="181" y="455"/><ellipse cx="196" cy="471" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M198.3438,466.6719 C197.4063,466.2344 196.8125,466.0938 195.9375,466.0938 C193.3125,466.0938 191.3125,468.1719 191.3125,470.8906 L191.3125,472.0156 C191.3125,474.5938 193.4219,476.4844 196.3125,476.4844 C197.5313,476.4844 198.6875,476.1875 199.4375,475.6406 C200.0156,475.2344 200.3438,474.7813 200.3438,474.3906 C200.3438,473.9375 199.9531,473.5469 199.4844,473.5469 C199.2656,473.5469 199.0625,473.625 198.875,473.8125 C198.4219,474.2969 198.4219,474.2969 198.2344,474.3906 C197.8125,474.6563 197.125,474.7813 196.3594,474.7813 C194.3125,474.7813 193.0156,473.6875 193.0156,471.9844 L193.0156,470.8906 C193.0156,469.1094 194.2656,467.7969 196,467.7969 C196.5781,467.7969 197.1875,467.9531 197.6563,468.2031 C198.1406,468.4844 198.3125,468.7031 198.4063,469.1094 C198.4688,469.5156 198.5,469.6406 198.6406,469.7656 C198.7813,469.9063 199.0156,470.0156 199.2344,470.0156 C199.5,470.0156 199.7656,469.875 199.9375,469.6563 C200.0469,469.5 200.0781,469.3125 200.0781,468.8906 L200.0781,467.4688 C200.0781,467.0313 200.0625,466.9063 199.9688,466.75 C199.8125,466.4844 199.5313,466.3438 199.2344,466.3438 C198.9375,466.3438 198.7344,466.4375 198.5156,466.75 L198.3438,466.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="210" y="475.8467">MemoryPooledByteBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="182" x2="398" y1="487" y2="487"/><line style="stroke:#181818;stroke-width:0.5;" x1="182" x2="398" y1="495" y2="495"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="187" y="511.9951">close()</text></g><!--class DefaultCloseableReference--><g id="elem_DefaultCloseableReference"><rect codeLine="8" fill="#F1F1F1" height="48" id="DefaultCloseableReference" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="336" x="7" y="231"/><ellipse cx="22" cy="247" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,242.6719 C23.4063,242.2344 22.8125,242.0938 21.9375,242.0938 C19.3125,242.0938 17.3125,244.1719 17.3125,246.8906 L17.3125,248.0156 C17.3125,250.5938 19.4219,252.4844 22.3125,252.4844 C23.5313,252.4844 24.6875,252.1875 25.4375,251.6406 C26.0156,251.2344 26.3438,250.7813 26.3438,250.3906 C26.3438,249.9375 25.9531,249.5469 25.4844,249.5469 C25.2656,249.5469 25.0625,249.625 24.875,249.8125 C24.4219,250.2969 24.4219,250.2969 24.2344,250.3906 C23.8125,250.6563 23.125,250.7813 22.3594,250.7813 C20.3125,250.7813 19.0156,249.6875 19.0156,247.9844 L19.0156,246.8906 C19.0156,245.1094 20.2656,243.7969 22,243.7969 C22.5781,243.7969 23.1875,243.9531 23.6563,244.2031 C24.1406,244.4844 24.3125,244.7031 24.4063,245.1094 C24.4688,245.5156 24.5,245.6406 24.6406,245.7656 C24.7813,245.9063 25.0156,246.0156 25.2344,246.0156 C25.5,246.0156 25.7656,245.875 25.9375,245.6563 C26.0469,245.5 26.0781,245.3125 26.0781,244.8906 L26.0781,243.4688 C26.0781,243.0313 26.0625,242.9063 25.9688,242.75 C25.8125,242.4844 25.5313,242.3438 25.2344,242.3438 C24.9375,242.3438 24.7344,242.4375 24.5156,242.75 L24.3438,242.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198" x="36" y="251.8467">DefaultCloseableReference</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="104" x="242" y="228"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="102" x="243" y="240.1387">PooledByteBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="342" y1="263" y2="263"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="342" y1="271" y2="271"/></g><!--class SharedReference--><g id="elem_SharedReference"><rect codeLine="10" fill="#F1F1F1" height="64.2969" id="SharedReference" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="263" x="378.5" y="223"/><ellipse cx="393.5" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M395.8438,234.6719 C394.9063,234.2344 394.3125,234.0938 393.4375,234.0938 C390.8125,234.0938 388.8125,236.1719 388.8125,238.8906 L388.8125,240.0156 C388.8125,242.5938 390.9219,244.4844 393.8125,244.4844 C395.0313,244.4844 396.1875,244.1875 396.9375,243.6406 C397.5156,243.2344 397.8438,242.7813 397.8438,242.3906 C397.8438,241.9375 397.4531,241.5469 396.9844,241.5469 C396.7656,241.5469 396.5625,241.625 396.375,241.8125 C395.9219,242.2969 395.9219,242.2969 395.7344,242.3906 C395.3125,242.6563 394.625,242.7813 393.8594,242.7813 C391.8125,242.7813 390.5156,241.6875 390.5156,239.9844 L390.5156,238.8906 C390.5156,237.1094 391.7656,235.7969 393.5,235.7969 C394.0781,235.7969 394.6875,235.9531 395.1563,236.2031 C395.6406,236.4844 395.8125,236.7031 395.9063,237.1094 C395.9688,237.5156 396,237.6406 396.1406,237.7656 C396.2813,237.9063 396.5156,238.0156 396.7344,238.0156 C397,238.0156 397.2656,237.875 397.4375,237.6563 C397.5469,237.5 397.5781,237.3125 397.5781,236.8906 L397.5781,235.4688 C397.5781,235.0313 397.5625,234.9063 397.4688,234.75 C397.3125,234.4844 397.0313,234.3438 396.7344,234.3438 C396.4375,234.3438 396.2344,234.4375 396.0156,234.75 L395.8438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="407.5" y="243.8467">SharedReference</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="104" x="540.5" y="220"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="102" x="541.5" y="232.1387">PooledByteBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="379.5" x2="640.5" y1="255" y2="255"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="384.5" y="271.9951">int mRefCount</text><line style="stroke:#181818;stroke-width:0.5;" x1="379.5" x2="640.5" y1="279.2969" y2="279.2969"/></g><!--class ResourceReleaser--><g id="elem_ResourceReleaser"><rect codeLine="15" fill="#F1F1F1" height="48" id="ResourceReleaser" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="266" x="500" y="347"/><ellipse cx="515" cy="363" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M517.3438,358.6719 C516.4063,358.2344 515.8125,358.0938 514.9375,358.0938 C512.3125,358.0938 510.3125,360.1719 510.3125,362.8906 L510.3125,364.0156 C510.3125,366.5938 512.4219,368.4844 515.3125,368.4844 C516.5313,368.4844 517.6875,368.1875 518.4375,367.6406 C519.0156,367.2344 519.3438,366.7813 519.3438,366.3906 C519.3438,365.9375 518.9531,365.5469 518.4844,365.5469 C518.2656,365.5469 518.0625,365.625 517.875,365.8125 C517.4219,366.2969 517.4219,366.2969 517.2344,366.3906 C516.8125,366.6563 516.125,366.7813 515.3594,366.7813 C513.3125,366.7813 512.0156,365.6875 512.0156,363.9844 L512.0156,362.8906 C512.0156,361.1094 513.2656,359.7969 515,359.7969 C515.5781,359.7969 516.1875,359.9531 516.6563,360.2031 C517.1406,360.4844 517.3125,360.7031 517.4063,361.1094 C517.4688,361.5156 517.5,361.6406 517.6406,361.7656 C517.7813,361.9063 518.0156,362.0156 518.2344,362.0156 C518.5,362.0156 518.7656,361.875 518.9375,361.6563 C519.0469,361.5 519.0781,361.3125 519.0781,360.8906 L519.0781,359.4688 C519.0781,359.0313 519.0625,358.9063 518.9688,358.75 C518.8125,358.4844 518.5313,358.3438 518.2344,358.3438 C517.9375,358.3438 517.7344,358.4375 517.5156,358.75 L517.3438,358.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="529" y="367.8467">ResourceReleaser</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="104" x="665" y="344"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="102" x="666" y="356.1387">PooledByteBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="501" x2="765" y1="379" y2="379"/><line style="stroke:#181818;stroke-width:0.5;" x1="501" x2="765" y1="387" y2="387"/></g><!--class Closeable--><g id="elem_Closeable"><rect codeLine="17" fill="#F1F1F1" height="48" id="Closeable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="102" x="434" y="463"/><ellipse cx="449" cy="479" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M449.9531,475.7813 L451.6719,475.7813 C452.0625,475.7813 452.25,475.75 452.375,475.6719 C452.6406,475.5156 452.7813,475.2344 452.7813,474.9375 C452.7813,474.6719 452.6719,474.4063 452.4375,474.2344 C452.2656,474.125 452.125,474.0938 451.6719,474.0938 L446.5313,474.0938 C446.0938,474.0938 445.9688,474.1094 445.8125,474.2031 C445.5625,474.3594 445.4063,474.6563 445.4063,474.9375 C445.4063,475.2188 445.5469,475.4688 445.7656,475.6406 C445.9219,475.75 446.1094,475.7813 446.5313,475.7813 L448.25,475.7813 L448.25,482.2969 L446.5313,482.2969 C446.0938,482.2969 445.9688,482.3125 445.8125,482.4219 C445.5625,482.5781 445.4063,482.8594 445.4063,483.1563 C445.4063,483.4063 445.5469,483.6719 445.7656,483.8281 C445.9219,483.9531 446.125,484 446.5313,484 L451.6719,484 C452.4219,484 452.7813,483.7188 452.7813,483.1563 C452.7813,482.875 452.6719,482.625 452.4375,482.4531 C452.2656,482.3281 452.125,482.2969 451.6719,482.2969 L449.9531,482.2969 L449.9531,475.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="70" x="463" y="483.8467">Closeable</text><line style="stroke:#181818;stroke-width:0.5;" x1="435" x2="535" y1="495" y2="495"/><line style="stroke:#181818;stroke-width:0.5;" x1="435" x2="535" y1="503" y2="503"/></g><!--class CloseableReference2--><g id="elem_CloseableReference2"><rect codeLine="20" fill="#F1F1F1" height="48" id="CloseableReference2" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="268" x="156" y="587"/><ellipse cx="171" cy="603" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M173.3438,598.6719 C172.4063,598.2344 171.8125,598.0938 170.9375,598.0938 C168.3125,598.0938 166.3125,600.1719 166.3125,602.8906 L166.3125,604.0156 C166.3125,606.5938 168.4219,608.4844 171.3125,608.4844 C172.5313,608.4844 173.6875,608.1875 174.4375,607.6406 C175.0156,607.2344 175.3438,606.7813 175.3438,606.3906 C175.3438,605.9375 174.9531,605.5469 174.4844,605.5469 C174.2656,605.5469 174.0625,605.625 173.875,605.8125 C173.4219,606.2969 173.4219,606.2969 173.2344,606.3906 C172.8125,606.6563 172.125,606.7813 171.3594,606.7813 C169.3125,606.7813 168.0156,605.6875 168.0156,603.9844 L168.0156,602.8906 C168.0156,601.1094 169.2656,599.7969 171,599.7969 C171.5781,599.7969 172.1875,599.9531 172.6563,600.2031 C173.1406,600.4844 173.3125,600.7031 173.4063,601.1094 C173.4688,601.5156 173.5,601.6406 173.6406,601.7656 C173.7813,601.9063 174.0156,602.0156 174.2344,602.0156 C174.5,602.0156 174.7656,601.875 174.9375,601.6563 C175.0469,601.5 175.0781,601.3125 175.0781,600.8906 L175.0781,599.4688 C175.0781,599.0313 175.0625,598.9063 174.9688,598.75 C174.8125,598.4844 174.5313,598.3438 174.2344,598.3438 C173.9375,598.3438 173.7344,598.4375 173.5156,598.75 L173.3438,598.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="185" y="607.8467">CloseableReference</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="89" x="338" y="584"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="87" x="339" y="596.1387">MemoryChunk</text><line style="stroke:#181818;stroke-width:0.5;" x1="157" x2="423" y1="619" y2="619"/><line style="stroke:#181818;stroke-width:0.5;" x1="157" x2="423" y1="627" y2="627"/></g><!--class MemoryChunkPool--><g id="elem_MemoryChunkPool"><rect codeLine="22" fill="#F1F1F1" height="48" id="MemoryChunkPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="165" x="502.5" y="703"/><ellipse cx="517.5" cy="719" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M519.5781,720.8125 L519.9688,721.7969 L519.5781,721.7969 C519.125,721.7969 519.0156,721.8125 518.8594,721.9219 C518.6094,722.0781 518.4531,722.3594 518.4531,722.6563 C518.4531,722.9219 518.5938,723.1719 518.8125,723.3281 C518.9531,723.4531 519.1563,723.5 519.5781,723.5 L521.9375,723.5 C522.2969,723.5 522.5156,723.4688 522.6563,723.375 C522.9063,723.2344 523.0625,722.9375 523.0625,722.6563 C523.0625,722.375 522.9219,722.125 522.7031,721.9688 C522.5313,721.8281 522.375,721.7969 521.9063,721.7969 L518.5156,713.5938 L514.8438,713.5938 C514.3906,713.5938 514.2656,713.6094 514.1094,713.7031 C513.8594,713.875 513.7031,714.1563 513.7031,714.4375 C513.7031,714.7188 513.8438,714.9688 514.0625,715.1406 C514.2344,715.25 514.4063,715.2813 514.8438,715.2813 L515.9219,715.2813 L513.2813,721.7969 C512.8594,721.7969 512.7031,721.8125 512.5469,721.9219 C512.2969,722.0781 512.1406,722.3594 512.1406,722.6563 C512.1406,723.2188 512.5156,723.5 513.2656,723.5 L515.5313,723.5 C515.8906,723.5 516.1094,723.4688 516.2344,723.375 C516.5,723.2344 516.6406,722.9375 516.6406,722.6563 C516.6406,722.375 516.5156,722.125 516.2969,721.9531 C516.125,721.8281 515.9844,721.7969 515.5313,721.7969 L515.1406,721.7969 L515.5313,720.8125 L519.5781,720.8125 Z M518.875,719.1094 L516.2031,719.1094 L517.5469,715.8438 L518.875,719.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="133" x="531.5" y="723.8467">MemoryChunkPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="503.5" x2="666.5" y1="735" y2="735"/><line style="stroke:#181818;stroke-width:0.5;" x1="503.5" x2="666.5" y1="743" y2="743"/></g><!--class ResourceReleaser2--><g id="elem_ResourceReleaser2"><rect codeLine="23" fill="#F1F1F1" height="64.2969" id="ResourceReleaser2" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="251" x="459.5" y="579"/><ellipse cx="474.5" cy="595" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M476.8438,590.6719 C475.9063,590.2344 475.3125,590.0938 474.4375,590.0938 C471.8125,590.0938 469.8125,592.1719 469.8125,594.8906 L469.8125,596.0156 C469.8125,598.5938 471.9219,600.4844 474.8125,600.4844 C476.0313,600.4844 477.1875,600.1875 477.9375,599.6406 C478.5156,599.2344 478.8438,598.7813 478.8438,598.3906 C478.8438,597.9375 478.4531,597.5469 477.9844,597.5469 C477.7656,597.5469 477.5625,597.625 477.375,597.8125 C476.9219,598.2969 476.9219,598.2969 476.7344,598.3906 C476.3125,598.6563 475.625,598.7813 474.8594,598.7813 C472.8125,598.7813 471.5156,597.6875 471.5156,595.9844 L471.5156,594.8906 C471.5156,593.1094 472.7656,591.7969 474.5,591.7969 C475.0781,591.7969 475.6875,591.9531 476.1563,592.2031 C476.6406,592.4844 476.8125,592.7031 476.9063,593.1094 C476.9688,593.5156 477,593.6406 477.1406,593.7656 C477.2813,593.9063 477.5156,594.0156 477.7344,594.0156 C478,594.0156 478.2656,593.875 478.4375,593.6563 C478.5469,593.5 478.5781,593.3125 478.5781,592.8906 L478.5781,591.4688 C478.5781,591.0313 478.5625,590.9063 478.4688,590.75 C478.3125,590.4844 478.0313,590.3438 477.7344,590.3438 C477.4375,590.3438 477.2344,590.4375 477.0156,590.75 L476.8438,590.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="488.5" y="599.8467">ResourceReleaser</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="89" x="624.5" y="576"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="87" x="625.5" y="588.1387">MemoryChunk</text><line style="stroke:#181818;stroke-width:0.5;" x1="460.5" x2="709.5" y1="611" y2="611"/><line style="stroke:#181818;stroke-width:0.5;" x1="460.5" x2="709.5" y1="619" y2="619"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="465.5" y="635.9951">release()</text></g><!--class MemoryChunk--><g id="elem_MemoryChunk"><rect codeLine="28" fill="#F1F1F1" height="48" id="MemoryChunk" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="135" x="222.5" y="703"/><ellipse cx="237.5" cy="719" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M238.4531,715.7813 L240.1719,715.7813 C240.5625,715.7813 240.75,715.75 240.875,715.6719 C241.1406,715.5156 241.2813,715.2344 241.2813,714.9375 C241.2813,714.6719 241.1719,714.4063 240.9375,714.2344 C240.7656,714.125 240.625,714.0938 240.1719,714.0938 L235.0313,714.0938 C234.5938,714.0938 234.4688,714.1094 234.3125,714.2031 C234.0625,714.3594 233.9063,714.6563 233.9063,714.9375 C233.9063,715.2188 234.0469,715.4688 234.2656,715.6406 C234.4219,715.75 234.6094,715.7813 235.0313,715.7813 L236.75,715.7813 L236.75,722.2969 L235.0313,722.2969 C234.5938,722.2969 234.4688,722.3125 234.3125,722.4219 C234.0625,722.5781 233.9063,722.8594 233.9063,723.1563 C233.9063,723.4063 234.0469,723.6719 234.2656,723.8281 C234.4219,723.9531 234.625,724 235.0313,724 L240.1719,724 C240.9219,724 241.2813,723.7188 241.2813,723.1563 C241.2813,722.875 241.1719,722.625 240.9375,722.4531 C240.7656,722.3281 240.625,722.2969 240.1719,722.2969 L238.4531,722.2969 L238.4531,715.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="103" x="251.5" y="723.8467">MemoryChunk</text><line style="stroke:#181818;stroke-width:0.5;" x1="223.5" x2="356.5" y1="735" y2="735"/><line style="stroke:#181818;stroke-width:0.5;" x1="223.5" x2="356.5" y1="743" y2="743"/></g><!--reverse link EncodedImage to CloseableReference--><g id="link_EncodedImage_CloseableReference"><path codeLine="3" d="M342,67 C342,84.658 342,96.941 342,114.678 " fill="none" id="EncodedImage-backto-CloseableReference" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="342,55,338,61,342,67,346,61,342,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link PooledByteBuffer to MemoryPooledByteBuffer--><g id="link_PooledByteBuffer_MemoryPooledByteBuffer"><path codeLine="7" d="M355.7062,408.7788 C341.0912,425.9548 332.642,435.884 316.586,454.755 " fill="none" id="PooledByteBuffer-backto-MemoryPooledByteBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="367.371,395.07,351.1366,404.8906,360.2758,412.6671,367.371,395.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CloseableReference to DefaultCloseableReference--><g id="link_CloseableReference_DefaultCloseableReference"><path codeLine="9" d="M293.3384,173.2181 C264.3644,192.9961 237.704,211.196 208.745,230.965 " fill="none" id="CloseableReference-backto-DefaultCloseableReference" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="308.205,163.07,289.9557,168.2626,296.7211,178.1736,308.205,163.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CloseableReference to SharedReference--><g id="link_CloseableReference_SharedReference"><path codeLine="13" d="M385.9267,169.808 C411.3347,187.049 436.41,204.064 464.27,222.969 " fill="none" id="CloseableReference-backto-SharedReference" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="375.997,163.07,378.7159,169.7489,385.9267,169.808,383.2079,163.1291,375.997,163.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link SharedReference to PooledByteBuffer--><g id="link_SharedReference_PooledByteBuffer"><path codeLine="14" d="M467.5887,295.3081 C447.2457,314.1621 430.539,329.647 411.984,346.845 " fill="none" id="SharedReference-backto-PooledByteBuffer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="476.39,287.151,469.2703,288.2958,467.5887,295.3081,474.7084,294.1633,476.39,287.151" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link SharedReference to ResourceReleaser--><g id="link_SharedReference_ResourceReleaser"><path codeLine="16" d="M552.4113,295.3081 C572.7543,314.1621 589.461,329.647 608.016,346.845 " fill="none" id="SharedReference-backto-ResourceReleaser" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="543.61,287.151,545.2916,294.1633,552.4113,295.3081,550.7297,288.2958,543.61,287.151" style="stroke:#181818;stroke-width:1.0;"/></g><!--link PooledByteBuffer to Closeable--><g id="link_PooledByteBuffer_Closeable"><path codeLine="18" d="M406.832,395.07 C423.834,414.848 436.4702,429.5462 453.4642,449.3152 " fill="none" id="PooledByteBuffer-to-Closeable" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="465.198,462.965,458.0142,445.4039,448.9143,453.2264,465.198,462.965" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link MemoryPooledByteBuffer to CloseableReference2--><g id="link_MemoryPooledByteBuffer_CloseableReference2"><path codeLine="21" d="M290,531.101 C290,552.139 290,567.481 290,586.661 " fill="none" id="MemoryPooledByteBuffer-backto-CloseableReference2" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="290,519.101,286,525.101,290,531.101,294,525.101,290,519.101" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ResourceReleaser2 to MemoryChunkPool--><g id="link_ResourceReleaser2_MemoryChunkPool"><path codeLine="26" d="M585,661.151 C585,680.0054 585,685.647 585,702.8446 " fill="none" id="ResourceReleaser2-backto-MemoryChunkPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="585,643.151,579,661.151,591,661.151,585,643.151" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CloseableReference2 to ResourceReleaser2--><g id="link_CloseableReference2_ResourceReleaser2"><path codeLine="27" d="M436.248,611 C447.97,611 447.691,611 459.413,611 " fill="none" id="CloseableReference2-backto-ResourceReleaser2" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="424.248,611,430.248,615,436.248,611,430.248,607,424.248,611" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CloseableReference2 to MemoryChunk--><g id="link_CloseableReference2_MemoryChunk"><path codeLine="29" d="M290,647.07 C290,666.8481 290,683.1961 290,702.9647 " fill="none" id="CloseableReference2-backto-MemoryChunk" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="290,635.07,286,641.07,290,647.07,294,641.07,290,635.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[ZPAzRi8m58LtFuN5r29voOmoa7ReW8Je4roScnBLiP5_1bJwxdM8IoFx1ZMRutC-d_lJQu-s0ubyRup2Tdlnk0rTXvP91SxnHXc7S5HumFWJjSHDhgpPgvQcnVPjW0_aQo48LyBjS33saXFu5-FnawFhwPbziqAmkKOgRKxa5-mWAF-llALeUc2HaTvuFu75zW4v5T9hpuSeQqpGFfP3l3TsASEnx7pJB5HxG6U2bH6e41nQeaYAbjjOVv__FMFPV26kzUm-HLWHhPucr9o2_gnN7AZrgTZ23j1xKp4uEcz1UZw3Z-RV64KhYX2veafZijFvjd4Pd8jm7gikhCGignYT4FwrTiPUi8kvvWS0]--></g></svg>

<h3 id="DiskCacheWriteProducer"><a href="#DiskCacheWriteProducer" class="headerlink" title="DiskCacheWriteProducer"></a>DiskCacheWriteProducer</h3><p>DiskCacheWriteProducer用于缓存原始图片数据，包括两级缓存：内存和磁盘。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="563px" preserveAspectRatio="none" style="width:813px;height:563px;background:#FFFFFF;" version="1.1" viewBox="0 0 813 563" width="813px" zoomAndPan="magnify"><defs/><g><!--class DiskCacheWriteProducer--><g id="elem_DiskCacheWriteProducer"><rect codeLine="1" fill="#F1F1F1" height="80.5938" id="DiskCacheWriteProducer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="247" x="7" y="7"/><ellipse cx="38.2" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M40.5438,18.6719 C39.6063,18.2344 39.0125,18.0938 38.1375,18.0938 C35.5125,18.0938 33.5125,20.1719 33.5125,22.8906 L33.5125,24.0156 C33.5125,26.5938 35.6219,28.4844 38.5125,28.4844 C39.7313,28.4844 40.8875,28.1875 41.6375,27.6406 C42.2156,27.2344 42.5438,26.7813 42.5438,26.3906 C42.5438,25.9375 42.1531,25.5469 41.6844,25.5469 C41.4656,25.5469 41.2625,25.625 41.075,25.8125 C40.6219,26.2969 40.6219,26.2969 40.4344,26.3906 C40.0125,26.6563 39.325,26.7813 38.5594,26.7813 C36.5125,26.7813 35.2156,25.6875 35.2156,23.9844 L35.2156,22.8906 C35.2156,21.1094 36.4656,19.7969 38.2,19.7969 C38.7781,19.7969 39.3875,19.9531 39.8563,20.2031 C40.3406,20.4844 40.5125,20.7031 40.6063,21.1094 C40.6688,21.5156 40.7,21.6406 40.8406,21.7656 C40.9813,21.9063 41.2156,22.0156 41.4344,22.0156 C41.7,22.0156 41.9656,21.875 42.1375,21.6563 C42.2469,21.5 42.2781,21.3125 42.2781,20.8906 L42.2781,19.4688 C42.2781,19.0313 42.2625,18.9063 42.1688,18.75 C42.0125,18.4844 41.7313,18.3438 41.4344,18.3438 C41.1375,18.3438 40.9344,18.4375 40.7156,18.75 L40.5438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="55.8" y="27.8467">DiskCacheWriteProducer</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="253" y1="39" y2="39"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="13" y="55.9951">mDefaultBufferedDiskCache</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="235" x="13" y="72.292">mSmallImageBufferedDiskCache</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="253" y1="79.5938" y2="79.5938"/></g><!--class BufferedDiskCache--><g id="elem_BufferedDiskCache"><rect fill="#F1F1F1" height="48" id="BufferedDiskCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="170" x="297.5" y="23"/><ellipse cx="312.5" cy="39" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M314.8438,34.6719 C313.9063,34.2344 313.3125,34.0938 312.4375,34.0938 C309.8125,34.0938 307.8125,36.1719 307.8125,38.8906 L307.8125,40.0156 C307.8125,42.5938 309.9219,44.4844 312.8125,44.4844 C314.0313,44.4844 315.1875,44.1875 315.9375,43.6406 C316.5156,43.2344 316.8438,42.7813 316.8438,42.3906 C316.8438,41.9375 316.4531,41.5469 315.9844,41.5469 C315.7656,41.5469 315.5625,41.625 315.375,41.8125 C314.9219,42.2969 314.9219,42.2969 314.7344,42.3906 C314.3125,42.6563 313.625,42.7813 312.8594,42.7813 C310.8125,42.7813 309.5156,41.6875 309.5156,39.9844 L309.5156,38.8906 C309.5156,37.1094 310.7656,35.7969 312.5,35.7969 C313.0781,35.7969 313.6875,35.9531 314.1563,36.2031 C314.6406,36.4844 314.8125,36.7031 314.9063,37.1094 C314.9688,37.5156 315,37.6406 315.1406,37.7656 C315.2813,37.9063 315.5156,38.0156 315.7344,38.0156 C316,38.0156 316.2656,37.875 316.4375,37.6563 C316.5469,37.5 316.5781,37.3125 316.5781,36.8906 L316.5781,35.4688 C316.5781,35.0313 316.5625,34.9063 316.4688,34.75 C316.3125,34.4844 316.0313,34.3438 315.7344,34.3438 C315.4375,34.3438 315.2344,34.4375 315.0156,34.75 L314.8438,34.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="326.5" y="43.8467">BufferedDiskCache</text><line style="stroke:#181818;stroke-width:0.5;" x1="298.5" x2="466.5" y1="55" y2="55"/><line style="stroke:#181818;stroke-width:0.5;" x1="298.5" x2="466.5" y1="63" y2="63"/></g><!--class StagingArea--><g id="elem_StagingArea"><rect codeLine="8" fill="#F1F1F1" height="64.2969" id="StagingArea" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="297" x="32" y="159.5"/><ellipse cx="132.25" cy="175.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M134.5938,171.1719 C133.6563,170.7344 133.0625,170.5938 132.1875,170.5938 C129.5625,170.5938 127.5625,172.6719 127.5625,175.3906 L127.5625,176.5156 C127.5625,179.0938 129.6719,180.9844 132.5625,180.9844 C133.7813,180.9844 134.9375,180.6875 135.6875,180.1406 C136.2656,179.7344 136.5938,179.2813 136.5938,178.8906 C136.5938,178.4375 136.2031,178.0469 135.7344,178.0469 C135.5156,178.0469 135.3125,178.125 135.125,178.3125 C134.6719,178.7969 134.6719,178.7969 134.4844,178.8906 C134.0625,179.1563 133.375,179.2813 132.6094,179.2813 C130.5625,179.2813 129.2656,178.1875 129.2656,176.4844 L129.2656,175.3906 C129.2656,173.6094 130.5156,172.2969 132.25,172.2969 C132.8281,172.2969 133.4375,172.4531 133.9063,172.7031 C134.3906,172.9844 134.5625,173.2031 134.6563,173.6094 C134.7188,174.0156 134.75,174.1406 134.8906,174.2656 C135.0313,174.4063 135.2656,174.5156 135.4844,174.5156 C135.75,174.5156 136.0156,174.375 136.1875,174.1563 C136.2969,174 136.3281,173.8125 136.3281,173.3906 L136.3281,171.9688 C136.3281,171.5313 136.3125,171.4063 136.2188,171.25 C136.0625,170.9844 135.7813,170.8438 135.4844,170.8438 C135.1875,170.8438 134.9844,170.9375 134.7656,171.25 L134.5938,171.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="152.75" y="180.3467">StagingArea</text><line style="stroke:#181818;stroke-width:0.5;" x1="33" x2="328" y1="191.5" y2="191.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="285" x="38" y="208.4951">Map&lt;CacheKey, EncodedImage&gt; mMap</text><line style="stroke:#181818;stroke-width:0.5;" x1="33" x2="328" y1="215.7969" y2="215.7969"/></g><!--class FileCache--><g id="elem_FileCache"><rect codeLine="11" fill="#F1F1F1" height="80.5938" id="FileCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="442" x="364.5" y="151"/><ellipse cx="546.25" cy="167" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M547.2031,163.7813 L548.9219,163.7813 C549.3125,163.7813 549.5,163.75 549.625,163.6719 C549.8906,163.5156 550.0313,163.2344 550.0313,162.9375 C550.0313,162.6719 549.9219,162.4063 549.6875,162.2344 C549.5156,162.125 549.375,162.0938 548.9219,162.0938 L543.7813,162.0938 C543.3438,162.0938 543.2188,162.1094 543.0625,162.2031 C542.8125,162.3594 542.6563,162.6563 542.6563,162.9375 C542.6563,163.2188 542.7969,163.4688 543.0156,163.6406 C543.1719,163.75 543.3594,163.7813 543.7813,163.7813 L545.5,163.7813 L545.5,170.2969 L543.7813,170.2969 C543.3438,170.2969 543.2188,170.3125 543.0625,170.4219 C542.8125,170.5781 542.6563,170.8594 542.6563,171.1563 C542.6563,171.4063 542.7969,171.6719 543.0156,171.8281 C543.1719,171.9531 543.375,172 543.7813,172 L548.9219,172 C549.6719,172 550.0313,171.7188 550.0313,171.1563 C550.0313,170.875 549.9219,170.625 549.6875,170.4531 C549.5156,170.3281 549.375,170.2969 548.9219,170.2969 L547.2031,170.2969 L547.2031,163.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="70" x="566.75" y="171.8467">FileCache</text><line style="stroke:#181818;stroke-width:0.5;" x1="365.5" x2="805.5" y1="183" y2="183"/><line style="stroke:#181818;stroke-width:0.5;" x1="365.5" x2="805.5" y1="191" y2="191"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="317" x="370.5" y="207.9951">BinaryResource getResource(CacheKey key)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="430" x="370.5" y="224.292">BinaryResource insert(CacheKey key, WriterCallback writer)</text></g><!--class DiskStorageCache--><g id="elem_DiskStorageCache"><rect fill="#F1F1F1" height="48" id="DiskStorageCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="164" x="503.5" y="292"/><ellipse cx="518.5" cy="308" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M520.8438,303.6719 C519.9063,303.2344 519.3125,303.0938 518.4375,303.0938 C515.8125,303.0938 513.8125,305.1719 513.8125,307.8906 L513.8125,309.0156 C513.8125,311.5938 515.9219,313.4844 518.8125,313.4844 C520.0313,313.4844 521.1875,313.1875 521.9375,312.6406 C522.5156,312.2344 522.8438,311.7813 522.8438,311.3906 C522.8438,310.9375 522.4531,310.5469 521.9844,310.5469 C521.7656,310.5469 521.5625,310.625 521.375,310.8125 C520.9219,311.2969 520.9219,311.2969 520.7344,311.3906 C520.3125,311.6563 519.625,311.7813 518.8594,311.7813 C516.8125,311.7813 515.5156,310.6875 515.5156,308.9844 L515.5156,307.8906 C515.5156,306.1094 516.7656,304.7969 518.5,304.7969 C519.0781,304.7969 519.6875,304.9531 520.1563,305.2031 C520.6406,305.4844 520.8125,305.7031 520.9063,306.1094 C520.9688,306.5156 521,306.6406 521.1406,306.7656 C521.2813,306.9063 521.5156,307.0156 521.7344,307.0156 C522,307.0156 522.2656,306.875 522.4375,306.6563 C522.5469,306.5 522.5781,306.3125 522.5781,305.8906 L522.5781,304.4688 C522.5781,304.0313 522.5625,303.9063 522.4688,303.75 C522.3125,303.4844 522.0313,303.3438 521.7344,303.3438 C521.4375,303.3438 521.2344,303.4375 521.0156,303.75 L520.8438,303.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="532.5" y="312.8467">DiskStorageCache</text><line style="stroke:#181818;stroke-width:0.5;" x1="504.5" x2="666.5" y1="324" y2="324"/><line style="stroke:#181818;stroke-width:0.5;" x1="504.5" x2="666.5" y1="332" y2="332"/></g><!--class DiskStorage--><g id="elem_DiskStorage"><rect codeLine="16" fill="#F1F1F1" height="48" id="DiskStorage" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="118" x="526.5" y="400"/><ellipse cx="541.5" cy="416" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M542.4531,412.7813 L544.1719,412.7813 C544.5625,412.7813 544.75,412.75 544.875,412.6719 C545.1406,412.5156 545.2813,412.2344 545.2813,411.9375 C545.2813,411.6719 545.1719,411.4063 544.9375,411.2344 C544.7656,411.125 544.625,411.0938 544.1719,411.0938 L539.0313,411.0938 C538.5938,411.0938 538.4688,411.1094 538.3125,411.2031 C538.0625,411.3594 537.9063,411.6563 537.9063,411.9375 C537.9063,412.2188 538.0469,412.4688 538.2656,412.6406 C538.4219,412.75 538.6094,412.7813 539.0313,412.7813 L540.75,412.7813 L540.75,419.2969 L539.0313,419.2969 C538.5938,419.2969 538.4688,419.3125 538.3125,419.4219 C538.0625,419.5781 537.9063,419.8594 537.9063,420.1563 C537.9063,420.4063 538.0469,420.6719 538.2656,420.8281 C538.4219,420.9531 538.625,421 539.0313,421 L544.1719,421 C544.9219,421 545.2813,420.7188 545.2813,420.1563 C545.2813,419.875 545.1719,419.625 544.9375,419.4531 C544.7656,419.3281 544.625,419.2969 544.1719,419.2969 L542.4531,419.2969 L542.4531,412.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="86" x="555.5" y="420.8467">DiskStorage</text><line style="stroke:#181818;stroke-width:0.5;" x1="527.5" x2="643.5" y1="432" y2="432"/><line style="stroke:#181818;stroke-width:0.5;" x1="527.5" x2="643.5" y1="440" y2="440"/></g><!--class DynamicDefaultDiskStorage--><g id="elem_DynamicDefaultDiskStorage"><rect fill="#F1F1F1" height="48" id="DynamicDefaultDiskStorage" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="235" x="468" y="508"/><ellipse cx="483" cy="524" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M485.3438,519.6719 C484.4063,519.2344 483.8125,519.0938 482.9375,519.0938 C480.3125,519.0938 478.3125,521.1719 478.3125,523.8906 L478.3125,525.0156 C478.3125,527.5938 480.4219,529.4844 483.3125,529.4844 C484.5313,529.4844 485.6875,529.1875 486.4375,528.6406 C487.0156,528.2344 487.3438,527.7813 487.3438,527.3906 C487.3438,526.9375 486.9531,526.5469 486.4844,526.5469 C486.2656,526.5469 486.0625,526.625 485.875,526.8125 C485.4219,527.2969 485.4219,527.2969 485.2344,527.3906 C484.8125,527.6563 484.125,527.7813 483.3594,527.7813 C481.3125,527.7813 480.0156,526.6875 480.0156,524.9844 L480.0156,523.8906 C480.0156,522.1094 481.2656,520.7969 483,520.7969 C483.5781,520.7969 484.1875,520.9531 484.6563,521.2031 C485.1406,521.4844 485.3125,521.7031 485.4063,522.1094 C485.4688,522.5156 485.5,522.6406 485.6406,522.7656 C485.7813,522.9063 486.0156,523.0156 486.2344,523.0156 C486.5,523.0156 486.7656,522.875 486.9375,522.6563 C487.0469,522.5 487.0781,522.3125 487.0781,521.8906 L487.0781,520.4688 C487.0781,520.0313 487.0625,519.9063 486.9688,519.75 C486.8125,519.4844 486.5313,519.3438 486.2344,519.3438 C485.9375,519.3438 485.7344,519.4375 485.5156,519.75 L485.3438,519.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="497" y="528.8467">DynamicDefaultDiskStorage</text><line style="stroke:#181818;stroke-width:0.5;" x1="469" x2="702" y1="540" y2="540"/><line style="stroke:#181818;stroke-width:0.5;" x1="469" x2="702" y1="548" y2="548"/></g><!--reverse link DiskCacheWriteProducer to BufferedDiskCache--><g id="link_DiskCacheWriteProducer_BufferedDiskCache"><path codeLine="5" d="M267.5,51 C281.069,51 283.457,50.765 297.47,50.41 " fill="none" id="DiskCacheWriteProducer-backto-BufferedDiskCache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="255.5,51,261.5,55,267.5,51,261.5,47,255.5,51" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DiskCacheWriteProducer to BufferedDiskCache--><g id="link_DiskCacheWriteProducer_BufferedDiskCache"><path codeLine="6" d="M267.5,67 C281.122,67 283.47,65.846 297.41,64.092 " fill="none" id="DiskCacheWriteProducer-backto-BufferedDiskCache-1" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="255.5,67,261.5,71,267.5,67,261.5,63,255.5,67" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BufferedDiskCache to StagingArea--><g id="link_BufferedDiskCache_StagingArea"><path codeLine="7" d="M339.7903,78.1293 C305.8043,102.1043 262.369,132.746 224.72,159.305 " fill="none" id="BufferedDiskCache-backto-StagingArea" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="349.596,71.212,342.3874,71.4021,339.7903,78.1293,346.9989,77.9392,349.596,71.212" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link FileCache to DiskStorageCache--><g id="link_FileCache_DiskStorageCache"><path codeLine="15" d="M585.5,250.272 C585.5,269.973 585.5,275.069 585.5,291.843 " fill="none" id="FileCache-backto-DiskStorageCache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="585.5,232.272,579.5,250.272,591.5,250.272,585.5,232.272" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DiskStorage to DynamicDefaultDiskStorage--><g id="link_DiskStorage_DynamicDefaultDiskStorage"><path codeLine="17" d="M585.5,466 C585.5,483.6584 585.5,489.9408 585.5,507.6784 " fill="none" id="DiskStorage-backto-DynamicDefaultDiskStorage" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="585.5,448,579.5,466,591.5,466,585.5,448" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BufferedDiskCache to FileCache--><g id="link_BufferedDiskCache_FileCache"><path codeLine="18" d="M425.3887,78.1065 C456.0597,99.6365 492.514,125.227 529.034,150.863 " fill="none" id="BufferedDiskCache-backto-FileCache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="415.567,71.212,418.1797,77.9332,425.3887,78.1065,422.776,71.3853,415.567,71.212" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DiskStorageCache to DiskStorage--><g id="link_DiskStorageCache_DiskStorage"><path codeLine="19" d="M585.5,352 C585.5,369.658 585.5,381.941 585.5,399.678 " fill="none" id="DiskStorageCache-backto-DiskStorage" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="585.5,340,581.5,346,585.5,352,589.5,346,585.5,340" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[VL51Ri8m4Bpx5Nii5Nm08QG2hLHLIAWvzBnrDgaLswdMZge8-7jT9u1RJ7soTsPdTiTIetEmKQvPe_oWDrQUTjoMdII6lO1mp8OgxBHVTLL5JEMPFA25GQsV3TPqJJYAlF9yVbCKxcTmBNHJvX_tl5AEDeF2Owri_S24GiP8aigOmnO_5x7ZXVefF5hPbbH6woMO08PjbVN45Kg29wLfa1-QLyeYzw_aseu3N9C_tUzEcj1GFycHbNN4_XTl2Z48NeVjtr4sy1MVap33nNbn29lzx5dubiEOGm2N6HD89FUnhxTeb1o_AQNc4ppRYh-E4KwAtm00]--></g></svg>

<p>DiskCacheWriteProducer接收到下级Producer的EncodedImage后就会调用<code>BufferedDiskCache#put()</code>进行缓存。BufferedDiskCache在缓存图片时，会先把图片（EncodedImage）保存到StagingArea（mMap）中，即内存缓存，下次获取时也会优先从StagingArea中获取内存中的图片缓存。然后，在子线程中写入磁盘缓存。</p>
<h3 id="DiskCacheReadProducer"><a href="#DiskCacheReadProducer" class="headerlink" title="DiskCacheReadProducer"></a>DiskCacheReadProducer</h3><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="94px" preserveAspectRatio="none" style="width:474px;height:94px;background:#FFFFFF;" version="1.1" viewBox="0 0 474 94" width="474px" zoomAndPan="magnify"><defs/><g><!--class DiskCacheReadProducer--><g id="elem_DiskCacheReadProducer"><rect codeLine="1" fill="#F1F1F1" height="80.5938" id="DiskCacheReadProducer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="247" x="7" y="7"/><ellipse cx="40" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M42.3438,18.6719 C41.4063,18.2344 40.8125,18.0938 39.9375,18.0938 C37.3125,18.0938 35.3125,20.1719 35.3125,22.8906 L35.3125,24.0156 C35.3125,26.5938 37.4219,28.4844 40.3125,28.4844 C41.5313,28.4844 42.6875,28.1875 43.4375,27.6406 C44.0156,27.2344 44.3438,26.7813 44.3438,26.3906 C44.3438,25.9375 43.9531,25.5469 43.4844,25.5469 C43.2656,25.5469 43.0625,25.625 42.875,25.8125 C42.4219,26.2969 42.4219,26.2969 42.2344,26.3906 C41.8125,26.6563 41.125,26.7813 40.3594,26.7813 C38.3125,26.7813 37.0156,25.6875 37.0156,23.9844 L37.0156,22.8906 C37.0156,21.1094 38.2656,19.7969 40,19.7969 C40.5781,19.7969 41.1875,19.9531 41.6563,20.2031 C42.1406,20.4844 42.3125,20.7031 42.4063,21.1094 C42.4688,21.5156 42.5,21.6406 42.6406,21.7656 C42.7813,21.9063 43.0156,22.0156 43.2344,22.0156 C43.5,22.0156 43.7656,21.875 43.9375,21.6563 C44.0469,21.5 44.0781,21.3125 44.0781,20.8906 L44.0781,19.4688 C44.0781,19.0313 44.0625,18.9063 43.9688,18.75 C43.8125,18.4844 43.5313,18.3438 43.2344,18.3438 C42.9375,18.3438 42.7344,18.4375 42.5156,18.75 L42.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="58" y="27.8467">DiskCacheReadProducer</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="253" y1="39" y2="39"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="13" y="55.9951">mDefaultBufferedDiskCache</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="235" x="13" y="72.292">mSmallImageBufferedDiskCache</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="253" y1="79.5938" y2="79.5938"/></g><!--class BufferedDiskCache--><g id="elem_BufferedDiskCache"><rect fill="#F1F1F1" height="48" id="BufferedDiskCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="170" x="297.5" y="23"/><ellipse cx="312.5" cy="39" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M314.8438,34.6719 C313.9063,34.2344 313.3125,34.0938 312.4375,34.0938 C309.8125,34.0938 307.8125,36.1719 307.8125,38.8906 L307.8125,40.0156 C307.8125,42.5938 309.9219,44.4844 312.8125,44.4844 C314.0313,44.4844 315.1875,44.1875 315.9375,43.6406 C316.5156,43.2344 316.8438,42.7813 316.8438,42.3906 C316.8438,41.9375 316.4531,41.5469 315.9844,41.5469 C315.7656,41.5469 315.5625,41.625 315.375,41.8125 C314.9219,42.2969 314.9219,42.2969 314.7344,42.3906 C314.3125,42.6563 313.625,42.7813 312.8594,42.7813 C310.8125,42.7813 309.5156,41.6875 309.5156,39.9844 L309.5156,38.8906 C309.5156,37.1094 310.7656,35.7969 312.5,35.7969 C313.0781,35.7969 313.6875,35.9531 314.1563,36.2031 C314.6406,36.4844 314.8125,36.7031 314.9063,37.1094 C314.9688,37.5156 315,37.6406 315.1406,37.7656 C315.2813,37.9063 315.5156,38.0156 315.7344,38.0156 C316,38.0156 316.2656,37.875 316.4375,37.6563 C316.5469,37.5 316.5781,37.3125 316.5781,36.8906 L316.5781,35.4688 C316.5781,35.0313 316.5625,34.9063 316.4688,34.75 C316.3125,34.4844 316.0313,34.3438 315.7344,34.3438 C315.4375,34.3438 315.2344,34.4375 315.0156,34.75 L314.8438,34.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="326.5" y="43.8467">BufferedDiskCache</text><line style="stroke:#181818;stroke-width:0.5;" x1="298.5" x2="466.5" y1="55" y2="55"/><line style="stroke:#181818;stroke-width:0.5;" x1="298.5" x2="466.5" y1="63" y2="63"/></g><!--reverse link DiskCacheReadProducer to BufferedDiskCache--><g id="link_DiskCacheReadProducer_BufferedDiskCache"><path codeLine="5" d="M267.5,51 C281.069,51 283.457,50.7654 297.47,50.4098 " fill="none" id="DiskCacheReadProducer-backto-BufferedDiskCache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="255.5,51,261.5,55,267.5,51,261.5,47,255.5,51" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DiskCacheReadProducer to BufferedDiskCache--><g id="link_DiskCacheReadProducer_BufferedDiskCache"><path codeLine="6" d="M267.5,67 C281.122,67 283.47,65.8457 297.41,64.0918 " fill="none" id="DiskCacheReadProducer-backto-BufferedDiskCache-1" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="255.5,67,261.5,71,267.5,67,261.5,63,255.5,67" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[Iyv9B2vMSCaipdPEJCv83KfDJ0aeoayfJKujKgZcKW22N9VKjCJId1AdqhIqrABK5BXQY6nmRc9EZcTkOdegfe9QBgm6MrdXD5D1IrS1qnnSfk2n6wj10000]--></g></svg>

<p>DiskCacheReadProducer也持有两个BufferedDiskCache，与DiskCacheWriteProducer中的同一个对象实例。从DiskCacheWriteProducer的分析中我们知道图片会优先保存到内存中（StagingArea）,读取时也优先使用内存中的缓存。</p>
<p>DiskCacheReadProducer启动后会先从缓存读取图片，如果存在缓存的图片就不会再调用下一级Producer，直接把结果返回给上一级。如果没有读取到缓存的图片，就会继续调用下一级Producer。</p>
<h3 id="EncodedMemoryCacheProducer"><a href="#EncodedMemoryCacheProducer" class="headerlink" title="EncodedMemoryCacheProducer"></a>EncodedMemoryCacheProducer</h3><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="389px" preserveAspectRatio="none" style="width:961px;height:389px;background:#FFFFFF;" version="1.1" viewBox="0 0 961 389" width="961px" zoomAndPan="magnify"><defs/><g><!--class MemoryCache--><g id="elem_MemoryCache"><rect codeLine="1" fill="#F1F1F1" height="48" id="MemoryCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="308" x="158" y="118"/><ellipse cx="173" cy="134" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M173.9531,130.7813 L175.6719,130.7813 C176.0625,130.7813 176.25,130.75 176.375,130.6719 C176.6406,130.5156 176.7813,130.2344 176.7813,129.9375 C176.7813,129.6719 176.6719,129.4063 176.4375,129.2344 C176.2656,129.125 176.125,129.0938 175.6719,129.0938 L170.5313,129.0938 C170.0938,129.0938 169.9688,129.1094 169.8125,129.2031 C169.5625,129.3594 169.4063,129.6563 169.4063,129.9375 C169.4063,130.2188 169.5469,130.4688 169.7656,130.6406 C169.9219,130.75 170.1094,130.7813 170.5313,130.7813 L172.25,130.7813 L172.25,137.2969 L170.5313,137.2969 C170.0938,137.2969 169.9688,137.3125 169.8125,137.4219 C169.5625,137.5781 169.4063,137.8594 169.4063,138.1563 C169.4063,138.4063 169.5469,138.6719 169.7656,138.8281 C169.9219,138.9531 170.125,139 170.5313,139 L175.6719,139 C176.4219,139 176.7813,138.7188 176.7813,138.1563 C176.7813,137.875 176.6719,137.625 176.4375,137.4531 C176.2656,137.3281 176.125,137.2969 175.6719,137.2969 L173.9531,137.2969 L173.9531,130.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="103" x="187" y="138.8467">MemoryCache</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="171" x="298" y="115"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="169" x="299" y="127.1387">CacheKey, PooledByteBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="159" x2="465" y1="150" y2="150"/><line style="stroke:#181818;stroke-width:0.5;" x1="159" x2="465" y1="158" y2="158"/></g><!--class Producer--><g id="elem_Producer"><rect codeLine="2" fill="#F1F1F1" height="48" id="Producer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="191" x="477.5" y="10"/><ellipse cx="492.5" cy="26" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M493.4531,22.7813 L495.1719,22.7813 C495.5625,22.7813 495.75,22.75 495.875,22.6719 C496.1406,22.5156 496.2813,22.2344 496.2813,21.9375 C496.2813,21.6719 496.1719,21.4063 495.9375,21.2344 C495.7656,21.125 495.625,21.0938 495.1719,21.0938 L490.0313,21.0938 C489.5938,21.0938 489.4688,21.1094 489.3125,21.2031 C489.0625,21.3594 488.9063,21.6563 488.9063,21.9375 C488.9063,22.2188 489.0469,22.4688 489.2656,22.6406 C489.4219,22.75 489.6094,22.7813 490.0313,22.7813 L491.75,22.7813 L491.75,29.2969 L490.0313,29.2969 C489.5938,29.2969 489.4688,29.3125 489.3125,29.4219 C489.0625,29.5781 488.9063,29.8594 488.9063,30.1563 C488.9063,30.4063 489.0469,30.6719 489.2656,30.8281 C489.4219,30.9531 489.625,31 490.0313,31 L495.1719,31 C495.9219,31 496.2813,30.7188 496.2813,30.1563 C496.2813,29.875 496.1719,29.625 495.9375,29.4531 C495.7656,29.3281 495.625,29.2969 495.1719,29.2969 L493.4531,29.2969 L493.4531,22.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="64" x="506.5" y="30.8467">Producer</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="93" x="578.5" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="91" x="579.5" y="19.1387">EncodedImage</text><line style="stroke:#181818;stroke-width:0.5;" x1="478.5" x2="667.5" y1="42" y2="42"/><line style="stroke:#181818;stroke-width:0.5;" x1="478.5" x2="667.5" y1="50" y2="50"/></g><!--class EncodedMemoryCacheProducer--><g id="elem_EncodedMemoryCacheProducer"><rect fill="#F1F1F1" height="48" id="EncodedMemoryCacheProducer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="260" x="182" y="10"/><ellipse cx="197" cy="26" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M199.3438,21.6719 C198.4063,21.2344 197.8125,21.0938 196.9375,21.0938 C194.3125,21.0938 192.3125,23.1719 192.3125,25.8906 L192.3125,27.0156 C192.3125,29.5938 194.4219,31.4844 197.3125,31.4844 C198.5313,31.4844 199.6875,31.1875 200.4375,30.6406 C201.0156,30.2344 201.3438,29.7813 201.3438,29.3906 C201.3438,28.9375 200.9531,28.5469 200.4844,28.5469 C200.2656,28.5469 200.0625,28.625 199.875,28.8125 C199.4219,29.2969 199.4219,29.2969 199.2344,29.3906 C198.8125,29.6563 198.125,29.7813 197.3594,29.7813 C195.3125,29.7813 194.0156,28.6875 194.0156,26.9844 L194.0156,25.8906 C194.0156,24.1094 195.2656,22.7969 197,22.7969 C197.5781,22.7969 198.1875,22.9531 198.6563,23.2031 C199.1406,23.4844 199.3125,23.7031 199.4063,24.1094 C199.4688,24.5156 199.5,24.6406 199.6406,24.7656 C199.7813,24.9063 200.0156,25.0156 200.2344,25.0156 C200.5,25.0156 200.7656,24.875 200.9375,24.6563 C201.0469,24.5 201.0781,24.3125 201.0781,23.8906 L201.0781,22.4688 C201.0781,22.0313 201.0625,21.9063 200.9688,21.75 C200.8125,21.4844 200.5313,21.3438 200.2344,21.3438 C199.9375,21.3438 199.7344,21.4375 199.5156,21.75 L199.3438,21.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="228" x="211" y="30.8467">EncodedMemoryCacheProducer</text><line style="stroke:#181818;stroke-width:0.5;" x1="183" x2="441" y1="42" y2="42"/><line style="stroke:#181818;stroke-width:0.5;" x1="183" x2="441" y1="50" y2="50"/></g><g id="elem_GMN7"><path d="M703.5,21.5 L703.5,30 L668.625,34 L703.5,38 L703.5,46.6328 A0,0 0 0 0 703.5,46.6328 L802.5,46.6328 A0,0 0 0 0 802.5,46.6328 L802.5,31.5 L792.5,21.5 L703.5,21.5 A0,0 0 0 0 703.5,21.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M792.5,21.5 L792.5,31.5 L802.5,31.5 L792.5,21.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="709.5" y="38.5669">&#19979;&#19968;&#32423;&#29983;&#20135;&#32773;</text></g><!--class CountingMemoryCache--><g id="elem_CountingMemoryCache"><rect codeLine="8" fill="#F1F1F1" height="48" id="CountingMemoryCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="372" x="7" y="226"/><ellipse cx="22" cy="242" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,237.6719 C23.4063,237.2344 22.8125,237.0938 21.9375,237.0938 C19.3125,237.0938 17.3125,239.1719 17.3125,241.8906 L17.3125,243.0156 C17.3125,245.5938 19.4219,247.4844 22.3125,247.4844 C23.5313,247.4844 24.6875,247.1875 25.4375,246.6406 C26.0156,246.2344 26.3438,245.7813 26.3438,245.3906 C26.3438,244.9375 25.9531,244.5469 25.4844,244.5469 C25.2656,244.5469 25.0625,244.625 24.875,244.8125 C24.4219,245.2969 24.4219,245.2969 24.2344,245.3906 C23.8125,245.6563 23.125,245.7813 22.3594,245.7813 C20.3125,245.7813 19.0156,244.6875 19.0156,242.9844 L19.0156,241.8906 C19.0156,240.1094 20.2656,238.7969 22,238.7969 C22.5781,238.7969 23.1875,238.9531 23.6563,239.2031 C24.1406,239.4844 24.3125,239.7031 24.4063,240.1094 C24.4688,240.5156 24.5,240.6406 24.6406,240.7656 C24.7813,240.9063 25.0156,241.0156 25.2344,241.0156 C25.5,241.0156 25.7656,240.875 25.9375,240.6563 C26.0469,240.5 26.0781,240.3125 26.0781,239.8906 L26.0781,238.4688 C26.0781,238.0313 26.0625,237.9063 25.9688,237.75 C25.8125,237.4844 25.5313,237.3438 25.2344,237.3438 C24.9375,237.3438 24.7344,237.4375 24.5156,237.75 L24.3438,237.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="36" y="246.8467">CountingMemoryCache</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="171" x="211" y="223"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="169" x="212" y="235.1387">CacheKey, PooledByteBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="378" y1="258" y2="258"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="378" y1="266" y2="266"/></g><!--class LruCountingMemoryCache--><g id="elem_LruCountingMemoryCache"><rect codeLine="9" fill="#F1F1F1" height="48" id="LruCountingMemoryCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="394" x="186" y="334"/><ellipse cx="201" cy="350" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M203.3438,345.6719 C202.4063,345.2344 201.8125,345.0938 200.9375,345.0938 C198.3125,345.0938 196.3125,347.1719 196.3125,349.8906 L196.3125,351.0156 C196.3125,353.5938 198.4219,355.4844 201.3125,355.4844 C202.5313,355.4844 203.6875,355.1875 204.4375,354.6406 C205.0156,354.2344 205.3438,353.7813 205.3438,353.3906 C205.3438,352.9375 204.9531,352.5469 204.4844,352.5469 C204.2656,352.5469 204.0625,352.625 203.875,352.8125 C203.4219,353.2969 203.4219,353.2969 203.2344,353.3906 C202.8125,353.6563 202.125,353.7813 201.3594,353.7813 C199.3125,353.7813 198.0156,352.6875 198.0156,350.9844 L198.0156,349.8906 C198.0156,348.1094 199.2656,346.7969 201,346.7969 C201.5781,346.7969 202.1875,346.9531 202.6563,347.2031 C203.1406,347.4844 203.3125,347.7031 203.4063,348.1094 C203.4688,348.5156 203.5,348.6406 203.6406,348.7656 C203.7813,348.9063 204.0156,349.0156 204.2344,349.0156 C204.5,349.0156 204.7656,348.875 204.9375,348.6563 C205.0469,348.5 205.0781,348.3125 205.0781,347.8906 L205.0781,346.4688 C205.0781,346.0313 205.0625,345.9063 204.9688,345.75 C204.8125,345.4844 204.5313,345.3438 204.2344,345.3438 C203.9375,345.3438 203.7344,345.4375 203.5156,345.75 L203.3438,345.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="215" y="354.8467">LruCountingMemoryCache</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="171" x="412" y="331"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="169" x="413" y="343.1387">CacheKey, PooledByteBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="187" x2="579" y1="366" y2="366"/><line style="stroke:#181818;stroke-width:0.5;" x1="187" x2="579" y1="374" y2="374"/></g><!--class Entry--><g id="elem_Entry"><rect codeLine="13" fill="#F1F1F1" height="48" id="Entry" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="416" x="534" y="226"/><ellipse cx="549" cy="242" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M551.3438,237.6719 C550.4063,237.2344 549.8125,237.0938 548.9375,237.0938 C546.3125,237.0938 544.3125,239.1719 544.3125,241.8906 L544.3125,243.0156 C544.3125,245.5938 546.4219,247.4844 549.3125,247.4844 C550.5313,247.4844 551.6875,247.1875 552.4375,246.6406 C553.0156,246.2344 553.3438,245.7813 553.3438,245.3906 C553.3438,244.9375 552.9531,244.5469 552.4844,244.5469 C552.2656,244.5469 552.0625,244.625 551.875,244.8125 C551.4219,245.2969 551.4219,245.2969 551.2344,245.3906 C550.8125,245.6563 550.125,245.7813 549.3594,245.7813 C547.3125,245.7813 546.0156,244.6875 546.0156,242.9844 L546.0156,241.8906 C546.0156,240.1094 547.2656,238.7969 549,238.7969 C549.5781,238.7969 550.1875,238.9531 550.6563,239.2031 C551.1406,239.4844 551.3125,239.7031 551.4063,240.1094 C551.4688,240.5156 551.5,240.6406 551.6406,240.7656 C551.7813,240.9063 552.0156,241.0156 552.2344,241.0156 C552.5,241.0156 552.7656,240.875 552.9375,240.6563 C553.0469,240.5 553.0781,240.3125 553.0781,239.8906 L553.0781,238.4688 C553.0781,238.0313 553.0625,237.9063 552.9688,237.75 C552.8125,237.4844 552.5313,237.3438 552.2344,237.3438 C551.9375,237.3438 551.7344,237.4375 551.5156,237.75 L551.3438,237.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="563" y="246.8467">CountingMemoryCache.Entry</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="171" x="782" y="223"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="169" x="783" y="235.1387">CacheKey, PooledByteBuffer</text><line style="stroke:#181818;stroke-width:0.5;" x1="535" x2="949" y1="258" y2="258"/><line style="stroke:#181818;stroke-width:0.5;" x1="535" x2="949" y1="266" y2="266"/></g><!--class CountingLruMap--><g id="elem_CountingLruMap"><rect codeLine="14" fill="#F1F1F1" height="48" id="CountingLruMap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="253" x="615.5" y="334"/><ellipse cx="630.5" cy="350" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M632.8438,345.6719 C631.9063,345.2344 631.3125,345.0938 630.4375,345.0938 C627.8125,345.0938 625.8125,347.1719 625.8125,349.8906 L625.8125,351.0156 C625.8125,353.5938 627.9219,355.4844 630.8125,355.4844 C632.0313,355.4844 633.1875,355.1875 633.9375,354.6406 C634.5156,354.2344 634.8438,353.7813 634.8438,353.3906 C634.8438,352.9375 634.4531,352.5469 633.9844,352.5469 C633.7656,352.5469 633.5625,352.625 633.375,352.8125 C632.9219,353.2969 632.9219,353.2969 632.7344,353.3906 C632.3125,353.6563 631.625,353.7813 630.8594,353.7813 C628.8125,353.7813 627.5156,352.6875 627.5156,350.9844 L627.5156,349.8906 C627.5156,348.1094 628.7656,346.7969 630.5,346.7969 C631.0781,346.7969 631.6875,346.9531 632.1563,347.2031 C632.6406,347.4844 632.8125,347.7031 632.9063,348.1094 C632.9688,348.5156 633,348.6406 633.1406,348.7656 C633.2813,348.9063 633.5156,349.0156 633.7344,349.0156 C634,349.0156 634.2656,348.875 634.4375,348.6563 C634.5469,348.5 634.5781,348.3125 634.5781,347.8906 L634.5781,346.4688 C634.5781,346.0313 634.5625,345.9063 634.4688,345.75 C634.3125,345.4844 634.0313,345.3438 633.7344,345.3438 C633.4375,345.3438 633.2344,345.4375 633.0156,345.75 L632.8438,345.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="644.5" y="354.8467">CountingLruMap</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="102" x="769.5" y="331"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="100" x="770.5" y="343.1387">CacheKey, Entry</text><line style="stroke:#181818;stroke-width:0.5;" x1="616.5" x2="867.5" y1="366" y2="366"/><line style="stroke:#181818;stroke-width:0.5;" x1="616.5" x2="867.5" y1="374" y2="374"/></g><!--reverse link EncodedMemoryCacheProducer to MemoryCache--><g id="link_EncodedMemoryCacheProducer_MemoryCache"><path codeLine="3" d="M312,70 C312,87.658 312,99.941 312,117.678 " fill="none" id="EncodedMemoryCacheProducer-backto-MemoryCache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="312,58,308,64,312,70,316,64,312,58" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link EncodedMemoryCacheProducer to Producer--><g id="link_EncodedMemoryCacheProducer_Producer"><path codeLine="4" d="M454.245,34 C465.993,34 465.74,34 477.488,34 " fill="none" id="EncodedMemoryCacheProducer-backto-Producer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="442.245,34,448.245,38,454.245,34,448.245,30,442.245,34" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CountingMemoryCache to LruCountingMemoryCache--><g id="link_CountingMemoryCache_LruCountingMemoryCache"><path codeLine="10" d="M249.9461,282.7699 C281.7061,300.4892 309.704,316.1083 341.526,333.8617 " fill="none" id="CountingMemoryCache-backto-LruCountingMemoryCache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="234.227,274,247.0228,288.0096,252.8694,277.5302,234.227,274" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link MemoryCache to LruCountingMemoryCache--><g id="link_MemoryCache_LruCountingMemoryCache"><path codeLine="11" d="M360.4993,177.5464 C378.9703,192.2434 385.885,201.786 396,226 C410.8,261.429 400.576,306.7745 391.799,333.763 " fill="none" id="MemoryCache-backto-LruCountingMemoryCache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="346.414,166.339,356.7635,182.2415,364.2351,172.8513,346.414,166.339" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link MemoryCache to CountingMemoryCache--><g id="link_MemoryCache_CountingMemoryCache"><path codeLine="12" d="M272.738,177.9724 C252.914,195.6304 239.095,207.941 219.182,225.678 " fill="none" id="MemoryCache-backto-CountingMemoryCache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="286.179,166,268.7472,173.4921,276.7288,182.4528,286.179,166" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link LruCountingMemoryCache to CountingLruMap--><g id="link_LruCountingMemoryCache_CountingLruMap"><path codeLine="15" d="M592.029,358 C603.84,358 603.65,358 615.46,358 " fill="none" id="LruCountingMemoryCache-backto-CountingLruMap" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="580.029,358,586.029,362,592.029,358,586.029,354,580.029,358" style="stroke:#181818;stroke-width:1.0;"/></g><!--link Entry to CountingLruMap--><g id="link_Entry_CountingLruMap"><path codeLine="16" d="M742,274 C742,291.6584 742,303.9408 742,321.6784 " fill="none" id="Entry-to-CountingLruMap" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="742,333.6784,746,327.6784,742,321.6784,738,327.6784,742,333.6784" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="732.975" y="294.1558">n</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="733.025" y="323.005">1</text></g><!--SRC=[dP6_2i8m4CRtFCMHKQpWNZfK74GBla98hhMWYQJ9K71mSN9rT_GLnESfrCUmjlwf4aHT0fVylY_VtQNIe8uPHuXmeNG-O7o6VdsECU_2LAavYZ0t6DeuHXsGzA6OQYKiH-qF9LS2nMZ14Wp8hMhvtK7eU5xxdy_emvz8PH1qcimCgFXvNHotnN5TdWxbRb-S3kVrXg0KSAK9dxCiWu6oqgGo-RQtHZNHzbUXWmT_LNNhzY9_SoweIKqTJxsXD3h_b9m2ow2ctaPM1OhOiYMjeO2uWrxNzQeahoNGFgqWk_I0IjgONG00]--></g></svg>

<p>EncodedMemoryCacheProducer执行时，会首先从MemoryCache读取缓存在内存中的图片，如果有缓存，则将缓存的图片传递给上一级生产者，不再执行下一级生产者。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="445px" preserveAspectRatio="none" style="width:229px;height:445px;background:#FFFFFF;" version="1.1" viewBox="0 0 229 445" width="229px" zoomAndPan="magnify"><defs/><g><ellipse cx="111" cy="20" fill="#222222" rx="10" ry="10" style="stroke:#222222;stroke-width:1.0;"/><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="200" x="11" y="50"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="180" x="21" y="71.1387">&#26681;&#25454;CacheKey&#20174;&#32531;&#23384;&#20013;&#33719;&#21462;&#22270;&#29255;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="53" y="152.3711"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="96" x="63" y="173.5098">&#25191;&#34892;&#19979;&#19968;&#32423;&#29983;&#20135;&#32773;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="164" x="29" y="206.3398"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="144" x="39" y="227.4785">&#25910;&#21040;&#19979;&#32423;&#29983;&#20135;&#32773;&#36820;&#22238;&#30340;&#22270;&#29255;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="68" x="77" y="260.3086"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="48" x="87" y="281.4473">&#32531;&#23384;&#22270;&#29255;</text><polygon fill="#F1F1F1" points="75,103.9688,147,103.9688,159,115.9688,147,127.9688,75,127.9688,63,115.9688,75,103.9688" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="33" x="115" y="138.1792">&#19981;&#23384;&#22312;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="75" y="119.7769">&#32531;&#23384;&#22270;&#29255;&#23384;&#22312;?</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="22" x="159" y="113.3745">&#23384;&#22312;</text><polygon fill="#F1F1F1" points="111,314.2773,123,326.2773,111,338.2773,99,326.2773,111,314.2773" style="stroke:#181818;stroke-width:0.5;"/><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="152" x="35" y="358.2773"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="132" x="45" y="379.416">&#36820;&#22238;&#22270;&#29255;&#32473;&#19978;&#19968;&#32423;&#29983;&#20135;&#32773;</text><ellipse cx="111" cy="423.2461" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="111" cy="423.2461" fill="#222222" rx="6" ry="6" style="stroke:#222222;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="111" x2="111" y1="30" y2="50"/><polygon fill="#181818" points="107,40,111,50,115,40,111,44" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="111" x2="111" y1="186.3398" y2="206.3398"/><polygon fill="#181818" points="107,196.3398,111,206.3398,115,196.3398,111,200.3398" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="111" x2="111" y1="240.3086" y2="260.3086"/><polygon fill="#181818" points="107,250.3086,111,260.3086,115,250.3086,111,254.3086" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="111" x2="111" y1="127.9688" y2="152.3711"/><polygon fill="#181818" points="107,142.3711,111,152.3711,115,142.3711,111,146.3711" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="159" x2="203" y1="115.9688" y2="115.9688"/><polygon fill="#181818" points="199,213.3242,203,223.3242,207,213.3242,203,217.3242" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="203" x2="203" y1="115.9688" y2="326.2773"/><line style="stroke:#181818;stroke-width:1.0;" x1="203" x2="123" y1="326.2773" y2="326.2773"/><polygon fill="#181818" points="133,322.2773,123,326.2773,133,330.2773,129,326.2773" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="111" x2="111" y1="294.2773" y2="314.2773"/><polygon fill="#181818" points="107,304.2773,111,314.2773,115,304.2773,111,308.2773" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="111" x2="111" y1="83.9688" y2="103.9688"/><polygon fill="#181818" points="107,93.9688,111,103.9688,115,93.9688,111,97.9688" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="111" x2="111" y1="338.2773" y2="358.2773"/><polygon fill="#181818" points="107,348.2773,111,358.2773,115,348.2773,111,352.2773" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="111" x2="111" y1="392.2461" y2="412.2461"/><polygon fill="#181818" points="107,402.2461,111,412.2461,115,402.2461,111,406.2461" style="stroke:#181818;stroke-width:1.0;"/><!--SRC=[Aov9B2hXidgsOEUptdNEYSaPgTwfbKzszptVC_dfsXbFTgnzqRVzQV-qfxFtFUzij-RAJ5FGW4X1H42CEIliDHLACbBpD9xiw8K8Q78fA5Wzwrp-Oc7FantTJtOqFD-r_FcK-KzsBN_Hq6eDbfooxMd71g0aiioB_LEUpfxtV5OBp3gWGcJRhBbISufJ5JHWbgJcfMIcSLb1j46KFDyzyycEBWmRYqlo2m00]--></g></svg>

<p>加入缓存或者获取缓存等操作，都会触发缓存的清理，清理时如果超过了最大数量或者最大存储空间，都会进行清理，被清理掉的都是不被使用的图片，而且时最老的优先被清理。</p>
<h3 id="DecodeProducer"><a href="#DecodeProducer" class="headerlink" title="DecodeProducer"></a>DecodeProducer</h3><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="281px" preserveAspectRatio="none" style="width:452px;height:281px;background:#FFFFFF;" version="1.1" viewBox="0 0 452 281" width="452px" zoomAndPan="magnify"><defs/><g><!--class Producer--><g id="elem_Producer"><rect codeLine="1" fill="#F1F1F1" height="48" id="Producer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="330" x="80.5" y="10"/><ellipse cx="95.5" cy="26" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M96.4531,22.7813 L98.1719,22.7813 C98.5625,22.7813 98.75,22.75 98.875,22.6719 C99.1406,22.5156 99.2813,22.2344 99.2813,21.9375 C99.2813,21.6719 99.1719,21.4063 98.9375,21.2344 C98.7656,21.125 98.625,21.0938 98.1719,21.0938 L93.0313,21.0938 C92.5938,21.0938 92.4688,21.1094 92.3125,21.2031 C92.0625,21.3594 91.9063,21.6563 91.9063,21.9375 C91.9063,22.2188 92.0469,22.4688 92.2656,22.6406 C92.4219,22.75 92.6094,22.7813 93.0313,22.7813 L94.75,22.7813 L94.75,29.2969 L93.0313,29.2969 C92.5938,29.2969 92.4688,29.3125 92.3125,29.4219 C92.0625,29.5781 91.9063,29.8594 91.9063,30.1563 C91.9063,30.4063 92.0469,30.6719 92.2656,30.8281 C92.4219,30.9531 92.625,31 93.0313,31 L98.1719,31 C98.9219,31 99.2813,30.7188 99.2813,30.1563 C99.2813,29.875 99.1719,29.625 98.9375,29.4531 C98.7656,29.3281 98.625,29.2969 98.1719,29.2969 L96.4531,29.2969 L96.4531,22.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="64" x="109.5" y="30.8467">Producer</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="232" x="181.5" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="230" x="182.5" y="19.1387">CloseableReference&lt;CloseableImage&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="81.5" x2="409.5" y1="42" y2="42"/><line style="stroke:#181818;stroke-width:0.5;" x1="81.5" x2="409.5" y1="50" y2="50"/></g><!--class DecodeProducer--><g id="elem_DecodeProducer"><rect fill="#F1F1F1" height="48" id="DecodeProducer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="151" x="170" y="118"/><ellipse cx="185" cy="134" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M187.3438,129.6719 C186.4063,129.2344 185.8125,129.0938 184.9375,129.0938 C182.3125,129.0938 180.3125,131.1719 180.3125,133.8906 L180.3125,135.0156 C180.3125,137.5938 182.4219,139.4844 185.3125,139.4844 C186.5313,139.4844 187.6875,139.1875 188.4375,138.6406 C189.0156,138.2344 189.3438,137.7813 189.3438,137.3906 C189.3438,136.9375 188.9531,136.5469 188.4844,136.5469 C188.2656,136.5469 188.0625,136.625 187.875,136.8125 C187.4219,137.2969 187.4219,137.2969 187.2344,137.3906 C186.8125,137.6563 186.125,137.7813 185.3594,137.7813 C183.3125,137.7813 182.0156,136.6875 182.0156,134.9844 L182.0156,133.8906 C182.0156,132.1094 183.2656,130.7969 185,130.7969 C185.5781,130.7969 186.1875,130.9531 186.6563,131.2031 C187.1406,131.4844 187.3125,131.7031 187.4063,132.1094 C187.4688,132.5156 187.5,132.6406 187.6406,132.7656 C187.7813,132.9063 188.0156,133.0156 188.2344,133.0156 C188.5,133.0156 188.7656,132.875 188.9375,132.6563 C189.0469,132.5 189.0781,132.3125 189.0781,131.8906 L189.0781,130.4688 C189.0781,130.0313 189.0625,129.9063 188.9688,129.75 C188.8125,129.4844 188.5313,129.3438 188.2344,129.3438 C187.9375,129.3438 187.7344,129.4375 187.5156,129.75 L187.3438,129.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="199" y="138.8467">DecodeProducer</text><line style="stroke:#181818;stroke-width:0.5;" x1="171" x2="320" y1="150" y2="150"/><line style="stroke:#181818;stroke-width:0.5;" x1="171" x2="320" y1="158" y2="158"/></g><!--class ByteArrayPool--><g id="elem_ByteArrayPool"><rect fill="#F1F1F1" height="48" id="ByteArrayPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="135" x="7" y="226"/><ellipse cx="22" cy="242" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,237.6719 C23.4063,237.2344 22.8125,237.0938 21.9375,237.0938 C19.3125,237.0938 17.3125,239.1719 17.3125,241.8906 L17.3125,243.0156 C17.3125,245.5938 19.4219,247.4844 22.3125,247.4844 C23.5313,247.4844 24.6875,247.1875 25.4375,246.6406 C26.0156,246.2344 26.3438,245.7813 26.3438,245.3906 C26.3438,244.9375 25.9531,244.5469 25.4844,244.5469 C25.2656,244.5469 25.0625,244.625 24.875,244.8125 C24.4219,245.2969 24.4219,245.2969 24.2344,245.3906 C23.8125,245.6563 23.125,245.7813 22.3594,245.7813 C20.3125,245.7813 19.0156,244.6875 19.0156,242.9844 L19.0156,241.8906 C19.0156,240.1094 20.2656,238.7969 22,238.7969 C22.5781,238.7969 23.1875,238.9531 23.6563,239.2031 C24.1406,239.4844 24.3125,239.7031 24.4063,240.1094 C24.4688,240.5156 24.5,240.6406 24.6406,240.7656 C24.7813,240.9063 25.0156,241.0156 25.2344,241.0156 C25.5,241.0156 25.7656,240.875 25.9375,240.6563 C26.0469,240.5 26.0781,240.3125 26.0781,239.8906 L26.0781,238.4688 C26.0781,238.0313 26.0625,237.9063 25.9688,237.75 C25.8125,237.4844 25.5313,237.3438 25.2344,237.3438 C24.9375,237.3438 24.7344,237.4375 24.5156,237.75 L24.3438,237.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="36" y="246.8467">ByteArrayPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="141" y1="258" y2="258"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="141" y1="266" y2="266"/></g><!--class ImageDecoder--><g id="elem_ImageDecoder"><rect fill="#F1F1F1" height="48" id="ImageDecoder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="137" x="177" y="226"/><ellipse cx="192" cy="242" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M194.3438,237.6719 C193.4063,237.2344 192.8125,237.0938 191.9375,237.0938 C189.3125,237.0938 187.3125,239.1719 187.3125,241.8906 L187.3125,243.0156 C187.3125,245.5938 189.4219,247.4844 192.3125,247.4844 C193.5313,247.4844 194.6875,247.1875 195.4375,246.6406 C196.0156,246.2344 196.3438,245.7813 196.3438,245.3906 C196.3438,244.9375 195.9531,244.5469 195.4844,244.5469 C195.2656,244.5469 195.0625,244.625 194.875,244.8125 C194.4219,245.2969 194.4219,245.2969 194.2344,245.3906 C193.8125,245.6563 193.125,245.7813 192.3594,245.7813 C190.3125,245.7813 189.0156,244.6875 189.0156,242.9844 L189.0156,241.8906 C189.0156,240.1094 190.2656,238.7969 192,238.7969 C192.5781,238.7969 193.1875,238.9531 193.6563,239.2031 C194.1406,239.4844 194.3125,239.7031 194.4063,240.1094 C194.4688,240.5156 194.5,240.6406 194.6406,240.7656 C194.7813,240.9063 195.0156,241.0156 195.2344,241.0156 C195.5,241.0156 195.7656,240.875 195.9375,240.6563 C196.0469,240.5 196.0781,240.3125 196.0781,239.8906 L196.0781,238.4688 C196.0781,238.0313 196.0625,237.9063 195.9688,237.75 C195.8125,237.4844 195.5313,237.3438 195.2344,237.3438 C194.9375,237.3438 194.7344,237.4375 194.5156,237.75 L194.3438,237.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="206" y="246.8467">ImageDecoder</text><line style="stroke:#181818;stroke-width:0.5;" x1="178" x2="313" y1="258" y2="258"/><line style="stroke:#181818;stroke-width:0.5;" x1="178" x2="313" y1="266" y2="266"/></g><!--class Executor--><g id="elem_Executor"><rect fill="#F1F1F1" height="48" id="Executor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="96" x="349.5" y="226"/><ellipse cx="364.5" cy="242" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M366.8438,237.6719 C365.9063,237.2344 365.3125,237.0938 364.4375,237.0938 C361.8125,237.0938 359.8125,239.1719 359.8125,241.8906 L359.8125,243.0156 C359.8125,245.5938 361.9219,247.4844 364.8125,247.4844 C366.0313,247.4844 367.1875,247.1875 367.9375,246.6406 C368.5156,246.2344 368.8438,245.7813 368.8438,245.3906 C368.8438,244.9375 368.4531,244.5469 367.9844,244.5469 C367.7656,244.5469 367.5625,244.625 367.375,244.8125 C366.9219,245.2969 366.9219,245.2969 366.7344,245.3906 C366.3125,245.6563 365.625,245.7813 364.8594,245.7813 C362.8125,245.7813 361.5156,244.6875 361.5156,242.9844 L361.5156,241.8906 C361.5156,240.1094 362.7656,238.7969 364.5,238.7969 C365.0781,238.7969 365.6875,238.9531 366.1563,239.2031 C366.6406,239.4844 366.8125,239.7031 366.9063,240.1094 C366.9688,240.5156 367,240.6406 367.1406,240.7656 C367.2813,240.9063 367.5156,241.0156 367.7344,241.0156 C368,241.0156 368.2656,240.875 368.4375,240.6563 C368.5469,240.5 368.5781,240.3125 368.5781,239.8906 L368.5781,238.4688 C368.5781,238.0313 368.5625,237.9063 368.4688,237.75 C368.3125,237.4844 368.0313,237.3438 367.7344,237.3438 C367.4375,237.3438 367.2344,237.4375 367.0156,237.75 L366.8438,237.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="378.5" y="246.8467">Executor</text><line style="stroke:#181818;stroke-width:0.5;" x1="350.5" x2="444.5" y1="258" y2="258"/><line style="stroke:#181818;stroke-width:0.5;" x1="350.5" x2="444.5" y1="266" y2="266"/></g><!--reverse link Producer to DecodeProducer--><g id="link_Producer_DecodeProducer"><path codeLine="2" d="M245.5,76 C245.5,93.658 245.5,99.941 245.5,117.678 " fill="none" id="Producer-backto-DecodeProducer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="245.5,58,239.5,76,251.5,76,245.5,58" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DecodeProducer to ByteArrayPool--><g id="link_DecodeProducer_ByteArrayPool"><path codeLine="3" d="M198.1966,172.3224 C169.6116,190.0417 140.467,208.1083 111.827,225.8617 " fill="none" id="DecodeProducer-backto-ByteArrayPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="208.396,166,201.1888,165.7614,198.1966,172.3224,205.4038,172.561,208.396,166" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DecodeProducer to ImageDecoder--><g id="link_DecodeProducer_ImageDecoder"><path codeLine="4" d="M245.5,178 C245.5,195.6584 245.5,207.9408 245.5,225.6784 " fill="none" id="DecodeProducer-backto-ImageDecoder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="245.5,166,241.5,172,245.5,178,249.5,172,245.5,166" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DecodeProducer to Executor--><g id="link_DecodeProducer_Executor"><path codeLine="5" d="M288.3248,172.8643 C313.7328,190.5836 338.863,208.1083 364.321,225.8617 " fill="none" id="DecodeProducer-backto-Executor" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="278.482,166,281.1153,172.7131,288.3248,172.8643,285.6915,166.1512,278.482,166" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[oymhIIrAIqnELGWeoayfJKujid7EoIzEJKpAIGrAJKijIirBJaK8UUOcfgVQsN7152lOrEZgAhYa9kUdfCB4k52v2bf05KwL9QcEHKM9bG7v-JdO580DXeXZDS2r8ZMvj2I_2000]--></g></svg>

<h3 id="BitmapMemoryCacheProducer"><a href="#BitmapMemoryCacheProducer" class="headerlink" title="BitmapMemoryCacheProducer"></a>BitmapMemoryCacheProducer</h3><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="402px" preserveAspectRatio="none" style="width:643px;height:402px;background:#FFFFFF;" version="1.1" viewBox="0 0 643 402" width="643px" zoomAndPan="magnify"><defs/><g><!--class MemoryCache--><g id="elem_MemoryCache"><rect codeLine="1" fill="#F1F1F1" height="48" id="MemoryCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="300" x="332" y="123"/><ellipse cx="347" cy="139" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M347.9531,135.7813 L349.6719,135.7813 C350.0625,135.7813 350.25,135.75 350.375,135.6719 C350.6406,135.5156 350.7813,135.2344 350.7813,134.9375 C350.7813,134.6719 350.6719,134.4063 350.4375,134.2344 C350.2656,134.125 350.125,134.0938 349.6719,134.0938 L344.5313,134.0938 C344.0938,134.0938 343.9688,134.1094 343.8125,134.2031 C343.5625,134.3594 343.4063,134.6563 343.4063,134.9375 C343.4063,135.2188 343.5469,135.4688 343.7656,135.6406 C343.9219,135.75 344.1094,135.7813 344.5313,135.7813 L346.25,135.7813 L346.25,142.2969 L344.5313,142.2969 C344.0938,142.2969 343.9688,142.3125 343.8125,142.4219 C343.5625,142.5781 343.4063,142.8594 343.4063,143.1563 C343.4063,143.4063 343.5469,143.6719 343.7656,143.8281 C343.9219,143.9531 344.125,144 344.5313,144 L349.6719,144 C350.4219,144 350.7813,143.7188 350.7813,143.1563 C350.7813,142.875 350.6719,142.625 350.4375,142.4531 C350.2656,142.3281 350.125,142.2969 349.6719,142.2969 L347.9531,142.2969 L347.9531,135.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="103" x="361" y="143.8467">MemoryCache</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="163" x="472" y="120"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="161" x="473" y="132.1387">CacheKey, CloseableImage</text><line style="stroke:#181818;stroke-width:0.5;" x1="333" x2="631" y1="155" y2="155"/><line style="stroke:#181818;stroke-width:0.5;" x1="333" x2="631" y1="163" y2="163"/></g><!--class CountingMemoryCache--><g id="elem_CountingMemoryCache"><rect codeLine="2" fill="#F1F1F1" height="48" id="CountingMemoryCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="364" x="65" y="239"/><ellipse cx="80" cy="255" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M80.9531,251.7813 L82.6719,251.7813 C83.0625,251.7813 83.25,251.75 83.375,251.6719 C83.6406,251.5156 83.7813,251.2344 83.7813,250.9375 C83.7813,250.6719 83.6719,250.4063 83.4375,250.2344 C83.2656,250.125 83.125,250.0938 82.6719,250.0938 L77.5313,250.0938 C77.0938,250.0938 76.9688,250.1094 76.8125,250.2031 C76.5625,250.3594 76.4063,250.6563 76.4063,250.9375 C76.4063,251.2188 76.5469,251.4688 76.7656,251.6406 C76.9219,251.75 77.1094,251.7813 77.5313,251.7813 L79.25,251.7813 L79.25,258.2969 L77.5313,258.2969 C77.0938,258.2969 76.9688,258.3125 76.8125,258.4219 C76.5625,258.5781 76.4063,258.8594 76.4063,259.1563 C76.4063,259.4063 76.5469,259.6719 76.7656,259.8281 C76.9219,259.9531 77.125,260 77.5313,260 L82.6719,260 C83.4219,260 83.7813,259.7188 83.7813,259.1563 C83.7813,258.875 83.6719,258.625 83.4375,258.4531 C83.2656,258.3281 83.125,258.2969 82.6719,258.2969 L80.9531,258.2969 L80.9531,251.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="167" x="94" y="259.8467">CountingMemoryCache</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="163" x="269" y="236"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="161" x="270" y="248.1387">CacheKey, CloseableImage</text><line style="stroke:#181818;stroke-width:0.5;" x1="66" x2="428" y1="271" y2="271"/><line style="stroke:#181818;stroke-width:0.5;" x1="66" x2="428" y1="279" y2="279"/></g><!--class LruCountingMemoryCache--><g id="elem_LruCountingMemoryCache"><rect codeLine="3" fill="#F1F1F1" height="48" id="LruCountingMemoryCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="386" x="171" y="347"/><ellipse cx="186" cy="363" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M188.3438,358.6719 C187.4063,358.2344 186.8125,358.0938 185.9375,358.0938 C183.3125,358.0938 181.3125,360.1719 181.3125,362.8906 L181.3125,364.0156 C181.3125,366.5938 183.4219,368.4844 186.3125,368.4844 C187.5313,368.4844 188.6875,368.1875 189.4375,367.6406 C190.0156,367.2344 190.3438,366.7813 190.3438,366.3906 C190.3438,365.9375 189.9531,365.5469 189.4844,365.5469 C189.2656,365.5469 189.0625,365.625 188.875,365.8125 C188.4219,366.2969 188.4219,366.2969 188.2344,366.3906 C187.8125,366.6563 187.125,366.7813 186.3594,366.7813 C184.3125,366.7813 183.0156,365.6875 183.0156,363.9844 L183.0156,362.8906 C183.0156,361.1094 184.2656,359.7969 186,359.7969 C186.5781,359.7969 187.1875,359.9531 187.6563,360.2031 C188.1406,360.4844 188.3125,360.7031 188.4063,361.1094 C188.4688,361.5156 188.5,361.6406 188.6406,361.7656 C188.7813,361.9063 189.0156,362.0156 189.2344,362.0156 C189.5,362.0156 189.7656,361.875 189.9375,361.6563 C190.0469,361.5 190.0781,361.3125 190.0781,360.8906 L190.0781,359.4688 C190.0781,359.0313 190.0625,358.9063 189.9688,358.75 C189.8125,358.4844 189.5313,358.3438 189.2344,358.3438 C188.9375,358.3438 188.7344,358.4375 188.5156,358.75 L188.3438,358.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="200" y="367.8467">LruCountingMemoryCache</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="163" x="397" y="344"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="161" x="398" y="356.1387">CacheKey, CloseableImage</text><line style="stroke:#181818;stroke-width:0.5;" x1="172" x2="556" y1="379" y2="379"/><line style="stroke:#181818;stroke-width:0.5;" x1="172" x2="556" y1="387" y2="387"/></g><!--class BitmapMemoryCacheProducer--><g id="elem_BitmapMemoryCacheProducer"><rect fill="#F1F1F1" height="48" id="BitmapMemoryCacheProducer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="251" x="356.5" y="7"/><ellipse cx="371.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M373.8438,18.6719 C372.9063,18.2344 372.3125,18.0938 371.4375,18.0938 C368.8125,18.0938 366.8125,20.1719 366.8125,22.8906 L366.8125,24.0156 C366.8125,26.5938 368.9219,28.4844 371.8125,28.4844 C373.0313,28.4844 374.1875,28.1875 374.9375,27.6406 C375.5156,27.2344 375.8438,26.7813 375.8438,26.3906 C375.8438,25.9375 375.4531,25.5469 374.9844,25.5469 C374.7656,25.5469 374.5625,25.625 374.375,25.8125 C373.9219,26.2969 373.9219,26.2969 373.7344,26.3906 C373.3125,26.6563 372.625,26.7813 371.8594,26.7813 C369.8125,26.7813 368.5156,25.6875 368.5156,23.9844 L368.5156,22.8906 C368.5156,21.1094 369.7656,19.7969 371.5,19.7969 C372.0781,19.7969 372.6875,19.9531 373.1563,20.2031 C373.6406,20.4844 373.8125,20.7031 373.9063,21.1094 C373.9688,21.5156 374,21.6406 374.1406,21.7656 C374.2813,21.9063 374.5156,22.0156 374.7344,22.0156 C375,22.0156 375.2656,21.875 375.4375,21.6563 C375.5469,21.5 375.5781,21.3125 375.5781,20.8906 L375.5781,19.4688 C375.5781,19.0313 375.5625,18.9063 375.4688,18.75 C375.3125,18.4844 375.0313,18.3438 374.7344,18.3438 C374.4375,18.3438 374.2344,18.4375 374.0156,18.75 L373.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="385.5" y="27.8467">BitmapMemoryCacheProducer</text><line style="stroke:#181818;stroke-width:0.5;" x1="357.5" x2="606.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="357.5" x2="606.5" y1="47" y2="47"/></g><!--class MemoryTrimmable--><g id="elem_MemoryTrimmable"><rect codeLine="8" fill="#F1F1F1" height="64.2969" id="MemoryTrimmable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="290" x="7" y="115"/><ellipse cx="79.75" cy="131" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M80.7031,127.7813 L82.4219,127.7813 C82.8125,127.7813 83,127.75 83.125,127.6719 C83.3906,127.5156 83.5313,127.2344 83.5313,126.9375 C83.5313,126.6719 83.4219,126.4063 83.1875,126.2344 C83.0156,126.125 82.875,126.0938 82.4219,126.0938 L77.2813,126.0938 C76.8438,126.0938 76.7188,126.1094 76.5625,126.2031 C76.3125,126.3594 76.1563,126.6563 76.1563,126.9375 C76.1563,127.2188 76.2969,127.4688 76.5156,127.6406 C76.6719,127.75 76.8594,127.7813 77.2813,127.7813 L79,127.7813 L79,134.2969 L77.2813,134.2969 C76.8438,134.2969 76.7188,134.3125 76.5625,134.4219 C76.3125,134.5781 76.1563,134.8594 76.1563,135.1563 C76.1563,135.4063 76.2969,135.6719 76.5156,135.8281 C76.6719,135.9531 76.875,136 77.2813,136 L82.4219,136 C83.1719,136 83.5313,135.7188 83.5313,135.1563 C83.5313,134.875 83.4219,134.625 83.1875,134.4531 C83.0156,134.3281 82.875,134.2969 82.4219,134.2969 L80.7031,134.2969 L80.7031,127.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="136" x="100.25" y="135.8467">MemoryTrimmable</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="296" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="296" y1="155" y2="155"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="278" x="13" y="171.9951">void trim(MemoryTrimType trimType);</text></g><!--reverse link BitmapMemoryCacheProducer to MemoryCache--><g id="link_BitmapMemoryCacheProducer_MemoryCache"><path codeLine="4" d="M482,67.07 C482,86.848 482,103.196 482,122.965 " fill="none" id="BitmapMemoryCacheProducer-backto-MemoryCache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="482,55.07,478,61.07,482,67.07,486,61.07,482,55.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link MemoryCache to LruCountingMemoryCache--><g id="link_MemoryCache_LruCountingMemoryCache"><path codeLine="5" d="M477.9205,188.9316 C474.5905,217.7026 468.12,249.771 447,287 C433.727,310.3967 412.074,331.7327 394.213,346.9126 " fill="none" id="MemoryCache-backto-LruCountingMemoryCache" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="479.99,171.051,471.9603,188.2418,483.8807,189.6215,479.99,171.051" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CountingMemoryCache to LruCountingMemoryCache--><g id="link_CountingMemoryCache_LruCountingMemoryCache"><path codeLine="6" d="M285.7266,299.0854 C305.2176,316.7438 318.68,328.9408 338.258,346.6784 " fill="none" id="CountingMemoryCache-backto-LruCountingMemoryCache" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="272.387,287,281.6981,303.5319,289.755,294.6388,272.387,287" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link MemoryCache to CountingMemoryCache--><g id="link_MemoryCache_CountingMemoryCache"><path codeLine="7" d="M418.2489,178.9262 C377.4779,198.7042 335.236,219.196 294.485,238.965 " fill="none" id="MemoryCache-backto-CountingMemoryCache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="434.444,171.07,415.6302,173.5279,420.8677,184.3246,434.444,171.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link MemoryTrimmable to CountingMemoryCache--><g id="link_MemoryTrimmable_CountingMemoryCache"><path codeLine="11" d="M189.4825,192.9789 C205.1945,211.8329 213.373,221.647 227.704,238.845 " fill="none" id="MemoryTrimmable-backto-CountingMemoryCache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="177.959,179.151,184.8732,196.82,194.0918,189.1377,177.959,179.151" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[oymhIIrAIqnELV1DpSqlgdHEJCv8jG6JtgcLEWhEEVd5gOb9EQcUkOdfgNPScN3rplcbUIMPUUd4wKlEIImkLl0fAYLDcrDcIMvY0PBQWABybDBar285BLrTP2Tp8R4LR6hqz73OnOL53AzwL7L0Ix4foaGBnP2YpDnSa3SKghaKWA0iFpD5eGGeg86G3waiI0MBWHYQrborNEXwSLa70000]--></g></svg>

<p>配置参数的默认值：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//imagepipeline/src/main/java/com/facebook/imagepipeline/cache/DefaultBitmapMemoryCacheParamsSupplier.java</span></span><br><span class="line">  <span class="keyword">public</span> MemoryCacheParams <span class="title function_">get</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MemoryCacheParams</span>(</span><br><span class="line">        getMaxCacheSize(), <span class="comment">//maxCacheSize等于APP最大堆内存的四分之一，代码见后面</span></span><br><span class="line">        MAX_CACHE_ENTRIES, <span class="comment">//maxCacheEntries = 256</span></span><br><span class="line">        MAX_EVICTION_QUEUE_SIZE, <span class="comment">//maxEvictionQueueSize = Integer.MAX_VALUE</span></span><br><span class="line">        MAX_EVICTION_QUEUE_ENTRIES, <span class="comment">//maxEvictionQueueEntries = Integer.MAX_VALUE</span></span><br><span class="line">        MAX_CACHE_ENTRY_SIZE, <span class="comment">//maxCacheEntrySize = Integer.MAX_VALUE</span></span><br><span class="line">        PARAMS_CHECK_INTERVAL_MS); <span class="comment">//paramsCheckIntervalMs = 5 minutes</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getMaxCacheSize</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//mActivityManager.getMemoryClass()是获取的没有设置android:largeHeap属性的APP的最大堆内存；</span></span><br><span class="line">    <span class="comment">//也就是获取系统属性dalvik.vm.heapgrowthlimit的值</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> <span class="variable">maxMemory</span> <span class="operator">=</span></span><br><span class="line">        Math.min(mActivityManager.getMemoryClass() * ByteConstants.MB, Integer.MAX_VALUE);</span><br><span class="line">    <span class="keyword">if</span> (maxMemory &lt; <span class="number">32</span> * ByteConstants.MB) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">4</span> * ByteConstants.MB;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (maxMemory &lt; <span class="number">64</span> * ByteConstants.MB) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">6</span> * ByteConstants.MB;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> maxMemory / <span class="number">4</span>; <span class="comment">//app最大堆内存的四分之一</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>



<h4 id="从缓存获取Bitmap"><a href="#从缓存获取Bitmap" class="headerlink" title="从缓存获取Bitmap"></a>从缓存获取Bitmap</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//LruCountingMemoryCache.java</span></span><br><span class="line">  <span class="keyword">public</span> CloseableReference&lt;V&gt; <span class="title function_">get</span><span class="params">(<span class="keyword">final</span> K key)</span> &#123;</span><br><span class="line">    Preconditions.checkNotNull(key);</span><br><span class="line">    Entry&lt;K, V&gt; oldExclusive;</span><br><span class="line">    CloseableReference&lt;V&gt; clientRef = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">synchronized</span> (<span class="built_in">this</span>) &#123;</span><br><span class="line">      oldExclusive = mExclusiveEntries.remove(key); <span class="comment">//首先从回收列表移除</span></span><br><span class="line">      Entry&lt;K, V&gt; entry = mCachedEntries.get(key);  <span class="comment">//从LinkedHashMap中获取缓存的Bitmap</span></span><br><span class="line">      <span class="keyword">if</span> (entry != <span class="literal">null</span>) &#123;</span><br><span class="line">        clientRef = newClientReference(entry);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    maybeNotifyExclusiveEntryRemoval(oldExclusive);</span><br><span class="line">    maybeUpdateCacheParams(); <span class="comment">//查看是否需要更新配置参数，前面已经介绍</span></span><br><span class="line">    maybeEvictEntries();</span><br><span class="line">    <span class="keyword">return</span> clientRef;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//如果内存超过最大限制，就会开始清理回收列表中存在的Bitmap</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">maybeEvictEntries</span><span class="params">()</span> &#123;</span><br><span class="line">    ArrayList&lt;Entry&lt;K, V&gt;&gt; oldEntries;</span><br><span class="line">    <span class="keyword">synchronized</span> (<span class="built_in">this</span>) &#123;</span><br><span class="line">      <span class="type">int</span> <span class="variable">maxCount</span> <span class="operator">=</span></span><br><span class="line">          Math.min(</span><br><span class="line">              mMemoryCacheParams.maxEvictionQueueEntries, <span class="comment">//maxEvictionQueueEntries默认是Integer.MAX_VALUE</span></span><br><span class="line">              mMemoryCacheParams.maxCacheEntries - getInUseCount()); <span class="comment">//maxCacheEntries默认是256</span></span><br><span class="line">      <span class="type">int</span> <span class="variable">maxSize</span> <span class="operator">=</span></span><br><span class="line">          Math.min(</span><br><span class="line">              mMemoryCacheParams.maxEvictionQueueSize, <span class="comment">//maxEvictionQueueSize默认值Integer.MAX_VALUE</span></span><br><span class="line">              mMemoryCacheParams.maxCacheSize - getInUseSizeInBytes()); <span class="comment">//maxCacheSize是APP最大堆内存的四分之一</span></span><br><span class="line">      oldEntries = trimExclusivelyOwnedEntries(maxCount, maxSize);</span><br><span class="line">      makeOrphans(oldEntries);</span><br><span class="line">    &#125;</span><br><span class="line">    maybeClose(oldEntries);</span><br><span class="line">    maybeNotifyExclusiveEntryRemoval(oldEntries);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="type">int</span> <span class="title function_">getInUseCount</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> mCachedEntries.getCount() - mExclusiveEntries.getCount();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="type">int</span> <span class="title function_">getInUseSizeInBytes</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> mCachedEntries.getSizeInBytes() - mExclusiveEntries.getSizeInBytes();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">synchronized</span> ArrayList&lt;Entry&lt;K, V&gt;&gt; <span class="title function_">trimExclusivelyOwnedEntries</span><span class="params">(<span class="type">int</span> count, <span class="type">int</span> size)</span> &#123;</span><br><span class="line">    count = Math.max(count, <span class="number">0</span>);</span><br><span class="line">    size = Math.max(size, <span class="number">0</span>);</span><br><span class="line">    <span class="comment">// fast path without array allocation if no eviction is necessary</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.mExclusiveEntries.getCount() &lt;= count &amp;&amp; mExclusiveEntries.getSizeInBytes() &lt;= size) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ArrayList&lt;Entry&lt;K, V&gt;&gt; oldEntries = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">this</span>.mExclusiveEntries.getCount() &gt; count || mExclusiveEntries.getSizeInBytes() &gt; size) &#123;</span><br><span class="line">      <span class="meta">@Nullable</span> <span class="type">K</span> <span class="variable">key</span> <span class="operator">=</span> mExclusiveEntries.getFirstKey();</span><br><span class="line">      <span class="keyword">if</span> (key == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mIgnoreSizeMismatch) &#123;</span><br><span class="line">          mExclusiveEntries.resetSize();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(</span><br><span class="line">            String.format(</span><br><span class="line">                <span class="string">&quot;key is null, but exclusiveEntries count: %d, size: %d&quot;</span>,</span><br><span class="line">                <span class="built_in">this</span>.mExclusiveEntries.getCount(), mExclusiveEntries.getSizeInBytes()));</span><br><span class="line">      &#125;</span><br><span class="line">      mExclusiveEntries.remove(key);</span><br><span class="line">      oldEntries.add(mCachedEntries.remove(key));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> oldEntries;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h3 id="BitmapPrepareProducer"><a href="#BitmapPrepareProducer" class="headerlink" title="BitmapPrepareProducer"></a>BitmapPrepareProducer</h3><p>BitmapPrepareProducer只有一个作用，就是调用<code>Bitmap#prepareToDraw()</code>。prepareToDraw接口会构建一个用于绘制的缓存。从Android7.0开始，这个接口会在RenderThread线程上启动GPU的异步上传。开启硬件加速后，Bitmap必须上传到GPU才能被渲染。Bitmap第一次绘制时会默认就执行GPU上传动作，但是这个有几毫秒的耗时，图片越大耗时越高。通过调用prepareToDraw可以提前完成上传GPU的动作，这样可以节省第一帧的显示时间。</p>
<hr>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://developer.android.google.cn/topic/performance/graphics/manage-memory">Managing Bitmap Memory</a><br><a href="https://www.cnblogs.com/wytiger/p/5690039.html">Fresco内存机制(Ashmem匿名共享内存）</a><br><a href="https://www.kaelli.com/9.html">Android网络加载图片库对比：Fresco、Glide、Picasso</a><br><a href="https://www.jianshu.com/p/6f042f9e47a8">Android | Bitmap的Java对象GC之后，对应的native内存会回收吗？</a><br><a href="https://blog.csdn.net/niuba123456/article/details/86548437">Android图片缓存框架 - Fresco设置和清除缓存(十一)</a></p>
<!-- 生产者序列图按照执行序列 -->
<!-- ```plantuml
@startuml
skinparam componentStyle rectangle
component [DelayProducer] #back:white;line.dotted
[DelayProducer] -> [BitmapPrepareProducer]
component [PostprocessedBitmapMemoryCacheProducer] #back:white;line.dotted
[BitmapPrepareProducer] -> [PostprocessedBitmapMemoryCacheProducer]
[PostprocessedBitmapMemoryCacheProducer] -> [PostprocessorProducer]
component [PostprocessorProducer] #back:white;line.dotted
[PostprocessorProducer] -\-> [BitmapProbeProducer]
component [BitmapProbeProducer] #back:white;line.dotted
[BitmapProbeProducer] -left-> [BitmapMemoryCacheGetProducer]
[BitmapMemoryCacheGetProducer] -left-> [ThreadHandoffProducer]
[ThreadHandoffProducer] -left-> [BitmapMemoryCacheKeyMultiplexProducer]
[BitmapMemoryCacheKeyMultiplexProducer] -\-> [BitmapMemoryCacheProducer]
[BitmapMemoryCacheProducer] -> [DecodeProducer]
[DecodeProducer] -> [ResizeAndRotateProducer]
[ResizeAndRotateProducer] -> [AddImageTransformMetaDataProducer]
[AddImageTransformMetaDataProducer] -\-> [EncodedCacheKeyMultiplexProducer]
component [EncodedProbeProducer] #back:white;line.dotted
[EncodedCacheKeyMultiplexProducer] -left-> [EncodedProbeProducer]
[EncodedProbeProducer] -left-> [EncodedMemoryCacheProducer]
[EncodedMemoryCacheProducer] -left-> [DiskCacheReadProducer]
[DiskCacheReadProducer] -\-> [DiskCacheWriteProducer]
[DiskCacheWriteProducer] -> [PartialDiskCacheProducer]
component [PartialDiskCacheProducer] #back:white;line.dotted
[PartialDiskCacheProducer] -> [WebpTranscodeProducer]
component [WebpTranscodeProducer] #back:white;line.dotted
[WebpTranscodeProducer] -> [NetworkFetchProducer]
@enduml
``` -->]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Fresco</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Java虚拟机创建过程</title>
    <url>/posts/31280.html</url>
    <content><![CDATA[<p>本文基于Android8.0源码</p>
<p>Android8.0使用的java虚拟机为ART，在大名鼎鼎的zygote进程中启动java虚拟机。<br>首先看一下zygote的main函数：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//app_main.cpp</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* <span class="type">const</span> argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//AppRuntime继承自AndroidRuntime, 构造函数中没有什么有用信息，可以不关注</span></span><br><span class="line">    <span class="function">AppRuntime <span class="title">runtime</span><span class="params">(argv[<span class="number">0</span>], computeArgBlockSize(argc, argv))</span></span>;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="keyword">if</span> (zygote) &#123;</span><br><span class="line">        <span class="comment">//调用到AndroidRuntime.start函数启动zygote进程的虚拟机</span></span><br><span class="line">        <span class="comment">//传入的第一个参数是java类ZygoteInit</span></span><br><span class="line">        runtime.<span class="built_in">start</span>(<span class="string">&quot;com.android.internal.os.ZygoteInit&quot;</span>, args, zygote);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (className) &#123;</span><br><span class="line">        runtime.<span class="built_in">start</span>(<span class="string">&quot;com.android.internal.os.RuntimeInit&quot;</span>, args, zygote);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr, <span class="string">&quot;Error: no class name or --zygote supplied.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">app_usage</span>();</span><br><span class="line">        <span class="built_in">LOG_ALWAYS_FATAL</span>(<span class="string">&quot;app_process: no class name or --zygote supplied.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>runtime.start会调用父类的AndroidRuntime::start，看一下实现</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//AndroidRuntime.cpp</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AndroidRuntime::start</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* className, <span class="type">const</span> Vector&lt;String8&gt;&amp; options, <span class="type">bool</span> zygote)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="comment">/* start the virtual machine */</span></span><br><span class="line">    JniInvocation jni_invocation;</span><br><span class="line">    jni_invocation.<span class="built_in">Init</span>(<span class="literal">NULL</span>);  <span class="comment">// 1. 加载虚拟机动态库，并加载库函数符号</span></span><br><span class="line">    JNIEnv* env;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">startVm</span>(&amp;mJavaVM, &amp;env, zygote) != <span class="number">0</span>) &#123; <span class="comment">// 2. 启动虚拟机</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">onVmCreated</span>(env);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Register android functions.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">startReg</span>(env) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">ALOGE</span>(<span class="string">&quot;Unable to register all android natives\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (startClass == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">ALOGE</span>(<span class="string">&quot;JavaVM unable to locate class &#x27;%s&#x27;\n&quot;</span>, slashClassName);</span><br><span class="line">        <span class="comment">/* keep going */</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//调用com.android.internal.os.ZygoteInit的main函数，从此便进入了Java的世界</span></span><br><span class="line">        jmethodID startMeth = env-&gt;<span class="built_in">GetStaticMethodID</span>(startClass, <span class="string">&quot;main&quot;</span>,</span><br><span class="line">            <span class="string">&quot;([Ljava/lang/String;)V&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (startMeth == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="built_in">ALOGE</span>(<span class="string">&quot;JavaVM unable to find main() in &#x27;%s&#x27;\n&quot;</span>, className);</span><br><span class="line">            <span class="comment">/* keep going */</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            env-&gt;<span class="built_in">CallStaticVoidMethod</span>(startClass, startMeth, strArray);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li>加载虚拟机动态库，并加载库函数符号</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//JniInvocation.cpp</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">JniInvocation::Init</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* library)</span> </span>&#123;</span><br><span class="line">  ......</span><br><span class="line">  library = <span class="built_in">GetLibrary</span>(library, buffer); <span class="comment">//返回“libart.so” art虚拟机库</span></span><br><span class="line">  ......</span><br><span class="line">  handle_ = <span class="built_in">dlopen</span>(library, kDlopenFlags);  <span class="comment">//动态加载虚拟机so库</span></span><br><span class="line">  ......</span><br><span class="line">  <span class="comment">//下面的三个if语句都是通过dlsym来获取虚拟机so库中的函数符号</span></span><br><span class="line">  <span class="keyword">if</span> (!<span class="built_in">FindSymbol</span>(<span class="built_in">reinterpret_cast</span>&lt;<span class="type">void</span>**&gt;(&amp;JNI_GetDefaultJavaVMInitArgs_),</span><br><span class="line">                  <span class="string">&quot;JNI_GetDefaultJavaVMInitArgs&quot;</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//无比重要的函数，获取虚拟机构造函数的函数符号，创建虚拟机全靠JNI_CreateJavaVM</span></span><br><span class="line">  <span class="keyword">if</span> (!<span class="built_in">FindSymbol</span>(<span class="built_in">reinterpret_cast</span>&lt;<span class="type">void</span>**&gt;(&amp;JNI_CreateJavaVM_),</span><br><span class="line">                  <span class="string">&quot;JNI_CreateJavaVM&quot;</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="built_in">FindSymbol</span>(<span class="built_in">reinterpret_cast</span>&lt;<span class="type">void</span>**&gt;(&amp;JNI_GetCreatedJavaVMs_),</span><br><span class="line">                  <span class="string">&quot;JNI_GetCreatedJavaVMs&quot;</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">jint <span class="title">JniInvocation::JNI_CreateJavaVM</span><span class="params">(JavaVM** p_vm, JNIEnv** p_env, <span class="type">void</span>* vm_args)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">JNI_CreateJavaVM_</span>(p_vm, p_env, vm_args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//该函数就是最终创建虚拟机的函数</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> <span class="function">jint <span class="title">JNI_CreateJavaVM</span><span class="params">(JavaVM** p_vm, JNIEnv** p_env, <span class="type">void</span>* vm_args)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> JniInvocation::<span class="built_in">GetJniInvocation</span>().<span class="built_in">JNI_CreateJavaVM</span>(p_vm, p_env, vm_args);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>启动虚拟机</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Start the Dalvik Virtual Machine.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">AndroidRuntime::startVm</span><span class="params">(JavaVM** pJavaVM, JNIEnv** pEnv, <span class="type">bool</span> zygote)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...... <span class="comment">//组装虚拟机启动参数</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Initialize the VM.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * The JavaVM* is essentially per-process, and the JNIEnv* is per-thread.</span></span><br><span class="line"><span class="comment">     * If this call succeeds, the VM is ready, and we can start issuing</span></span><br><span class="line"><span class="comment">     * JNI calls.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">JNI_CreateJavaVM</span>(pJavaVM, pEnv, &amp;initArgs) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">ALOGE</span>(<span class="string">&quot;JNI_CreateJavaVM failed\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>LeakCanary源码详解</title>
    <url>/posts/faedbb97.html</url>
    <content><![CDATA[<p>本文基于LeakCanary 2.12进行分析。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="635px" preserveAspectRatio="none" style="width:893px;height:635px;background:#FFFFFF;" version="1.1" viewBox="0 0 893 635" width="893px" zoomAndPan="magnify"><defs/><g><!--cluster Application--><g id="cluster_Application"><path d="M8.5,296 L102.5,296 A3.75,3.75 0 0 1 105,298.5 L112,318.2969 L251.5,318.2969 A2.5,2.5 0 0 1 254,320.7969 L254,392.5 A2.5,2.5 0 0 1 251.5,395 L8.5,395 A2.5,2.5 0 0 1 6,392.5 L6,298.5 A2.5,2.5 0 0 1 8.5,296 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="112" y1="318.2969" y2="318.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="93" x="10" y="310.9951">Application</text></g><!--class ActivityLifecycleCallbacks--><g id="elem_ActivityLifecycleCallbacks"><rect codeLine="21" fill="#F1F1F1" height="48" id="ActivityLifecycleCallbacks" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="215" x="22.5" y="331"/><ellipse cx="37.5" cy="347" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M38.4531,343.7813 L40.1719,343.7813 C40.5625,343.7813 40.75,343.75 40.875,343.6719 C41.1406,343.5156 41.2813,343.2344 41.2813,342.9375 C41.2813,342.6719 41.1719,342.4063 40.9375,342.2344 C40.7656,342.125 40.625,342.0938 40.1719,342.0938 L35.0313,342.0938 C34.5938,342.0938 34.4688,342.1094 34.3125,342.2031 C34.0625,342.3594 33.9063,342.6563 33.9063,342.9375 C33.9063,343.2188 34.0469,343.4688 34.2656,343.6406 C34.4219,343.75 34.6094,343.7813 35.0313,343.7813 L36.75,343.7813 L36.75,350.2969 L35.0313,350.2969 C34.5938,350.2969 34.4688,350.3125 34.3125,350.4219 C34.0625,350.5781 33.9063,350.8594 33.9063,351.1563 C33.9063,351.4063 34.0469,351.6719 34.2656,351.8281 C34.4219,351.9531 34.625,352 35.0313,352 L40.1719,352 C40.9219,352 41.2813,351.7188 41.2813,351.1563 C41.2813,350.875 41.1719,350.625 40.9375,350.4531 C40.7656,350.3281 40.625,350.2969 40.1719,350.2969 L38.4531,350.2969 L38.4531,343.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="183" x="51.5" y="351.8467">ActivityLifecycleCallbacks</text><line style="stroke:#181818;stroke-width:0.5;" x1="23.5" x2="236.5" y1="363" y2="363"/><line style="stroke:#181818;stroke-width:0.5;" x1="23.5" x2="236.5" y1="371" y2="371"/></g><!--class ReachabilityWatcher--><g id="elem_ReachabilityWatcher"><rect codeLine="1" fill="#F1F1F1" height="48" id="ReachabilityWatcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="180" x="369" y="331"/><ellipse cx="384" cy="347" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M384.9531,343.7813 L386.6719,343.7813 C387.0625,343.7813 387.25,343.75 387.375,343.6719 C387.6406,343.5156 387.7813,343.2344 387.7813,342.9375 C387.7813,342.6719 387.6719,342.4063 387.4375,342.2344 C387.2656,342.125 387.125,342.0938 386.6719,342.0938 L381.5313,342.0938 C381.0938,342.0938 380.9688,342.1094 380.8125,342.2031 C380.5625,342.3594 380.4063,342.6563 380.4063,342.9375 C380.4063,343.2188 380.5469,343.4688 380.7656,343.6406 C380.9219,343.75 381.1094,343.7813 381.5313,343.7813 L383.25,343.7813 L383.25,350.2969 L381.5313,350.2969 C381.0938,350.2969 380.9688,350.3125 380.8125,350.4219 C380.5625,350.5781 380.4063,350.8594 380.4063,351.1563 C380.4063,351.4063 380.5469,351.6719 380.7656,351.8281 C380.9219,351.9531 381.125,352 381.5313,352 L386.6719,352 C387.4219,352 387.7813,351.7188 387.7813,351.1563 C387.7813,350.875 387.6719,350.625 387.4375,350.4531 C387.2656,350.3281 387.125,350.2969 386.6719,350.2969 L384.9531,350.2969 L384.9531,343.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="148" x="398" y="351.8467">ReachabilityWatcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="370" x2="548" y1="363" y2="363"/><line style="stroke:#181818;stroke-width:0.5;" x1="370" x2="548" y1="371" y2="371"/></g><!--class ObjectWatcher--><g id="elem_ObjectWatcher"><rect codeLine="3" fill="#F1F1F1" height="80.5938" id="ObjectWatcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="406" x="256" y="439"/><ellipse cx="399.75" cy="455" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M402.0938,450.6719 C401.1563,450.2344 400.5625,450.0938 399.6875,450.0938 C397.0625,450.0938 395.0625,452.1719 395.0625,454.8906 L395.0625,456.0156 C395.0625,458.5938 397.1719,460.4844 400.0625,460.4844 C401.2813,460.4844 402.4375,460.1875 403.1875,459.6406 C403.7656,459.2344 404.0938,458.7813 404.0938,458.3906 C404.0938,457.9375 403.7031,457.5469 403.2344,457.5469 C403.0156,457.5469 402.8125,457.625 402.625,457.8125 C402.1719,458.2969 402.1719,458.2969 401.9844,458.3906 C401.5625,458.6563 400.875,458.7813 400.1094,458.7813 C398.0625,458.7813 396.7656,457.6875 396.7656,455.9844 L396.7656,454.8906 C396.7656,453.1094 398.0156,451.7969 399.75,451.7969 C400.3281,451.7969 400.9375,451.9531 401.4063,452.2031 C401.8906,452.4844 402.0625,452.7031 402.1563,453.1094 C402.2188,453.5156 402.25,453.6406 402.3906,453.7656 C402.5313,453.9063 402.7656,454.0156 402.9844,454.0156 C403.25,454.0156 403.5156,453.875 403.6875,453.6563 C403.7969,453.5 403.8281,453.3125 403.8281,452.8906 L403.8281,451.4688 C403.8281,451.0313 403.8125,450.9063 403.7188,450.75 C403.5625,450.4844 403.2813,450.3438 402.9844,450.3438 C402.6875,450.3438 402.4844,450.4375 402.2656,450.75 L402.0938,450.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="420.25" y="459.8467">ObjectWatcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="257" x2="661" y1="471" y2="471"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="394" x="262" y="487.9951">watchedObjects : Map&lt;String, KeyedWeakReference&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="262" y="504.292">queue : ReferenceQueue&lt;Any&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="257" x2="661" y1="511.5938" y2="511.5938"/></g><!--class KeyedWeakReference--><g id="elem_KeyedWeakReference"><rect fill="#F1F1F1" height="48" id="KeyedWeakReference" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="192" x="519" y="580"/><ellipse cx="534" cy="596" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M536.3438,591.6719 C535.4063,591.2344 534.8125,591.0938 533.9375,591.0938 C531.3125,591.0938 529.3125,593.1719 529.3125,595.8906 L529.3125,597.0156 C529.3125,599.5938 531.4219,601.4844 534.3125,601.4844 C535.5313,601.4844 536.6875,601.1875 537.4375,600.6406 C538.0156,600.2344 538.3438,599.7813 538.3438,599.3906 C538.3438,598.9375 537.9531,598.5469 537.4844,598.5469 C537.2656,598.5469 537.0625,598.625 536.875,598.8125 C536.4219,599.2969 536.4219,599.2969 536.2344,599.3906 C535.8125,599.6563 535.125,599.7813 534.3594,599.7813 C532.3125,599.7813 531.0156,598.6875 531.0156,596.9844 L531.0156,595.8906 C531.0156,594.1094 532.2656,592.7969 534,592.7969 C534.5781,592.7969 535.1875,592.9531 535.6563,593.2031 C536.1406,593.4844 536.3125,593.7031 536.4063,594.1094 C536.4688,594.5156 536.5,594.6406 536.6406,594.7656 C536.7813,594.9063 537.0156,595.0156 537.2344,595.0156 C537.5,595.0156 537.7656,594.875 537.9375,594.6563 C538.0469,594.5 538.0781,594.3125 538.0781,593.8906 L538.0781,592.4688 C538.0781,592.0313 538.0625,591.9063 537.9688,591.75 C537.8125,591.4844 537.5313,591.3438 537.2344,591.3438 C536.9375,591.3438 536.7344,591.4375 536.5156,591.75 L536.3438,591.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="548" y="600.8467">KeyedWeakReference</text><line style="stroke:#181818;stroke-width:0.5;" x1="520" x2="710" y1="612" y2="612"/><line style="stroke:#181818;stroke-width:0.5;" x1="520" x2="710" y1="620" y2="620"/></g><!--class WeakReference--><g id="elem_WeakReference"><rect fill="#F1F1F1" height="48" id="WeakReference" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="147" x="697.5" y="455.5"/><ellipse cx="712.5" cy="471.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M714.8438,467.1719 C713.9063,466.7344 713.3125,466.5938 712.4375,466.5938 C709.8125,466.5938 707.8125,468.6719 707.8125,471.3906 L707.8125,472.5156 C707.8125,475.0938 709.9219,476.9844 712.8125,476.9844 C714.0313,476.9844 715.1875,476.6875 715.9375,476.1406 C716.5156,475.7344 716.8438,475.2813 716.8438,474.8906 C716.8438,474.4375 716.4531,474.0469 715.9844,474.0469 C715.7656,474.0469 715.5625,474.125 715.375,474.3125 C714.9219,474.7969 714.9219,474.7969 714.7344,474.8906 C714.3125,475.1563 713.625,475.2813 712.8594,475.2813 C710.8125,475.2813 709.5156,474.1875 709.5156,472.4844 L709.5156,471.3906 C709.5156,469.6094 710.7656,468.2969 712.5,468.2969 C713.0781,468.2969 713.6875,468.4531 714.1563,468.7031 C714.6406,468.9844 714.8125,469.2031 714.9063,469.6094 C714.9688,470.0156 715,470.1406 715.1406,470.2656 C715.2813,470.4063 715.5156,470.5156 715.7344,470.5156 C716,470.5156 716.2656,470.375 716.4375,470.1563 C716.5469,470 716.5781,469.8125 716.5781,469.3906 L716.5781,467.9688 C716.5781,467.5313 716.5625,467.4063 716.4688,467.25 C716.3125,466.9844 716.0313,466.8438 715.7344,466.8438 C715.4375,466.8438 715.2344,466.9375 715.0156,467.25 L714.8438,467.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="726.5" y="476.3467">WeakReference</text><line style="stroke:#181818;stroke-width:0.5;" x1="698.5" x2="843.5" y1="487.5" y2="487.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="698.5" x2="843.5" y1="495.5" y2="495.5"/></g><!--class InstallableWatcher--><g id="elem_InstallableWatcher"><rect codeLine="10" fill="#F1F1F1" height="48" id="InstallableWatcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="165" x="351.5" y="115"/><ellipse cx="366.5" cy="131" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M367.4531,127.7813 L369.1719,127.7813 C369.5625,127.7813 369.75,127.75 369.875,127.6719 C370.1406,127.5156 370.2813,127.2344 370.2813,126.9375 C370.2813,126.6719 370.1719,126.4063 369.9375,126.2344 C369.7656,126.125 369.625,126.0938 369.1719,126.0938 L364.0313,126.0938 C363.5938,126.0938 363.4688,126.1094 363.3125,126.2031 C363.0625,126.3594 362.9063,126.6563 362.9063,126.9375 C362.9063,127.2188 363.0469,127.4688 363.2656,127.6406 C363.4219,127.75 363.6094,127.7813 364.0313,127.7813 L365.75,127.7813 L365.75,134.2969 L364.0313,134.2969 C363.5938,134.2969 363.4688,134.3125 363.3125,134.4219 C363.0625,134.5781 362.9063,134.8594 362.9063,135.1563 C362.9063,135.4063 363.0469,135.6719 363.2656,135.8281 C363.4219,135.9531 363.625,136 364.0313,136 L369.1719,136 C369.9219,136 370.2813,135.7188 370.2813,135.1563 C370.2813,134.875 370.1719,134.625 369.9375,134.4531 C369.7656,134.3281 369.625,134.2969 369.1719,134.2969 L367.4531,134.2969 L367.4531,127.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="133" x="380.5" y="135.8467">InstallableWatcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="352.5" x2="515.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="352.5" x2="515.5" y1="155" y2="155"/></g><!--class ActivityWatcher--><g id="elem_ActivityWatcher"><rect fill="#F1F1F1" height="48" id="ActivityWatcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="149" x="55.5" y="223"/><ellipse cx="70.5" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M72.8438,234.6719 C71.9063,234.2344 71.3125,234.0938 70.4375,234.0938 C67.8125,234.0938 65.8125,236.1719 65.8125,238.8906 L65.8125,240.0156 C65.8125,242.5938 67.9219,244.4844 70.8125,244.4844 C72.0313,244.4844 73.1875,244.1875 73.9375,243.6406 C74.5156,243.2344 74.8438,242.7813 74.8438,242.3906 C74.8438,241.9375 74.4531,241.5469 73.9844,241.5469 C73.7656,241.5469 73.5625,241.625 73.375,241.8125 C72.9219,242.2969 72.9219,242.2969 72.7344,242.3906 C72.3125,242.6563 71.625,242.7813 70.8594,242.7813 C68.8125,242.7813 67.5156,241.6875 67.5156,239.9844 L67.5156,238.8906 C67.5156,237.1094 68.7656,235.7969 70.5,235.7969 C71.0781,235.7969 71.6875,235.9531 72.1563,236.2031 C72.6406,236.4844 72.8125,236.7031 72.9063,237.1094 C72.9688,237.5156 73,237.6406 73.1406,237.7656 C73.2813,237.9063 73.5156,238.0156 73.7344,238.0156 C74,238.0156 74.2656,237.875 74.4375,237.6563 C74.5469,237.5 74.5781,237.3125 74.5781,236.8906 L74.5781,235.4688 C74.5781,235.0313 74.5625,234.9063 74.4688,234.75 C74.3125,234.4844 74.0313,234.3438 73.7344,234.3438 C73.4375,234.3438 73.2344,234.4375 73.0156,234.75 L72.8438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="84.5" y="243.8467">ActivityWatcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="56.5" x2="203.5" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="56.5" x2="203.5" y1="263" y2="263"/></g><!--class FragmentAndViewModelWatcher--><g id="elem_FragmentAndViewModelWatcher"><rect fill="#F1F1F1" height="48" id="FragmentAndViewModelWatcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="268" x="421" y="223"/><ellipse cx="436" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M438.3438,234.6719 C437.4063,234.2344 436.8125,234.0938 435.9375,234.0938 C433.3125,234.0938 431.3125,236.1719 431.3125,238.8906 L431.3125,240.0156 C431.3125,242.5938 433.4219,244.4844 436.3125,244.4844 C437.5313,244.4844 438.6875,244.1875 439.4375,243.6406 C440.0156,243.2344 440.3438,242.7813 440.3438,242.3906 C440.3438,241.9375 439.9531,241.5469 439.4844,241.5469 C439.2656,241.5469 439.0625,241.625 438.875,241.8125 C438.4219,242.2969 438.4219,242.2969 438.2344,242.3906 C437.8125,242.6563 437.125,242.7813 436.3594,242.7813 C434.3125,242.7813 433.0156,241.6875 433.0156,239.9844 L433.0156,238.8906 C433.0156,237.1094 434.2656,235.7969 436,235.7969 C436.5781,235.7969 437.1875,235.9531 437.6563,236.2031 C438.1406,236.4844 438.3125,236.7031 438.4063,237.1094 C438.4688,237.5156 438.5,237.6406 438.6406,237.7656 C438.7813,237.9063 439.0156,238.0156 439.2344,238.0156 C439.5,238.0156 439.7656,237.875 439.9375,237.6563 C440.0469,237.5 440.0781,237.3125 440.0781,236.8906 L440.0781,235.4688 C440.0781,235.0313 440.0625,234.9063 439.9688,234.75 C439.8125,234.4844 439.5313,234.3438 439.2344,234.3438 C438.9375,234.3438 438.7344,234.4375 438.5156,234.75 L438.3438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="236" x="450" y="243.8467">FragmentAndViewModelWatcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="422" x2="688" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="422" x2="688" y1="263" y2="263"/></g><!--class RootViewWatcher--><g id="elem_RootViewWatcher"><rect fill="#F1F1F1" height="48" id="RootViewWatcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="162" x="724" y="223"/><ellipse cx="739" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M741.3438,234.6719 C740.4063,234.2344 739.8125,234.0938 738.9375,234.0938 C736.3125,234.0938 734.3125,236.1719 734.3125,238.8906 L734.3125,240.0156 C734.3125,242.5938 736.4219,244.4844 739.3125,244.4844 C740.5313,244.4844 741.6875,244.1875 742.4375,243.6406 C743.0156,243.2344 743.3438,242.7813 743.3438,242.3906 C743.3438,241.9375 742.9531,241.5469 742.4844,241.5469 C742.2656,241.5469 742.0625,241.625 741.875,241.8125 C741.4219,242.2969 741.4219,242.2969 741.2344,242.3906 C740.8125,242.6563 740.125,242.7813 739.3594,242.7813 C737.3125,242.7813 736.0156,241.6875 736.0156,239.9844 L736.0156,238.8906 C736.0156,237.1094 737.2656,235.7969 739,235.7969 C739.5781,235.7969 740.1875,235.9531 740.6563,236.2031 C741.1406,236.4844 741.3125,236.7031 741.4063,237.1094 C741.4688,237.5156 741.5,237.6406 741.6406,237.7656 C741.7813,237.9063 742.0156,238.0156 742.2344,238.0156 C742.5,238.0156 742.7656,237.875 742.9375,237.6563 C743.0469,237.5 743.0781,237.3125 743.0781,236.8906 L743.0781,235.4688 C743.0781,235.0313 743.0625,234.9063 742.9688,234.75 C742.8125,234.4844 742.5313,234.3438 742.2344,234.3438 C741.9375,234.3438 741.7344,234.4375 741.5156,234.75 L741.3438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="753" y="243.8467">RootViewWatcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="725" x2="885" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="725" x2="885" y1="263" y2="263"/></g><!--class ServiceWatcher--><g id="elem_ServiceWatcher"><rect fill="#F1F1F1" height="48" id="ServiceWatcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="240" y="223"/><ellipse cx="255" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M257.3438,234.6719 C256.4063,234.2344 255.8125,234.0938 254.9375,234.0938 C252.3125,234.0938 250.3125,236.1719 250.3125,238.8906 L250.3125,240.0156 C250.3125,242.5938 252.4219,244.4844 255.3125,244.4844 C256.5313,244.4844 257.6875,244.1875 258.4375,243.6406 C259.0156,243.2344 259.3438,242.7813 259.3438,242.3906 C259.3438,241.9375 258.9531,241.5469 258.4844,241.5469 C258.2656,241.5469 258.0625,241.625 257.875,241.8125 C257.4219,242.2969 257.4219,242.2969 257.2344,242.3906 C256.8125,242.6563 256.125,242.7813 255.3594,242.7813 C253.3125,242.7813 252.0156,241.6875 252.0156,239.9844 L252.0156,238.8906 C252.0156,237.1094 253.2656,235.7969 255,235.7969 C255.5781,235.7969 256.1875,235.9531 256.6563,236.2031 C257.1406,236.4844 257.3125,236.7031 257.4063,237.1094 C257.4688,237.5156 257.5,237.6406 257.6406,237.7656 C257.7813,237.9063 258.0156,238.0156 258.2344,238.0156 C258.5,238.0156 258.7656,237.875 258.9375,237.6563 C259.0469,237.5 259.0781,237.3125 259.0781,236.8906 L259.0781,235.4688 C259.0781,235.0313 259.0625,234.9063 258.9688,234.75 C258.8125,234.4844 258.5313,234.3438 258.2344,234.3438 C257.9375,234.3438 257.7344,234.4375 257.5156,234.75 L257.3438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="269" y="243.8467">ServiceWatcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="241" x2="385" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="241" x2="385" y1="263" y2="263"/></g><!--class AppWatcher--><g id="elem_AppWatcher"><rect fill="#F1F1F1" height="48" id="AppWatcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="123" x="372.5" y="7"/><ellipse cx="387.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M389.8438,18.6719 C388.9063,18.2344 388.3125,18.0938 387.4375,18.0938 C384.8125,18.0938 382.8125,20.1719 382.8125,22.8906 L382.8125,24.0156 C382.8125,26.5938 384.9219,28.4844 387.8125,28.4844 C389.0313,28.4844 390.1875,28.1875 390.9375,27.6406 C391.5156,27.2344 391.8438,26.7813 391.8438,26.3906 C391.8438,25.9375 391.4531,25.5469 390.9844,25.5469 C390.7656,25.5469 390.5625,25.625 390.375,25.8125 C389.9219,26.2969 389.9219,26.2969 389.7344,26.3906 C389.3125,26.6563 388.625,26.7813 387.8594,26.7813 C385.8125,26.7813 384.5156,25.6875 384.5156,23.9844 L384.5156,22.8906 C384.5156,21.1094 385.7656,19.7969 387.5,19.7969 C388.0781,19.7969 388.6875,19.9531 389.1563,20.2031 C389.6406,20.4844 389.8125,20.7031 389.9063,21.1094 C389.9688,21.5156 390,21.6406 390.1406,21.7656 C390.2813,21.9063 390.5156,22.0156 390.7344,22.0156 C391,22.0156 391.2656,21.875 391.4375,21.6563 C391.5469,21.5 391.5781,21.3125 391.5781,20.8906 L391.5781,19.4688 C391.5781,19.0313 391.5625,18.9063 391.4688,18.75 C391.3125,18.4844 391.0313,18.3438 390.7344,18.3438 C390.4375,18.3438 390.2344,18.4375 390.0156,18.75 L389.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="401.5" y="27.8467">AppWatcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="373.5" x2="494.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="373.5" x2="494.5" y1="47" y2="47"/></g><!--reverse link ReachabilityWatcher to ObjectWatcher--><g id="link_ReachabilityWatcher_ObjectWatcher"><path codeLine="2" d="M459,397.041 C459,413.814 459,418.95 459,438.688 " fill="none" id="ReachabilityWatcher-backto-ObjectWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="459,379.041,453,397.041,465,397.041,459,379.041" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ObjectWatcher to KeyedWeakReference--><g id="link_ObjectWatcher_KeyedWeakReference"><path codeLine="7" d="M519.0868,527.6833 C544.1748,547.3845 564.149,563.0687 585.51,579.8428 " fill="none" id="ObjectWatcher-backto-KeyedWeakReference" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="509.649,520.272,511.8974,527.1236,519.0868,527.6833,516.8383,520.8317,509.649,520.272" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="508.7921" y="539.7718">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="568.9282" y="568.8146">n</text></g><!--reverse link WeakReference to KeyedWeakReference--><g id="link_WeakReference_KeyedWeakReference"><path codeLine="8" d="M727.5012,514.6579 C699.6992,536.4899 672.321,557.988 644.476,579.8541 " fill="none" id="WeakReference-backto-KeyedWeakReference" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="741.658,503.541,723.7956,509.9389,731.2068,519.3768,741.658,503.541" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link InstallableWatcher to ActivityWatcher--><g id="link_InstallableWatcher_ActivityWatcher"><path codeLine="11" d="M351.0406,168.9266 C300.1366,186.6766 247.034,205.192 196.097,222.953 " fill="none" id="InstallableWatcher-backto-ActivityWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="368.037,163,349.0651,163.2611,353.0162,174.592,368.037,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link InstallableWatcher to FragmentAndViewModelWatcher--><g id="link_InstallableWatcher_FragmentAndViewModelWatcher"><path codeLine="12" d="M473.7945,174.8609 C493.9515,192.5189 508.131,204.941 528.378,222.678 " fill="none" id="InstallableWatcher-backto-FragmentAndViewModelWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="460.255,163,469.8409,179.3741,477.7482,170.3478,460.255,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link InstallableWatcher to RootViewWatcher--><g id="link_InstallableWatcher_RootViewWatcher"><path codeLine="13" d="M531.8084,167.9451 C593.9314,185.6951 662.173,205.192 724.336,222.953 " fill="none" id="InstallableWatcher-backto-RootViewWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="514.501,163,530.16,173.7143,533.4568,162.176,514.501,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link InstallableWatcher to ServiceWatcher--><g id="link_InstallableWatcher_ServiceWatcher"><path codeLine="14" d="M394.2055,174.8609 C374.0485,192.5189 359.869,204.941 339.622,222.678 " fill="none" id="InstallableWatcher-backto-ServiceWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="407.745,163,390.2518,170.3478,398.1591,179.3741,407.745,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ActivityWatcher to ReachabilityWatcher--><g id="link_ActivityWatcher_ReachabilityWatcher"><path codeLine="16" d="M212.8098,274.6801 C267.8998,292.4301 332.342,313.192 387.468,330.953 " fill="none" id="ActivityWatcher-backto-ReachabilityWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="201.388,271,205.8722,276.6473,212.8098,274.6801,208.3256,269.0328,201.388,271" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link FragmentAndViewModelWatcher to ReachabilityWatcher--><g id="link_FragmentAndViewModelWatcher_ReachabilityWatcher"><path codeLine="17" d="M526.1137,279.8945 C510.1217,297.5525 496.186,312.941 480.121,330.678 " fill="none" id="FragmentAndViewModelWatcher-backto-ReachabilityWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="534.169,271,527.1765,272.7621,526.1137,279.8945,533.1062,278.1323,534.169,271" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RootViewWatcher to ReachabilityWatcher--><g id="link_RootViewWatcher_ReachabilityWatcher"><path codeLine="18" d="M718.4494,274.5152 C660.5134,292.2652 592.203,313.192 534.228,330.953 " fill="none" id="RootViewWatcher-backto-ReachabilityWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="729.923,271,723.0145,268.9331,718.4494,274.5152,725.3579,276.5821,729.923,271" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ServiceWatcher to ReachabilityWatcher--><g id="link_ServiceWatcher_ReachabilityWatcher"><path codeLine="19" d="M354.3905,278.0502 C378.7955,295.7692 402.678,313.108 427.13,330.862 " fill="none" id="ServiceWatcher-backto-ReachabilityWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="344.68,271,347.1852,277.762,354.3905,278.0502,351.8853,271.2883,344.68,271" style="stroke:#181818;stroke-width:1.0;"/></g><!--link ActivityWatcher to ActivityLifecycleCallbacks--><g id="link_ActivityWatcher_ActivityLifecycleCallbacks"><path codeLine="22" d="M130,271 C130,288.658 130,306.941 130,324.678 " fill="none" id="ActivityWatcher-to-ActivityLifecycleCallbacks" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="130,330.678,134,321.678,130,325.678,126,321.678,130,330.678" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link AppWatcher to InstallableWatcher--><g id="link_AppWatcher_InstallableWatcher"><path codeLine="24" d="M434,67 C434,84.658 434,96.941 434,114.678 " fill="none" id="AppWatcher-backto-InstallableWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="434,55,430,61,434,67,438,61,434,55" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="424.975" y="75.1558">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="425.025" y="104.0045">n</text></g><!--link AppWatcher to ActivityWatcher--><g id="link_AppWatcher_ActivityWatcher"><path codeLine="25" d="M398.742,55.07 C373.789,71.525 339.631,94.313 310,115 C257.077,151.949 201.4206,192.8625 165.7676,219.3305 " fill="none" id="AppWatcher-to-ActivityWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="160.95,222.907,170.5607,220.754,164.9646,219.9266,165.792,214.3306,160.95,222.907" style="stroke:#181818;stroke-width:1.0;"/></g><!--link AppWatcher to FragmentAndViewModelWatcher--><g id="link_AppWatcher_FragmentAndViewModelWatcher"><path codeLine="26" d="M473.769,55.028 C495.078,69.491 519.8,90.112 534,115 C553.291,148.81 556.3093,189.0712 556.1013,216.6092 " fill="none" id="AppWatcher-to-FragmentAndViewModelWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="556.056,222.609,560.1239,213.6395,556.0938,217.6091,552.1241,213.579,556.056,222.609" style="stroke:#181818;stroke-width:1.0;"/></g><!--link AppWatcher to RootViewWatcher--><g id="link_AppWatcher_RootViewWatcher"><path codeLine="27" d="M474.056,55.105 C545.443,96.283 688.6477,178.886 759.9137,219.994 " fill="none" id="AppWatcher-to-RootViewWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="765.111,222.992,759.3136,215.0302,760.7799,220.4937,755.3164,221.96,765.111,222.992" style="stroke:#181818;stroke-width:1.0;"/></g><!--link AppWatcher to ServiceWatcher--><g id="link_AppWatcher_ServiceWatcher"><path codeLine="28" d="M394.231,55.028 C372.922,69.491 348.2,90.112 334,115 C314.709,148.81 311.6907,189.0712 311.8987,216.6092 " fill="none" id="AppWatcher-to-ServiceWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="311.944,222.609,315.8759,213.579,311.9062,217.6091,307.8761,213.6395,311.944,222.609" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[ZPBHQuCm4CRVyrS47ySSx7M888F1sCgOXVNvFCysQnPTJ5jas_y-goWcZMrzoztlak- -Jw4CwGAGU4g06yY45APPWS4DQUQfyUWt3FbRzabe1WmbrBLTup-Cjz-XE-Lzg-OFV05Lj3HQgFKjVw66yXN1DgM2D2cak1lwtj6EMdOilnyBKQAQcFqn-vdWFk0thQ101Pxxc7NgfNie9aONdbLjG4h890tRdPRwYn8qOZynQuvxqh3-8cKIbNy8EYpAdEIbcRGipH6-n2r9xmMEKfcZgRF65-mPJRCpZgPPpjOqYqrCJwfA2WGZIdKtRF0g2i869JssUsU0s_fakJ2ChnrbBUVxPJnnJyZk0ITbftqkN0TrCtNQjct_]--></g></svg>

<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>引入LeakCanary时，只需要引入maven库的坐标即可，如下：</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">  <span class="comment">// debugImplementation because LeakCanary should only run in debug builds.</span></span><br><span class="line">  debugImplementation <span class="string">&#x27;com.squareup.leakcanary:leakcanary-android:2.12&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>而不需要进行任何的代码改动就可以使用LeakCanary了。另外，引入leakcanary时使用的是debugImplementation表示只在debug版本中才会集成leakcanary，release版本不会集成。</p>
<p>那么，leakcanary如何完成初始化呢？</p>
<p>leakcanary使用了<code>ContentProvider</code>来进行初始化，当app启动时系统会自动初始化注册的ContentProvider。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">provider</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:name</span>=<span class="string">&quot;leakcanary.internal.MainProcessAppWatcherInstaller&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:authorities</span>=<span class="string">&quot;$&#123;applicationId&#125;.leakcanary-installer&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:enabled</span>=<span class="string">&quot;@bool/leak_canary_watcher_auto_install&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">internal</span> <span class="keyword">class</span> <span class="title class_">MainProcessAppWatcherInstaller</span> : <span class="type">ContentProvider</span>() &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">()</span></span>: <span class="built_in">Boolean</span> &#123;</span><br><span class="line">    <span class="keyword">val</span> application = context!!.applicationContext <span class="keyword">as</span> Application</span><br><span class="line">    AppWatcher.manualInstall(application)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  ......</span><br></pre></td></tr></table></figure>

<p>系统初始化ContentProvider的时机在Application之前，即<code>ContentProvider#onCreate</code>先于<code>Application#onCreate</code>来执行，但此时Application的实例已经存在了。</p>
<h3 id="注册内存泄漏监视器"><a href="#注册内存泄漏监视器" class="headerlink" title="注册内存泄漏监视器"></a>注册内存泄漏监视器</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">manualInstall</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  application: <span class="type">Application</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">  retainedDelayMillis: <span class="type">Long</span> = TimeUnit.SECONDS.toMillis(<span class="number">5</span>)</span></span>,</span><br><span class="line">  watchersToInstall: List&lt;InstallableWatcher&gt; = appDefaultWatchers(application)</span><br><span class="line">) &#123;</span><br><span class="line">  checkMainThread()</span><br><span class="line">  <span class="keyword">if</span> (isInstalled) &#123;</span><br><span class="line">    <span class="keyword">throw</span> IllegalStateException(</span><br><span class="line">      <span class="string">&quot;AppWatcher already installed, see exception cause for prior install call&quot;</span>, installCause</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">  check(retainedDelayMillis &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="string">&quot;retainedDelayMillis <span class="variable">$retainedDelayMillis</span> must be at least 0 ms&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">this</span>.retainedDelayMillis = retainedDelayMillis</span><br><span class="line">  <span class="keyword">if</span> (application.isDebuggableBuild) &#123;</span><br><span class="line">    LogcatSharkLog.install()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// Requires AppWatcher.objectWatcher to be set</span></span><br><span class="line">  LeakCanaryDelegate.loadLeakCanary(application)</span><br><span class="line"></span><br><span class="line">  watchersToInstall.forEach &#123;</span><br><span class="line">    it.install()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// Only install after we&#x27;re fully done with init.</span></span><br><span class="line">  installCause = RuntimeException(<span class="string">&quot;manualInstall() first called here&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">appDefaultWatchers</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  application: <span class="type">Application</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">  reachabilityWatcher: <span class="type">ReachabilityWatcher</span> = objectWatcher</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>: List&lt;InstallableWatcher&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> listOf(</span><br><span class="line">    ActivityWatcher(application, reachabilityWatcher), <span class="comment">//Activity内存泄漏监视器</span></span><br><span class="line">    FragmentAndViewModelWatcher(application, reachabilityWatcher), <span class="comment">//Fragment和ViewModel内存泄漏监视器</span></span><br><span class="line">    RootViewWatcher(reachabilityWatcher), <span class="comment">//RootView内存泄漏监视器</span></span><br><span class="line">    ServiceWatcher(reachabilityWatcher) <span class="comment">//服务内存泄漏监视器</span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Activity泄漏监视"><a href="#Activity泄漏监视" class="headerlink" title="Activity泄漏监视"></a>Activity泄漏监视</h2><p>Activity的内存泄漏通过ActivityWatcher来监控。下图是Activity泄漏监控相关类图结构：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="682px" preserveAspectRatio="none" style="width:900px;height:682px;background:#FFFFFF;" version="1.1" viewBox="0 0 900 682" width="900px" zoomAndPan="magnify"><defs/><g><!--class ReachabilityWatcher--><g id="elem_ReachabilityWatcher"><rect codeLine="1" fill="#F1F1F1" height="48" id="ReachabilityWatcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="180" x="191.5" y="7"/><ellipse cx="206.5" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M207.4531,19.7813 L209.1719,19.7813 C209.5625,19.7813 209.75,19.75 209.875,19.6719 C210.1406,19.5156 210.2813,19.2344 210.2813,18.9375 C210.2813,18.6719 210.1719,18.4063 209.9375,18.2344 C209.7656,18.125 209.625,18.0938 209.1719,18.0938 L204.0313,18.0938 C203.5938,18.0938 203.4688,18.1094 203.3125,18.2031 C203.0625,18.3594 202.9063,18.6563 202.9063,18.9375 C202.9063,19.2188 203.0469,19.4688 203.2656,19.6406 C203.4219,19.75 203.6094,19.7813 204.0313,19.7813 L205.75,19.7813 L205.75,26.2969 L204.0313,26.2969 C203.5938,26.2969 203.4688,26.3125 203.3125,26.4219 C203.0625,26.5781 202.9063,26.8594 202.9063,27.1563 C202.9063,27.4063 203.0469,27.6719 203.2656,27.8281 C203.4219,27.9531 203.625,28 204.0313,28 L209.1719,28 C209.9219,28 210.2813,27.7188 210.2813,27.1563 C210.2813,26.875 210.1719,26.625 209.9375,26.4531 C209.7656,26.3281 209.625,26.2969 209.1719,26.2969 L207.4531,26.2969 L207.4531,19.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="148" x="220.5" y="27.8467">ReachabilityWatcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="192.5" x2="370.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="192.5" x2="370.5" y1="47" y2="47"/></g><!--class ActivityWatcher--><g id="elem_ActivityWatcher"><rect fill="#F1F1F1" height="48" id="ActivityWatcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="149" x="7" y="7"/><ellipse cx="22" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,18.6719 C23.4063,18.2344 22.8125,18.0938 21.9375,18.0938 C19.3125,18.0938 17.3125,20.1719 17.3125,22.8906 L17.3125,24.0156 C17.3125,26.5938 19.4219,28.4844 22.3125,28.4844 C23.5313,28.4844 24.6875,28.1875 25.4375,27.6406 C26.0156,27.2344 26.3438,26.7813 26.3438,26.3906 C26.3438,25.9375 25.9531,25.5469 25.4844,25.5469 C25.2656,25.5469 25.0625,25.625 24.875,25.8125 C24.4219,26.2969 24.4219,26.2969 24.2344,26.3906 C23.8125,26.6563 23.125,26.7813 22.3594,26.7813 C20.3125,26.7813 19.0156,25.6875 19.0156,23.9844 L19.0156,22.8906 C19.0156,21.1094 20.2656,19.7969 22,19.7969 C22.5781,19.7969 23.1875,19.9531 23.6563,20.2031 C24.1406,20.4844 24.3125,20.7031 24.4063,21.1094 C24.4688,21.5156 24.5,21.6406 24.6406,21.7656 C24.7813,21.9063 25.0156,22.0156 25.2344,22.0156 C25.5,22.0156 25.7656,21.875 25.9375,21.6563 C26.0469,21.5 26.0781,21.3125 26.0781,20.8906 L26.0781,19.4688 C26.0781,19.0313 26.0625,18.9063 25.9688,18.75 C25.8125,18.4844 25.5313,18.3438 25.2344,18.3438 C24.9375,18.3438 24.7344,18.4375 24.5156,18.75 L24.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="36" y="27.8467">ActivityWatcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="155" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="155" y1="47" y2="47"/></g><!--class ObjectWatcher--><g id="elem_ObjectWatcher"><rect fill="#F1F1F1" height="48" id="ObjectWatcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="142" x="210.5" y="123"/><ellipse cx="225.5" cy="139" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M227.8438,134.6719 C226.9063,134.2344 226.3125,134.0938 225.4375,134.0938 C222.8125,134.0938 220.8125,136.1719 220.8125,138.8906 L220.8125,140.0156 C220.8125,142.5938 222.9219,144.4844 225.8125,144.4844 C227.0313,144.4844 228.1875,144.1875 228.9375,143.6406 C229.5156,143.2344 229.8438,142.7813 229.8438,142.3906 C229.8438,141.9375 229.4531,141.5469 228.9844,141.5469 C228.7656,141.5469 228.5625,141.625 228.375,141.8125 C227.9219,142.2969 227.9219,142.2969 227.7344,142.3906 C227.3125,142.6563 226.625,142.7813 225.8594,142.7813 C223.8125,142.7813 222.5156,141.6875 222.5156,139.9844 L222.5156,138.8906 C222.5156,137.1094 223.7656,135.7969 225.5,135.7969 C226.0781,135.7969 226.6875,135.9531 227.1563,136.2031 C227.6406,136.4844 227.8125,136.7031 227.9063,137.1094 C227.9688,137.5156 228,137.6406 228.1406,137.7656 C228.2813,137.9063 228.5156,138.0156 228.7344,138.0156 C229,138.0156 229.2656,137.875 229.4375,137.6563 C229.5469,137.5 229.5781,137.3125 229.5781,136.8906 L229.5781,135.4688 C229.5781,135.0313 229.5625,134.9063 229.4688,134.75 C229.3125,134.4844 229.0313,134.3438 228.7344,134.3438 C228.4375,134.3438 228.2344,134.4375 228.0156,134.75 L227.8438,134.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="239.5" y="143.8467">ObjectWatcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="211.5" x2="351.5" y1="155" y2="155"/><line style="stroke:#181818;stroke-width:0.5;" x1="211.5" x2="351.5" y1="163" y2="163"/></g><!--class KeyedWeakReference--><g id="elem_KeyedWeakReference"><rect fill="#F1F1F1" height="48" id="KeyedWeakReference" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="192" x="180.5" y="255"/><ellipse cx="195.5" cy="271" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M197.8438,266.6719 C196.9063,266.2344 196.3125,266.0938 195.4375,266.0938 C192.8125,266.0938 190.8125,268.1719 190.8125,270.8906 L190.8125,272.0156 C190.8125,274.5938 192.9219,276.4844 195.8125,276.4844 C197.0313,276.4844 198.1875,276.1875 198.9375,275.6406 C199.5156,275.2344 199.8438,274.7813 199.8438,274.3906 C199.8438,273.9375 199.4531,273.5469 198.9844,273.5469 C198.7656,273.5469 198.5625,273.625 198.375,273.8125 C197.9219,274.2969 197.9219,274.2969 197.7344,274.3906 C197.3125,274.6563 196.625,274.7813 195.8594,274.7813 C193.8125,274.7813 192.5156,273.6875 192.5156,271.9844 L192.5156,270.8906 C192.5156,269.1094 193.7656,267.7969 195.5,267.7969 C196.0781,267.7969 196.6875,267.9531 197.1563,268.2031 C197.6406,268.4844 197.8125,268.7031 197.9063,269.1094 C197.9688,269.5156 198,269.6406 198.1406,269.7656 C198.2813,269.9063 198.5156,270.0156 198.7344,270.0156 C199,270.0156 199.2656,269.875 199.4375,269.6563 C199.5469,269.5 199.5781,269.3125 199.5781,268.8906 L199.5781,267.4688 C199.5781,267.0313 199.5625,266.9063 199.4688,266.75 C199.3125,266.4844 199.0313,266.3438 198.7344,266.3438 C198.4375,266.3438 198.2344,266.4375 198.0156,266.75 L197.8438,266.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="209.5" y="275.8467">KeyedWeakReference</text><line style="stroke:#181818;stroke-width:0.5;" x1="181.5" x2="371.5" y1="287" y2="287"/><line style="stroke:#181818;stroke-width:0.5;" x1="181.5" x2="371.5" y1="295" y2="295"/></g><!--class OnObjectRetainedListener--><g id="elem_OnObjectRetainedListener"><rect codeLine="5" fill="#F1F1F1" height="64.2969" id="OnObjectRetainedListener" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="219" x="390" y="115"/><ellipse cx="405" cy="131" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M405.9531,127.7813 L407.6719,127.7813 C408.0625,127.7813 408.25,127.75 408.375,127.6719 C408.6406,127.5156 408.7813,127.2344 408.7813,126.9375 C408.7813,126.6719 408.6719,126.4063 408.4375,126.2344 C408.2656,126.125 408.125,126.0938 407.6719,126.0938 L402.5313,126.0938 C402.0938,126.0938 401.9688,126.1094 401.8125,126.2031 C401.5625,126.3594 401.4063,126.6563 401.4063,126.9375 C401.4063,127.2188 401.5469,127.4688 401.7656,127.6406 C401.9219,127.75 402.1094,127.7813 402.5313,127.7813 L404.25,127.7813 L404.25,134.2969 L402.5313,134.2969 C402.0938,134.2969 401.9688,134.3125 401.8125,134.4219 C401.5625,134.5781 401.4063,134.8594 401.4063,135.1563 C401.4063,135.4063 401.5469,135.6719 401.7656,135.8281 C401.9219,135.9531 402.125,136 402.5313,136 L407.6719,136 C408.4219,136 408.7813,135.7188 408.7813,135.1563 C408.7813,134.875 408.6719,134.625 408.4375,134.4531 C408.2656,134.3281 408.125,134.2969 407.6719,134.2969 L405.9531,134.2969 L405.9531,127.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="187" x="419" y="135.8467">OnObjectRetainedListener</text><line style="stroke:#181818;stroke-width:0.5;" x1="391" x2="608" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="391" x2="608" y1="155" y2="155"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="396" y="171.9951">onObjectRetained()</text></g><!--class InternalLeakCanary--><g id="elem_InternalLeakCanary"><rect codeLine="9" fill="#F1F1F1" height="72.5625" id="InternalLeakCanary" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="174" x="415.5" y="243"/><ellipse cx="431.85" cy="263.1328" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M435.6313,259.1016 C435.6313,258.6641 435.6156,258.5234 435.5219,258.3672 C435.3813,258.1328 435.1,257.9766 434.8031,257.9766 C434.4594,257.9766 434.3188,258.1172 434.1469,258.5391 C433.5531,258.1641 432.8031,257.9766 431.9281,257.9766 C429.8188,257.9766 428.2406,259.2734 428.2406,260.9922 C428.2406,261.9609 428.7719,262.8672 429.6313,263.3516 C430.1781,263.6641 430.725,263.8359 431.8344,264.0234 C432.9906,264.2266 433.2563,264.2891 433.6156,264.4766 C433.9906,264.6797 434.225,265.0234 434.225,265.3828 C434.225,266.1172 433.2406,266.6641 431.9906,266.6641 C430.8656,266.6641 429.7875,266.1797 429.6156,265.5703 C429.4906,265.1016 429.4906,265.1016 429.3656,264.9922 C429.2094,264.8359 428.9906,264.7422 428.7563,264.7422 C428.475,264.7422 428.225,264.8672 428.0531,265.0859 C427.9438,265.2578 427.8969,265.4453 427.8969,265.8672 L427.8969,266.9922 C427.8969,267.7578 428.1781,268.1172 428.7719,268.1172 C429.0375,268.1172 429.1625,268.0547 429.4438,267.7109 C430.2875,268.1484 431.1781,268.3672 432.1,268.3672 C434.4281,268.3672 435.9906,267.1797 435.9906,265.4141 C435.9906,264.5234 435.6781,263.8359 434.9906,263.2891 C434.4594,262.8672 433.8188,262.6172 432.3344,262.3516 C431.0688,262.1172 430.975,262.0859 430.6469,261.9141 C430.2719,261.7266 430.0063,261.3359 430.0063,260.9766 C430.0063,260.2422 430.8656,259.6797 431.9281,259.6797 C432.9906,259.6797 433.8031,260.1484 433.9594,260.8203 C434.0688,261.3672 434.0688,261.3672 434.1938,261.5078 C434.3344,261.6328 434.5688,261.7422 434.8031,261.7422 C435.0688,261.7422 435.3188,261.6016 435.4906,261.3828 C435.6,261.2109 435.6313,261.0703 435.6313,260.6016 L435.6313,259.1016 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="71" x="480.15" y="259.1387">&#171;Singleton&#187;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="446.15" y="274.9639">InternalLeakCanary</text><line style="stroke:#181818;stroke-width:0.5;" x1="416.5" x2="588.5" y1="283.2656" y2="283.2656"/><line style="stroke:#181818;stroke-width:0.5;" x1="416.5" x2="588.5" y1="291.2656" y2="291.2656"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="421.5" y="308.2607">void sendEvent(Event)</text></g><!--class HeapDumpTrigger--><g id="elem_HeapDumpTrigger"><rect fill="#F1F1F1" height="48" id="HeapDumpTrigger" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="164" x="329.5" y="387"/><ellipse cx="344.5" cy="403" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M346.8438,398.6719 C345.9063,398.2344 345.3125,398.0938 344.4375,398.0938 C341.8125,398.0938 339.8125,400.1719 339.8125,402.8906 L339.8125,404.0156 C339.8125,406.5938 341.9219,408.4844 344.8125,408.4844 C346.0313,408.4844 347.1875,408.1875 347.9375,407.6406 C348.5156,407.2344 348.8438,406.7813 348.8438,406.3906 C348.8438,405.9375 348.4531,405.5469 347.9844,405.5469 C347.7656,405.5469 347.5625,405.625 347.375,405.8125 C346.9219,406.2969 346.9219,406.2969 346.7344,406.3906 C346.3125,406.6563 345.625,406.7813 344.8594,406.7813 C342.8125,406.7813 341.5156,405.6875 341.5156,403.9844 L341.5156,402.8906 C341.5156,401.1094 342.7656,399.7969 344.5,399.7969 C345.0781,399.7969 345.6875,399.9531 346.1563,400.2031 C346.6406,400.4844 346.8125,400.7031 346.9063,401.1094 C346.9688,401.5156 347,401.6406 347.1406,401.7656 C347.2813,401.9063 347.5156,402.0156 347.7344,402.0156 C348,402.0156 348.2656,401.875 348.4375,401.6563 C348.5469,401.5 348.5781,401.3125 348.5781,400.8906 L348.5781,399.4688 C348.5781,399.0313 348.5625,398.9063 348.4688,398.75 C348.3125,398.4844 348.0313,398.3438 347.7344,398.3438 C347.4375,398.3438 347.2344,398.4375 347.0156,398.75 L346.8438,398.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="358.5" y="407.8467">HeapDumpTrigger</text><line style="stroke:#181818;stroke-width:0.5;" x1="330.5" x2="492.5" y1="419" y2="419"/><line style="stroke:#181818;stroke-width:0.5;" x1="330.5" x2="492.5" y1="427" y2="427"/></g><!--class EventListener--><g id="elem_EventListener"><rect codeLine="14" fill="#F1F1F1" height="64.2969" id="EventListener" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="129" x="529" y="379"/><ellipse cx="544" cy="395" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M544.9531,391.7813 L546.6719,391.7813 C547.0625,391.7813 547.25,391.75 547.375,391.6719 C547.6406,391.5156 547.7813,391.2344 547.7813,390.9375 C547.7813,390.6719 547.6719,390.4063 547.4375,390.2344 C547.2656,390.125 547.125,390.0938 546.6719,390.0938 L541.5313,390.0938 C541.0938,390.0938 540.9688,390.1094 540.8125,390.2031 C540.5625,390.3594 540.4063,390.6563 540.4063,390.9375 C540.4063,391.2188 540.5469,391.4688 540.7656,391.6406 C540.9219,391.75 541.1094,391.7813 541.5313,391.7813 L543.25,391.7813 L543.25,398.2969 L541.5313,398.2969 C541.0938,398.2969 540.9688,398.3125 540.8125,398.4219 C540.5625,398.5781 540.4063,398.8594 540.4063,399.1563 C540.4063,399.4063 540.5469,399.6719 540.7656,399.8281 C540.9219,399.9531 541.125,400 541.5313,400 L546.6719,400 C547.4219,400 547.7813,399.7188 547.7813,399.1563 C547.7813,398.875 547.6719,398.625 547.4375,398.4531 C547.2656,398.3281 547.125,398.2969 546.6719,398.2969 L544.9531,398.2969 L544.9531,391.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="97" x="558" y="399.8467">EventListener</text><line style="stroke:#181818;stroke-width:0.5;" x1="530" x2="657" y1="411" y2="411"/><line style="stroke:#181818;stroke-width:0.5;" x1="530" x2="657" y1="419" y2="419"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="535" y="435.9951">onEvent()</text></g><!--class BackgroundThreadHeapAnalyzer--><g id="elem_BackgroundThreadHeapAnalyzer"><rect codeLine="17" fill="#F1F1F1" height="56.2656" id="BackgroundThreadHeapAnalyzer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="266" x="201.5" y="503"/><ellipse cx="216.5" cy="523.1328" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M220.2813,519.1016 C220.2813,518.6641 220.2656,518.5234 220.1719,518.3672 C220.0313,518.1328 219.75,517.9766 219.4531,517.9766 C219.1094,517.9766 218.9688,518.1172 218.7969,518.5391 C218.2031,518.1641 217.4531,517.9766 216.5781,517.9766 C214.4688,517.9766 212.8906,519.2734 212.8906,520.9922 C212.8906,521.9609 213.4219,522.8672 214.2813,523.3516 C214.8281,523.6641 215.375,523.8359 216.4844,524.0234 C217.6406,524.2266 217.9063,524.2891 218.2656,524.4766 C218.6406,524.6797 218.875,525.0234 218.875,525.3828 C218.875,526.1172 217.8906,526.6641 216.6406,526.6641 C215.5156,526.6641 214.4375,526.1797 214.2656,525.5703 C214.1406,525.1016 214.1406,525.1016 214.0156,524.9922 C213.8594,524.8359 213.6406,524.7422 213.4063,524.7422 C213.125,524.7422 212.875,524.8672 212.7031,525.0859 C212.5938,525.2578 212.5469,525.4453 212.5469,525.8672 L212.5469,526.9922 C212.5469,527.7578 212.8281,528.1172 213.4219,528.1172 C213.6875,528.1172 213.8125,528.0547 214.0938,527.7109 C214.9375,528.1484 215.8281,528.3672 216.75,528.3672 C219.0781,528.3672 220.6406,527.1797 220.6406,525.4141 C220.6406,524.5234 220.3281,523.8359 219.6406,523.2891 C219.1094,522.8672 218.4688,522.6172 216.9844,522.3516 C215.7188,522.1172 215.625,522.0859 215.2969,521.9141 C214.9219,521.7266 214.6563,521.3359 214.6563,520.9766 C214.6563,520.2422 215.5156,519.6797 216.5781,519.6797 C217.6406,519.6797 218.4531,520.1484 218.6094,520.8203 C218.7188,521.3672 218.7188,521.3672 218.8438,521.5078 C218.9844,521.6328 219.2188,521.7422 219.4531,521.7422 C219.7188,521.7422 219.9688,521.6016 220.1406,521.3828 C220.25,521.2109 220.2813,521.0703 220.2813,520.6016 L220.2813,519.1016 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="71" x="312" y="519.1387">&#171;Singleton&#187;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="230.5" y="534.9639">BackgroundThreadHeapAnalyzer</text><line style="stroke:#181818;stroke-width:0.5;" x1="202.5" x2="466.5" y1="543.2656" y2="543.2656"/><line style="stroke:#181818;stroke-width:0.5;" x1="202.5" x2="466.5" y1="551.2656" y2="551.2656"/></g><!--class LogcatEventListener--><g id="elem_LogcatEventListener"><rect codeLine="18" fill="#F1F1F1" height="56.2656" id="LogcatEventListener" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="182" x="502.5" y="503"/><ellipse cx="517.5" cy="523.1328" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M521.2813,519.1016 C521.2813,518.6641 521.2656,518.5234 521.1719,518.3672 C521.0313,518.1328 520.75,517.9766 520.4531,517.9766 C520.1094,517.9766 519.9688,518.1172 519.7969,518.5391 C519.2031,518.1641 518.4531,517.9766 517.5781,517.9766 C515.4688,517.9766 513.8906,519.2734 513.8906,520.9922 C513.8906,521.9609 514.4219,522.8672 515.2813,523.3516 C515.8281,523.6641 516.375,523.8359 517.4844,524.0234 C518.6406,524.2266 518.9063,524.2891 519.2656,524.4766 C519.6406,524.6797 519.875,525.0234 519.875,525.3828 C519.875,526.1172 518.8906,526.6641 517.6406,526.6641 C516.5156,526.6641 515.4375,526.1797 515.2656,525.5703 C515.1406,525.1016 515.1406,525.1016 515.0156,524.9922 C514.8594,524.8359 514.6406,524.7422 514.4063,524.7422 C514.125,524.7422 513.875,524.8672 513.7031,525.0859 C513.5938,525.2578 513.5469,525.4453 513.5469,525.8672 L513.5469,526.9922 C513.5469,527.7578 513.8281,528.1172 514.4219,528.1172 C514.6875,528.1172 514.8125,528.0547 515.0938,527.7109 C515.9375,528.1484 516.8281,528.3672 517.75,528.3672 C520.0781,528.3672 521.6406,527.1797 521.6406,525.4141 C521.6406,524.5234 521.3281,523.8359 520.6406,523.2891 C520.1094,522.8672 519.4688,522.6172 517.9844,522.3516 C516.7188,522.1172 516.625,522.0859 516.2969,521.9141 C515.9219,521.7266 515.6563,521.3359 515.6563,520.9766 C515.6563,520.2422 516.5156,519.6797 517.5781,519.6797 C518.6406,519.6797 519.4531,520.1484 519.6094,520.8203 C519.7188,521.3672 519.7188,521.3672 519.8438,521.5078 C519.9844,521.6328 520.2188,521.7422 520.4531,521.7422 C520.7188,521.7422 520.9688,521.6016 521.1406,521.3828 C521.25,521.2109 521.2813,521.0703 521.2813,520.6016 L521.2813,519.1016 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="71" x="571" y="519.1387">&#171;Singleton&#187;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="531.5" y="534.9639">LogcatEventListener</text><line style="stroke:#181818;stroke-width:0.5;" x1="503.5" x2="683.5" y1="543.2656" y2="543.2656"/><line style="stroke:#181818;stroke-width:0.5;" x1="503.5" x2="683.5" y1="551.2656" y2="551.2656"/></g><!--class ToastEventListener--><g id="elem_ToastEventListener"><rect codeLine="19" fill="#F1F1F1" height="56.2656" id="ToastEventListener" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="173" x="720" y="503"/><ellipse cx="735" cy="523.1328" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M738.7813,519.1016 C738.7813,518.6641 738.7656,518.5234 738.6719,518.3672 C738.5313,518.1328 738.25,517.9766 737.9531,517.9766 C737.6094,517.9766 737.4688,518.1172 737.2969,518.5391 C736.7031,518.1641 735.9531,517.9766 735.0781,517.9766 C732.9688,517.9766 731.3906,519.2734 731.3906,520.9922 C731.3906,521.9609 731.9219,522.8672 732.7813,523.3516 C733.3281,523.6641 733.875,523.8359 734.9844,524.0234 C736.1406,524.2266 736.4063,524.2891 736.7656,524.4766 C737.1406,524.6797 737.375,525.0234 737.375,525.3828 C737.375,526.1172 736.3906,526.6641 735.1406,526.6641 C734.0156,526.6641 732.9375,526.1797 732.7656,525.5703 C732.6406,525.1016 732.6406,525.1016 732.5156,524.9922 C732.3594,524.8359 732.1406,524.7422 731.9063,524.7422 C731.625,524.7422 731.375,524.8672 731.2031,525.0859 C731.0938,525.2578 731.0469,525.4453 731.0469,525.8672 L731.0469,526.9922 C731.0469,527.7578 731.3281,528.1172 731.9219,528.1172 C732.1875,528.1172 732.3125,528.0547 732.5938,527.7109 C733.4375,528.1484 734.3281,528.3672 735.25,528.3672 C737.5781,528.3672 739.1406,527.1797 739.1406,525.4141 C739.1406,524.5234 738.8281,523.8359 738.1406,523.2891 C737.6094,522.8672 736.9688,522.6172 735.4844,522.3516 C734.2188,522.1172 734.125,522.0859 733.7969,521.9141 C733.4219,521.7266 733.1563,521.3359 733.1563,520.9766 C733.1563,520.2422 734.0156,519.6797 735.0781,519.6797 C736.1406,519.6797 736.9531,520.1484 737.1094,520.8203 C737.2188,521.3672 737.2188,521.3672 737.3438,521.5078 C737.4844,521.6328 737.7188,521.7422 737.9531,521.7422 C738.2188,521.7422 738.4688,521.6016 738.6406,521.3828 C738.75,521.2109 738.7813,521.0703 738.7813,520.6016 L738.7813,519.1016 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="71" x="784" y="519.1387">&#171;Singleton&#187;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="749" y="534.9639">ToastEventListener</text><line style="stroke:#181818;stroke-width:0.5;" x1="721" x2="892" y1="543.2656" y2="543.2656"/><line style="stroke:#181818;stroke-width:0.5;" x1="721" x2="892" y1="551.2656" y2="551.2656"/></g><!--class AndroidDebugHeapAnalyzer--><g id="elem_AndroidDebugHeapAnalyzer"><rect codeLine="25" fill="#F1F1F1" height="56.2656" id="AndroidDebugHeapAnalyzer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="234" x="217.5" y="619"/><ellipse cx="232.5" cy="639.1328" fill="#FF7700" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M236.2813,635.1016 C236.2813,634.6641 236.2656,634.5234 236.1719,634.3672 C236.0313,634.1328 235.75,633.9766 235.4531,633.9766 C235.1094,633.9766 234.9688,634.1172 234.7969,634.5391 C234.2031,634.1641 233.4531,633.9766 232.5781,633.9766 C230.4688,633.9766 228.8906,635.2734 228.8906,636.9922 C228.8906,637.9609 229.4219,638.8672 230.2813,639.3516 C230.8281,639.6641 231.375,639.8359 232.4844,640.0234 C233.6406,640.2266 233.9063,640.2891 234.2656,640.4766 C234.6406,640.6797 234.875,641.0234 234.875,641.3828 C234.875,642.1172 233.8906,642.6641 232.6406,642.6641 C231.5156,642.6641 230.4375,642.1797 230.2656,641.5703 C230.1406,641.1016 230.1406,641.1016 230.0156,640.9922 C229.8594,640.8359 229.6406,640.7422 229.4063,640.7422 C229.125,640.7422 228.875,640.8672 228.7031,641.0859 C228.5938,641.2578 228.5469,641.4453 228.5469,641.8672 L228.5469,642.9922 C228.5469,643.7578 228.8281,644.1172 229.4219,644.1172 C229.6875,644.1172 229.8125,644.0547 230.0938,643.7109 C230.9375,644.1484 231.8281,644.3672 232.75,644.3672 C235.0781,644.3672 236.6406,643.1797 236.6406,641.4141 C236.6406,640.5234 236.3281,639.8359 235.6406,639.2891 C235.1094,638.8672 234.4688,638.6172 232.9844,638.3516 C231.7188,638.1172 231.625,638.0859 231.2969,637.9141 C230.9219,637.7266 230.6563,637.3359 230.6563,636.9766 C230.6563,636.2422 231.5156,635.6797 232.5781,635.6797 C233.6406,635.6797 234.4531,636.1484 234.6094,636.8203 C234.7188,637.3672 234.7188,637.3672 234.8438,637.5078 C234.9844,637.6328 235.2188,637.7422 235.4531,637.7422 C235.7188,637.7422 235.9688,637.6016 236.1406,637.3828 C236.25,637.2109 236.2813,637.0703 236.2813,636.6016 L236.2813,635.1016 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="71" x="312" y="635.1387">&#171;Singleton&#187;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="246.5" y="650.9639">AndroidDebugHeapAnalyzer</text><line style="stroke:#181818;stroke-width:0.5;" x1="218.5" x2="450.5" y1="659.2656" y2="659.2656"/><line style="stroke:#181818;stroke-width:0.5;" x1="218.5" x2="450.5" y1="667.2656" y2="667.2656"/></g><!--reverse link ActivityWatcher to ReachabilityWatcher--><g id="link_ActivityWatcher_ReachabilityWatcher"><path codeLine="2" d="M168.109,31 C179.865,31 179.62,31 191.375,31 " fill="none" id="ActivityWatcher-backto-ReachabilityWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="156.109,31,162.109,35,168.109,31,162.109,27,156.109,31" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ReachabilityWatcher to ObjectWatcher--><g id="link_ReachabilityWatcher_ObjectWatcher"><path codeLine="3" d="M281.5,73.07 C281.5,92.848 281.5,103.196 281.5,122.965 " fill="none" id="ReachabilityWatcher-backto-ObjectWatcher" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="281.5,55.07,275.5,73.07,287.5,73.07,281.5,55.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ObjectWatcher to KeyedWeakReference--><g id="link_ObjectWatcher_KeyedWeakReference"><path codeLine="4" d="M280.1449,183.2321 C279.2349,206.8951 278.293,231.37 277.386,254.96 " fill="none" id="ObjectWatcher-backto-KeyedWeakReference" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="280.606,171.241,276.3784,177.0829,280.1449,183.2321,284.3725,177.3903,280.606,171.241" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="271.4131" y="191.0609">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="268.588" y="243.9618">n</text></g><!--reverse link ObjectWatcher to OnObjectRetainedListener--><g id="link_ObjectWatcher_OnObjectRetainedListener"><path codeLine="8" d="M364.605,147 C377.038,147 377.47,147 389.903,147 " fill="none" id="ObjectWatcher-backto-OnObjectRetainedListener" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="352.605,147,358.605,151,364.605,147,358.605,143,352.605,147" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="360.3502" y="143.3003">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="373.9157" y="143.5338">n</text></g><!--reverse link OnObjectRetainedListener to InternalLeakCanary--><g id="link_OnObjectRetainedListener_InternalLeakCanary"><path codeLine="12" d="M500.6337,197.1332 C501.0457,215.0112 501.153,219.635 501.594,238.724 " fill="none" id="OnObjectRetainedListener-backto-InternalLeakCanary" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="500.219,179.138,494.6353,197.2715,506.6321,196.995,500.219,179.138" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link InternalLeakCanary to HeapDumpTrigger--><g id="link_InternalLeakCanary_HeapDumpTrigger"><path codeLine="13" d="M468.3156,328.8349 C452.8196,350.9729 440.833,368.096 427.671,386.899 " fill="none" id="InternalLeakCanary-backto-HeapDumpTrigger" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="475.197,319.004,468.4793,321.6257,468.3156,328.8349,475.0333,326.2132,475.197,319.004" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link EventListener to LogcatEventListener--><g id="link_EventListener_LogcatEventListener"><path codeLine="20" d="M593.5,461.003 C593.5,479.576 593.5,484.968 593.5,502.817 " fill="none" id="EventListener-backto-LogcatEventListener" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="593.5,443.003,587.5,461.003,599.5,461.003,593.5,443.003" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link EventListener to ToastEventListener--><g id="link_EventListener_ToastEventListener"><path codeLine="21" d="M665.2083,451.7257 C698.7343,470.2987 725.214,484.968 757.433,502.817 " fill="none" id="EventListener-backto-ToastEventListener" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="649.463,443.003,662.3007,456.9741,668.1159,446.4773,649.463,443.003" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link EventListener to BackgroundThreadHeapAnalyzer--><g id="link_EventListener_BackgroundThreadHeapAnalyzer"><path codeLine="23" d="M512.431,448.935 C471.078,467.776 434.224,484.566 393.935,502.921 " fill="none" id="EventListener-backto-BackgroundThreadHeapAnalyzer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="528.811,441.472,509.9434,443.475,514.9187,454.395,528.811,441.472" style="stroke:#181818;stroke-width:1.0;"/></g><!--link InternalLeakCanary to EventListener--><g id="link_InternalLeakCanary_EventListener"><path codeLine="24" d="M590.5,303 C621.07,303 615.2788,341.423 606.0268,373.006 " fill="none" id="InternalLeakCanary-to-EventListener" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="604.34,378.764,610.7088,371.2515,605.7456,373.9656,603.0315,369.0025,604.34,378.764" style="stroke:#181818;stroke-width:1.0;"/></g><!--link BackgroundThreadHeapAnalyzer to AndroidDebugHeapAnalyzer--><g id="link_BackgroundThreadHeapAnalyzer_AndroidDebugHeapAnalyzer"><path codeLine="26" d="M334.5,559.016 C334.5,577.0572 334.5,594.7002 334.5,612.7824 " fill="none" id="BackgroundThreadHeapAnalyzer-to-AndroidDebugHeapAnalyzer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="334.5,618.7824,338.5,609.7824,334.5,613.7824,330.5,609.7824,334.5,618.7824" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[bP91Jm8n48Nl_HMJzI0Qb-29X10I58b64X8WuJoqmr9PMz8jc4NzxxOBGe0kQ0zDkZlpljStbSgIcI8d613o6KvaAcq-HijdP5YRMxdQd-4s3fO5la7pgrg5_kIDkFqjEpX1T1yvlHWY5S4hvIJ6XFC1JScGuiJapbXVRHe7P54g4ZsPML9EuPE1M_heT-M6VGTH1QbCZF4KimnUF5LXsdDU7b6XoQ7PXChmxghRhTThjHiOIfMaPBM2LclhOAMbW8oKU5gHifLYBqoK6I-oEKMn0Dqdz4ouw2pV5oCZayHPtKTJe4xosDZm3ZQNUa0-JunUAZ6Q6KBXzTeEaw-zb_BhRTjxEk5e3r6NkqOQityq7LNwW0BSKDafY5r3I0xNULUR3pJ2WI_AdWijCAX6O_S088vRXmQsaRILCEwfT6YoJFuyWxF3ywGorHy0]--></g></svg>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ActivityWatcher</span>(</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> application: Application,</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> reachabilityWatcher: ReachabilityWatcher <span class="comment">//ObjectWatcher实例</span></span><br><span class="line">) : InstallableWatcher &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> lifecycleCallbacks = <span class="comment">//activity生命周期监听事件回调</span></span><br><span class="line">    <span class="keyword">object</span> : Application.ActivityLifecycleCallbacks <span class="keyword">by</span> noOpDelegate() &#123;</span><br><span class="line">      <span class="comment">//当Activity被销毁时会收到onActivityDestroyed事件通知，其中activity参数就是被销毁的activity实例</span></span><br><span class="line">      <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onActivityDestroyed</span><span class="params">(activity: <span class="type">Activity</span>)</span></span> &#123;</span><br><span class="line">        reachabilityWatcher.expectWeaklyReachable(</span><br><span class="line">          activity, <span class="string">&quot;<span class="subst">$&#123;activity::class.java.name&#125;</span> received Activity#onDestroy() callback&quot;</span></span><br><span class="line">        )</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//初始化时调用，注册Activity生命周期回调监听</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">install</span><span class="params">()</span></span> &#123;</span><br><span class="line">    application.registerActivityLifecycleCallbacks(lifecycleCallbacks)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">uninstall</span><span class="params">()</span></span> &#123;</span><br><span class="line">    application.unregisterActivityLifecycleCallbacks(lifecycleCallbacks)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ActivityWatcher的作用是注册Activity生命周期监听，在onActivityDestroyed时将activity实例通过<code>ObjectWatcher#expectWeaklyReachable</code>注册到监控表中。下面看下<code>ObjectWatcher#expectWeaklyReachable</code>的实现：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">val</span> watchedObjects = mutableMapOf&lt;String, KeyedWeakReference&gt;()</span><br><span class="line"></span><br><span class="line"><span class="meta">@Synchronized</span> <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">expectWeaklyReachable</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  watchedObject: <span class="type">Any</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">  description: <span class="type">String</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!isEnabled()) &#123;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  removeWeaklyReachableObjects()</span><br><span class="line">  <span class="keyword">val</span> key = UUID.randomUUID().toString()</span><br><span class="line">  <span class="keyword">val</span> watchUptimeMillis = clock.uptimeMillis()</span><br><span class="line">  <span class="comment">//KeyedWeakReference是弱引用，是WeakReference的子类</span></span><br><span class="line">  <span class="keyword">val</span> reference = KeyedWeakReference(watchedObject, key, description, watchUptimeMillis, queue)</span><br><span class="line">  ......</span><br><span class="line">  watchedObjects[key] = reference  <span class="comment">//存入监控表中</span></span><br><span class="line">  checkRetainedExecutor.execute &#123;</span><br><span class="line">    moveToRetained(key) <span class="comment">//弱引用标记为retained状态（既没有被回收）</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过一个弱引用KeyedWeakReference来持有activity，然后注册到监控表中。KeyedWeakReference构造函数指定了<code>ReferenceQueue</code>，因此当实例被回收后，弱引用就会被添加到<code>ReferenceQueue</code>中。</p>
<p>最后通过checkRetainedExecutor来执行一个Runnable任务，checkRetainedExecutor在ObjectWatcher的构造函数中传入，定义如下：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> objectWatcher = ObjectWatcher(</span><br><span class="line">  clock = &#123; SystemClock.uptimeMillis() &#125;,</span><br><span class="line">  checkRetainedExecutor = &#123;</span><br><span class="line">    check(isInstalled) &#123;</span><br><span class="line">      <span class="string">&quot;AppWatcher not installed&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//在主线程执行一个延时任务，retainedDelayMillis默认值是5秒</span></span><br><span class="line">    mainHandler.postDelayed(it, retainedDelayMillis)</span><br><span class="line">  &#125;,</span><br><span class="line">  isEnabled = &#123; <span class="literal">true</span> &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>总结一下上面的代码流程：当activity被销毁后，会创建一个弱引用KeyedWeakReference来持有这个activity实例，KeyedWeakReference还包含了一个uuid和activity的描述信息，而且弱引用关联了ReferenceQueue，在对象实例被回收后，弱引用本身会被添加到ReferenceQueue中。然后启动一个延时5秒（可配置）的任务来检查这个弱引用持有的实例是否被回收。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//引用队列，当弱引用持有的实例被回收后，弱引用本身会被添加到队列中</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">val</span> queue = ReferenceQueue&lt;Any&gt;()</span><br><span class="line"></span><br><span class="line"><span class="meta">@Synchronized</span> <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">moveToRetained</span><span class="params">(key: <span class="type">String</span>)</span></span> &#123;</span><br><span class="line">  removeWeaklyReachableObjects() <span class="comment">//清理已经被GC回收的对象弱引用</span></span><br><span class="line">  <span class="keyword">val</span> retainedRef = watchedObjects[key]</span><br><span class="line">  <span class="keyword">if</span> (retainedRef != <span class="literal">null</span>) &#123; <span class="comment">//不为空表示key对应的监控对象（activity）没有被回收，可能存在内存泄漏</span></span><br><span class="line">    retainedRef.retainedUptimeMillis = clock.uptimeMillis() <span class="comment">//更新retained时间</span></span><br><span class="line">    <span class="comment">//onObjectRetainedListeners是一个监听者列表，InternalLeakCanary就是其中之一，默认也是唯一的一个</span></span><br><span class="line">    onObjectRetainedListeners.forEach &#123; it.onObjectRetained() &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">removeWeaklyReachableObjects</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">// WeakReferences are enqueued as soon as the object to which they point to becomes weakly</span></span><br><span class="line">  <span class="comment">// reachable. This is before finalization or garbage collection has actually happened.</span></span><br><span class="line">  <span class="keyword">var</span> ref: KeyedWeakReference?</span><br><span class="line">  <span class="keyword">do</span> &#123;</span><br><span class="line">    ref = queue.poll() <span class="keyword">as</span> KeyedWeakReference?</span><br><span class="line">    <span class="keyword">if</span> (ref != <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="comment">//从引用队列中拿到的对象就表示这个实例已经被GC正常回收了，所以从监控表中删除引用</span></span><br><span class="line">      watchedObjects.remove(ref.key)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">while</span> (ref != <span class="literal">null</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当检测到对象没有被回收后，会调用<code>leakcanary.internal.InternalLeakCanary#onObjectRetained</code>来触发泄漏检测：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//InternalLeakCanary.kt</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onObjectRetained</span><span class="params">()</span></span> = scheduleRetainedObjectCheck()</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">fun</span> <span class="title">scheduleRetainedObjectCheck</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>::heapDumpTrigger.isInitialized) &#123;</span><br><span class="line">      heapDumpTrigger.scheduleRetainedObjectCheck()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//HeapDumpTrigger.kt</span></span><br><span class="line">  <span class="function"><span class="keyword">fun</span> <span class="title">scheduleRetainedObjectCheck</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    delayMillis: <span class="type">Long</span> = <span class="number">0</span>L  <span class="comment">//默认延时是0，调用时没有传参，所以使用默认值0</span></span></span></span><br><span class="line"><span class="params"><span class="function">  )</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> checkCurrentlyScheduledAt = checkScheduledAt</span><br><span class="line">    <span class="keyword">if</span> (checkCurrentlyScheduledAt &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    checkScheduledAt = SystemClock.uptimeMillis() + delayMillis</span><br><span class="line">    backgroundHandler.postDelayed(&#123;  <span class="comment">//启动后台任务</span></span><br><span class="line">      checkScheduledAt = <span class="number">0</span></span><br><span class="line">      checkRetainedObjects()</span><br><span class="line">    &#125;, delayMillis)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//检测内存泄漏</span></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">checkRetainedObjects</span><span class="params">()</span></span> &#123;</span><br><span class="line">    ......<span class="comment">//忽略部分代码</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取泄漏对象个数</span></span><br><span class="line">    <span class="keyword">var</span> retainedReferenceCount = objectWatcher.retainedObjectCount</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (retainedReferenceCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      gcTrigger.runGc() <span class="comment">//执行Runtime.getRuntime().gc()</span></span><br><span class="line">      retainedReferenceCount = objectWatcher.retainedObjectCount</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//检查对象泄漏个数，如果小于阈值（默认是5）直接返回不执行后续步骤</span></span><br><span class="line">    <span class="keyword">if</span> (checkRetainedCount(retainedReferenceCount, config.retainedVisibleThreshold)) <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> now = SystemClock.uptimeMillis()</span><br><span class="line">    <span class="keyword">val</span> elapsedSinceLastDumpMillis = now - lastHeapDumpUptimeMillis</span><br><span class="line">    <span class="comment">//如果距离上次分析堆栈信息不足1分钟则返回</span></span><br><span class="line">    <span class="keyword">if</span> (elapsedSinceLastDumpMillis &lt; WAIT_BETWEEN_HEAP_DUMPS_MILLIS) &#123;</span><br><span class="line">      onRetainInstanceListener.onEvent(DumpHappenedRecently)</span><br><span class="line">      showRetainedCountNotification(</span><br><span class="line">        objectCount = retainedReferenceCount,</span><br><span class="line">        contentText = application.getString(R.string.leak_canary_notification_retained_dump_wait)</span><br><span class="line">      )</span><br><span class="line">      scheduleRetainedObjectCheck(</span><br><span class="line">        delayMillis = WAIT_BETWEEN_HEAP_DUMPS_MILLIS - elapsedSinceLastDumpMillis</span><br><span class="line">      )</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dismissRetainedCountNotification()</span><br><span class="line">    <span class="keyword">val</span> visibility = <span class="keyword">if</span> (applicationVisible) <span class="string">&quot;visible&quot;</span> <span class="keyword">else</span> <span class="string">&quot;not visible&quot;</span></span><br><span class="line">    dumpHeap( <span class="comment">//保存堆栈信息</span></span><br><span class="line">      retainedReferenceCount = retainedReferenceCount,</span><br><span class="line">      retry = <span class="literal">true</span>,</span><br><span class="line">      reason = <span class="string">&quot;<span class="variable">$retainedReferenceCount</span> retained objects, app is <span class="variable">$visibility</span>&quot;</span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1556px" preserveAspectRatio="none" style="width:1034px;height:1556px;background:#FFFFFF;" version="1.1" viewBox="0 0 1034 1556" width="1034px" zoomAndPan="magnify"><defs/><g><rect fill="none" height="20.9531" style="stroke:none;stroke-width:1.0;" width="1001" x="15" y="12.7451"/><ellipse cx="115" cy="48.6982" fill="#222222" rx="10" ry="10" style="stroke:#222222;stroke-width:1.0;"/><polygon fill="#F1F1F1" points="30,78.6982,200,78.6982,210,95.6826,200,112.667,30,112.667" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="146" x="40" y="99.8369">onActivityDestroyed&#20107;&#20214;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="134" x="48" y="132.667"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="114" x="58" y="153.8057">&#29983;&#25104;activity&#25551;&#36848;&#20449;&#24687;</text><line style="stroke:#000000;stroke-width:1.5;" x1="15" x2="15" y1="12.7451" y2="1544.4946"/><rect fill="#F1F1F1" height="75.875" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="200" x="280" y="203.895"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="180" x="290" y="225.0337">&#28165;&#29702;&#24341;&#29992;&#34920;&#20013;&#24050;&#32463;&#34987;&#22238;&#25910;&#30340;&#23545;&#35937;&#65306;</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="174" x="290" y="239.0024">&#24490;&#29615;&#20174;ReferenceQueue&#20013;&#21462;&#20986;</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="168" x="290" y="252.9712">&#24050;&#32463;&#34987;&#22238;&#25910;&#30340;&#24341;&#29992;&#65292;&#24182;&#20174;&#24341;&#29992;&#34920;</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="36" x="290" y="266.9399">&#20013;&#21024;&#38500;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="209" x="275.5" y="299.77"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="189" x="285.5" y="320.9087">&#36890;&#36807;UUID.randomUUID()&#29983;&#25104;key</text><rect fill="#F1F1F1" height="89.8438" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="227" x="266.5" y="353.7388"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="207" x="276.5" y="374.8774">&#26500;&#24314;&#24369;&#24341;&#29992;KeyedWeakReference&#65292;</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="198" x="276.5" y="388.8462">&#24182;&#20851;&#32852;ReferenceQueue&#65292;&#24369;&#24341;&#29992;&#25345;</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="190" x="276.5" y="402.8149">&#26377;&#30417;&#25511;&#23545;&#35937;&#12289;key&#12289;&#25551;&#36848;&#20449;&#24687;&#12289;&#30417;&#25511;</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="192" x="276.5" y="416.7837">&#26102;&#38388;&#12290;&#24403;&#30417;&#25511;&#23545;&#35937;&#34987;&#22238;&#25910;&#21518;&#65292;&#24369;&#24341;&#29992;</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="162" x="276.5" y="430.7524">&#20250;&#34987;&#28155;&#21152;&#21040;ReferenceQueue</text><rect fill="#F1F1F1" height="47.9375" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="228" x="266" y="463.5825"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="160" x="276" y="484.7212">&#24369;&#24341;&#29992;&#28155;&#21152;&#21040;&#24341;&#29992;&#34920;(map)&#20013;:</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="208" x="276" y="498.6899">watchedObjects[key] = reference</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="212" x="274" y="565.7236"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="192" x="284" y="586.8623">&#20877;&#27425;&#28165;&#29702;&#24341;&#29992;&#34920;&#20013;&#24050;&#32463;&#34987;&#22238;&#25910;&#30340;&#23545;&#35937;</text><rect fill="#F1F1F1" height="47.9375" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="160" x="300" y="619.6924"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="136" x="310" y="640.8311">&#20174;&#24341;&#29992;&#34920;&#20013;&#21462;&#20986;&#30417;&#25511;&#23545;&#35937;:</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="130" x="310" y="654.7998">watchedObjects[key]</text><rect fill="#F1F1F1" height="47.9375" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="142" x="309" y="748.8369"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="96" x="319" y="769.9756">&#26356;&#26032;&#27844;&#28431;&#26816;&#27979;&#26102;&#38388;</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="122" x="319" y="783.9443">retainedUptimeMillis</text><polygon fill="#F1F1F1" points="352.5,687.6299,407.5,687.6299,419.5,699.6299,407.5,711.6299,352.5,711.6299,340.5,699.6299,352.5,687.6299" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="384" y="721.8403">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="384" y="734.645">&#24341;&#29992;&#34920;&#20013;&#36824;&#23384;&#22312;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="44" x="384" y="747.4497">&#34920;&#31034;&#27844;&#28431;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="55" x="352.5" y="703.438">&#26159;&#21542;&#27844;&#28431;&#65311;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="14" x="419.5" y="697.0356">no</text><ellipse cx="455.5" cy="699.6299" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="455.5" cy="699.6299" fill="#222222" rx="6" ry="6" style="stroke:#222222;stroke-width:1.0;"/><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="188" x="286" y="941.9712"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="168" x="296" y="963.1099">&#28165;&#29702;&#24341;&#29992;&#34920;&#20013;&#24050;&#32463;&#34987;&#22238;&#25910;&#30340;&#23545;&#35937;</text><rect fill="#F1F1F1" height="47.9375" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="298" x="231" y="995.9399"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="278" x="241" y="1017.0786">&#33719;&#21462;&#27844;&#28431;&#23545;&#35937;&#25968;&#37327;&#65306;&#24341;&#29992;&#34920;&#20013;retainedUptimeMillis</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="108" x="241" y="1031.0474">&#24050;&#34987;&#26356;&#26032;&#30340;&#24341;&#29992;&#25968;&#37327;</text><line style="stroke:#000000;stroke-width:1.5;" x1="225" x2="225" y1="12.7451" y2="1544.4946"/><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="137" x="561.5" y="816.7744"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="117" x="571.5" y="837.9131">onObjectRetained()</text><line style="stroke:#000000;stroke-width:1.5;" x1="533" x2="533" y1="12.7451" y2="1544.4946"/><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="237" x="739.5" y="888.0024"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="217" x="749.5" y="909.1411">&#21518;&#21488;&#32447;&#31243;&#25191;&#34892;checkRetainedObjects()</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="175" x="770.5" y="1112.2798"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="155" x="780.5" y="1133.4185">Runtime.getRuntime().gc()</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="140" x="788" y="1181.2485"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="120" x="798" y="1202.3872">&#37325;&#26032;&#33719;&#21462;&#27844;&#28431;&#23545;&#35937;&#25968;&#37327;</text><polygon fill="#F1F1F1" points="805,1063.8774,911,1063.8774,923,1075.8774,911,1087.8774,805,1087.8774,793,1075.8774,805,1063.8774" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="862" y="1098.0879">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="805" y="1079.6855">&#27844;&#28431;&#23545;&#35937;&#25968;&#37327;&#22823;&#20110;0&#65311;</text><polygon fill="#F1F1F1" points="858,1235.2173,870,1247.2173,858,1259.2173,846,1247.2173,858,1235.2173" style="stroke:#181818;stroke-width:0.5;"/><rect fill="#F1F1F1" height="47.9375" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="254" x="731" y="1327.6196"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="234" x="741" y="1348.7583">Debug.dumpHprofData(heapDumpFile)</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="84" x="741" y="1362.7271">&#20445;&#23384;&#22534;&#26632;&#21040;&#25991;&#20214;</text><rect fill="#F1F1F1" height="47.9375" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="218" x="749" y="1410.5571"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="198" x="759" y="1431.6958">BackgroundThreadHeapAnalyzer</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="48" x="759" y="1445.6646">&#35299;&#26512;&#22534;&#26632;</text><polygon fill="#F1F1F1" points="779,1279.2173,937,1279.2173,949,1291.2173,937,1303.2173,779,1303.2173,767,1291.2173,779,1279.2173" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="70" x="862" y="1313.4277">dumpHeap()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="779" y="1295.0254">&#27844;&#28431;&#23545;&#35937;&#25968;&#37327;&#22823;&#20110;&#38408;&#20540;(&#40664;&#35748;5)&#65311;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="14" x="949" y="1288.623">no</text><polygon fill="#F1F1F1" points="858,1478.4946,870,1490.4946,858,1502.4946,846,1490.4946,858,1478.4946" style="stroke:#181818;stroke-width:0.5;"/><ellipse cx="858" cy="1533.4946" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="858" cy="1533.4946" fill="#222222" rx="6" ry="6" style="stroke:#222222;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.5;" x1="725" x2="725" y1="12.7451" y2="1544.4946"/><line style="stroke:#000000;stroke-width:1.5;" x1="1014" x2="1014" y1="12.7451" y2="1544.4946"/><line style="stroke:#181818;stroke-width:1.0;" x1="115" x2="115" y1="58.6982" y2="78.6982"/><polygon fill="#181818" points="111,68.6982,115,78.6982,119,68.6982,115,72.6982" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="115" x2="115" y1="112.667" y2="132.667"/><polygon fill="#181818" points="111,122.667,115,132.667,119,122.667,115,126.667" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="380" x2="380" y1="279.77" y2="299.77"/><polygon fill="#181818" points="376,289.77,380,299.77,384,289.77,380,293.77" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="380" x2="380" y1="333.7388" y2="353.7388"/><polygon fill="#181818" points="376,343.7388,380,353.7388,384,343.7388,380,347.7388" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="380" x2="380" y1="443.5825" y2="463.5825"/><polygon fill="#181818" points="376,453.5825,380,463.5825,384,453.5825,380,457.5825" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="380" x2="380" y1="511.52" y2="565.7236"/><polygon fill="#181818" points="376,555.7236,380,565.7236,384,555.7236,380,559.7236" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="384" y="532.8247">&#20027;&#32447;&#31243;&#24310;&#26102;5&#31186;&#25191;&#34892;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="384" y="545.6294">moveToRetained()</text><line style="stroke:#181818;stroke-width:1.0;" x1="380" x2="380" y1="599.6924" y2="619.6924"/><polygon fill="#181818" points="376,609.6924,380,619.6924,384,609.6924,380,613.6924" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="380" x2="380" y1="711.6299" y2="748.8369"/><polygon fill="#181818" points="376,738.8369,380,748.8369,384,738.8369,380,742.8369" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="419.5" x2="444.5" y1="699.6299" y2="699.6299"/><polygon fill="#181818" points="434.5,695.6299,444.5,699.6299,434.5,703.6299,438.5,699.6299" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="380" x2="380" y1="796.7744" y2="801.7744"/><line style="stroke:#181818;stroke-width:1.0;" x1="380" x2="630" y1="801.7744" y2="801.7744"/><line style="stroke:#181818;stroke-width:1.0;" x1="630" x2="630" y1="801.7744" y2="816.7744"/><polygon fill="#181818" points="626,806.7744,630,816.7744,634,806.7744,630,810.7744" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="380" x2="380" y1="667.6299" y2="687.6299"/><polygon fill="#181818" points="376,677.6299,380,687.6299,384,677.6299,380,681.6299" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="380" x2="380" y1="975.9399" y2="995.9399"/><polygon fill="#181818" points="376,985.9399,380,995.9399,384,985.9399,380,989.9399" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="858" x2="858" y1="1146.2485" y2="1181.2485"/><polygon fill="#181818" points="854,1171.2485,858,1181.2485,862,1171.2485,858,1175.2485" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="858" x2="858" y1="1087.8774" y2="1112.2798"/><polygon fill="#181818" points="854,1102.2798,858,1112.2798,862,1102.2798,858,1106.2798" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="923" x2="955.5" y1="1075.8774" y2="1075.8774"/><polygon fill="#181818" points="951.5,1153.7485,955.5,1163.7485,959.5,1153.7485,955.5,1157.7485" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="955.5" x2="955.5" y1="1075.8774" y2="1247.2173"/><line style="stroke:#181818;stroke-width:1.0;" x1="955.5" x2="870" y1="1247.2173" y2="1247.2173"/><polygon fill="#181818" points="880,1243.2173,870,1247.2173,880,1251.2173,876,1247.2173" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="858" x2="858" y1="1215.2173" y2="1235.2173"/><polygon fill="#181818" points="854,1225.2173,858,1235.2173,862,1225.2173,858,1229.2173" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="858" x2="858" y1="1375.5571" y2="1410.5571"/><polygon fill="#181818" points="854,1400.5571,858,1410.5571,862,1400.5571,858,1404.5571" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="858" x2="858" y1="1303.2173" y2="1327.6196"/><polygon fill="#181818" points="854,1317.6196,858,1327.6196,862,1317.6196,858,1321.6196" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="949" x2="995" y1="1291.2173" y2="1291.2173"/><polygon fill="#181818" points="991,1383.0571,995,1393.0571,999,1383.0571,995,1387.0571" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="995" x2="995" y1="1291.2173" y2="1490.4946"/><line style="stroke:#181818;stroke-width:1.0;" x1="995" x2="870" y1="1490.4946" y2="1490.4946"/><polygon fill="#181818" points="880,1486.4946,870,1490.4946,880,1494.4946,876,1490.4946" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="858" x2="858" y1="1458.4946" y2="1478.4946"/><polygon fill="#181818" points="854,1468.4946,858,1478.4946,862,1468.4946,858,1472.4946" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="858" x2="858" y1="1259.2173" y2="1279.2173"/><polygon fill="#181818" points="854,1269.2173,858,1279.2173,862,1269.2173,858,1273.2173" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="858" x2="858" y1="1502.4946" y2="1522.4946"/><polygon fill="#181818" points="854,1512.4946,858,1522.4946,862,1512.4946,858,1516.4946" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="115" x2="115" y1="166.6357" y2="188.895"/><line style="stroke:#181818;stroke-width:1.0;" x1="115" x2="380" y1="188.895" y2="188.895"/><line style="stroke:#181818;stroke-width:1.0;" x1="380" x2="380" y1="188.895" y2="203.895"/><polygon fill="#181818" points="376,193.895,380,203.895,384,193.895,380,197.895" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="119" y="182.395">&#35843;&#29992;expectWeaklyReachable()</text><line style="stroke:#181818;stroke-width:1.0;" x1="630" x2="630" y1="850.7432" y2="873.0024"/><line style="stroke:#181818;stroke-width:1.0;" x1="630" x2="858" y1="873.0024" y2="873.0024"/><line style="stroke:#181818;stroke-width:1.0;" x1="858" x2="858" y1="873.0024" y2="888.0024"/><polygon fill="#181818" points="854,878.0024,858,888.0024,862,878.0024,858,882.0024" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="634" y="866.5024">&#35843;&#29992;scheduleRetainedObjectCheck()</text><line style="stroke:#181818;stroke-width:1.0;" x1="858" x2="858" y1="921.9712" y2="926.9712"/><line style="stroke:#181818;stroke-width:1.0;" x1="858" x2="380" y1="926.9712" y2="926.9712"/><line style="stroke:#181818;stroke-width:1.0;" x1="380" x2="380" y1="926.9712" y2="941.9712"/><polygon fill="#181818" points="376,931.9712,380,941.9712,384,931.9712,380,935.9712" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="380" x2="380" y1="1043.8774" y2="1048.8774"/><line style="stroke:#181818;stroke-width:1.0;" x1="380" x2="858" y1="1048.8774" y2="1048.8774"/><line style="stroke:#181818;stroke-width:1.0;" x1="858" x2="858" y1="1048.8774" y2="1063.8774"/><polygon fill="#181818" points="854,1053.8774,858,1063.8774,862,1053.8774,858,1057.8774" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="149" x="45.5" y="29.4531">ActivityWatcher</text><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="139" x="309.5" y="29.4531">ObjectWatcher</text><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="182" x="538" y="29.4531">InternalLeakCanary</text><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacing" textLength="171" x="784" y="29.4531">HeapDumpTrigger</text><!--SRC=[bLJFRn9R5DxFNp7BOM7pDcuWcgZ4QDGOcpOkv2rkXrCO2tV8pA0FmuA-Lmkr2gYr8jLQj956dw_uuz4MKFuOkNU6LVy5pvqBI6qrkfdCt7k-SxxlVETCzfJk63SC9tELE7eShAnYEyHobA19XpTXi1tBp42qrrhkjPlgIINehZpdXJ8P1F1IoUisUjqQdzyEATdBCzT1TqRvZfrKlSO_xieM_9KIvq3c4fb987gSp2H02uIK8D-zxPONMUSHHdcrhTxkMxRptcsNl1TlsDewNscwrGMslUUzg-rtgX7AFhzsYzkzTd4IPi42giELDAH1m4ghBD_2YCDmF_b-voxRQo9oL2j21QomqN-oYKJwkQhNpKzFdmzFM8H6pQHurG9IxXna1DVr1TPkiSuxcU82O6E4fX4Nh844zfhizWTlVkKWHL5_YEHtvoEKFrror-xpObtA-vARnohu76yfVieO37_Sx3_- -2NtD_lqS1mtKihAnV4QgAvJnKk-qsPtDbYXSP0Eolb6PnWoQesM9Aa0TYSOeJTzCwFIMViQSlnJFQ5QmsGXON9lj-sskkxMCcitaUTnj_w0BzMz6dOZQTw0ANCI769GYFgMiyLx_D_QhnkFa77RHbwFTo6e7iaqf1YpgiOhswpyYdzOu9tIVkTvG7NYG3Lg1XHLjHqpfK321Yq3DfetLiNhLjZR2dkAhSG3TxCbCmXKaAzzvAiDUS1VvlZ_ozAV2BK6KgTJZf64IqOYOTWX1MZKc5Movwa35YM9YpWrPmWbLYOhrarI7c_IQ7Di8IcTWE6b33qJ1trEn6NF0Kc5qydKb6N4OcBdWZW7hDIGVaWNT15zC87jWxzRr-1lUU8LTz07sG9vo1yr-ddiS7Kymr7zyBTKpARVnT6AIlnHedmN3rLYc_LUg_Z7DqlHGj-ToJGLnIPYu0nUjS14J1UQyRQVluTLVqH_wDNFIlOh1PRhQFrsnVjlytZW405qBuhqXOn1pJ3Cf6CJ_c7ACcV3n25QVA3oh9600AvhzvaOjur5lb70NUIhUVpZ-k3JH9-BMMQQHgVY5f2eo7iAfoXp2ooSpVfBlbwMk90_oge_srA6cE-l]--></g></svg>

<h2 id="Service泄漏监控"><a href="#Service泄漏监控" class="headerlink" title="Service泄漏监控"></a>Service泄漏监控</h2><p>Activity可以通过Application注册生命周期事件回调来监控Activity的销毁，但是Service没有这样的机制，需要采用hook系统AMS方式来监控Service的销毁。</p>
<p>Service的内存泄漏监控分为两个阶段：onServicePreDestroy和onServiceDestroyed。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">onServicePreDestroy</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  token: <span class="type">IBinder</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">  service: <span class="type">Service</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span> &#123;</span><br><span class="line">  servicesToBeDestroyed[token] = WeakReference(service)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">onServiceDestroyed</span><span class="params">(token: <span class="type">IBinder</span>)</span></span> &#123;</span><br><span class="line">  servicesToBeDestroyed.remove(token)?.also &#123; serviceWeakReference -&gt;</span><br><span class="line">    serviceWeakReference.<span class="keyword">get</span>()?.let &#123; service -&gt;</span><br><span class="line">      reachabilityWatcher.expectWeaklyReachable(</span><br><span class="line">        service, <span class="string">&quot;<span class="subst">$&#123;service::class.java.name&#125;</span> received Service#onDestroy() callback&quot;</span></span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>从代码中可以看出<code>onServicePreDestroy</code>的作用是把service对象通过弱引用保存到map中，然后在<code>onServiceDestroyed</code>中取出service对象，并触发泄漏检测逻辑。</p>
<h3 id="onServicePreDestroy获取service实例"><a href="#onServicePreDestroy获取service实例" class="headerlink" title="onServicePreDestroy获取service实例"></a>onServicePreDestroy获取service实例</h3><p>Service的创建、绑定、停止都会走到<code>ActivityThread.H</code>类，<code>ActivityThread</code>相关代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">ActivityThread</span> <span class="keyword">extends</span> <span class="title class_">ClientTransactionHandler</span></span><br><span class="line">        <span class="keyword">implements</span> <span class="title class_">ActivityThreadInternal</span> &#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">final</span> <span class="type">H</span> <span class="variable">mH</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">H</span>();</span><br><span class="line">    ......</span><br><span class="line">    <span class="meta">@UnsupportedAppUsage</span></span><br><span class="line">    <span class="keyword">final</span> ArrayMap&lt;IBinder, Service&gt; mServices = <span class="keyword">new</span> <span class="title class_">ArrayMap</span>&lt;&gt;();</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">H</span> <span class="keyword">extends</span> <span class="title class_">Handler</span> &#123;</span><br><span class="line">        ......</span><br><span class="line">        <span class="meta">@UnsupportedAppUsage</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">CREATE_SERVICE</span>          <span class="operator">=</span> <span class="number">114</span>; <span class="comment">//创建服务</span></span><br><span class="line">        <span class="meta">@UnsupportedAppUsage</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SERVICE_ARGS</span>            <span class="operator">=</span> <span class="number">115</span>; <span class="comment">//Service#onStartCommand</span></span><br><span class="line">        <span class="meta">@UnsupportedAppUsage</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">STOP_SERVICE</span>            <span class="operator">=</span> <span class="number">116</span>; <span class="comment">//停止服务</span></span><br><span class="line">        ......</span><br><span class="line">        <span class="meta">@UnsupportedAppUsage</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">BIND_SERVICE</span>            <span class="operator">=</span> <span class="number">121</span>; <span class="comment">//绑定服务</span></span><br><span class="line">        <span class="meta">@UnsupportedAppUsage</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">UNBIND_SERVICE</span>          <span class="operator">=</span> <span class="number">122</span>; <span class="comment">//解绑</span></span><br><span class="line">        ......</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(Message msg)</span> &#123;</span><br><span class="line">            <span class="keyword">switch</span> (msg.what) &#123;</span><br><span class="line">                ......</span><br><span class="line">                <span class="keyword">case</span> STOP_SERVICE:</span><br><span class="line">                    Trace.traceBegin(Trace.TRACE_TAG_ACTIVITY_MANAGER, <span class="string">&quot;serviceStop&quot;</span>);</span><br><span class="line">                    handleStopService((IBinder)msg.obj);</span><br><span class="line">                    schedulePurgeIdler();</span><br><span class="line">                    Trace.traceEnd(Trace.TRACE_TAG_ACTIVITY_MANAGER);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                ......</span><br><span class="line">            &#125;</span><br><span class="line">            ......</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Handler</span> &#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dispatchMessage</span><span class="params">(<span class="meta">@NonNull</span> Message msg)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (msg.callback != <span class="literal">null</span>) &#123;</span><br><span class="line">            handleCallback(msg);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (mCallback != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (mCallback.handleMessage(msg)) &#123; <span class="comment">//返回false，还会继续执行后面的handleMessage</span></span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            handleMessage(msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br></pre></td></tr></table></figure>

<p>通过反射替换掉<code>ActivityThread.mH.mCallback</code>，替换后的Callback如下：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//ServiceWatcher.kt</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">install</span><span class="params">()</span></span> &#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      swapActivityThreadHandlerCallback &#123; mCallback -&gt;</span><br><span class="line">        uninstallActivityThreadHandlerCallback = &#123;</span><br><span class="line">          swapActivityThreadHandlerCallback &#123;</span><br><span class="line">            mCallback</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Handler.Callback &#123; msg -&gt;</span><br><span class="line">          <span class="keyword">if</span> (msg.obj !<span class="keyword">is</span> IBinder) &#123;</span><br><span class="line">            <span class="keyword">return</span><span class="symbol">@Callback</span> <span class="literal">false</span> <span class="comment">//返回false后，继续执行H类的消息处理</span></span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (msg.what == STOP_SERVICE) &#123;</span><br><span class="line">            <span class="keyword">val</span> key = msg.obj <span class="keyword">as</span> IBinder</span><br><span class="line">            activityThreadServices[key]?.let &#123; <span class="comment">//获取service实例</span></span><br><span class="line">              onServicePreDestroy(key, it)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">//mCallback就是通过反射获取的ActivityThread.mH.mCallback</span></span><br><span class="line">          mCallback?.handleMessage(msg) ?: <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>

<p>通过mH.mCallback只能拿到service的token，并没有拿到service实例。service实例的获取是通过反射获取ActivityThread中的mServices。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">val</span> activityThreadServices <span class="keyword">by</span> lazy &#123;</span><br><span class="line">  <span class="keyword">val</span> mServicesField =</span><br><span class="line">    activityThreadClass.getDeclaredField(<span class="string">&quot;mServices&quot;</span>).apply &#123; isAccessible = <span class="literal">true</span> &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Suppress(<span class="string">&quot;UNCHECKED_CAST&quot;</span>)</span></span><br><span class="line">  mServicesField[activityThreadInstance] <span class="keyword">as</span> Map&lt;IBinder, Service&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过ActivityThread.mH反射方式可以拿到Service的停止事件，这是service stop开始执行的时机，此时可以从<code>ActivityThread.mServices</code>获取到service实例，之后service实例就会从map中删除，就再也拿不到了，这就是分成了onServicePreDestroy和onServiceDestroyed两个阶段的根本原因。</p>
<h3 id="onServiceDestroyed监控Service-destroy"><a href="#onServiceDestroyed监控Service-destroy" class="headerlink" title="onServiceDestroyed监控Service destroy"></a>onServiceDestroyed监控Service destroy</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\base\core\java\android\app\ActivityThread.java</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">handleStopService</span><span class="params">(IBinder token)</span> &#123;</span><br><span class="line">        mServicesData.remove(token);</span><br><span class="line">        <span class="type">Service</span> <span class="variable">s</span> <span class="operator">=</span> mServices.remove(token);</span><br><span class="line">        <span class="keyword">if</span> (s != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (localLOGV) Slog.v(TAG, <span class="string">&quot;Destroying service &quot;</span> + s);</span><br><span class="line">                s.onDestroy();   <span class="comment">//执行Service#onDestroy</span></span><br><span class="line">                s.detachAndCleanUp();</span><br><span class="line">                <span class="type">Context</span> <span class="variable">context</span> <span class="operator">=</span> s.getBaseContext();</span><br><span class="line">                <span class="keyword">if</span> (context <span class="keyword">instanceof</span> ContextImpl) &#123;</span><br><span class="line">                    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">who</span> <span class="operator">=</span> s.getClassName();</span><br><span class="line">                    ((ContextImpl) context).scheduleFinalCleanup(who, <span class="string">&quot;Service&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                QueuedWork.waitToFinish();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">//Service#onDestroy执行完成后的最终时机</span></span><br><span class="line">                    ActivityManager.getService().serviceDoneExecuting(</span><br><span class="line">                            token, SERVICE_DONE_EXECUTING_STOP, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> e.rethrowFromSystemServer();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!mInstrumentation.onException(s, e)) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(</span><br><span class="line">                            <span class="string">&quot;Unable to stop service &quot;</span> + s</span><br><span class="line">                            + <span class="string">&quot;: &quot;</span> + e.toString(), e);</span><br><span class="line">                &#125;</span><br><span class="line">                Slog.i(TAG, <span class="string">&quot;handleStopService: exception for &quot;</span> + token, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Slog.i(TAG, <span class="string">&quot;handleStopService: token=&quot;</span> + token + <span class="string">&quot; not found.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//Slog.i(TAG, &quot;Running services: &quot; + mServices);</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>从上述代码可以看出Service停止最后执行的是<code>ActivityManager.getService().serviceDoneExecuting</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\base\core\java\android\app\ActivityManager.java</span></span><br><span class="line"><span class="meta">@SystemService(Context.ACTIVITY_SERVICE)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ActivityManager</span> &#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="meta">@UnsupportedAppUsage</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> IActivityManager <span class="title function_">getService</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> IActivityManagerSingleton.get();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@UnsupportedAppUsage</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton&lt;IActivityManager&gt; IActivityManagerSingleton =</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Singleton</span>&lt;IActivityManager&gt;() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">protected</span> IActivityManager <span class="title function_">create</span><span class="params">()</span> &#123;</span><br><span class="line">                    <span class="keyword">final</span> <span class="type">IBinder</span> <span class="variable">b</span> <span class="operator">=</span> ServiceManager.getService(Context.ACTIVITY_SERVICE);</span><br><span class="line">                    <span class="keyword">final</span> <span class="type">IActivityManager</span> <span class="variable">am</span> <span class="operator">=</span> IActivityManager.Stub.asInterface(b);</span><br><span class="line">                    <span class="keyword">return</span> am;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br></pre></td></tr></table></figure>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="436px" preserveAspectRatio="none" style="width:572px;height:436px;background:#FFFFFF;" version="1.1" viewBox="0 0 572 436" width="572px" zoomAndPan="magnify"><defs/><g><!--cluster android--><g id="cluster_android"><path d="M211.5,47 L274.5,47 A3.75,3.75 0 0 1 277,49.5 L284,69.2969 L366.5,69.2969 A2.5,2.5 0 0 1 369,71.7969 L369,210.5 A2.5,2.5 0 0 1 366.5,213 L211.5,213 A2.5,2.5 0 0 1 209,210.5 L209,49.5 A2.5,2.5 0 0 1 211.5,47 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="209" x2="284" y1="69.2969" y2="69.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="62" x="213" y="61.9951">android</text></g><!--cluster os--><g id="cluster_os"><path d="M235.5,90 L255.5,90 A3.75,3.75 0 0 1 258,92.5 L265,112.2969 L342.5,112.2969 A2.5,2.5 0 0 1 345,114.7969 L345,186.5 A2.5,2.5 0 0 1 342.5,189 L235.5,189 A2.5,2.5 0 0 1 233,186.5 L233,92.5 A2.5,2.5 0 0 1 235.5,90 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="233" x2="265" y1="112.2969" y2="112.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="19" x="237" y="104.9951">os</text></g><!--class Binder--><g id="elem_Binder"><rect fill="#F1F1F1" height="48" id="Binder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="79" x="249.5" y="125"/><ellipse cx="264.5" cy="141" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M266.8438,136.6719 C265.9063,136.2344 265.3125,136.0938 264.4375,136.0938 C261.8125,136.0938 259.8125,138.1719 259.8125,140.8906 L259.8125,142.0156 C259.8125,144.5938 261.9219,146.4844 264.8125,146.4844 C266.0313,146.4844 267.1875,146.1875 267.9375,145.6406 C268.5156,145.2344 268.8438,144.7813 268.8438,144.3906 C268.8438,143.9375 268.4531,143.5469 267.9844,143.5469 C267.7656,143.5469 267.5625,143.625 267.375,143.8125 C266.9219,144.2969 266.9219,144.2969 266.7344,144.3906 C266.3125,144.6563 265.625,144.7813 264.8594,144.7813 C262.8125,144.7813 261.5156,143.6875 261.5156,141.9844 L261.5156,140.8906 C261.5156,139.1094 262.7656,137.7969 264.5,137.7969 C265.0781,137.7969 265.6875,137.9531 266.1563,138.2031 C266.6406,138.4844 266.8125,138.7031 266.9063,139.1094 C266.9688,139.5156 267,139.6406 267.1406,139.7656 C267.2813,139.9063 267.5156,140.0156 267.7344,140.0156 C268,140.0156 268.2656,139.875 268.4375,139.6563 C268.5469,139.5 268.5781,139.3125 268.5781,138.8906 L268.5781,137.4688 C268.5781,137.0313 268.5625,136.9063 268.4688,136.75 C268.3125,136.4844 268.0313,136.3438 267.7344,136.3438 C267.4375,136.3438 267.2344,136.4375 267.0156,136.75 L266.8438,136.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="278.5" y="145.8467">Binder</text><line style="stroke:#181818;stroke-width:0.5;" x1="250.5" x2="327.5" y1="157" y2="157"/><line style="stroke:#181818;stroke-width:0.5;" x1="250.5" x2="327.5" y1="165" y2="165"/></g><!--class IActivityManager--><g id="elem_IActivityManager"><rect codeLine="1" fill="#F1F1F1" height="64.2969" id="IActivityManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="182" x="11" y="117"/><ellipse cx="39.95" cy="133" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M40.9031,129.7813 L42.6219,129.7813 C43.0125,129.7813 43.2,129.75 43.325,129.6719 C43.5906,129.5156 43.7313,129.2344 43.7313,128.9375 C43.7313,128.6719 43.6219,128.4063 43.3875,128.2344 C43.2156,128.125 43.075,128.0938 42.6219,128.0938 L37.4813,128.0938 C37.0438,128.0938 36.9188,128.1094 36.7625,128.2031 C36.5125,128.3594 36.3563,128.6563 36.3563,128.9375 C36.3563,129.2188 36.4969,129.4688 36.7156,129.6406 C36.8719,129.75 37.0594,129.7813 37.4813,129.7813 L39.2,129.7813 L39.2,136.2969 L37.4813,136.2969 C37.0438,136.2969 36.9188,136.3125 36.7625,136.4219 C36.5125,136.5781 36.3563,136.8594 36.3563,137.1563 C36.3563,137.4063 36.4969,137.6719 36.7156,137.8281 C36.8719,137.9531 37.075,138 37.4813,138 L42.6219,138 C43.3719,138 43.7313,137.7188 43.7313,137.1563 C43.7313,136.875 43.6219,136.625 43.3875,136.4531 C43.2156,136.3281 43.075,136.2969 42.6219,136.2969 L40.9031,136.2969 L40.9031,129.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="119" x="57.05" y="137.8467">IActivityManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="12" x2="192" y1="149" y2="149"/><line style="stroke:#181818;stroke-width:0.5;" x1="12" x2="192" y1="157" y2="157"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="17" y="173.9951">serviceDoneExecuting()</text></g><g id="elem_GMN3"><path d="M6,6 L6,31.1328 A0,0 0 0 0 6,31.1328 L98,31.1328 L102,116.853 L106,31.1328 L198,31.1328 A0,0 0 0 0 198,31.1328 L198,16 L188,6 L6,6 A0,0 0 0 0 6,6 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M188,6 L188,16 L198,16 L188,6 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="171" x="12" y="23.0669">&#30001;IActivityManager.aidl&#29983;&#25104;</text></g><!--class Stub--><g id="elem_Stub"><rect codeLine="5" fill="#F1F1F1" height="64.2969" id="Stub" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="182" x="104" y="241"/><ellipse cx="174.75" cy="257" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M176.8281,258.8125 L177.2188,259.7969 L176.8281,259.7969 C176.375,259.7969 176.2656,259.8125 176.1094,259.9219 C175.8594,260.0781 175.7031,260.3594 175.7031,260.6563 C175.7031,260.9219 175.8438,261.1719 176.0625,261.3281 C176.2031,261.4531 176.4063,261.5 176.8281,261.5 L179.1875,261.5 C179.5469,261.5 179.7656,261.4688 179.9063,261.375 C180.1563,261.2344 180.3125,260.9375 180.3125,260.6563 C180.3125,260.375 180.1719,260.125 179.9531,259.9688 C179.7813,259.8281 179.625,259.7969 179.1563,259.7969 L175.7656,251.5938 L172.0938,251.5938 C171.6406,251.5938 171.5156,251.6094 171.3594,251.7031 C171.1094,251.875 170.9531,252.1563 170.9531,252.4375 C170.9531,252.7188 171.0938,252.9688 171.3125,253.1406 C171.4844,253.25 171.6563,253.2813 172.0938,253.2813 L173.1719,253.2813 L170.5313,259.7969 C170.1094,259.7969 169.9531,259.8125 169.7969,259.9219 C169.5469,260.0781 169.3906,260.3594 169.3906,260.6563 C169.3906,261.2188 169.7656,261.5 170.5156,261.5 L172.7813,261.5 C173.1406,261.5 173.3594,261.4688 173.4844,261.375 C173.75,261.2344 173.8906,260.9375 173.8906,260.6563 C173.8906,260.375 173.7656,260.125 173.5469,259.9531 C173.375,259.8281 173.2344,259.7969 172.7813,259.7969 L172.3906,259.7969 L172.7813,258.8125 L176.8281,258.8125 Z M176.125,257.1094 L173.4531,257.1094 L174.7969,253.8438 L176.125,257.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="32" x="195.25" y="261.8467">Stub</text><line style="stroke:#181818;stroke-width:0.5;" x1="105" x2="285" y1="273" y2="273"/><line style="stroke:#181818;stroke-width:0.5;" x1="105" x2="285" y1="281" y2="281"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="110" y="297.9951">serviceDoneExecuting()</text></g><g id="elem_GMN12"><path d="M321.5,253 L321.5,269 L286.289,273 L321.5,277 L321.5,293.2656 A0,0 0 0 0 321.5,293.2656 L448.5,293.2656 A0,0 0 0 0 448.5,293.2656 L448.5,263 L438.5,253 L321.5,253 A0,0 0 0 0 321.5,253 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M438.5,253 L438.5,263 L448.5,263 L438.5,253 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="106" x="327.5" y="270.0669">IActivityManager</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="65" x="327.5" y="285.1997">&#20869;&#37096;&#38745;&#24577;&#31867;</text></g><!--class ActivityManagerService--><g id="elem_ActivityManagerService"><rect fill="#F1F1F1" height="48" id="ActivityManagerService" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="202" x="94" y="373"/><ellipse cx="109" cy="389" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M111.3438,384.6719 C110.4063,384.2344 109.8125,384.0938 108.9375,384.0938 C106.3125,384.0938 104.3125,386.1719 104.3125,388.8906 L104.3125,390.0156 C104.3125,392.5938 106.4219,394.4844 109.3125,394.4844 C110.5313,394.4844 111.6875,394.1875 112.4375,393.6406 C113.0156,393.2344 113.3438,392.7813 113.3438,392.3906 C113.3438,391.9375 112.9531,391.5469 112.4844,391.5469 C112.2656,391.5469 112.0625,391.625 111.875,391.8125 C111.4219,392.2969 111.4219,392.2969 111.2344,392.3906 C110.8125,392.6563 110.125,392.7813 109.3594,392.7813 C107.3125,392.7813 106.0156,391.6875 106.0156,389.9844 L106.0156,388.8906 C106.0156,387.1094 107.2656,385.7969 109,385.7969 C109.5781,385.7969 110.1875,385.9531 110.6563,386.2031 C111.1406,386.4844 111.3125,386.7031 111.4063,387.1094 C111.4688,387.5156 111.5,387.6406 111.6406,387.7656 C111.7813,387.9063 112.0156,388.0156 112.2344,388.0156 C112.5,388.0156 112.7656,387.875 112.9375,387.6563 C113.0469,387.5 113.0781,387.3125 113.0781,386.8906 L113.0781,385.4688 C113.0781,385.0313 113.0625,384.9063 112.9688,384.75 C112.8125,384.4844 112.5313,384.3438 112.2344,384.3438 C111.9375,384.3438 111.7344,384.4375 111.5156,384.75 L111.3438,384.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="123" y="393.8467">ActivityManagerService</text><line style="stroke:#181818;stroke-width:0.5;" x1="95" x2="295" y1="405" y2="405"/><line style="stroke:#181818;stroke-width:0.5;" x1="95" x2="295" y1="413" y2="413"/></g><!--class ActiveServices--><g id="elem_ActiveServices"><rect codeLine="12" fill="#F1F1F1" height="64.2969" id="ActiveServices" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="234" x="331" y="365"/><ellipse cx="390.75" cy="381" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M393.0938,376.6719 C392.1563,376.2344 391.5625,376.0938 390.6875,376.0938 C388.0625,376.0938 386.0625,378.1719 386.0625,380.8906 L386.0625,382.0156 C386.0625,384.5938 388.1719,386.4844 391.0625,386.4844 C392.2813,386.4844 393.4375,386.1875 394.1875,385.6406 C394.7656,385.2344 395.0938,384.7813 395.0938,384.3906 C395.0938,383.9375 394.7031,383.5469 394.2344,383.5469 C394.0156,383.5469 393.8125,383.625 393.625,383.8125 C393.1719,384.2969 393.1719,384.2969 392.9844,384.3906 C392.5625,384.6563 391.875,384.7813 391.1094,384.7813 C389.0625,384.7813 387.7656,383.6875 387.7656,381.9844 L387.7656,380.8906 C387.7656,379.1094 389.0156,377.7969 390.75,377.7969 C391.3281,377.7969 391.9375,377.9531 392.4063,378.2031 C392.8906,378.4844 393.0625,378.7031 393.1563,379.1094 C393.2188,379.5156 393.25,379.6406 393.3906,379.7656 C393.5313,379.9063 393.7656,380.0156 393.9844,380.0156 C394.25,380.0156 394.5156,379.875 394.6875,379.6563 C394.7969,379.5 394.8281,379.3125 394.8281,378.8906 L394.8281,377.4688 C394.8281,377.0313 394.8125,376.9063 394.7188,376.75 C394.5625,376.4844 394.2813,376.3438 393.9844,376.3438 C393.6875,376.3438 393.4844,376.4375 393.2656,376.75 L393.0938,376.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="411.25" y="385.8467">ActiveServices</text><line style="stroke:#181818;stroke-width:0.5;" x1="332" x2="564" y1="397" y2="397"/><line style="stroke:#181818;stroke-width:0.5;" x1="332" x2="564" y1="405" y2="405"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="337" y="421.9951">serviceDoneExecutingLocked()</text></g><!--reverse link IActivityManager to Stub--><g id="link_IActivityManager_Stub"><path codeLine="8" d="M136.6205,195.416 C150.6135,213.772 157.35,222.61 171.335,240.955 " fill="none" id="IActivityManager-backto-Stub" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="125.708,181.101,131.8488,199.0534,141.3921,191.7785,125.708,181.101" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Binder to Stub--><g id="link_Binder_Stub"><path codeLine="9" d="M260.1122,187.4927 C245.4102,206.5747 235.431,219.525 219.228,240.555 " fill="none" id="Binder-backto-Stub" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="271.098,173.234,255.3593,183.8308,264.8651,191.1547,271.098,173.234" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Stub to ActivityManagerService--><g id="link_Stub_ActivityManagerService"><path codeLine="11" d="M195,323.101 C195,344.139 195,353.4806 195,372.6609 " fill="none" id="Stub-backto-ActivityManagerService" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="195,305.101,189,323.101,201,323.101,195,305.101" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ActivityManagerService to ActiveServices--><g id="link_ActivityManagerService_ActiveServices"><path codeLine="15" d="M308.299,397 C319.854,397 319.41,397 330.965,397 " fill="none" id="ActivityManagerService-backto-ActiveServices" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="296.299,397,302.299,401,308.299,397,302.299,393,296.299,397" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[oymhIIrAIqnELV1qJ2x9BCiigVHDp4jCJorIgEPI08BYrAAopEHKb_oyLDUArEJIaioyT0rDhbgklFoIL8MI_0A5_3HClLOApwTiH1VLIynCoNa-PVwpZWbSYKd59KM9oIKAmIMbIOIimZ3UfaPN5woJAp4lfIW_CqKllrZFAJCl1KKExCAYpFIC4f0RmHPPOJWr9kzfM-lBvXKlvyvyrj3uVEDkBh12i2beIeCXxkDApaaiBeP8faB5Yl5umIS_EJir1UmHx0OgQEcYcGO0]--></g></svg>

<p>LeakCanary通过动态代理<code>IActivityManager</code>接口的方式来hook serviceDoneExecuting。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//ServiceWatcher.kt</span></span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">install</span><span class="params">()</span></span> &#123;</span><br><span class="line">    ......</span><br><span class="line">      swapActivityManager &#123; activityManagerInterface, activityManagerInstance -&gt;</span><br><span class="line">        uninstallActivityManager = &#123;</span><br><span class="line">          swapActivityManager &#123; _, _ -&gt;</span><br><span class="line">            activityManagerInstance</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Proxy.newProxyInstance(</span><br><span class="line">          activityManagerInterface.classLoader, arrayOf(activityManagerInterface)</span><br><span class="line">        ) &#123; _, method, args -&gt;</span><br><span class="line">          <span class="keyword">if</span> (METHOD_SERVICE_DONE_EXECUTING == method.name) &#123;</span><br><span class="line">            <span class="keyword">val</span> token = args!![<span class="number">0</span>] <span class="keyword">as</span> IBinder</span><br><span class="line">            <span class="keyword">if</span> (servicesToBeDestroyed.containsKey(token)) &#123;</span><br><span class="line">              onServiceDestroyed(token)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (args == <span class="literal">null</span>) &#123;</span><br><span class="line">              method.invoke(activityManagerInstance)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              method.invoke(activityManagerInstance, *args)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125; <span class="keyword">catch</span> (invocationException: InvocationTargetException) &#123;</span><br><span class="line">            <span class="keyword">throw</span> invocationException.targetException</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ......</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">onServiceDestroyed</span><span class="params">(token: <span class="type">IBinder</span>)</span></span> &#123;</span><br><span class="line">    servicesToBeDestroyed.remove(token)?.also &#123; serviceWeakReference -&gt;</span><br><span class="line">      serviceWeakReference.<span class="keyword">get</span>()?.let &#123; service -&gt;</span><br><span class="line">        reachabilityWatcher.expectWeaklyReachable( <span class="comment">//后面步骤就和activity的相同了</span></span><br><span class="line">          service, <span class="string">&quot;<span class="subst">$&#123;service::class.java.name&#125;</span> received Service#onDestroy() callback&quot;</span></span><br><span class="line">        )</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h2 id="Fragment泄漏监控"><a href="#Fragment泄漏监控" class="headerlink" title="Fragment泄漏监控"></a>Fragment泄漏监控</h2><p>Fragment的监控是先接收onActivityCreated事件，然后通过activity拿到FragmentManager，然后注册FragmentLifecycleCallbacks，通过onFragmentViewDestroyed回调事件来监控fragment view的内存泄漏，通过onFragmentDestroyed回调事件来监控fragment的泄漏。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="278px" preserveAspectRatio="none" style="width:993px;height:278px;background:#FFFFFF;" version="1.1" viewBox="0 0 993 278" width="993px" zoomAndPan="magnify"><defs/><g><!--class FragmentAndViewModelWatcher--><g id="elem_FragmentAndViewModelWatcher"><rect fill="#F1F1F1" height="48" id="FragmentAndViewModelWatcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="268" x="338.5" y="7"/><ellipse cx="353.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M355.8438,18.6719 C354.9063,18.2344 354.3125,18.0938 353.4375,18.0938 C350.8125,18.0938 348.8125,20.1719 348.8125,22.8906 L348.8125,24.0156 C348.8125,26.5938 350.9219,28.4844 353.8125,28.4844 C355.0313,28.4844 356.1875,28.1875 356.9375,27.6406 C357.5156,27.2344 357.8438,26.7813 357.8438,26.3906 C357.8438,25.9375 357.4531,25.5469 356.9844,25.5469 C356.7656,25.5469 356.5625,25.625 356.375,25.8125 C355.9219,26.2969 355.9219,26.2969 355.7344,26.3906 C355.3125,26.6563 354.625,26.7813 353.8594,26.7813 C351.8125,26.7813 350.5156,25.6875 350.5156,23.9844 L350.5156,22.8906 C350.5156,21.1094 351.7656,19.7969 353.5,19.7969 C354.0781,19.7969 354.6875,19.9531 355.1563,20.2031 C355.6406,20.4844 355.8125,20.7031 355.9063,21.1094 C355.9688,21.5156 356,21.6406 356.1406,21.7656 C356.2813,21.9063 356.5156,22.0156 356.7344,22.0156 C357,22.0156 357.2656,21.875 357.4375,21.6563 C357.5469,21.5 357.5781,21.3125 357.5781,20.8906 L357.5781,19.4688 C357.5781,19.0313 357.5625,18.9063 357.4688,18.75 C357.3125,18.4844 357.0313,18.3438 356.7344,18.3438 C356.4375,18.3438 356.2344,18.4375 356.0156,18.75 L355.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="236" x="367.5" y="27.8467">FragmentAndViewModelWatcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="339.5" x2="605.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="339.5" x2="605.5" y1="47" y2="47"/></g><!--class AndroidOFragmentDestroyWatcher--><g id="elem_AndroidOFragmentDestroyWatcher"><rect fill="#F1F1F1" height="48" id="AndroidOFragmentDestroyWatcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="287" x="7" y="115"/><ellipse cx="22" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,126.6719 C23.4063,126.2344 22.8125,126.0938 21.9375,126.0938 C19.3125,126.0938 17.3125,128.1719 17.3125,130.8906 L17.3125,132.0156 C17.3125,134.5938 19.4219,136.4844 22.3125,136.4844 C23.5313,136.4844 24.6875,136.1875 25.4375,135.6406 C26.0156,135.2344 26.3438,134.7813 26.3438,134.3906 C26.3438,133.9375 25.9531,133.5469 25.4844,133.5469 C25.2656,133.5469 25.0625,133.625 24.875,133.8125 C24.4219,134.2969 24.4219,134.2969 24.2344,134.3906 C23.8125,134.6563 23.125,134.7813 22.3594,134.7813 C20.3125,134.7813 19.0156,133.6875 19.0156,131.9844 L19.0156,130.8906 C19.0156,129.1094 20.2656,127.7969 22,127.7969 C22.5781,127.7969 23.1875,127.9531 23.6563,128.2031 C24.1406,128.4844 24.3125,128.7031 24.4063,129.1094 C24.4688,129.5156 24.5,129.6406 24.6406,129.7656 C24.7813,129.9063 25.0156,130.0156 25.2344,130.0156 C25.5,130.0156 25.7656,129.875 25.9375,129.6563 C26.0469,129.5 26.0781,129.3125 26.0781,128.8906 L26.0781,127.4688 C26.0781,127.0313 26.0625,126.9063 25.9688,126.75 C25.8125,126.4844 25.5313,126.3438 25.2344,126.3438 C24.9375,126.3438 24.7344,126.4375 24.5156,126.75 L24.3438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="255" x="36" y="135.8467">AndroidOFragmentDestroyWatcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="293" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="293" y1="155" y2="155"/></g><g id="elem_GMN5"><path d="M84,234.5 L84,259.6328 A0,0 0 0 0 84,259.6328 L217,259.6328 A0,0 0 0 0 217,259.6328 L217,244.5 L207,234.5 L154.5,234.5 L150.5,163 L146.5,234.5 L84,234.5 A0,0 0 0 0 84,234.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M207,234.5 L207,244.5 L217,244.5 L207,234.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="112" x="90" y="251.5669">Android 8.0&#21450;&#20197;&#19978;</text></g><!--class AndroidXFragmentDestroyWatcher--><g id="elem_AndroidXFragmentDestroyWatcher"><rect fill="#F1F1F1" height="48" id="AndroidXFragmentDestroyWatcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="286" x="329.5" y="115"/><ellipse cx="344.5" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M346.8438,126.6719 C345.9063,126.2344 345.3125,126.0938 344.4375,126.0938 C341.8125,126.0938 339.8125,128.1719 339.8125,130.8906 L339.8125,132.0156 C339.8125,134.5938 341.9219,136.4844 344.8125,136.4844 C346.0313,136.4844 347.1875,136.1875 347.9375,135.6406 C348.5156,135.2344 348.8438,134.7813 348.8438,134.3906 C348.8438,133.9375 348.4531,133.5469 347.9844,133.5469 C347.7656,133.5469 347.5625,133.625 347.375,133.8125 C346.9219,134.2969 346.9219,134.2969 346.7344,134.3906 C346.3125,134.6563 345.625,134.7813 344.8594,134.7813 C342.8125,134.7813 341.5156,133.6875 341.5156,131.9844 L341.5156,130.8906 C341.5156,129.1094 342.7656,127.7969 344.5,127.7969 C345.0781,127.7969 345.6875,127.9531 346.1563,128.2031 C346.6406,128.4844 346.8125,128.7031 346.9063,129.1094 C346.9688,129.5156 347,129.6406 347.1406,129.7656 C347.2813,129.9063 347.5156,130.0156 347.7344,130.0156 C348,130.0156 348.2656,129.875 348.4375,129.6563 C348.5469,129.5 348.5781,129.3125 348.5781,128.8906 L348.5781,127.4688 C348.5781,127.0313 348.5625,126.9063 348.4688,126.75 C348.3125,126.4844 348.0313,126.3438 347.7344,126.3438 C347.4375,126.3438 347.2344,126.4375 347.0156,126.75 L346.8438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="254" x="358.5" y="135.8467">AndroidXFragmentDestroyWatcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="330.5" x2="614.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="330.5" x2="614.5" y1="155" y2="155"/></g><g id="elem_GMN10"><path d="M298.5,234.5 L298.5,259.6328 A0,0 0 0 0 298.5,259.6328 L430.5,259.6328 A0,0 0 0 0 430.5,259.6328 L430.5,244.5 L420.5,234.5 L380.239,234.5 L449.066,163 L372.239,234.5 L298.5,234.5 A0,0 0 0 0 298.5,234.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M420.5,234.5 L420.5,244.5 L430.5,244.5 L420.5,234.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="111" x="304.5" y="251.5669">AndroidX support</text></g><!--class ViewModelClearedWatcher--><g id="elem_ViewModelClearedWatcher"><rect fill="#F1F1F1" height="48" id="ViewModelClearedWatcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="225" x="466" y="223"/><ellipse cx="481" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M483.3438,234.6719 C482.4063,234.2344 481.8125,234.0938 480.9375,234.0938 C478.3125,234.0938 476.3125,236.1719 476.3125,238.8906 L476.3125,240.0156 C476.3125,242.5938 478.4219,244.4844 481.3125,244.4844 C482.5313,244.4844 483.6875,244.1875 484.4375,243.6406 C485.0156,243.2344 485.3438,242.7813 485.3438,242.3906 C485.3438,241.9375 484.9531,241.5469 484.4844,241.5469 C484.2656,241.5469 484.0625,241.625 483.875,241.8125 C483.4219,242.2969 483.4219,242.2969 483.2344,242.3906 C482.8125,242.6563 482.125,242.7813 481.3594,242.7813 C479.3125,242.7813 478.0156,241.6875 478.0156,239.9844 L478.0156,238.8906 C478.0156,237.1094 479.2656,235.7969 481,235.7969 C481.5781,235.7969 482.1875,235.9531 482.6563,236.2031 C483.1406,236.4844 483.3125,236.7031 483.4063,237.1094 C483.4688,237.5156 483.5,237.6406 483.6406,237.7656 C483.7813,237.9063 484.0156,238.0156 484.2344,238.0156 C484.5,238.0156 484.7656,237.875 484.9375,237.6563 C485.0469,237.5 485.0781,237.3125 485.0781,236.8906 L485.0781,235.4688 C485.0781,235.0313 485.0625,234.9063 484.9688,234.75 C484.8125,234.4844 484.5313,234.3438 484.2344,234.3438 C483.9375,234.3438 483.7344,234.4375 483.5156,234.75 L483.3438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="495" y="243.8467">ViewModelClearedWatcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="467" x2="690" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="467" x2="690" y1="263" y2="263"/></g><!--class AndroidSupportFragmentDestroyWatcher--><g id="elem_AndroidSupportFragmentDestroyWatcher"><rect fill="#F1F1F1" height="48" id="AndroidSupportFragmentDestroyWatcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="335" x="651" y="115"/><ellipse cx="666" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M668.3438,126.6719 C667.4063,126.2344 666.8125,126.0938 665.9375,126.0938 C663.3125,126.0938 661.3125,128.1719 661.3125,130.8906 L661.3125,132.0156 C661.3125,134.5938 663.4219,136.4844 666.3125,136.4844 C667.5313,136.4844 668.6875,136.1875 669.4375,135.6406 C670.0156,135.2344 670.3438,134.7813 670.3438,134.3906 C670.3438,133.9375 669.9531,133.5469 669.4844,133.5469 C669.2656,133.5469 669.0625,133.625 668.875,133.8125 C668.4219,134.2969 668.4219,134.2969 668.2344,134.3906 C667.8125,134.6563 667.125,134.7813 666.3594,134.7813 C664.3125,134.7813 663.0156,133.6875 663.0156,131.9844 L663.0156,130.8906 C663.0156,129.1094 664.2656,127.7969 666,127.7969 C666.5781,127.7969 667.1875,127.9531 667.6563,128.2031 C668.1406,128.4844 668.3125,128.7031 668.4063,129.1094 C668.4688,129.5156 668.5,129.6406 668.6406,129.7656 C668.7813,129.9063 669.0156,130.0156 669.2344,130.0156 C669.5,130.0156 669.7656,129.875 669.9375,129.6563 C670.0469,129.5 670.0781,129.3125 670.0781,128.8906 L670.0781,127.4688 C670.0781,127.0313 670.0625,126.9063 669.9688,126.75 C669.8125,126.4844 669.5313,126.3438 669.2344,126.3438 C668.9375,126.3438 668.7344,126.4375 668.5156,126.75 L668.3438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="303" x="680" y="135.8467">AndroidSupportFragmentDestroyWatcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="652" x2="985" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="652" x2="985" y1="155" y2="155"/></g><g id="elem_GMN17"><path d="M773.5,234.5 L773.5,259.6328 A0,0 0 0 0 773.5,259.6328 L863.5,259.6328 A0,0 0 0 0 863.5,259.6328 L863.5,244.5 L853.5,234.5 L822.5,234.5 L818.5,163 L814.5,234.5 L773.5,234.5 A0,0 0 0 0 773.5,234.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M853.5,234.5 L853.5,244.5 L863.5,244.5 L853.5,234.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="69" x="779.5" y="251.5669">support.v4</text></g><!--reverse link FragmentAndViewModelWatcher to AndroidOFragmentDestroyWatcher--><g id="link_FragmentAndViewModelWatcher_AndroidOFragmentDestroyWatcher"><path codeLine="1" d="M391.2328,58.7523 C337.3148,76.5023 274.463,97.192 220.51,114.953 " fill="none" id="FragmentAndViewModelWatcher-backto-AndroidOFragmentDestroyWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="402.631,55,395.6811,53.0768,391.2328,58.7523,398.1827,60.6756,402.631,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link FragmentAndViewModelWatcher to AndroidXFragmentDestroyWatcher--><g id="link_FragmentAndViewModelWatcher_AndroidXFragmentDestroyWatcher"><path codeLine="3" d="M472.5,67 C472.5,84.658 472.5,96.941 472.5,114.678 " fill="none" id="FragmentAndViewModelWatcher-backto-AndroidXFragmentDestroyWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="472.5,55,468.5,61,472.5,67,476.5,61,472.5,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--link AndroidXFragmentDestroyWatcher to ViewModelClearedWatcher--><g id="link_AndroidXFragmentDestroyWatcher_ViewModelClearedWatcher"><path codeLine="5" d="M495.5,163 C513.158,180.6584 533.1984,200.6981 550.9354,218.4357 " fill="none" id="AndroidXFragmentDestroyWatcher-to-ViewModelClearedWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="555.178,222.6784,551.6426,213.486,551.6425,219.1428,545.9857,219.1427,555.178,222.6784" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link FragmentAndViewModelWatcher to AndroidSupportFragmentDestroyWatcher--><g id="link_FragmentAndViewModelWatcher_AndroidSupportFragmentDestroyWatcher"><path codeLine="6" d="M559.0506,58.5152 C616.9866,76.2652 685.297,97.192 743.272,114.953 " fill="none" id="FragmentAndViewModelWatcher-backto-AndroidSupportFragmentDestroyWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="547.577,55,552.1421,60.5821,559.0506,58.5152,554.4855,52.9331,547.577,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[SojAJCzDpIjnp4i9oqmjzyrFISq9Jon9paWjKj3IrLK0YXVbPwRukq7LkQGMbnJbLqALSENbbwGg9EMNbEJdAkId4L1j1PDNiD0pUDhVzMJtqYSxkhZSY7D214bEY23WX0Y5ujA2WloY4Yxy6XHqTUqKuCvopabDB4fDWLbDfCk38JQHv7wyUXIiOAxNApC10000]--></g></svg>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">internal</span> <span class="keyword">class</span> <span class="title class_">AndroidOFragmentDestroyWatcher</span>(</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> reachabilityWatcher: ReachabilityWatcher</span><br><span class="line">) : (Activity) -&gt; <span class="built_in">Unit</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> fragmentLifecycleCallbacks = <span class="keyword">object</span> : FragmentManager.FragmentLifecycleCallbacks() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onFragmentViewDestroyed</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">      fm: <span class="type">FragmentManager</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">      fragment: <span class="type">Fragment</span></span></span></span><br><span class="line"><span class="params"><span class="function">    )</span></span> &#123;</span><br><span class="line">      <span class="keyword">val</span> view = fragment.view</span><br><span class="line">      <span class="keyword">if</span> (view != <span class="literal">null</span>) &#123;</span><br><span class="line">        reachabilityWatcher.expectWeaklyReachable(</span><br><span class="line">          view, <span class="string">&quot;<span class="subst">$&#123;fragment::class.java.name&#125;</span> received Fragment#onDestroyView() callback &quot;</span> +</span><br><span class="line">          <span class="string">&quot;(references to its views should be cleared to prevent leaks)&quot;</span></span><br><span class="line">        )</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onFragmentDestroyed</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">      fm: <span class="type">FragmentManager</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">      fragment: <span class="type">Fragment</span></span></span></span><br><span class="line"><span class="params"><span class="function">    )</span></span> &#123;</span><br><span class="line">      reachabilityWatcher.expectWeaklyReachable(</span><br><span class="line">        fragment, <span class="string">&quot;<span class="subst">$&#123;fragment::class.java.name&#125;</span> received Fragment#onDestroy() callback&quot;</span></span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">invoke</span><span class="params">(activity: <span class="type">Activity</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> fragmentManager = activity.fragmentManager</span><br><span class="line">    fragmentManager.registerFragmentLifecycleCallbacks(fragmentLifecycleCallbacks, <span class="literal">true</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="ViewModel泄漏监控"><a href="#ViewModel泄漏监控" class="headerlink" title="ViewModel泄漏监控"></a>ViewModel泄漏监控</h3><p>在AndroidXFragmentDestroyWatcher中初始化ViewModel的泄漏监控。<code>ViewModelClearedWatcher</code>继承自ViewModel。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="328px" preserveAspectRatio="none" style="width:603px;height:328px;background:#FFFFFF;" version="1.1" viewBox="0 0 603 328" width="603px" zoomAndPan="magnify"><defs/><g><!--class ViewModel--><g id="elem_ViewModel"><rect codeLine="1" fill="#F1F1F1" height="64.2969" id="ViewModel" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="129" x="61" y="7"/><ellipse cx="85" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M87.0781,24.8125 L87.4688,25.7969 L87.0781,25.7969 C86.625,25.7969 86.5156,25.8125 86.3594,25.9219 C86.1094,26.0781 85.9531,26.3594 85.9531,26.6563 C85.9531,26.9219 86.0938,27.1719 86.3125,27.3281 C86.4531,27.4531 86.6563,27.5 87.0781,27.5 L89.4375,27.5 C89.7969,27.5 90.0156,27.4688 90.1563,27.375 C90.4063,27.2344 90.5625,26.9375 90.5625,26.6563 C90.5625,26.375 90.4219,26.125 90.2031,25.9688 C90.0313,25.8281 89.875,25.7969 89.4063,25.7969 L86.0156,17.5938 L82.3438,17.5938 C81.8906,17.5938 81.7656,17.6094 81.6094,17.7031 C81.3594,17.875 81.2031,18.1563 81.2031,18.4375 C81.2031,18.7188 81.3438,18.9688 81.5625,19.1406 C81.7344,19.25 81.9063,19.2813 82.3438,19.2813 L83.4219,19.2813 L80.7813,25.7969 C80.3594,25.7969 80.2031,25.8125 80.0469,25.9219 C79.7969,26.0781 79.6406,26.3594 79.6406,26.6563 C79.6406,27.2188 80.0156,27.5 80.7656,27.5 L83.0313,27.5 C83.3906,27.5 83.6094,27.4688 83.7344,27.375 C84,27.2344 84.1406,26.9375 84.1406,26.6563 C84.1406,26.375 84.0156,26.125 83.7969,25.9531 C83.625,25.8281 83.4844,25.7969 83.0313,25.7969 L82.6406,25.7969 L83.0313,24.8125 L87.0781,24.8125 Z M86.375,23.1094 L83.7031,23.1094 L85.0469,19.8438 L86.375,23.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="77" x="101" y="27.8467">ViewModel</text><line style="stroke:#181818;stroke-width:0.5;" x1="62" x2="189" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="62" x2="189" y1="47" y2="47"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="67" y="63.9951">void onCleared()</text></g><!--class ViewModelClearedWatcher--><g id="elem_ViewModelClearedWatcher"><rect codeLine="4" fill="#F5DEB3" height="48" id="ViewModelClearedWatcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="225" x="13" y="132"/><ellipse cx="28" cy="148" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M30.3438,143.6719 C29.4063,143.2344 28.8125,143.0938 27.9375,143.0938 C25.3125,143.0938 23.3125,145.1719 23.3125,147.8906 L23.3125,149.0156 C23.3125,151.5938 25.4219,153.4844 28.3125,153.4844 C29.5313,153.4844 30.6875,153.1875 31.4375,152.6406 C32.0156,152.2344 32.3438,151.7813 32.3438,151.3906 C32.3438,150.9375 31.9531,150.5469 31.4844,150.5469 C31.2656,150.5469 31.0625,150.625 30.875,150.8125 C30.4219,151.2969 30.4219,151.2969 30.2344,151.3906 C29.8125,151.6563 29.125,151.7813 28.3594,151.7813 C26.3125,151.7813 25.0156,150.6875 25.0156,148.9844 L25.0156,147.8906 C25.0156,146.1094 26.2656,144.7969 28,144.7969 C28.5781,144.7969 29.1875,144.9531 29.6563,145.2031 C30.1406,145.4844 30.3125,145.7031 30.4063,146.1094 C30.4688,146.5156 30.5,146.6406 30.6406,146.7656 C30.7813,146.9063 31.0156,147.0156 31.2344,147.0156 C31.5,147.0156 31.7656,146.875 31.9375,146.6563 C32.0469,146.5 32.0781,146.3125 32.0781,145.8906 L32.0781,144.4688 C32.0781,144.0313 32.0625,143.9063 31.9688,143.75 C31.8125,143.4844 31.5313,143.3438 31.2344,143.3438 C30.9375,143.3438 30.7344,143.4375 30.5156,143.75 L30.3438,143.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="42" y="152.8467">ViewModelClearedWatcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="14" x2="237" y1="164" y2="164"/><line style="stroke:#181818;stroke-width:0.5;" x1="14" x2="237" y1="172" y2="172"/></g><!--class ViewModelStoreOwner--><g id="elem_ViewModelStoreOwner"><rect codeLine="6" fill="#F1F1F1" height="64.2969" id="ViewModelStoreOwner" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="285" x="255" y="7"/><ellipse cx="312.75" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M313.7031,19.7813 L315.4219,19.7813 C315.8125,19.7813 316,19.75 316.125,19.6719 C316.3906,19.5156 316.5313,19.2344 316.5313,18.9375 C316.5313,18.6719 316.4219,18.4063 316.1875,18.2344 C316.0156,18.125 315.875,18.0938 315.4219,18.0938 L310.2813,18.0938 C309.8438,18.0938 309.7188,18.1094 309.5625,18.2031 C309.3125,18.3594 309.1563,18.6563 309.1563,18.9375 C309.1563,19.2188 309.2969,19.4688 309.5156,19.6406 C309.6719,19.75 309.8594,19.7813 310.2813,19.7813 L312,19.7813 L312,26.2969 L310.2813,26.2969 C309.8438,26.2969 309.7188,26.3125 309.5625,26.4219 C309.3125,26.5781 309.1563,26.8594 309.1563,27.1563 C309.1563,27.4063 309.2969,27.6719 309.5156,27.8281 C309.6719,27.9531 309.875,28 310.2813,28 L315.4219,28 C316.1719,28 316.5313,27.7188 316.5313,27.1563 C316.5313,26.875 316.4219,26.625 316.1875,26.4531 C316.0156,26.3281 315.875,26.2969 315.4219,26.2969 L313.7031,26.2969 L313.7031,19.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="161" x="333.25" y="27.8467">ViewModelStoreOwner</text><line style="stroke:#181818;stroke-width:0.5;" x1="256" x2="539" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="256" x2="539" y1="47" y2="47"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="273" x="261" y="63.9951">ViewModelStore getViewModelStore()</text></g><!--class FragmentActivity--><g id="elem_FragmentActivity"><rect fill="#F1F1F1" height="48" id="FragmentActivity" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="158" x="410.5" y="132"/><ellipse cx="425.5" cy="148" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M427.8438,143.6719 C426.9063,143.2344 426.3125,143.0938 425.4375,143.0938 C422.8125,143.0938 420.8125,145.1719 420.8125,147.8906 L420.8125,149.0156 C420.8125,151.5938 422.9219,153.4844 425.8125,153.4844 C427.0313,153.4844 428.1875,153.1875 428.9375,152.6406 C429.5156,152.2344 429.8438,151.7813 429.8438,151.3906 C429.8438,150.9375 429.4531,150.5469 428.9844,150.5469 C428.7656,150.5469 428.5625,150.625 428.375,150.8125 C427.9219,151.2969 427.9219,151.2969 427.7344,151.3906 C427.3125,151.6563 426.625,151.7813 425.8594,151.7813 C423.8125,151.7813 422.5156,150.6875 422.5156,148.9844 L422.5156,147.8906 C422.5156,146.1094 423.7656,144.7969 425.5,144.7969 C426.0781,144.7969 426.6875,144.9531 427.1563,145.2031 C427.6406,145.4844 427.8125,145.7031 427.9063,146.1094 C427.9688,146.5156 428,146.6406 428.1406,146.7656 C428.2813,146.9063 428.5156,147.0156 428.7344,147.0156 C429,147.0156 429.2656,146.875 429.4375,146.6563 C429.5469,146.5 429.5781,146.3125 429.5781,145.8906 L429.5781,144.4688 C429.5781,144.0313 429.5625,143.9063 429.4688,143.75 C429.3125,143.4844 429.0313,143.3438 428.7344,143.3438 C428.4375,143.3438 428.2344,143.4375 428.0156,143.75 L427.8438,143.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="439.5" y="152.8467">FragmentActivity</text><line style="stroke:#181818;stroke-width:0.5;" x1="411.5" x2="567.5" y1="164" y2="164"/><line style="stroke:#181818;stroke-width:0.5;" x1="411.5" x2="567.5" y1="172" y2="172"/></g><!--class ViewModelStore1--><g id="elem_ViewModelStore1"><rect codeLine="10" fill="#F1F1F1" height="64.2969" id="ViewModelStore1" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="275" x="321" y="257"/><ellipse cx="395.75" cy="273" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M398.0938,268.6719 C397.1563,268.2344 396.5625,268.0938 395.6875,268.0938 C393.0625,268.0938 391.0625,270.1719 391.0625,272.8906 L391.0625,274.0156 C391.0625,276.5938 393.1719,278.4844 396.0625,278.4844 C397.2813,278.4844 398.4375,278.1875 399.1875,277.6406 C399.7656,277.2344 400.0938,276.7813 400.0938,276.3906 C400.0938,275.9375 399.7031,275.5469 399.2344,275.5469 C399.0156,275.5469 398.8125,275.625 398.625,275.8125 C398.1719,276.2969 398.1719,276.2969 397.9844,276.3906 C397.5625,276.6563 396.875,276.7813 396.1094,276.7813 C394.0625,276.7813 392.7656,275.6875 392.7656,273.9844 L392.7656,272.8906 C392.7656,271.1094 394.0156,269.7969 395.75,269.7969 C396.3281,269.7969 396.9375,269.9531 397.4063,270.2031 C397.8906,270.4844 398.0625,270.7031 398.1563,271.1094 C398.2188,271.5156 398.25,271.6406 398.3906,271.7656 C398.5313,271.9063 398.7656,272.0156 398.9844,272.0156 C399.25,272.0156 399.5156,271.875 399.6875,271.6563 C399.7969,271.5 399.8281,271.3125 399.8281,270.8906 L399.8281,269.4688 C399.8281,269.0313 399.8125,268.9063 399.7188,268.75 C399.5625,268.4844 399.2813,268.3438 398.9844,268.3438 C398.6875,268.3438 398.4844,268.4375 398.2656,268.75 L398.0938,268.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="416.25" y="277.8467">ViewModelStore</text><line style="stroke:#181818;stroke-width:0.5;" x1="322" x2="595" y1="289" y2="289"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="327" y="305.9951">HashMap&lt;String, ViewModel&gt; mMap</text><line style="stroke:#181818;stroke-width:0.5;" x1="322" x2="595" y1="313.2969" y2="313.2969"/></g><!--class ViewModelStore2--><g id="elem_ViewModelStore2"><rect codeLine="15" fill="#F1F1F1" height="64.2969" id="ViewModelStore2" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="275" x="7" y="257"/><ellipse cx="81.75" cy="273" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M84.0938,268.6719 C83.1563,268.2344 82.5625,268.0938 81.6875,268.0938 C79.0625,268.0938 77.0625,270.1719 77.0625,272.8906 L77.0625,274.0156 C77.0625,276.5938 79.1719,278.4844 82.0625,278.4844 C83.2813,278.4844 84.4375,278.1875 85.1875,277.6406 C85.7656,277.2344 86.0938,276.7813 86.0938,276.3906 C86.0938,275.9375 85.7031,275.5469 85.2344,275.5469 C85.0156,275.5469 84.8125,275.625 84.625,275.8125 C84.1719,276.2969 84.1719,276.2969 83.9844,276.3906 C83.5625,276.6563 82.875,276.7813 82.1094,276.7813 C80.0625,276.7813 78.7656,275.6875 78.7656,273.9844 L78.7656,272.8906 C78.7656,271.1094 80.0156,269.7969 81.75,269.7969 C82.3281,269.7969 82.9375,269.9531 83.4063,270.2031 C83.8906,270.4844 84.0625,270.7031 84.1563,271.1094 C84.2188,271.5156 84.25,271.6406 84.3906,271.7656 C84.5313,271.9063 84.7656,272.0156 84.9844,272.0156 C85.25,272.0156 85.5156,271.875 85.6875,271.6563 C85.7969,271.5 85.8281,271.3125 85.8281,270.8906 L85.8281,269.4688 C85.8281,269.0313 85.8125,268.9063 85.7188,268.75 C85.5625,268.4844 85.2813,268.3438 84.9844,268.3438 C84.6875,268.3438 84.4844,268.4375 84.2656,268.75 L84.0938,268.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="102.25" y="277.8467">ViewModelStore</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="281" y1="289" y2="289"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="13" y="305.9951">HashMap&lt;String, ViewModel&gt; mMap</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="281" y1="313.2969" y2="313.2969"/></g><!--class Fragment--><g id="elem_Fragment"><rect fill="#F1F1F1" height="48" id="Fragment" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="102" x="273.5" y="132"/><ellipse cx="288.5" cy="148" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M290.8438,143.6719 C289.9063,143.2344 289.3125,143.0938 288.4375,143.0938 C285.8125,143.0938 283.8125,145.1719 283.8125,147.8906 L283.8125,149.0156 C283.8125,151.5938 285.9219,153.4844 288.8125,153.4844 C290.0313,153.4844 291.1875,153.1875 291.9375,152.6406 C292.5156,152.2344 292.8438,151.7813 292.8438,151.3906 C292.8438,150.9375 292.4531,150.5469 291.9844,150.5469 C291.7656,150.5469 291.5625,150.625 291.375,150.8125 C290.9219,151.2969 290.9219,151.2969 290.7344,151.3906 C290.3125,151.6563 289.625,151.7813 288.8594,151.7813 C286.8125,151.7813 285.5156,150.6875 285.5156,148.9844 L285.5156,147.8906 C285.5156,146.1094 286.7656,144.7969 288.5,144.7969 C289.0781,144.7969 289.6875,144.9531 290.1563,145.2031 C290.6406,145.4844 290.8125,145.7031 290.9063,146.1094 C290.9688,146.5156 291,146.6406 291.1406,146.7656 C291.2813,146.9063 291.5156,147.0156 291.7344,147.0156 C292,147.0156 292.2656,146.875 292.4375,146.6563 C292.5469,146.5 292.5781,146.3125 292.5781,145.8906 L292.5781,144.4688 C292.5781,144.0313 292.5625,143.9063 292.4688,143.75 C292.3125,143.4844 292.0313,143.3438 291.7344,143.3438 C291.4375,143.3438 291.2344,143.4375 291.0156,143.75 L290.8438,143.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="302.5" y="152.8467">Fragment</text><line style="stroke:#181818;stroke-width:0.5;" x1="274.5" x2="374.5" y1="164" y2="164"/><line style="stroke:#181818;stroke-width:0.5;" x1="274.5" x2="374.5" y1="172" y2="172"/></g><!--reverse link ViewModel to ViewModelClearedWatcher--><g id="link_ViewModel_ViewModelClearedWatcher"><path codeLine="5" d="M125.5,89.121 C125.5,108.278 125.5,114.423 125.5,131.884 " fill="none" id="ViewModel-backto-ViewModelClearedWatcher" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="125.5,71.121,119.5,89.121,131.5,89.121,125.5,71.121" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ViewModelStoreOwner to FragmentActivity--><g id="link_ViewModelStoreOwner_FragmentActivity"><path codeLine="9" d="M433.6417,85.1765 C448.9677,104.3335 457.039,114.423 471.007,131.884 " fill="none" id="ViewModelStoreOwner-backto-FragmentActivity" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="422.397,71.121,428.9565,88.9247,438.3269,81.4283,422.397,71.121" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link FragmentActivity to ViewModelStore1--><g id="link_FragmentActivity_ViewModelStore1"><path codeLine="13" d="M481.2655,191.7965 C476.2245,213.0975 471.468,233.2008 465.894,256.7562 " fill="none" id="FragmentActivity-backto-ViewModelStore1" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="484.029,180.119,478.7547,185.0365,481.2655,191.7965,486.5397,186.8789,484.029,180.119" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="473.7204" y="199.9092">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="458.5622" y="245.9824">1</text></g><!--reverse link ViewModelStoreOwner to Fragment--><g id="link_ViewModelStoreOwner_Fragment"><path codeLine="18" d="M368.0981,86.3176 C355.9371,105.4746 350.257,114.423 339.174,131.884 " fill="none" id="ViewModelStoreOwner-backto-Fragment" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="377.745,71.121,363.0325,83.102,373.1636,89.5333,377.745,71.121" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Fragment to ViewModelStore2--><g id="link_Fragment_ViewModelStore2"><path codeLine="19" d="M283.0314,187.1801 C253.6614,208.5541 219.495,233.4201 187.096,256.9996 " fill="none" id="Fragment-backto-ViewModelStore2" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="292.734,180.119,285.529,180.4153,283.0314,187.1801,290.2364,186.8838,292.734,180.119" style="stroke:#181818;stroke-width:1.0;"/></g><!--link ViewModelClearedWatcher to ViewModelStore1--><g id="link_ViewModelClearedWatcher_ViewModelStore1"><path codeLine="21" d="M184.267,180.119 C238.601,201.493 308.592,229.027 368.53,252.6065 " fill="none" id="ViewModelClearedWatcher-to-ViewModelStore1" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="379.697,256.9996,375.5779,251.0807,368.53,252.6065,372.6492,258.5254,379.697,256.9996" style="stroke:#181818;stroke-width:1.0;"/></g><!--link ViewModelClearedWatcher to ViewModelStore2--><g id="link_ViewModelClearedWatcher_ViewModelStore2"><path codeLine="22" d="M128.853,180.119 C131.943,201.42 134.8298,221.325 138.2458,244.8804 " fill="none" id="ViewModelClearedWatcher-to-ViewModelStore2" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="139.968,256.7562,143.0655,250.2442,138.2458,244.8804,135.1483,251.3924,139.968,256.7562" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="39" x="137.5" y="223.0669">&#28155;&#21152;&#21040;</text></g><!--SRC=[IqmgBYbAJ2vHICv9B2vM2CjCBVVDJqdDKQZcKW22ilpC58NyFEUSrCIYr1GDJQvQBZI5KAdmn9BaZDGY1UNmZDJ44Yw4EJOrkhguL7DbvfMa5gKb9gSYL0INv1Ub-fVd0Ss2E05LHY4zjGHL1EmeRDfjQlJq5DoA4jDpK_DA79DBCiioIogXpbT2rQ2aa5YCPf4Xr7gFnE8CtyG2c-2IeioyT1s4AZk5NA0uq6vqAnIK39KKj82-1j5eXd8HRRyHqVOJz3lSXM1NeLd3nOKhAdLrjJ2SJxnQ8mKhXMVRTp_jMl2qOmC0]--></g></svg>

<p>FragmentActivity和Fragment都是ViewModelStoreOwner，所以在两者的create时机都会创建<code>ViewModelClearedWatcher</code>，并注册。ViewModelClearedWatcher本身也是一个ViewModel，当<code>ViewModelClearedWatcher#onCleared</code>被调用时，<code>ViewModelStoreOwner</code>中注册的ViewModel都会被clear。所以onCleared时，通过反射拿到<code>ViewModelStore#mMap</code>，将map中所有的ViewModel进行泄漏监控。</p>
<h2 id="RootView泄漏监控"><a href="#RootView泄漏监控" class="headerlink" title="RootView泄漏监控"></a>RootView泄漏监控</h2><p><code>RootViewWatcher</code>实现了对RootView内存泄漏的监控。原理是：<code>WindowManagerGlobal#mViews</code>就是存放DecorView的列表，通过反射把mViews替换为自定义的ArrayList。然后在<code>WindowManagerGlobal#addView</code>和<code>WindowManagerGlobal#removeView</code>就可以执行到自定义ArrayList的add和remove方法，从而得到RootView的添加和删除时机，从而触发内存泄漏检测逻辑。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">WindowManagerGlobal</span> &#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="meta">@UnsupportedAppUsage</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ArrayList&lt;View&gt; mViews = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;View&gt;();</span><br><span class="line">    ......</span><br><span class="line">    <span class="meta">@UnsupportedAppUsage</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> WindowManagerGlobal <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (WindowManagerGlobal.class) &#123;</span><br><span class="line">            <span class="keyword">if</span> (sDefaultWindowManager == <span class="literal">null</span>) &#123;</span><br><span class="line">                sDefaultWindowManager = <span class="keyword">new</span> <span class="title class_">WindowManagerGlobal</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> sDefaultWindowManager;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>RootViewWatcher会监听rootView的添加时机，然后调用<code>rootView.addOnAttachStateChangeListener</code>来接收onViewAttachedToWindow和onViewDetachedFromWindow事件。当onViewDetachedFromWindow时就会去检测是否发生内存泄漏。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/gdutxiaoxu/article/details/80738581">java 源码系列 - 带你读懂 Reference 和 ReferenceQueue</a></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>addr2line死机问题定位</title>
    <url>/posts/9839.html</url>
    <content><![CDATA[<p>死机问题在程序开发过程中是经常遇到的问题，本文介绍通过addr2line工具解析堆栈来定位死机问题</p>
<h2 id="使用addr2line定位死机问题"><a href="#使用addr2line定位死机问题" class="headerlink" title="使用addr2line定位死机问题"></a>使用addr2line定位死机问题</h2><p>在某个C应用程序挂掉后，会生成堆栈信息，如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">F/libc    (21866): Fatal signal 11 (SIGSEGV) at 0x00000000 (code=1)</span><br><span class="line">W/        (21866): [SkCanvas* DrawSurface::lockCanvas(const android::Rect&amp;)]-----[76]</span><br><span class="line">I/DEBUG   (  944): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***</span><br><span class="line">I/DEBUG   (  944): Build fingerprint: &#x27;full_godbox/godbox:4.0.3/8841C/84125002:eng/ test-keys&#x27;</span><br><span class="line">I/DEBUG   (  944): pid: 21866, tid: 21866  &gt;&gt;&gt; demo_cmd &lt;&lt;&lt;</span><br><span class="line">I/DEBUG   (  944): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000000</span><br><span class="line">I/DEBUG   (  944):  r0 00000003  r1 00000000  r2 000010b0  r3 0000001f</span><br><span class="line">I/DEBUG   (  944):  r4 41334124  r5 00000000  r6 beae2f94  r7 00000046</span><br><span class="line">I/DEBUG   (  944):  r8 beae2f08  r9 00000010  10 00000bb8  fp beae3024</span><br><span class="line">I/DEBUG   (  944):  ip 400c6108  sp beae2f00  lr 41331d13  pc 41331d42  cpsr 00000030</span><br><span class="line">I/DEBUG   (  944):  d0  0000000000000000  d1  0000000000000000</span><br><span class="line">I/DEBUG   (  944):  d2  0000000000000000  d3  c1859800408ca000</span><br><span class="line">I/DEBUG   (  944):  d4  4125f000c1981600  d5  43ff000041200000</span><br><span class="line">I/DEBUG   (  944):  d6  0000000000000000  d7  0000000000000000</span><br><span class="line">I/DEBUG   (  944):  d8  0000000000000000  d9  0000000000000000</span><br><span class="line">I/DEBUG   (  944):  d10 0000000000000000  d11 0000000000000000</span><br><span class="line">I/DEBUG   (  944):  d12 0000000000000000  d13 0000000000000000</span><br><span class="line">I/DEBUG   (  944):  d14 0000000000000000  d15 0000000000000000</span><br><span class="line">I/DEBUG   (  944):  scr 60000010</span><br><span class="line">I/DEBUG   (  944):</span><br><span class="line">I/DEBUG   (  944):          #00  pc 00002d42  /system/lib/libtest.so (std_ping)</span><br><span class="line">I/DEBUG   (  944):          #01  pc 0000f466  /system/bin/demo_cmd</span><br><span class="line">I/DEBUG   (  944):</span><br><span class="line">I/DEBUG   (  944): code around pc:</span><br></pre></td></tr></table></figure>

<p>这种情况下就可以通过<font color=blue>addr2line</font>命令定位出死在了哪一行代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">addr2line -e libtest.so 00002d42</span><br><span class="line">addr2line -e demo_cmd 0000f466</span><br></pre></td></tr></table></figure>

<p>注意：我们机顶盒上的so库或者可执行程序，一般都是被stripped的，是无法使用addr2line命令定位死机位置的。这种情况下，则需要找到对应的not stripped的同名文件。这两个文件必须是同一次编译生成的。<br>&ensp; 可以使用file命令查看strip状态，如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ file system/bin/demo_cmd</span><br><span class="line">system/bin/demo_cmd: ELF 32-bit LSB  shared object, ARM, EABI5 version 1 (SYSV), dynamically linked (uses shared libs), stripped</span><br><span class="line">$ file symbols/system/bin/demo_cmd</span><br><span class="line">symbols/system/bin/demo_cmd: ELF 32-bit LSB  shared object, ARM, EABI5 version 1 (SYSV), dynamically linked (uses shared libs), not stripped</span><br></pre></td></tr></table></figure>

<p>备注：</p>
<ul>
<li>本文介绍的所有命令，都是在Linux主机上执行的命令；</li>
<li>addr2line解析的文件必须是”<font color=red>not stripped</font>“的文件。如果是android sdk，一般放在out的symbols目录下，比如：out/target/product/xxx/symbols/</li>
<li>如果是Android机顶盒，应用程序挂掉后在/data/tombstones/目录下面会生成墓碑文件tombstone_*。在这些文件中就会有堆栈信息。</li>
</ul>
<h2 id="Android墓碑文件tombstone"><a href="#Android墓碑文件tombstone" class="headerlink" title="Android墓碑文件tombstone"></a>Android墓碑文件tombstone</h2><p>Android logcat打印的日志可以显示堆栈信息，但堆栈信息同时会保存到墓碑文件中。</p>
<p>当一个动态库（native 程序）开始执行时，系统会注册一些连接到 debuggerd 的 signal handlers，当系统 crash 的时候，会保存一个 tombstone 文件到/data/tombstones目录下（Logcat中也会有相应的信息），文件的确就像墓碑一样记录了死亡了的进程的基本信息（例如进程的进程号，线程号），死亡的地址（在哪个地址上发生了 Crash），死亡时的现场是什么样的（记录了一系列的堆栈调用信息）等等。<br>注意：有些Android设备默认是不会产生墓碑文件的，需要手动创建文件/data/tombstones/tombstone_00</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /data/tombstones/</span><br><span class="line"><span class="built_in">touch</span> /data/tombstones/tombstone_00</span><br><span class="line"><span class="built_in">chmod</span> 777 /data/tombstones/tombstone_00</span><br></pre></td></tr></table></figure>

<p>系统发生一次段错误后，会把堆栈信息写入tombstone_0x文件，tombstone_0x文件需要从0~9循环使用，需要通过文件更新时间确认最新的一次段错误是哪个墓碑文件。</p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul>
<li><a href="http://www.cnblogs.com/CoderTian/p/5980426.html">Android Tombstone 分析</a></li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android调试</tag>
      </tags>
  </entry>
  <entry>
    <title>图解RecyclerView缓存机制</title>
    <url>/posts/e679f521.html</url>
    <content><![CDATA[<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="451px" preserveAspectRatio="none" style="width:319px;height:451px;background:#FFFFFF;" version="1.1" viewBox="0 0 319 451" width="319px" zoomAndPan="magnify"><defs/><g><!--class ViewGroup--><g id="elem_ViewGroup"><rect fill="#F1F1F1" height="48" id="ViewGroup" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="110" x="27.5" y="7"/><ellipse cx="42.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M44.8438,18.6719 C43.9063,18.2344 43.3125,18.0938 42.4375,18.0938 C39.8125,18.0938 37.8125,20.1719 37.8125,22.8906 L37.8125,24.0156 C37.8125,26.5938 39.9219,28.4844 42.8125,28.4844 C44.0313,28.4844 45.1875,28.1875 45.9375,27.6406 C46.5156,27.2344 46.8438,26.7813 46.8438,26.3906 C46.8438,25.9375 46.4531,25.5469 45.9844,25.5469 C45.7656,25.5469 45.5625,25.625 45.375,25.8125 C44.9219,26.2969 44.9219,26.2969 44.7344,26.3906 C44.3125,26.6563 43.625,26.7813 42.8594,26.7813 C40.8125,26.7813 39.5156,25.6875 39.5156,23.9844 L39.5156,22.8906 C39.5156,21.1094 40.7656,19.7969 42.5,19.7969 C43.0781,19.7969 43.6875,19.9531 44.1563,20.2031 C44.6406,20.4844 44.8125,20.7031 44.9063,21.1094 C44.9688,21.5156 45,21.6406 45.1406,21.7656 C45.2813,21.9063 45.5156,22.0156 45.7344,22.0156 C46,22.0156 46.2656,21.875 46.4375,21.6563 C46.5469,21.5 46.5781,21.3125 46.5781,20.8906 L46.5781,19.4688 C46.5781,19.0313 46.5625,18.9063 46.4688,18.75 C46.3125,18.4844 46.0313,18.3438 45.7344,18.3438 C45.4375,18.3438 45.2344,18.4375 45.0156,18.75 L44.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="56.5" y="27.8467">ViewGroup</text><line style="stroke:#181818;stroke-width:0.5;" x1="28.5" x2="136.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="28.5" x2="136.5" y1="47" y2="47"/></g><!--class RecyclerView--><g id="elem_RecyclerView"><rect fill="#F1F1F1" height="48" id="RecyclerView" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="128" x="95.5" y="115"/><ellipse cx="110.5" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M112.8438,126.6719 C111.9063,126.2344 111.3125,126.0938 110.4375,126.0938 C107.8125,126.0938 105.8125,128.1719 105.8125,130.8906 L105.8125,132.0156 C105.8125,134.5938 107.9219,136.4844 110.8125,136.4844 C112.0313,136.4844 113.1875,136.1875 113.9375,135.6406 C114.5156,135.2344 114.8438,134.7813 114.8438,134.3906 C114.8438,133.9375 114.4531,133.5469 113.9844,133.5469 C113.7656,133.5469 113.5625,133.625 113.375,133.8125 C112.9219,134.2969 112.9219,134.2969 112.7344,134.3906 C112.3125,134.6563 111.625,134.7813 110.8594,134.7813 C108.8125,134.7813 107.5156,133.6875 107.5156,131.9844 L107.5156,130.8906 C107.5156,129.1094 108.7656,127.7969 110.5,127.7969 C111.0781,127.7969 111.6875,127.9531 112.1563,128.2031 C112.6406,128.4844 112.8125,128.7031 112.9063,129.1094 C112.9688,129.5156 113,129.6406 113.1406,129.7656 C113.2813,129.9063 113.5156,130.0156 113.7344,130.0156 C114,130.0156 114.2656,129.875 114.4375,129.6563 C114.5469,129.5 114.5781,129.3125 114.5781,128.8906 L114.5781,127.4688 C114.5781,127.0313 114.5625,126.9063 114.4688,126.75 C114.3125,126.4844 114.0313,126.3438 113.7344,126.3438 C113.4375,126.3438 113.2344,126.4375 113.0156,126.75 L112.8438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="124.5" y="135.8467">RecyclerView</text><line style="stroke:#181818;stroke-width:0.5;" x1="96.5" x2="222.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="96.5" x2="222.5" y1="155" y2="155"/></g><!--class ScrollingView--><g id="elem_ScrollingView"><rect codeLine="2" fill="#F1F1F1" height="48" id="ScrollingView" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="128" x="172.5" y="7"/><ellipse cx="187.5" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M188.4531,19.7813 L190.1719,19.7813 C190.5625,19.7813 190.75,19.75 190.875,19.6719 C191.1406,19.5156 191.2813,19.2344 191.2813,18.9375 C191.2813,18.6719 191.1719,18.4063 190.9375,18.2344 C190.7656,18.125 190.625,18.0938 190.1719,18.0938 L185.0313,18.0938 C184.5938,18.0938 184.4688,18.1094 184.3125,18.2031 C184.0625,18.3594 183.9063,18.6563 183.9063,18.9375 C183.9063,19.2188 184.0469,19.4688 184.2656,19.6406 C184.4219,19.75 184.6094,19.7813 185.0313,19.7813 L186.75,19.7813 L186.75,26.2969 L185.0313,26.2969 C184.5938,26.2969 184.4688,26.3125 184.3125,26.4219 C184.0625,26.5781 183.9063,26.8594 183.9063,27.1563 C183.9063,27.4063 184.0469,27.6719 184.2656,27.8281 C184.4219,27.9531 184.625,28 185.0313,28 L190.1719,28 C190.9219,28 191.2813,27.7188 191.2813,27.1563 C191.2813,26.875 191.1719,26.625 190.9375,26.4531 C190.7656,26.3281 190.625,26.2969 190.1719,26.2969 L188.4531,26.2969 L188.4531,19.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="96" x="201.5" y="27.8467">ScrollingView</text><line style="stroke:#181818;stroke-width:0.5;" x1="173.5" x2="299.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="173.5" x2="299.5" y1="47" y2="47"/></g><!--class Recycler--><g id="elem_Recycler"><rect codeLine="4" fill="#F1F1F1" height="113.1875" id="Recycler" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="305" x="7" y="223"/><ellipse cx="124.25" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M126.5938,234.6719 C125.6563,234.2344 125.0625,234.0938 124.1875,234.0938 C121.5625,234.0938 119.5625,236.1719 119.5625,238.8906 L119.5625,240.0156 C119.5625,242.5938 121.6719,244.4844 124.5625,244.4844 C125.7813,244.4844 126.9375,244.1875 127.6875,243.6406 C128.2656,243.2344 128.5938,242.7813 128.5938,242.3906 C128.5938,241.9375 128.2031,241.5469 127.7344,241.5469 C127.5156,241.5469 127.3125,241.625 127.125,241.8125 C126.6719,242.2969 126.6719,242.2969 126.4844,242.3906 C126.0625,242.6563 125.375,242.7813 124.6094,242.7813 C122.5625,242.7813 121.2656,241.6875 121.2656,239.9844 L121.2656,238.8906 C121.2656,237.1094 122.5156,235.7969 124.25,235.7969 C124.8281,235.7969 125.4375,235.9531 125.9063,236.2031 C126.3906,236.4844 126.5625,236.7031 126.6563,237.1094 C126.7188,237.5156 126.75,237.6406 126.8906,237.7656 C127.0313,237.9063 127.2656,238.0156 127.4844,238.0156 C127.75,238.0156 128.0156,237.875 128.1875,237.6563 C128.2969,237.5 128.3281,237.3125 128.3281,236.8906 L128.3281,235.4688 C128.3281,235.0313 128.3125,234.9063 128.2188,234.75 C128.0625,234.4844 127.7813,234.3438 127.4844,234.3438 C127.1875,234.3438 126.9844,234.4375 126.7656,234.75 L126.5938,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="144.75" y="243.8467">Recycler</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="311" y1="255" y2="255"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="13" y="271.9951">ArrayList&lt;ViewHolder&gt; mAttachedScrap</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="13" y="288.292">ArrayList&lt;ViewHolder&gt; mChangedScrap</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="279" x="13" y="304.5889">ArrayList&lt;ViewHolder&gt; mCachedViews</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="13" y="320.8857">RecycledViewPool mRecyclerPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="311" y1="328.1875" y2="328.1875"/></g><!--class RecycledViewPool--><g id="elem_RecycledViewPool"><rect fill="#F1F1F1" height="48" id="RecycledViewPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="162" x="78.5" y="396"/><ellipse cx="93.5" cy="412" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M95.8438,407.6719 C94.9063,407.2344 94.3125,407.0938 93.4375,407.0938 C90.8125,407.0938 88.8125,409.1719 88.8125,411.8906 L88.8125,413.0156 C88.8125,415.5938 90.9219,417.4844 93.8125,417.4844 C95.0313,417.4844 96.1875,417.1875 96.9375,416.6406 C97.5156,416.2344 97.8438,415.7813 97.8438,415.3906 C97.8438,414.9375 97.4531,414.5469 96.9844,414.5469 C96.7656,414.5469 96.5625,414.625 96.375,414.8125 C95.9219,415.2969 95.9219,415.2969 95.7344,415.3906 C95.3125,415.6563 94.625,415.7813 93.8594,415.7813 C91.8125,415.7813 90.5156,414.6875 90.5156,412.9844 L90.5156,411.8906 C90.5156,410.1094 91.7656,408.7969 93.5,408.7969 C94.0781,408.7969 94.6875,408.9531 95.1563,409.2031 C95.6406,409.4844 95.8125,409.7031 95.9063,410.1094 C95.9688,410.5156 96,410.6406 96.1406,410.7656 C96.2813,410.9063 96.5156,411.0156 96.7344,411.0156 C97,411.0156 97.2656,410.875 97.4375,410.6563 C97.5469,410.5 97.5781,410.3125 97.5781,409.8906 L97.5781,408.4688 C97.5781,408.0313 97.5625,407.9063 97.4688,407.75 C97.3125,407.4844 97.0313,407.3438 96.7344,407.3438 C96.4375,407.3438 96.2344,407.4375 96.0156,407.75 L95.8438,407.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="107.5" y="416.8467">RecycledViewPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="79.5" x2="239.5" y1="428" y2="428"/><line style="stroke:#181818;stroke-width:0.5;" x1="79.5" x2="239.5" y1="436" y2="436"/></g><!--reverse link ViewGroup to RecyclerView--><g id="link_ViewGroup_RecyclerView"><path codeLine="1" d="M109.7869,69.5632 C122.614,87.2212 129.674,96.941 142.559,114.678 " fill="none" id="ViewGroup-backto-RecyclerView" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="99.2079,55,104.9325,73.0895,114.6412,66.0368,99.2079,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ScrollingView to RecyclerView--><g id="link_ScrollingView_RecyclerView"><path codeLine="3" d="M209.2131,69.5632 C196.3861,87.2212 189.326,96.941 176.441,114.678 " fill="none" id="ScrollingView-backto-RecyclerView" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="219.792,55,204.3587,66.0369,214.0675,73.0895,219.792,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RecyclerView to Recycler--><g id="link_RecyclerView_Recycler"><path codeLine="10" d="M159.5,175.182 C159.5,191.507 159.5,202.084 159.5,222.937 " fill="none" id="RecyclerView-backto-Recycler" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="159.5,163.182,155.5,169.182,159.5,175.182,163.5,169.182,159.5,163.182" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Recycler to RecycledViewPool--><g id="link_Recycler_RecycledViewPool"><path codeLine="11" d="M159.5,348.035 C159.5,368.9568 159.5,379.6181 159.5,395.9619 " fill="none" id="Recycler-backto-RecycledViewPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="159.5,336.035,155.5,342.035,159.5,348.035,163.5,342.035,159.5,336.035" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[2yjCBNSloYyjKB2fqTLL24fDhapEIIqA0mfpPUQLf1Qb9IQdAWGd5-Ndv6JcfOF5KNX0VNfwgFgISnABY-522jLS2a3WM5IKMEcJMLnY0rBZaP-Jabfafv3hM5AIc9oHcW8qCx40dqBdZCIyT6BKWOq32HM3bK6T0HO9oC_FKSY5EGp4uwhbGdQwWXPI6C1ba4NXvW00]--></g></svg>

<h2 id="删除View缓存使用图解"><a href="#删除View缓存使用图解" class="headerlink" title="删除View缓存使用图解"></a>删除View缓存使用图解</h2><p><img src="/images/RecyclerView/remove_item.drawio.svg" alt="RecyclerView移除元素"></p>
<p>在垂直布局的RecyclerView中展示了Item0~Item4这5个TextView，我们现在把Item2删掉。数据更新后，我们调用<code>Adapter#notifyItemRemoved(2)</code>来提交更新。</p>
<p><img src="/images/RecyclerView/remove_item_cache_use_sequence.drawio.svg" alt="RecyclerView删除Item"></p>
<p><strong>dispatchLayoutStep1阶段：</strong></p>
<ol>
<li>调用detachViewFromParent把Item0~Item4这五个View从RecyclerView中detache掉，然后放入把ViewHolder放入mAttachedScrap进行缓存。ViewHodler都会被标记为FLAG_TMP_DETACHED，并且Item2会被标记为FLAG_REMOVED；</li>
<li>然后layout进行填充，把Item0~Item4从mAttachedScrap中取出，然后调用attachViewToParent重新加入到RecyclerView中。</li>
<li>调用onCreateViewHolder创建一个新ViewHolder（Item5），执行onBindViewHolder，并addView到RecyclerView中。</li>
</ol>
<p><strong>dispatchLayoutStep2阶段：</strong></p>
<ol>
<li>调用detachViewFromParent把Item0~Item5这六个View从RecyclerView中detache掉，然后把ViewHolder放入mAttachedScrap进行缓存。ViewHolder都会被标记为FLAG_TMP_DETACHED，并且Item2会被标记为FLAG_REMOVED；</li>
<li>除了Item2的ViewHolder之外，把其他ViewHolder从mAttachedScrap缓存中取出，然后调用attachViewToParent重新加入到RecyclerView中。</li>
</ol>
<p><strong>dispatchLayoutStep3阶段：</strong></p>
<ol>
<li>从mAttachedScrap取出Item2，然后把Item2 View添加到mHiddenViews中；</li>
<li>在Item2 ItemAnimator的onAnimationFinished事件中把Item2从mAttachedScrap中移除，添加到RecycledViewPool中。</li>
</ol>
<h2 id="修改View缓存使用图解"><a href="#修改View缓存使用图解" class="headerlink" title="修改View缓存使用图解"></a>修改View缓存使用图解</h2><p><img src="/images/RecyclerView/change_item_text.drawio.svg" alt="RecyclerView修改Item"></p>
<p>RecyclerView中包含Item0~Item4共五个TextView，我们把Item2的文案更新为”New 2”。通过调用<code>Adapter#notifyItemChanged(2)</code>来通知RecyclerView进行更新。</p>
<p><img src="/images/RecyclerView/change_item_sequence.drawio.svg" alt="RecyclerView修改"></p>
<h2 id="插入View缓存使用图解"><a href="#插入View缓存使用图解" class="headerlink" title="插入View缓存使用图解"></a>插入View缓存使用图解</h2><p><img src="/images/RecyclerView/insert_item.drawio.svg" alt="RecyclerView插入Item"></p>
<p><img src="/images/RecyclerView/insert_item_sequence.drawio.svg" alt="RecyclerView插入Item时序"></p>
<h2 id="预加载缓存-mCachedViews"><a href="#预加载缓存-mCachedViews" class="headerlink" title="预加载缓存 mCachedViews"></a>预加载缓存 mCachedViews</h2><p>预加载的view会放在这里，这个数组最大默认是2。首次绘制出来，如果没有滑动屏幕，mCachedViews为空，当滑动UI后会将预加载的一个，以及划出的加入缓存中。</p>
<p><img src="/images/RecyclerView_mCachedViews.drawio.svg" alt="mCachedViews存储元素"></p>
<p>如果是向下滑动，则屏幕下面的元素会缓存两个，比如上图右边向下把H滑出屏幕，而C会露出，则mCachedViews中保存的是[B, H, I]。</p>
<h3 id="滑动时预加载流程"><a href="#滑动时预加载流程" class="headerlink" title="滑动时预加载流程"></a>滑动时预加载流程</h3><p><code>androidx.recyclerview.widget.RecyclerView#onTouchEvent</code>接收到<code>MotionEvent.ACTION_MOVE</code>事件时，如果判断滑动超过一定的距离时，就任务用户自滑动操作。然后就会调用<code>GapWorker#postFromTraversal</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//androidx/recyclerview/widget/GapWorker.java</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">postFromTraversal</span><span class="params">(RecyclerView recyclerView, <span class="type">int</span> prefetchDx, <span class="type">int</span> prefetchDy)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (recyclerView.isAttachedToWindow()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (RecyclerView.DEBUG &amp;&amp; !mRecyclerViews.contains(recyclerView)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;attempting to post unregistered view!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (mPostTimeNs == <span class="number">0</span>) &#123;</span><br><span class="line">                mPostTimeNs = recyclerView.getNanoTime();</span><br><span class="line">                recyclerView.post(<span class="built_in">this</span>); <span class="comment">//将自己转到主线程去执行</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置用户滑动的距离</span></span><br><span class="line">        recyclerView.mPrefetchRegistry.setPrefetchVector(prefetchDx, prefetchDy);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="777px" preserveAspectRatio="none" style="width:837px;height:777px;background:#FFFFFF;" version="1.1" viewBox="0 0 837 777" width="837px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="629.125" style="stroke:#181818;stroke-width:1.0;" width="10" x="48" y="104.5625"/><rect fill="#FFFFFF" height="415.4609" style="stroke:#181818;stroke-width:1.0;" width="10" x="53" y="146.6953"/><rect fill="#FFFFFF" height="127.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="53" y="606.2891"/><rect fill="#FFFFFF" height="85.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="58" y="648.4219"/><rect fill="#FFFFFF" height="43.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="63" y="690.5547"/><rect fill="#FFFFFF" height="116.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="373" y="180.8281"/><rect fill="#FFFFFF" height="122.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="373" y="368.4922"/><rect fill="#FFFFFF" height="131.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="610" y="267.2266"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="53" x2="53" y1="36.2969" y2="742.6875"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="377.5" x2="377.5" y1="36.2969" y2="742.6875"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="614.5" x2="614.5" y1="36.2969" y2="742.6875"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="793" x2="793" y1="36.2969" y2="742.6875"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="96" x="5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="12" y="24.9951">GapWorker</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="96" x="5" y="741.6875"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="12" y="761.6826">GapWorker</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="217" x="269.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="276.5" y="24.9951">LayoutPrefetchRegistryImpl</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="217" x="269.5" y="741.6875"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="203" x="276.5" y="761.6826">LayoutPrefetchRegistryImpl</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="167" x="531.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="538.5" y="24.9951">LinearLayoutManager</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="167" x="531.5" y="741.6875"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="538.5" y="761.6826">LinearLayoutManager</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="76" x="755" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="762" y="24.9951">Recycler</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="76" x="755" y="741.6875"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="762" y="761.6826">Recycler</text><rect fill="#FFFFFF" height="629.125" style="stroke:#181818;stroke-width:1.0;" width="10" x="48" y="104.5625"/><rect fill="#FFFFFF" height="415.4609" style="stroke:#181818;stroke-width:1.0;" width="10" x="53" y="146.6953"/><rect fill="#FFFFFF" height="127.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="53" y="606.2891"/><rect fill="#FFFFFF" height="85.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="58" y="648.4219"/><rect fill="#FFFFFF" height="43.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="63" y="690.5547"/><rect fill="#FFFFFF" height="116.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="373" y="180.8281"/><rect fill="#FFFFFF" height="122.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="373" y="368.4922"/><rect fill="#FFFFFF" height="131.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="610" y="267.2266"/><ellipse cx="7.5" cy="66.6797" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="41,63.4297,51,67.4297,41,71.4297,45,67.4297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="47" y1="67.4297" y2="67.4297"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="15" y="62.3638">run</text><line style="stroke:#181818;stroke-width:1.0;" x1="53" x2="100" y1="91.5625" y2="91.5625"/><line style="stroke:#181818;stroke-width:1.0;" x1="100" x2="100" y1="91.5625" y2="104.5625"/><line style="stroke:#181818;stroke-width:1.0;" x1="59" x2="100" y1="104.5625" y2="104.5625"/><polygon fill="#181818" points="69,100.5625,59,104.5625,69,108.5625,65,104.5625" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="54" x="65" y="86.4966">prefetch</text><line style="stroke:#181818;stroke-width:1.0;" x1="58" x2="105" y1="133.6953" y2="133.6953"/><line style="stroke:#181818;stroke-width:1.0;" x1="105" x2="105" y1="133.6953" y2="146.6953"/><line style="stroke:#181818;stroke-width:1.0;" x1="64" x2="105" y1="146.6953" y2="146.6953"/><polygon fill="#181818" points="74,142.6953,64,146.6953,74,150.6953,70,146.6953" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="82" x="70" y="128.6294">buildTaskList</text><polygon fill="#181818" points="361,176.8281,371,180.8281,361,184.8281,365,180.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="63" x2="367" y1="180.8281" y2="180.8281"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="216" x="70" y="175.7622">collectPrefetchPositionsFromView</text><line style="stroke:#181818;stroke-width:1.0;" x1="383" x2="425" y1="209.9609" y2="209.9609"/><line style="stroke:#181818;stroke-width:1.0;" x1="425" x2="425" y1="209.9609" y2="222.9609"/><line style="stroke:#181818;stroke-width:1.0;" x1="384" x2="425" y1="222.9609" y2="222.9609"/><polygon fill="#181818" points="394,218.9609,384,222.9609,394,226.9609,390,222.9609" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="81" x="390" y="204.895">mCount &#28165;&#38646;</text><polygon fill="#181818" points="598,263.2266,608,267.2266,598,271.2266,602,267.2266" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="383" x2="604" y1="267.2266" y2="267.2266"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="208" x="390" y="247.0278">collectAdjacentPrefetchPositions</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="91" x="390" y="262.1606">&#39044;&#21152;&#36733;&#20020;&#36817;&#20803;&#32032;</text><line style="stroke:#181818;stroke-width:1.0;" x1="620" x2="662" y1="326.3594" y2="326.3594"/><line style="stroke:#181818;stroke-width:1.0;" x1="662" x2="662" y1="326.3594" y2="339.3594"/><line style="stroke:#181818;stroke-width:1.0;" x1="621" x2="662" y1="339.3594" y2="339.3594"/><polygon fill="#181818" points="631,335.3594,621,339.3594,631,343.3594,627,339.3594" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="154" x="627" y="321.2935">&#33719;&#21462;&#19979;&#19968;&#20010;&#20803;&#32032;&#30340;position</text><polygon fill="#181818" points="394,364.4922,384,368.4922,394,372.4922,390,368.4922" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="388" x2="609" y1="368.4922" y2="368.4922"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="74" x="400" y="363.4263">addPosition</text><line style="stroke:#181818;stroke-width:1.0;" x1="383" x2="425" y1="442.7578" y2="442.7578"/><line style="stroke:#181818;stroke-width:1.0;" x1="425" x2="425" y1="442.7578" y2="455.7578"/><line style="stroke:#181818;stroke-width:1.0;" x1="384" x2="425" y1="455.7578" y2="455.7578"/><polygon fill="#181818" points="394,451.7578,384,455.7578,394,459.7578,390,455.7578" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="141" x="390" y="422.5591">&#39044;&#21152;&#36733;&#30340;position&#20445;&#23384;&#21040;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="141" x="390" y="437.6919">mPrefetchArray&#25968;&#32452;&#20013;</text><line style="stroke:#181818;stroke-width:1.0;" x1="383" x2="425" y1="489.8906" y2="489.8906"/><line style="stroke:#181818;stroke-width:1.0;" x1="425" x2="425" y1="489.8906" y2="502.8906"/><line style="stroke:#181818;stroke-width:1.0;" x1="378" x2="425" y1="502.8906" y2="502.8906"/><polygon fill="#181818" points="388,498.8906,378,502.8906,388,506.8906,384,502.8906" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="81" x="390" y="484.8247">mCount &#21152;&#19968;</text><polygon fill="#181818" points="74,523.0234,64,527.0234,74,531.0234,70,527.0234" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="68" x2="377" y1="527.0234" y2="527.0234"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="39" x="80" y="521.9575">return</text><line style="stroke:#181818;stroke-width:1.0;" x1="63" x2="105" y1="561.1563" y2="561.1563"/><line style="stroke:#181818;stroke-width:1.0;" x1="105" x2="105" y1="561.1563" y2="574.1563"/><line style="stroke:#181818;stroke-width:1.0;" x1="58" x2="105" y1="574.1563" y2="574.1563"/><polygon fill="#181818" points="68,570.1563,58,574.1563,68,578.1563,64,574.1563" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="296" x="70" y="556.0903">&#26681;&#25454;mCount&#25968;&#37327;&#28155;&#21152;&#39044;&#21152;&#36733;&#20219;&#21153;&#21040;mTasks&#21015;&#34920;&#20013;</text><line style="stroke:#181818;stroke-width:1.0;" x1="58" x2="105" y1="593.2891" y2="593.2891"/><line style="stroke:#181818;stroke-width:1.0;" x1="105" x2="105" y1="593.2891" y2="606.2891"/><line style="stroke:#181818;stroke-width:1.0;" x1="64" x2="105" y1="606.2891" y2="606.2891"/><polygon fill="#181818" points="74,602.2891,64,606.2891,74,610.2891,70,606.2891" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="153" x="70" y="588.2231">flushTasksWithDeadline</text><line style="stroke:#181818;stroke-width:1.0;" x1="63" x2="110" y1="635.4219" y2="635.4219"/><line style="stroke:#181818;stroke-width:1.0;" x1="110" x2="110" y1="635.4219" y2="648.4219"/><line style="stroke:#181818;stroke-width:1.0;" x1="69" x2="110" y1="648.4219" y2="648.4219"/><polygon fill="#181818" points="79,644.4219,69,648.4219,79,652.4219,75,648.4219" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="146" x="75" y="630.356">flushTaskWithDeadline</text><line style="stroke:#181818;stroke-width:1.0;" x1="68" x2="115" y1="677.5547" y2="677.5547"/><line style="stroke:#181818;stroke-width:1.0;" x1="115" x2="115" y1="677.5547" y2="690.5547"/><line style="stroke:#181818;stroke-width:1.0;" x1="74" x2="115" y1="690.5547" y2="690.5547"/><polygon fill="#181818" points="84,686.5547,74,690.5547,84,694.5547,80,690.5547" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="189" x="80" y="672.4888">prefetchPositionWithDeadline</text><polygon fill="#181818" points="781,720.6875,791,724.6875,781,728.6875,785,724.6875" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="73" x2="787" y1="724.6875" y2="724.6875"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="255" x="80" y="719.6216">tryGetViewHolderForPositionByDeadline</text><!--SRC=[dPDTIy9G6CVl_HIx5x_0BW8hjC109F8YRqxRKPTdE-FihDXTa98K9LtqGX5eLn4ONaWkHFmosvpVehEfCwqjyVBmFF_VytzUpY5ER71feEOngK32yHpHbTZylH2CntbE9R08gL2EoZdI9IJk0wsIaJIwc9W11jPfTWh9mHBB8CQkh29VAM24e134irYJg8GLBKMmV231qrY4FfhES_8MrXNAEMPj_Fpv7qXI822Jd3sWW9BVMI8HE4oAnq20oc-d1MNyMhKlc-vWO9bTTtXhryv7tMRiBs988PvpRtfsuzuohoppp3BV9uZHKrMTLWcbHKtNSmz4CHimrXzbqE8FJzRmnMu_slLEGP5diYGXm73kEgD-rJBRwrVqh4_Nn-goeKIYbWyQKfs4tZJFESqlv_fZWcTUnnSDfzTdPUPxxBDdYtKcUpUjsVK7j_NczID2853f150u1qRzYoBIjRBFo4kql0s1YDWULrAiAb2NxZ5SbuE28I1_0cnoQKYz_xM3aGX92fEPVjEOgRy1]--></g></svg>

<h2 id="mAttachedScrap"><a href="#mAttachedScrap" class="headerlink" title="mAttachedScrap"></a>mAttachedScrap</h2><p>先看下源码执行流程：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="366px" preserveAspectRatio="none" style="width:979px;height:366px;background:#FFFFFF;" version="1.1" viewBox="0 0 979 366" width="979px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="59.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="173" y="67.4297"/><rect fill="#FFFFFF" height="225.7969" style="stroke:#181818;stroke-width:1.0;" width="10" x="380" y="96.5625"/><rect fill="#FFFFFF" height="50.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="587" y="155.6953"/><rect fill="#FFFFFF" height="80.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="767" y="242.0938"/><rect fill="#FFFFFF" height="34.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="772" y="279.2266"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="177.5" x2="177.5" y1="36.2969" y2="331.3594"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="385" x2="385" y1="36.2969" y2="331.3594"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="591.5" x2="591.5" y1="36.2969" y2="331.3594"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="772" x2="772" y1="36.2969" y2="331.3594"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="949" x2="949" y1="36.2969" y2="331.3594"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="73" x="141.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="148.5" y="24.9951">Adapter</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="73" x="141.5" y="330.3594"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="148.5" y="350.3545">Adapter</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="210" x="280" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="287" y="24.9951">RecyclerViewDataObserver</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="210" x="280" y="330.3594"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="287" y="350.3545">RecyclerViewDataObserver</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="531.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="538.5" y="24.9951">AdapterHelper</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="531.5" y="330.3594"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="538.5" y="350.3545">AdapterHelper</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="110" x="717" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="724" y="24.9951">RecyclerView</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="110" x="717" y="330.3594"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="724" y="350.3545">RecyclerView</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="48" x="925" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="932" y="24.9951">View</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="48" x="925" y="330.3594"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="932" y="350.3545">View</text><rect fill="#FFFFFF" height="59.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="173" y="67.4297"/><rect fill="#FFFFFF" height="225.7969" style="stroke:#181818;stroke-width:1.0;" width="10" x="380" y="96.5625"/><rect fill="#FFFFFF" height="50.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="587" y="155.6953"/><rect fill="#FFFFFF" height="80.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="767" y="242.0938"/><rect fill="#FFFFFF" height="34.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="772" y="279.2266"/><ellipse cx="7.5" cy="66.6797" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="161,63.4297,171,67.4297,161,71.4297,165,67.4297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="167" y1="67.4297" y2="67.4297"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="146" x="15" y="62.3638">notifyItemRemoved(2)</text><polygon fill="#181818" points="368,92.5625,378,96.5625,368,100.5625,372,96.5625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="183" x2="374" y1="96.5625" y2="96.5625"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="178" x="190" y="91.4966">onItemRangeRemoved(2,1)</text><polygon fill="#181818" points="575,151.6953,585,155.6953,575,159.6953,579,155.6953" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="390" x2="581" y1="155.6953" y2="155.6953"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="178" x="397" y="150.6294">onItemRangeRemoved(2,1)</text><line style="stroke:#181818;stroke-width:1.0;" x1="597" x2="639" y1="204.9609" y2="204.9609"/><line style="stroke:#181818;stroke-width:1.0;" x1="639" x2="639" y1="204.9609" y2="217.9609"/><line style="stroke:#181818;stroke-width:1.0;" x1="592" x2="639" y1="217.9609" y2="217.9609"/><polygon fill="#181818" points="602,213.9609,592,217.9609,602,221.9609,598,217.9609" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="155" x="604" y="184.7622">&#28155;&#21152;&#19968;&#20010;UpdateOp&#25351;&#20196;&#21040;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="156" x="604" y="199.895">mPendingUpdates&#21015;&#34920;&#20013;</text><polygon fill="#181818" points="755,238.0938,765,242.0938,755,246.0938,759,242.0938" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="390" x2="761" y1="242.0938" y2="242.0938"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="161" x="397" y="237.0278">triggerUpdateProcessor()</text><line style="stroke:#181818;stroke-width:1.0;" x1="777" x2="824" y1="266.2266" y2="266.2266"/><line style="stroke:#181818;stroke-width:1.0;" x1="824" x2="824" y1="266.2266" y2="279.2266"/><line style="stroke:#181818;stroke-width:1.0;" x1="783" x2="824" y1="279.2266" y2="279.2266"/><polygon fill="#181818" points="793,275.2266,783,279.2266,793,283.2266,789,279.2266" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="103" x="789" y="261.1606">requestLayout()</text><polygon fill="#181818" points="937,309.3594,947,313.3594,937,317.3594,941,313.3594" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="777" x2="943" y1="313.3594" y2="313.3594"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="143" x="784" y="308.2935">super.requestLayout()</text><!--SRC=[YyxNjLDmJ4aiA4ajKj3MjbB8oo_9JAlqB4dD3KhDpIzBJT4mqkI2AG2g3KfDhapEIIqAoqmjTqaiIVHFAaujAWDhrjMrKiZF0sjDp4jFXUlNCTJamgaDORr7Qau1r16uJ45LYQ4Lv81dstS_xLhmP4V3anshGWjI4ajI_GkUzRG_sRtaQSU6cBpSWDIybCoyT8XKyTEEwIyMhdYoOorU1oBBWTrNKfIPdfvQ134ae2W_ERMuEBz80zMRM7KMfHQMfXQN-2HMvfUMOD40eO7-A2u5-aWFJJa0]--></g></svg>

<p>从上面时序图可以看出，最终调用到了父类<code>View#requestLayout()</code>，然后调用<code>mParent.requestLayout();</code>，沿着view层级一直调用到<code>android.view.ViewRootImpl#requestLayout()</code>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//android-31\android\view\ViewRootImpl.java</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestLayout</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!mHandlingLayoutInLayoutRequest) &#123;</span><br><span class="line">            checkThread();</span><br><span class="line">            mLayoutRequested = <span class="literal">true</span>;</span><br><span class="line">            scheduleTraversals();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">scheduleTraversals</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!mTraversalScheduled) &#123;</span><br><span class="line">            mTraversalScheduled = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//添加同步屏障，保障vsync信号会优先执行</span></span><br><span class="line">            mTraversalBarrier = mHandler.getLooper().getQueue().postSyncBarrier();</span><br><span class="line">            <span class="comment">//等待下一个vsync信号来执行TraversalRunnable</span></span><br><span class="line">            mChoreographer.postCallback(</span><br><span class="line">                    Choreographer.CALLBACK_TRAVERSAL, mTraversalRunnable, <span class="literal">null</span>);</span><br><span class="line">            notifyRendererOfFramePending();</span><br><span class="line">            pokeDrawLockIfNeeded();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">TraversalRunnable</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            doTraversal();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">TraversalRunnable</span> <span class="variable">mTraversalRunnable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TraversalRunnable</span>();</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">doTraversal</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (mTraversalScheduled) &#123;</span><br><span class="line">            mTraversalScheduled = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//移除同步屏障</span></span><br><span class="line">            mHandler.getLooper().getQueue().removeSyncBarrier(mTraversalBarrier);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (mProfile) &#123;</span><br><span class="line">                Debug.startMethodTracing(<span class="string">&quot;ViewAncestor&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            performTraversals();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (mProfile) &#123;</span><br><span class="line">                Debug.stopMethodTracing();</span><br><span class="line">                mProfile = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>从上面可以看出，requestLayout不会立马执行，而是等待下一个vsync信号到来再执行，最终执行<code>android.view.ViewRootImpl#performTraversals</code>，这个函数很长有800多行，这里就不贴代码了，这里面就会View的绘制的measure、layout、draw三大流程。分别对应：<code>ViewRootImpl#measureHierarchy</code>、<code>ViewRootImpl#performLayout</code>、<code>ViewRootImpl#performDraw</code>。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="859px" preserveAspectRatio="none" style="width:915px;height:859px;background:#FFFFFF;" version="1.1" viewBox="0 0 915 859" width="915px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="747.3203" style="stroke:#181818;stroke-width:1.0;" width="10" x="87" y="67.4297"/><rect fill="#FFFFFF" height="710.1875" style="stroke:#181818;stroke-width:1.0;" width="10" x="92" y="104.5625"/><rect fill="#FFFFFF" height="668.0547" style="stroke:#181818;stroke-width:1.0;" width="10" x="97" y="146.6953"/><rect fill="#FFFFFF" height="633.9219" style="stroke:#181818;stroke-width:1.0;" width="10" x="251" y="180.8281"/><rect fill="#FFFFFF" height="363.7266" style="stroke:#181818;stroke-width:1.0;" width="10" x="256" y="451.0234"/><rect fill="#FFFFFF" height="297.4609" style="stroke:#181818;stroke-width:1.0;" width="10" x="261" y="517.2891"/><rect fill="#FFFFFF" height="211.9297" style="stroke:#181818;stroke-width:1.0;" width="10" x="481" y="209.9609"/><rect fill="#FFFFFF" height="161.7969" style="stroke:#181818;stroke-width:1.0;" width="10" x="481" y="652.9531"/><rect fill="#FFFFFF" height="50.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="649" y="349.625"/><rect fill="#FFFFFF" height="65.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="649" y="551.4219"/><rect fill="#FFFFFF" height="50.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="649" y="682.0859"/><rect fill="none" height="189.9297" style="stroke:#000000;stroke-width:1.5;" width="797" x="27" y="224.9609"/><rect fill="none" height="335.7266" style="stroke:#000000;stroke-width:1.5;" width="882" x="27" y="471.0234"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="92" x2="92" y1="36.2969" y2="823.75"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="255.5" x2="255.5" y1="36.2969" y2="823.75"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="486" x2="486" y1="36.2969" y2="823.75"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="654" x2="654" y1="36.2969" y2="823.75"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="110" x="37" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="44" y="24.9951">RecyclerView</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="110" x="37" y="822.75"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="44" y="842.7451">RecyclerView</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="159" x="176.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="183.5" y="24.9951">LinerLayoutManager</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="159" x="176.5" y="822.75"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="183.5" y="842.7451">LinerLayoutManager</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="224" x="374" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="381" y="24.9951">RecyclerView.LayoutManager</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="224" x="374" y="822.75"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="381" y="842.7451">RecyclerView.LayoutManager</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="76" x="616" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="623" y="24.9951">Recycler</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="76" x="616" y="822.75"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="623" y="842.7451">Recycler</text><rect fill="#FFFFFF" height="747.3203" style="stroke:#181818;stroke-width:1.0;" width="10" x="87" y="67.4297"/><rect fill="#FFFFFF" height="710.1875" style="stroke:#181818;stroke-width:1.0;" width="10" x="92" y="104.5625"/><rect fill="#FFFFFF" height="668.0547" style="stroke:#181818;stroke-width:1.0;" width="10" x="97" y="146.6953"/><rect fill="#FFFFFF" height="633.9219" style="stroke:#181818;stroke-width:1.0;" width="10" x="251" y="180.8281"/><rect fill="#FFFFFF" height="363.7266" style="stroke:#181818;stroke-width:1.0;" width="10" x="256" y="451.0234"/><rect fill="#FFFFFF" height="297.4609" style="stroke:#181818;stroke-width:1.0;" width="10" x="261" y="517.2891"/><rect fill="#FFFFFF" height="211.9297" style="stroke:#181818;stroke-width:1.0;" width="10" x="481" y="209.9609"/><rect fill="#FFFFFF" height="161.7969" style="stroke:#181818;stroke-width:1.0;" width="10" x="481" y="652.9531"/><rect fill="#FFFFFF" height="50.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="649" y="349.625"/><rect fill="#FFFFFF" height="65.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="649" y="551.4219"/><rect fill="#FFFFFF" height="50.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="649" y="682.0859"/><ellipse cx="7.5" cy="66.6797" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="75,63.4297,85,67.4297,75,71.4297,79,67.4297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="81" y1="67.4297" y2="67.4297"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="60" x="15" y="62.3638">onLayout</text><line style="stroke:#181818;stroke-width:1.0;" x1="97" x2="144" y1="91.5625" y2="91.5625"/><line style="stroke:#181818;stroke-width:1.0;" x1="144" x2="144" y1="91.5625" y2="104.5625"/><line style="stroke:#181818;stroke-width:1.0;" x1="103" x2="144" y1="104.5625" y2="104.5625"/><polygon fill="#181818" points="113,100.5625,103,104.5625,113,108.5625,109,104.5625" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="98" x="109" y="86.4966">dispatchLayout</text><line style="stroke:#181818;stroke-width:1.0;" x1="102" x2="149" y1="133.6953" y2="133.6953"/><line style="stroke:#181818;stroke-width:1.0;" x1="149" x2="149" y1="133.6953" y2="146.6953"/><line style="stroke:#181818;stroke-width:1.0;" x1="108" x2="149" y1="146.6953" y2="146.6953"/><polygon fill="#181818" points="118,142.6953,108,146.6953,118,150.6953,114,146.6953" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="135" x="114" y="128.6294">dispatchLayoutStep1</text><polygon fill="#181818" points="239,176.8281,249,180.8281,239,184.8281,243,180.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="107" x2="245" y1="180.8281" y2="180.8281"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="112" x="114" y="175.7622">onLayoutChildren</text><polygon fill="#181818" points="469,205.9609,479,209.9609,469,213.9609,473,209.9609" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="261" x2="475" y1="209.9609" y2="209.9609"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="201" x="268" y="204.895">detachAndScrapAttachedViews</text><path d="M27,224.9609 L275,224.9609 L275,232.0938 L265,242.0938 L27,242.0938 L27,224.9609 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.5;"/><rect fill="none" height="189.9297" style="stroke:#000000;stroke-width:1.5;" width="797" x="27" y="224.9609"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="203" x="42" y="238.0278">&#20498;&#24207;&#36941;&#21382;RecyclerView&#23376;View</text><line style="stroke:#181818;stroke-width:1.0;" x1="491" x2="533" y1="278.3594" y2="278.3594"/><line style="stroke:#181818;stroke-width:1.0;" x1="533" x2="533" y1="278.3594" y2="291.3594"/><line style="stroke:#181818;stroke-width:1.0;" x1="492" x2="533" y1="291.3594" y2="291.3594"/><polygon fill="#181818" points="502,287.3594,492,291.3594,502,295.3594,498,291.3594" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="98" x="498" y="258.1606">ViewHolder&#35774;&#32622;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="144" x="498" y="273.2935">FLAG_TMP_DETACHED</text><polygon fill="#181818" points="118,316.4922,108,320.4922,118,324.4922,114,320.4922" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="112" x2="480" y1="320.4922" y2="320.4922"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="160" x="124" y="315.4263">detachViewFromParent()</text><polygon fill="#181818" points="637,345.625,647,349.625,637,353.625,641,349.625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="491" x2="643" y1="349.625" y2="349.625"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="106" x="498" y="344.5591">scrapView(view)</text><line style="stroke:#181818;stroke-width:1.0;" x1="659" x2="701" y1="398.8906" y2="398.8906"/><line style="stroke:#181818;stroke-width:1.0;" x1="701" x2="701" y1="398.8906" y2="411.8906"/><line style="stroke:#181818;stroke-width:1.0;" x1="654" x2="701" y1="411.8906" y2="411.8906"/><polygon fill="#181818" points="664,407.8906,654,411.8906,664,415.8906,660,411.8906" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="111" x="666" y="378.6919">ViewHolder&#28155;&#21152;&#21040;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="146" x="666" y="393.8247">mAttachedScrap&#21015;&#34920;&#20013;</text><line style="stroke:#181818;stroke-width:1.0;" x1="261" x2="308" y1="438.0234" y2="438.0234"/><line style="stroke:#181818;stroke-width:1.0;" x1="308" x2="308" y1="438.0234" y2="451.0234"/><line style="stroke:#181818;stroke-width:1.0;" x1="267" x2="308" y1="451.0234" y2="451.0234"/><polygon fill="#181818" points="277,447.0234,267,451.0234,277,455.0234,273,451.0234" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="14" x="273" y="432.9575">fill</text><path d="M27,471.0234 L358,471.0234 L358,478.1563 L348,488.1563 L27,488.1563 L27,471.0234 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.5;"/><rect fill="none" height="335.7266" style="stroke:#000000;stroke-width:1.5;" width="882" x="27" y="471.0234"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="286" x="42" y="484.0903">&#24490;&#29615;&#20174;mAttachedScrap&#21462;&#20986;ViewHouder</text><line style="stroke:#181818;stroke-width:1.0;" x1="266" x2="313" y1="504.2891" y2="504.2891"/><line style="stroke:#181818;stroke-width:1.0;" x1="313" x2="313" y1="504.2891" y2="517.2891"/><line style="stroke:#181818;stroke-width:1.0;" x1="272" x2="313" y1="517.2891" y2="517.2891"/><polygon fill="#181818" points="282,513.2891,272,517.2891,282,521.2891,278,517.2891" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="80" x="278" y="499.2231">layoutChunk</text><polygon fill="#181818" points="637,547.4219,647,551.4219,637,555.4219,641,551.4219" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="271" x2="643" y1="551.4219" y2="551.4219"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="122" x="278" y="546.356">getViewForPosition</text><line style="stroke:#181818;stroke-width:1.0;" x1="659" x2="701" y1="615.8203" y2="615.8203"/><line style="stroke:#181818;stroke-width:1.0;" x1="701" x2="701" y1="615.8203" y2="628.8203"/><line style="stroke:#181818;stroke-width:1.0;" x1="654" x2="701" y1="628.8203" y2="628.8203"/><polygon fill="#181818" points="664,624.8203,654,628.8203,664,632.8203,660,628.8203" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="159" x="666" y="580.4888">&#20174;mAttachedScrap&#21462;&#20986;&#12290;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="130" x="666" y="595.6216">&#22914;&#26524;&#33719;&#21462;&#19981;&#21040;&#23558;&#20250;&#35843;&#29992;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="181" x="666" y="610.7544">onCreateViewHolder()&#24182;bind</text><polygon fill="#181818" points="469,648.9531,479,652.9531,469,656.9531,473,652.9531" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="271" x2="475" y1="652.9531" y2="652.9531"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="55" x="278" y="647.8872">addView</text><polygon fill="#181818" points="637,678.0859,647,682.0859,637,686.0859,641,682.0859" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="491" x2="643" y1="682.0859" y2="682.0859"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="92" x="498" y="677.02">unscrapView()</text><line style="stroke:#181818;stroke-width:1.0;" x1="659" x2="701" y1="731.3516" y2="731.3516"/><line style="stroke:#181818;stroke-width:1.0;" x1="701" x2="701" y1="731.3516" y2="744.3516"/><line style="stroke:#181818;stroke-width:1.0;" x1="654" x2="701" y1="744.3516" y2="744.3516"/><polygon fill="#181818" points="664,740.3516,654,744.3516,664,748.3516,660,744.3516" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="231" x="666" y="711.1528">ViewHolder&#20174;mAttachedScrap&#20013;&#21024;&#38500;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="211" x="666" y="726.2856">mAttachedScrap.remove(holder)</text><polygon fill="#181818" points="118,794.75,108,798.75,118,802.75,114,798.75" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="112" x2="480" y1="798.75" y2="798.75"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="130" x="124" y="763.4185">attachViewToParent</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="280" x="124" y="778.5513">(&#23545;&#20110;onCreateViewHolder&#21019;&#24314;&#30340;&#26032;holder&#23558;&#20250;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="187" x="124" y="793.6841">&#35843;&#29992;addView&#65292;&#32780;&#19981;&#26159;attache)</text><!--SRC=[dL9DQnD16BxlhvZZXfA2rnw4aBRsa4AmmOiBPTmPay7TcMLsDj9Rh5A3j5ifKjigKa6a26roicrI-sVSIROd_u8psNpiTgs8brrctlTzvlbu7xFYVV0GsnksW_aZWf-3kRa5m6W5Rh1069dAdpeHyJqexCR_zQy9xDqpFCW5iOa7gG0LGZ5FYgkGmZhc0Fh0STmSjBhBS2qtY8CufXcuzD1y7jOrD8e6Ix0G5j1kb2XQipdqIaAVCDB3lb7dBF20REt9tkxDYnqPRgN1vUbR_JC0c08k07spmXo4UNnsFVnnPj7bIkd1UcsrkhwuL2kLLvOMfmCPUHCc-h3CcLk5IfWm2xdk4MjVazMjPbDzTDEqd6uj5jEC1kTz-UPOjhiMTIT2Hwfb-tty-IIwE3KmHGR2q1Qa2GLEkpMswobnd8alrz-6OIVgXxV0TlVbwrxoQg1UrGAo6Cuul80-cnKpykfOZ7nWlCfy8WYZVrDu1uMVhKsBog-RWqyVu_1StKKNEqgyx6v5LqTnz-NmtOb56IrphAJEN38BylBx4wACc15FU4E4Ce5dA0Tqbia_vf7ZhHAGxUERmo-t0vhds6LDR3P6SuMxDWYAoGRLMB8_5ZLbvpBgXNcTilr1zdl3erU3_Mw2cpXZqSIRiTfVLzjnQrjPDpZe9FYueDVaDm00]--></g></svg>

<h2 id="从缓存获取ViewHolder"><a href="#从缓存获取ViewHolder" class="headerlink" title="从缓存获取ViewHolder"></a>从缓存获取ViewHolder</h2><p>首次创建ViewHolder，以及从缓存中获取都是通过<code>androidx.recyclerview.widget.RecyclerView.Recycler#getViewForPosition(int)</code>，这个方法会优先使用缓存中ViewHolder，如果找不到，就会调用createViewHolder和bindViewHolder创建一个新的，并返回ViewHodler的itemView：</p>
<p><img src="/images/RecyclerView/RecyclerView%E6%9F%A5%E6%89%BE%E7%BC%93%E5%AD%98%E6%B5%81%E7%A8%8B%E5%9B%BE.drawio.svg" alt="ViewHolder查找创建流程"></p>
<h2 id="ItemAnimator"><a href="#ItemAnimator" class="headerlink" title="ItemAnimator"></a>ItemAnimator</h2><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="265px" preserveAspectRatio="none" style="width:809px;height:265px;background:#FFFFFF;" version="1.1" viewBox="0 0 809 265" width="809px" zoomAndPan="magnify"><defs/><g><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="167" x2="167" y1="36.2969" y2="230.0938"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="320" x2="320" y1="36.2969" y2="230.0938"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="577.5" x2="577.5" y1="36.2969" y2="230.0938"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="745.5" x2="745.5" y1="36.2969" y2="230.0938"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="110" x="112" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="119" y="24.9951">RecyclerView</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="110" x="112" y="229.0938"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="119" y="249.0889">RecyclerView</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="48" x="296" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="303" y="24.9951">View</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="48" x="296" y="229.0938"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="303" y="249.0889">View</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="123" x="516.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="523.5" y="24.9951">Choreographer</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="123" x="516.5" y="229.0938"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="523.5" y="249.0889">Choreographer</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="115" x="688.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="695.5" y="24.9951">ItemAnimator</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="115" x="688.5" y="229.0938"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="695.5" y="249.0889">ItemAnimator</text><ellipse cx="7.5" cy="66.6797" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="155,63.4297,165,67.4297,155,71.4297,159,67.4297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="161" y1="67.4297" y2="67.4297"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="135" x="15" y="62.3638">dispatchLayoutStep3</text><line style="stroke:#181818;stroke-width:1.0;" x1="167" x2="209" y1="96.5625" y2="96.5625"/><line style="stroke:#181818;stroke-width:1.0;" x1="209" x2="209" y1="96.5625" y2="109.5625"/><line style="stroke:#181818;stroke-width:1.0;" x1="168" x2="209" y1="109.5625" y2="109.5625"/><polygon fill="#181818" points="178,105.5625,168,109.5625,178,113.5625,174,109.5625" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="139" x="174" y="91.4966">postAnimationRunner</text><polygon fill="#181818" points="308,134.6953,318,138.6953,308,142.6953,312,138.6953" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="167" x2="314" y1="138.6953" y2="138.6953"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="111" x="174" y="133.6294">postOnAnimation</text><polygon fill="#181818" points="566,163.8281,576,167.8281,566,171.8281,570,167.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="320" x2="572" y1="167.8281" y2="167.8281"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="234" x="327" y="162.7622">postCallback(CALLBACK_ANIMATION)</text><polygon fill="#181818" points="734,208.0938,744,212.0938,734,216.0938,738,212.0938" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="578" x2="740" y1="212.0938" y2="212.0938"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="144" x="585" y="191.895">runPendingAnimations</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="90" x="585" y="207.0278">callback&#20013;&#35843;&#29992;</text><!--SRC=[YyxNjLC8IaskJCv9BGhBJ2rNi598oImkI2n9pl19hCmlBGakIIqmva9HWgcb8B-un34lCpUn93C_BwWqBo-r24CBabB_FBXYBfYqSqP-KMf-Ub5YGKPg4LITSs9EJb9YShQ6iwEFZvEZitUyev-dhsE8fx-V9XUg1bsW4PubgRaGW_D19XILvWMavgLavgN3RIkEoKk6clbanzeN6vgVJra10000]--></g></svg>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>GraphViz dot</title>
    <url>/posts/34020.html</url>
    <content><![CDATA[<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>在线编译工具：<a href="http://viz-js.com/">http://viz-js.com</a><br>VSCode安装插件：<a href="https://marketplace.visualstudio.com/items?itemName=joaompinto.vscode-graphviz">Graphviz (dot) language support for Visual Studio Code</a><br>命令行：dot，比如，<code>dot -Tpng -ofile.png file.dot</code>可以导出图片。在Ubuntu系统中，通过<code>sudo apt install graphviz</code>安装即可使用。</p>
<p>添加系统环境变量：</p>
<p>GRAPHVIZ_DOT = D:\Program Files\Graphviz\bin\dot.exe</p>
<h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2><p><a href="http://www.graphviz.org/doc/info/shapes.html">Node Shapes</a><br><a href="https://renenyffenegger.ch/notes/tools/Graphviz/examples/index">Graphviz (dot) examples</a><br><a href="http://www.graphviz.org/doc/info/attrs.html">Node, Edge and Graph Attributes</a></p>
<h2 id="常用属性介绍"><a href="#常用属性介绍" class="headerlink" title="常用属性介绍"></a>常用属性介绍</h2><h3 id="节点（node）属性"><a href="#节点（node）属性" class="headerlink" title="节点（node）属性"></a>节点（node）属性</h3><p>节点的形状主要有三种：<a href="http://www.graphviz.org/doc/info/shapes.html#polygon">Polygon-based Nodes</a>, <a href="http://www.graphviz.org/doc/info/shapes.html#record">Record-based Nodes</a>, <a href="http://www.graphviz.org/doc/info/shapes.html#epsf">User-defined Nodes</a>。点击链接可看到详细介绍。</p>
<table>
<thead>
<tr>
<th>属性名称</th>
<th>介绍</th>
</tr>
</thead>
<tbody><tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:shape">shape</a></td>
<td>节点形状，box长方形、circle圆形等，参考<a href="http://www.graphviz.org/doc/info/shapes.html">Node Shapes</a></td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#k:color">color</a></td>
<td>边框颜色</td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:style">style</a></td>
<td>节点样式，filled, invisible, diagonals等，参考<a href="http://www.graphviz.org/doc/info/shapes.html#d:style">Styles for Nodes</a></td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:fillcolor">fillcolor</a></td>
<td>填充颜色, 只有在style=filled时才生效</td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:fontcolor">fontcolor</a></td>
<td>文字颜色</td>
</tr>
</tbody></table>
<h3 id="边（edge）属性"><a href="#边（edge）属性" class="headerlink" title="边（edge）属性"></a>边（edge）属性</h3><p>边也可以认为就是节点之间的连接线</p>
<table>
<thead>
<tr>
<th>属性名称</th>
<th>介绍</th>
</tr>
</thead>
<tbody><tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:label">label</a></td>
<td>文字描述</td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:headlabel">headlabel</a></td>
<td>连接线头部文字描述，比如A -&gt; B, A端是尾部，B端是头部</td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:taillabel">taillabel</a></td>
<td>连接线尾部文字描述</td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:headport">headport</a></td>
<td>连接线头部指向节点的位置，n(north), s(south), w(west), e(east)</td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#a:tailport">tailport</a></td>
<td>连接线尾部指向节点的位置</td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#k:color">color</a></td>
<td>连接线颜色</td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:fontcolor">labelfontcolor</a></td>
<td>文字颜色，还有fontname和</td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:arrowhead">arrowhead</a></td>
<td>箭头样式</td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:splines">splines</a></td>
<td>连接线样式，直线、曲线、折线等，splines=false设置为直线。</td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:dir">dir</a></td>
<td>连接线方向</td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:headclip">headclip</a></td>
<td>连接线头部指向节点边缘或节点中心，默认是边缘</td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:tailclip">tailclip</a></td>
<td>连接线尾部指向节点边缘或节点中心，默认是边缘</td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:weight">weight</a></td>
<td>连接线布局系数，值越大则线越短、越直、越垂直</td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:constraint">constraint</a></td>
<td>为false时，该连接线不用于节点布局的计算</td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:decorate">decorate</a></td>
<td>为true时，连接线标签通过下划线附着到连接线上</td>
</tr>
</tbody></table>
<h3 id="图（graph）属性"><a href="#图（graph）属性" class="headerlink" title="图（graph）属性"></a>图（graph）属性</h3><table>
<thead>
<tr>
<th>属性名称</th>
<th>介绍</th>
</tr>
</thead>
<tbody><tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:rankdir">rankdir</a></td>
<td>图形布局方向，默认TB，表示top -&gt; bottom。值为LR表示left -&gt; right。</td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:ranksep">ranksep</a></td>
<td>最小间隔</td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:group">group</a></td>
<td>对节点有效，同组节点的连接线将保持在一个直线方向。<a href="https://stackoverflow.com/questions/19308847/graphviz-vertical-ordering">示例</a></td>
</tr>
<tr>
<td><a href="http://www.graphviz.org/doc/info/attrs.html#d:compound">compound</a></td>
<td>如果为ture，则允许clusters集群之间留出边。默认不允许。</td>
</tr>
</tbody></table>
<h3 id="设置node和edge的默认属性"><a href="#设置node和edge的默认属性" class="headerlink" title="设置node和edge的默认属性"></a>设置node和edge的默认属性</h3><p>node和edge是两个特殊关键字，用于设置默认属性</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">digraph &#123;</span><br><span class="line">    node [attr=value, ...]</span><br><span class="line">    edge [attr=value, ...]</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="多点连线"><a href="#多点连线" class="headerlink" title="多点连线"></a>多点连线</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">digraph &#123;</span><br><span class="line">    node [shape=box]</span><br><span class="line">    A -&gt; &#123;B, C, D&#125; -&gt; E</span><br><span class="line">    node [shape=&quot;&quot;]</span><br><span class="line">    &#123;P, Q&#125; -&gt; &#123;M, N&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: %0 Pages: 1 -->
<svg width="350pt" height="188pt"
 viewBox="0.00 0.00 350.00 188.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 184)">
<title>%0</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-184 346,-184 346,4 -4,4"/>
<!-- A -->
<g id="node1" class="node">
<title>A</title>
<polygon fill="none" stroke="#000000" points="126,-180 72,-180 72,-144 126,-144 126,-180"/>
<text text-anchor="middle" x="99" y="-157.8" font-family="Times,serif" font-size="14.00" fill="#000000">A</text>
</g>
<!-- B -->
<g id="node2" class="node">
<title>B</title>
<polygon fill="none" stroke="#000000" points="54,-108 0,-108 0,-72 54,-72 54,-108"/>
<text text-anchor="middle" x="27" y="-85.8" font-family="Times,serif" font-size="14.00" fill="#000000">B</text>
</g>
<!-- A&#45;&gt;B -->
<g id="edge1" class="edge">
<title>A&#45;&gt;B</title>
<path fill="none" stroke="#000000" d="M80.8314,-143.8314C72.2848,-135.2848 61.9443,-124.9443 52.6198,-115.6198"/>
<polygon fill="#000000" stroke="#000000" points="54.9592,-113.0095 45.4133,-108.4133 50.0095,-117.9592 54.9592,-113.0095"/>
</g>
<!-- C -->
<g id="node3" class="node">
<title>C</title>
<polygon fill="none" stroke="#000000" points="126,-108 72,-108 72,-72 126,-72 126,-108"/>
<text text-anchor="middle" x="99" y="-85.8" font-family="Times,serif" font-size="14.00" fill="#000000">C</text>
</g>
<!-- A&#45;&gt;C -->
<g id="edge2" class="edge">
<title>A&#45;&gt;C</title>
<path fill="none" stroke="#000000" d="M99,-143.8314C99,-136.131 99,-126.9743 99,-118.4166"/>
<polygon fill="#000000" stroke="#000000" points="102.5001,-118.4132 99,-108.4133 95.5001,-118.4133 102.5001,-118.4132"/>
</g>
<!-- D -->
<g id="node4" class="node">
<title>D</title>
<polygon fill="none" stroke="#000000" points="198,-108 144,-108 144,-72 198,-72 198,-108"/>
<text text-anchor="middle" x="171" y="-85.8" font-family="Times,serif" font-size="14.00" fill="#000000">D</text>
</g>
<!-- A&#45;&gt;D -->
<g id="edge3" class="edge">
<title>A&#45;&gt;D</title>
<path fill="none" stroke="#000000" d="M117.1686,-143.8314C125.7152,-135.2848 136.0557,-124.9443 145.3802,-115.6198"/>
<polygon fill="#000000" stroke="#000000" points="147.9905,-117.9592 152.5867,-108.4133 143.0408,-113.0095 147.9905,-117.9592"/>
</g>
<!-- E -->
<g id="node5" class="node">
<title>E</title>
<polygon fill="none" stroke="#000000" points="126,-36 72,-36 72,0 126,0 126,-36"/>
<text text-anchor="middle" x="99" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">E</text>
</g>
<!-- B&#45;&gt;E -->
<g id="edge4" class="edge">
<title>B&#45;&gt;E</title>
<path fill="none" stroke="#000000" d="M45.1686,-71.8314C53.7152,-63.2848 64.0557,-52.9443 73.3802,-43.6198"/>
<polygon fill="#000000" stroke="#000000" points="75.9905,-45.9592 80.5867,-36.4133 71.0408,-41.0095 75.9905,-45.9592"/>
</g>
<!-- C&#45;&gt;E -->
<g id="edge5" class="edge">
<title>C&#45;&gt;E</title>
<path fill="none" stroke="#000000" d="M99,-71.8314C99,-64.131 99,-54.9743 99,-46.4166"/>
<polygon fill="#000000" stroke="#000000" points="102.5001,-46.4132 99,-36.4133 95.5001,-46.4133 102.5001,-46.4132"/>
</g>
<!-- D&#45;&gt;E -->
<g id="edge6" class="edge">
<title>D&#45;&gt;E</title>
<path fill="none" stroke="#000000" d="M152.8314,-71.8314C144.2848,-63.2848 133.9443,-52.9443 124.6198,-43.6198"/>
<polygon fill="#000000" stroke="#000000" points="126.9592,-41.0095 117.4133,-36.4133 122.0095,-45.9592 126.9592,-41.0095"/>
</g>
<!-- P -->
<g id="node6" class="node">
<title>P</title>
<ellipse fill="none" stroke="#000000" cx="243" cy="-162" rx="27" ry="18"/>
<text text-anchor="middle" x="243" y="-157.8" font-family="Times,serif" font-size="14.00" fill="#000000">P</text>
</g>
<!-- M -->
<g id="node8" class="node">
<title>M</title>
<ellipse fill="none" stroke="#000000" cx="243" cy="-90" rx="27" ry="18"/>
<text text-anchor="middle" x="243" y="-85.8" font-family="Times,serif" font-size="14.00" fill="#000000">M</text>
</g>
<!-- P&#45;&gt;M -->
<g id="edge7" class="edge">
<title>P&#45;&gt;M</title>
<path fill="none" stroke="#000000" d="M243,-143.8314C243,-136.131 243,-126.9743 243,-118.4166"/>
<polygon fill="#000000" stroke="#000000" points="246.5001,-118.4132 243,-108.4133 239.5001,-118.4133 246.5001,-118.4132"/>
</g>
<!-- N -->
<g id="node9" class="node">
<title>N</title>
<ellipse fill="none" stroke="#000000" cx="315" cy="-90" rx="27" ry="18"/>
<text text-anchor="middle" x="315" y="-85.8" font-family="Times,serif" font-size="14.00" fill="#000000">N</text>
</g>
<!-- P&#45;&gt;N -->
<g id="edge8" class="edge">
<title>P&#45;&gt;N</title>
<path fill="none" stroke="#000000" d="M258.2693,-146.7307C268.197,-136.803 281.3153,-123.6847 292.4363,-112.5637"/>
<polygon fill="#000000" stroke="#000000" points="295.1564,-114.7933 299.7527,-105.2473 290.2067,-109.8436 295.1564,-114.7933"/>
</g>
<!-- Q -->
<g id="node7" class="node">
<title>Q</title>
<ellipse fill="none" stroke="#000000" cx="315" cy="-162" rx="27" ry="18"/>
<text text-anchor="middle" x="315" y="-157.8" font-family="Times,serif" font-size="14.00" fill="#000000">Q</text>
</g>
<!-- Q&#45;&gt;M -->
<g id="edge9" class="edge">
<title>Q&#45;&gt;M</title>
<path fill="none" stroke="#000000" d="M299.7307,-146.7307C289.803,-136.803 276.6847,-123.6847 265.5637,-112.5637"/>
<polygon fill="#000000" stroke="#000000" points="267.7933,-109.8436 258.2473,-105.2473 262.8436,-114.7933 267.7933,-109.8436"/>
</g>
<!-- Q&#45;&gt;N -->
<g id="edge10" class="edge">
<title>Q&#45;&gt;N</title>
<path fill="none" stroke="#000000" d="M315,-143.8314C315,-136.131 315,-126.9743 315,-118.4166"/>
<polygon fill="#000000" stroke="#000000" points="318.5001,-118.4132 315,-108.4133 311.5001,-118.4133 318.5001,-118.4132"/>
</g>
</g>
</svg>


<h2 id="垂直方向布局"><a href="#垂直方向布局" class="headerlink" title="垂直方向布局"></a>垂直方向布局</h2><?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: g Pages: 1 -->
<svg width="117pt" height="260pt"
 viewBox="0.00 0.00 117.00 260.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 256)">
<title>g</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-256 113,-256 113,4 -4,4"/>
<!-- B -->
<g id="node1" class="node">
<title>B</title>
<ellipse fill="none" stroke="#000000" cx="27" cy="-162" rx="27" ry="18"/>
<text text-anchor="middle" x="27" y="-157.8" font-family="Times,serif" font-size="14.00" fill="#000000">B</text>
</g>
<!-- C -->
<g id="node2" class="node">
<title>C</title>
<ellipse fill="none" stroke="#000000" cx="27" cy="-90" rx="27" ry="18"/>
<text text-anchor="middle" x="27" y="-85.8" font-family="Times,serif" font-size="14.00" fill="#000000">C</text>
</g>
<!-- B&#45;&gt;C -->
<!-- D -->
<g id="node3" class="node">
<title>D</title>
<ellipse fill="none" stroke="#000000" cx="27" cy="-18" rx="27" ry="18"/>
<text text-anchor="middle" x="27" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">D</text>
</g>
<!-- C&#45;&gt;D -->
<!-- A -->
<g id="node4" class="node">
<title>A</title>
<ellipse fill="none" stroke="#000000" cx="82" cy="-234" rx="27" ry="18"/>
<text text-anchor="middle" x="82" y="-229.8" font-family="Times,serif" font-size="14.00" fill="#000000">A</text>
</g>
<!-- A&#45;&gt;B -->
<g id="edge1" class="edge">
<title>A&#45;&gt;B</title>
<path fill="none" stroke="#000000" d="M69.5196,-217.6621C62.4876,-208.4564 53.5653,-196.7764 45.7117,-186.4953"/>
<polygon fill="#000000" stroke="#000000" points="48.2828,-184.0953 39.431,-178.2733 42.72,-188.3446 48.2828,-184.0953"/>
</g>
<!-- A&#45;&gt;C -->
<g id="edge2" class="edge">
<title>A&#45;&gt;C</title>
<path fill="none" stroke="#000000" d="M80.2095,-215.8083C77.9112,-197.1875 72.9655,-167.7008 63,-144 58.6764,-133.7173 52.313,-123.3119 46.134,-114.4164"/>
<polygon fill="#000000" stroke="#000000" points="48.7998,-112.1301 40.0989,-106.0847 43.1307,-116.2365 48.7998,-112.1301"/>
</g>
<!-- A&#45;&gt;D -->
<g id="edge3" class="edge">
<title>A&#45;&gt;D</title>
<path fill="none" stroke="#000000" d="M83.3568,-215.9827C84.4121,-197.7504 85.2162,-168.7923 82,-144 77.7424,-111.1796 76.5858,-102.1784 63,-72 58.421,-61.8285 51.9997,-51.4482 45.8458,-42.5419"/>
<polygon fill="#000000" stroke="#000000" points="48.5295,-40.2781 39.8592,-34.1891 42.8399,-44.356 48.5295,-40.2781"/>
</g>
</g>
</svg>


<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">digraph g&#123;</span><br><span class="line"> &#123;node[group=a]; B;C;D;&#125;</span><br><span class="line"> A -&gt; B;</span><br><span class="line"> A -&gt; C;</span><br><span class="line"> A -&gt; D;</span><br><span class="line"> B -&gt;C -&gt;D [style=invis];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: g Pages: 1 -->
<svg width="152pt" height="260pt"
 viewBox="0.00 0.00 152.00 260.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 256)">
<title>g</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-256 148,-256 148,4 -4,4"/>
<!-- l1 -->
<!-- l2 -->
<!-- l1&#45;&gt;l2 -->
<g id="edge2" class="edge">
<title>l1&#45;&gt;l2</title>
<path fill="none" stroke="#000000" d="M72,-161.9478C72,-159.8016 72,-92.1637 72,-90.0506"/>
</g>
<!-- B2 -->
<g id="node5" class="node">
<title>B2</title>
<ellipse fill="none" stroke="#000000" cx="117" cy="-162" rx="27" ry="18"/>
<text text-anchor="middle" x="117" y="-157.8" font-family="Times,serif" font-size="14.00" fill="#000000">B2</text>
</g>
<!-- l1&#45;&gt;B2 -->
<g id="edge5" class="edge">
<title>l1&#45;&gt;B2</title>
<path fill="none" stroke="#000000" d="M72.3516,-162C74.8042,-162 77.2568,-162 79.7094,-162"/>
<polygon fill="#000000" stroke="#000000" points="79.7924,-165.5001 89.7924,-162 79.7923,-158.5001 79.7924,-165.5001"/>
</g>
<!-- l3 -->
<!-- l2&#45;&gt;l3 -->
<g id="edge3" class="edge">
<title>l2&#45;&gt;l3</title>
<path fill="none" stroke="#000000" d="M72,-89.9478C72,-87.8016 72,-20.1637 72,-18.0506"/>
</g>
<!-- C2 -->
<g id="node7" class="node">
<title>C2</title>
<ellipse fill="none" stroke="#000000" cx="117" cy="-90" rx="27" ry="18"/>
<text text-anchor="middle" x="117" y="-85.8" font-family="Times,serif" font-size="14.00" fill="#000000">C2</text>
</g>
<!-- l2&#45;&gt;C2 -->
<g id="edge7" class="edge">
<title>l2&#45;&gt;C2</title>
<path fill="none" stroke="#000000" d="M72.3516,-90C74.8042,-90 77.2568,-90 79.7094,-90"/>
<polygon fill="#000000" stroke="#000000" points="79.7924,-93.5001 89.7924,-90 79.7923,-86.5001 79.7924,-93.5001"/>
</g>
<!-- D2 -->
<g id="node9" class="node">
<title>D2</title>
<ellipse fill="none" stroke="#000000" cx="117" cy="-18" rx="27" ry="18"/>
<text text-anchor="middle" x="117" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">D2</text>
</g>
<!-- l3&#45;&gt;D2 -->
<g id="edge9" class="edge">
<title>l3&#45;&gt;D2</title>
<path fill="none" stroke="#000000" d="M72.3516,-18C74.8042,-18 77.2568,-18 79.7094,-18"/>
<polygon fill="#000000" stroke="#000000" points="79.7924,-21.5001 89.7924,-18 79.7923,-14.5001 79.7924,-21.5001"/>
</g>
<!-- B1 -->
<g id="node4" class="node">
<title>B1</title>
<ellipse fill="none" stroke="#000000" cx="27" cy="-162" rx="27" ry="18"/>
<text text-anchor="middle" x="27" y="-157.8" font-family="Times,serif" font-size="14.00" fill="#000000">B1</text>
</g>
<!-- B1&#45;&gt;l1 -->
<g id="edge4" class="edge">
<title>B1&#45;&gt;l1</title>
<path fill="none" stroke="#000000" d="M64.274,-162C66.7559,-162 69.2379,-162 71.7198,-162"/>
<polygon fill="#000000" stroke="#000000" points="64.0703,-158.5001 54.0703,-162 64.0703,-165.5001 64.0703,-158.5001"/>
</g>
<!-- C1 -->
<g id="node6" class="node">
<title>C1</title>
<ellipse fill="none" stroke="#000000" cx="27" cy="-90" rx="27" ry="18"/>
<text text-anchor="middle" x="27" y="-85.8" font-family="Times,serif" font-size="14.00" fill="#000000">C1</text>
</g>
<!-- C1&#45;&gt;l2 -->
<g id="edge6" class="edge">
<title>C1&#45;&gt;l2</title>
<path fill="none" stroke="#000000" d="M64.274,-90C66.7559,-90 69.2379,-90 71.7198,-90"/>
<polygon fill="#000000" stroke="#000000" points="64.0703,-86.5001 54.0703,-90 64.0703,-93.5001 64.0703,-86.5001"/>
</g>
<!-- D1 -->
<g id="node8" class="node">
<title>D1</title>
<ellipse fill="none" stroke="#000000" cx="27" cy="-18" rx="27" ry="18"/>
<text text-anchor="middle" x="27" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">D1</text>
</g>
<!-- D1&#45;&gt;l3 -->
<g id="edge8" class="edge">
<title>D1&#45;&gt;l3</title>
<path fill="none" stroke="#000000" d="M64.274,-18C66.7559,-18 69.2379,-18 71.7198,-18"/>
<polygon fill="#000000" stroke="#000000" points="64.0703,-14.5001 54.0703,-18 64.0703,-21.5001 64.0703,-14.5001"/>
</g>
<!-- A -->
<g id="node10" class="node">
<title>A</title>
<ellipse fill="none" stroke="#000000" cx="72" cy="-234" rx="27" ry="18"/>
<text text-anchor="middle" x="72" y="-229.8" font-family="Times,serif" font-size="14.00" fill="#000000">A</text>
</g>
<!-- A&#45;&gt;l1 -->
<g id="edge1" class="edge">
<title>A&#45;&gt;l1</title>
<path fill="none" stroke="#000000" d="M72,-215.8314C72,-195.1685 72,-164.0205 72,-162.0939"/>
</g>
</g>
</svg>


<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">digraph g&#123;</span><br><span class="line"> &#123;node[style=invis, shape=point, width=0, height=0]; l1; l2; l3&#125;</span><br><span class="line"> &#123;rank=same; l1; B1; B2&#125;</span><br><span class="line"> &#123;rank=same; l2; C1; C2&#125;</span><br><span class="line"> &#123;rank=same; l3; D1; D2&#125;</span><br><span class="line"></span><br><span class="line"> A -&gt; l1 -&gt; l2 -&gt; l3 [dir=none]</span><br><span class="line"> B1 -&gt; l1 [dir=back]</span><br><span class="line"> l1 -&gt; B2</span><br><span class="line"> C1 -&gt; l2 [dir=back]</span><br><span class="line"> l2 -&gt; C2</span><br><span class="line"> D1 -&gt; l3 [dir=back]</span><br><span class="line"> l3 -&gt; D2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>参考：</p>
<ul>
<li><a href="https://stackoverflow.com/questions/19308847/graphviz-vertical-ordering">Graphviz Vertical Ordering</a></li>
<li><a href="https://renenyffenegger.ch/notes/tools/Graphviz/examples/organization-chart">Graphviz example: organization chart</a></li>
</ul>
<h2 id="横向布局示例"><a href="#横向布局示例" class="headerlink" title="横向布局示例"></a>横向布局示例</h2><?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: G Pages: 1 -->
<svg width="332pt" height="247pt"
 viewBox="0.00 0.00 332.00 247.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 243)">
<title>G</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-243 328,-243 328,4 -4,4"/>
<g id="clust1" class="cluster">
<title>clusterCG</title>
<polygon fill="none" stroke="#0000ff" points="172,-46 172,-231 242,-231 242,-46 172,-46"/>
<text text-anchor="middle" x="207" y="-214.4" font-family="Times,serif" font-size="14.00" fill="#000000">C</text>
</g>
<!-- 1 -->
<g id="node1" class="node">
<title>1</title>
<text text-anchor="middle" x="27" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">1</text>
</g>
<!-- 2 -->
<g id="node2" class="node">
<title>2</title>
<text text-anchor="middle" x="117" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">2</text>
</g>
<!-- 1&#45;&gt;2 -->
<g id="edge1" class="edge">
<title>1&#45;&gt;2</title>
<path fill="none" stroke="#000000" d="M54.003,-18C65.2905,-18 78.3867,-18 89.705,-18"/>
</g>
<!-- 3 -->
<g id="node3" class="node">
<title>3</title>
<text text-anchor="middle" x="207" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">3</text>
</g>
<!-- 2&#45;&gt;3 -->
<g id="edge2" class="edge">
<title>2&#45;&gt;3</title>
<path fill="none" stroke="#000000" d="M144.003,-18C155.2905,-18 168.3867,-18 179.705,-18"/>
</g>
<!-- 4 -->
<g id="node4" class="node">
<title>4</title>
<text text-anchor="middle" x="297" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">4</text>
</g>
<!-- 3&#45;&gt;4 -->
<g id="edge3" class="edge">
<title>3&#45;&gt;4</title>
<path fill="none" stroke="#000000" d="M234.003,-18C245.2905,-18 258.3867,-18 269.705,-18"/>
</g>
<!-- A -->
<g id="node5" class="node">
<title>A</title>
<ellipse fill="none" stroke="#000000" cx="27" cy="-180" rx="27" ry="18"/>
<text text-anchor="middle" x="27" y="-175.8" font-family="Times,serif" font-size="14.00" fill="#000000">A</text>
</g>
<!-- A1 -->
<g id="node6" class="node">
<title>A1</title>
<ellipse fill="none" stroke="#000000" cx="117" cy="-180" rx="27" ry="18"/>
<text text-anchor="middle" x="117" y="-175.8" font-family="Times,serif" font-size="14.00" fill="#000000">A1</text>
</g>
<!-- A&#45;&gt;A1 -->
<g id="edge4" class="edge">
<title>A&#45;&gt;A1</title>
<path fill="none" stroke="#000000" d="M54.003,-180C62.0277,-180 70.9665,-180 79.5309,-180"/>
<polygon fill="#000000" stroke="#000000" points="79.7051,-183.5001 89.705,-180 79.705,-176.5001 79.7051,-183.5001"/>
</g>
<!-- A2 -->
<g id="node7" class="node">
<title>A2</title>
<ellipse fill="none" stroke="#000000" cx="207" cy="-180" rx="27" ry="18"/>
<text text-anchor="middle" x="207" y="-175.8" font-family="Times,serif" font-size="14.00" fill="#000000">A2</text>
</g>
<!-- A1&#45;&gt;A2 -->
<g id="edge5" class="edge">
<title>A1&#45;&gt;A2</title>
<path fill="none" stroke="#000000" d="M144.003,-180C152.0277,-180 160.9665,-180 169.5309,-180"/>
<polygon fill="#000000" stroke="#000000" points="169.7051,-183.5001 179.705,-180 169.705,-176.5001 169.7051,-183.5001"/>
</g>
<!-- A3 -->
<g id="node8" class="node">
<title>A3</title>
<ellipse fill="none" stroke="#000000" cx="297" cy="-180" rx="27" ry="18"/>
<text text-anchor="middle" x="297" y="-175.8" font-family="Times,serif" font-size="14.00" fill="#000000">A3</text>
</g>
<!-- A2&#45;&gt;A3 -->
<g id="edge6" class="edge">
<title>A2&#45;&gt;A3</title>
<path fill="none" stroke="#000000" d="M234.003,-180C242.0277,-180 250.9665,-180 259.5309,-180"/>
<polygon fill="#000000" stroke="#000000" points="259.7051,-183.5001 269.705,-180 259.705,-176.5001 259.7051,-183.5001"/>
</g>
<!-- B -->
<g id="node9" class="node">
<title>B</title>
<ellipse fill="none" stroke="#000000" cx="207" cy="-126" rx="27" ry="18"/>
<text text-anchor="middle" x="207" y="-121.8" font-family="Times,serif" font-size="14.00" fill="#000000">B</text>
</g>
<!-- C -->
<g id="node10" class="node">
<title>C</title>
<ellipse fill="none" stroke="#000000" cx="207" cy="-72" rx="27" ry="18"/>
<text text-anchor="middle" x="207" y="-67.8" font-family="Times,serif" font-size="14.00" fill="#000000">C</text>
</g>
</g>
</svg>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> digraph G &#123;</span><br><span class="line"> newrank=true</span><br><span class="line"> rankdir = LR;</span><br><span class="line"> node [shape = none]</span><br><span class="line"></span><br><span class="line"> 1-&gt;2-&gt;3-&gt;4[arrowhead=none]</span><br><span class="line"></span><br><span class="line"> node [shape = ellipse]</span><br><span class="line"></span><br><span class="line"> A-&gt;A1-&gt;A2-&gt;A3;</span><br><span class="line"></span><br><span class="line"> subgraph clusterCG&#123;</span><br><span class="line">  shape = rect;</span><br><span class="line">  rank=same;</span><br><span class="line"></span><br><span class="line">  A2;</span><br><span class="line">  B;</span><br><span class="line">  C;</span><br><span class="line">  color=blue;</span><br><span class="line">  label=&quot;C&quot;;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> &#123; rank=same; 1; A;&#125;</span><br><span class="line"> &#123; rank=same; 2; A1&#125;</span><br><span class="line"> &#123; rank=same; 3; A2&#125;</span><br><span class="line"> &#123; rank=same; 4; A3;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>参考：<a href="https://stackoverflow.com/questions/13041728/how-to-change-graphviz-subgraph-rank">How to change Graphviz subgraph rank?</a></p>
]]></content>
      <tags>
        <tag>GraphViz</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>代码调试之打印堆栈</title>
    <url>/posts/41513.html</url>
    <content><![CDATA[<h2 id="java代码中打印堆栈"><a href="#java代码中打印堆栈" class="headerlink" title="java代码中打印堆栈"></a>java代码中打印堆栈</h2><p>Java代码打印堆栈比较简单， 堆栈信息获取和输出，都可以通过Throwable类的方法实现。目前通用的做法是在java进程出现需要注意的异常时，打印堆栈，然后再决定退出或挽救。通常的方法是使用exception的printStackTrace()方法：  </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">func</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>也可以只打印堆栈不退出，这样就比较方便分析代码的动态运行情况。Java代码中插入堆栈打印的方法如下  </p>
<p>推荐   </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line">Log.d(TAG, android.util.Log.getStackTraceString(<span class="keyword">new</span> <span class="title class_">java</span>.lang.Throwable()));</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Android调试</tag>
      </tags>
  </entry>
  <entry>
    <title>通过自定义Service理解Binder</title>
    <url>/posts/1b96348b.html</url>
    <content><![CDATA[<p>本文创建了一个独立进程的service，通过bind方式来绑定服务，并通过binder与service进行交互。基于此来分析binder交互机制。</p>
<h2 id="Service的创建与使用"><a href="#Service的创建与使用" class="headerlink" title="Service的创建与使用"></a>Service的创建与使用</h2><p><strong>定义aidl接口：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//IRemote.aidl</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">IRemote</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setCallback</span><span class="params">(RemoteCallback callback)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//RemoteCallback.aidl</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">RemoteCallback</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">callback</span><span class="params">(String content)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>IRemote是service的对外接口，TalkCallback则用于从service回调client端，加入TalkCallback是为了更好的理解service和client相互调用的流程。<br>定义完aidl后，编译一遍项目，这样就可以生成对应的java类，对应的java类在<code>app/build/generated/aidl_source_output_dir</code>目录下。</p>
<p><strong>定义Service：</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RemoveService</span> <span class="title">extends</span> <span class="title">Service</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> RemoveService() &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IBinder onBind(Intent intent) &#123;</span><br><span class="line">        <span class="keyword">return</span> binder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> IBinder binder = new IRemote.Stub() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> void setCallback(RemoteCallback callback) throws RemoteException &#123;</span><br><span class="line">            <span class="comment">//收到client端的函数调用，并回调client端</span></span><br><span class="line">            callback.callback(<span class="string">&quot;I&#x27;m Service&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>因为我们要定义一个独立进程的service，所以在AndroidManifest.xml要声明<code>android:process</code>属性，如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">&quot;.RemoveService&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:process</span>=<span class="string">&quot;:remote&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p>这样一个独立进程的service就定义完成了，然后就可以使用了。</p>
<p><strong>绑定服务：</strong></p>
<p>我们在<code>MainActivity</code>中绑定service进行交互：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">testService</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">//绑定服务</span></span><br><span class="line">    bindService(Intent(<span class="keyword">this</span>, RemoveService::<span class="keyword">class</span>.java), <span class="keyword">object</span> :</span><br><span class="line">        ServiceConnection &#123;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onServiceConnected</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">            name: <span class="type">ComponentName</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">            service: <span class="type">IBinder</span>?</span></span></span><br><span class="line"><span class="params"><span class="function">        )</span></span> &#123;</span><br><span class="line">            <span class="keyword">val</span> proxy = IRemote.Stub.asInterface(service)</span><br><span class="line">            <span class="comment">//通过binder调用service的setCallback接口</span></span><br><span class="line">            proxy.setCallback(<span class="keyword">object</span> : RemoteCallback.Stub() &#123;</span><br><span class="line">                <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">callback</span><span class="params">(content: <span class="type">String</span>?)</span></span> &#123;</span><br><span class="line">                    <span class="comment">//收到service的回调消息</span></span><br><span class="line">                    Log.d(<span class="string">&quot;RemoteCallback&quot;</span>, <span class="string">&quot;callback message: <span class="variable">$content</span>&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onServiceDisconnected</span><span class="params">(name: <span class="type">ComponentName</span>?)</span></span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    &#125;, Context.BIND_AUTO_CREATE)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="IRemote-aidl的java实现"><a href="#IRemote-aidl的java实现" class="headerlink" title="IRemote.aidl的java实现"></a>IRemote.aidl的java实现</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IRemote</span> <span class="keyword">extends</span> <span class="title class_">android</span>.os.IInterface</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">talkAsync</span><span class="params">(me.rjy.android.demo.TalkCallback callback)</span> <span class="keyword">throws</span> android.os.RemoteException;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>IRemote.aidl生成的IRemote.java是一个接口类，具体的实现都在<code>IRemote.Stub</code>这个的静态内部类中，而且Stub还包含Proxy静态内部类。下面是它们的类图关系：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="294px" preserveAspectRatio="none" style="width:497px;height:294px;background:#FFFFFF;" version="1.1" viewBox="0 0 497 294" width="497px" zoomAndPan="magnify"><defs/><g><!--class IInterface--><g id="elem_IInterface"><rect codeLine="1" fill="#F1F1F1" height="48" id="IInterface" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="179" x="7" y="7"/><ellipse cx="22" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M22.9531,19.7813 L24.6719,19.7813 C25.0625,19.7813 25.25,19.75 25.375,19.6719 C25.6406,19.5156 25.7813,19.2344 25.7813,18.9375 C25.7813,18.6719 25.6719,18.4063 25.4375,18.2344 C25.2656,18.125 25.125,18.0938 24.6719,18.0938 L19.5313,18.0938 C19.0938,18.0938 18.9688,18.1094 18.8125,18.2031 C18.5625,18.3594 18.4063,18.6563 18.4063,18.9375 C18.4063,19.2188 18.5469,19.4688 18.7656,19.6406 C18.9219,19.75 19.1094,19.7813 19.5313,19.7813 L21.25,19.7813 L21.25,26.2969 L19.5313,26.2969 C19.0938,26.2969 18.9688,26.3125 18.8125,26.4219 C18.5625,26.5781 18.4063,26.8594 18.4063,27.1563 C18.4063,27.4063 18.5469,27.6719 18.7656,27.8281 C18.9219,27.9531 19.125,28 19.5313,28 L24.6719,28 C25.4219,28 25.7813,27.7188 25.7813,27.1563 C25.7813,26.875 25.6719,26.625 25.4375,26.4531 C25.2656,26.3281 25.125,26.2969 24.6719,26.2969 L22.9531,26.2969 L22.9531,19.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="147" x="36" y="27.8467">android.os.IInterface</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="185" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="185" y1="47" y2="47"/></g><!--class Binder--><g id="elem_Binder"><rect codeLine="2" fill="#F1F1F1" height="48" id="Binder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="159" x="178" y="115"/><ellipse cx="193" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M195.3438,126.6719 C194.4063,126.2344 193.8125,126.0938 192.9375,126.0938 C190.3125,126.0938 188.3125,128.1719 188.3125,130.8906 L188.3125,132.0156 C188.3125,134.5938 190.4219,136.4844 193.3125,136.4844 C194.5313,136.4844 195.6875,136.1875 196.4375,135.6406 C197.0156,135.2344 197.3438,134.7813 197.3438,134.3906 C197.3438,133.9375 196.9531,133.5469 196.4844,133.5469 C196.2656,133.5469 196.0625,133.625 195.875,133.8125 C195.4219,134.2969 195.4219,134.2969 195.2344,134.3906 C194.8125,134.6563 194.125,134.7813 193.3594,134.7813 C191.3125,134.7813 190.0156,133.6875 190.0156,131.9844 L190.0156,130.8906 C190.0156,129.1094 191.2656,127.7969 193,127.7969 C193.5781,127.7969 194.1875,127.9531 194.6563,128.2031 C195.1406,128.4844 195.3125,128.7031 195.4063,129.1094 C195.4688,129.5156 195.5,129.6406 195.6406,129.7656 C195.7813,129.9063 196.0156,130.0156 196.2344,130.0156 C196.5,130.0156 196.7656,129.875 196.9375,129.6563 C197.0469,129.5 197.0781,129.3125 197.0781,128.8906 L197.0781,127.4688 C197.0781,127.0313 197.0625,126.9063 196.9688,126.75 C196.8125,126.4844 196.5313,126.3438 196.2344,126.3438 C195.9375,126.3438 195.7344,126.4375 195.5156,126.75 L195.3438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="207" y="135.8467">android.os.Binder</text><line style="stroke:#181818;stroke-width:0.5;" x1="179" x2="336" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="179" x2="336" y1="155" y2="155"/></g><!--class IBinder--><g id="elem_IBinder"><rect codeLine="3" fill="#F1F1F1" height="48" id="IBinder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="163" x="265" y="7"/><ellipse cx="280" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M282.3438,18.6719 C281.4063,18.2344 280.8125,18.0938 279.9375,18.0938 C277.3125,18.0938 275.3125,20.1719 275.3125,22.8906 L275.3125,24.0156 C275.3125,26.5938 277.4219,28.4844 280.3125,28.4844 C281.5313,28.4844 282.6875,28.1875 283.4375,27.6406 C284.0156,27.2344 284.3438,26.7813 284.3438,26.3906 C284.3438,25.9375 283.9531,25.5469 283.4844,25.5469 C283.2656,25.5469 283.0625,25.625 282.875,25.8125 C282.4219,26.2969 282.4219,26.2969 282.2344,26.3906 C281.8125,26.6563 281.125,26.7813 280.3594,26.7813 C278.3125,26.7813 277.0156,25.6875 277.0156,23.9844 L277.0156,22.8906 C277.0156,21.1094 278.2656,19.7969 280,19.7969 C280.5781,19.7969 281.1875,19.9531 281.6563,20.2031 C282.1406,20.4844 282.3125,20.7031 282.4063,21.1094 C282.4688,21.5156 282.5,21.6406 282.6406,21.7656 C282.7813,21.9063 283.0156,22.0156 283.2344,22.0156 C283.5,22.0156 283.7656,21.875 283.9375,21.6563 C284.0469,21.5 284.0781,21.3125 284.0781,20.8906 L284.0781,19.4688 C284.0781,19.0313 284.0625,18.9063 283.9688,18.75 C283.8125,18.4844 283.5313,18.3438 283.2344,18.3438 C282.9375,18.3438 282.7344,18.4375 282.5156,18.75 L282.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="294" y="27.8467">android.os.IBinder</text><line style="stroke:#181818;stroke-width:0.5;" x1="266" x2="427" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="266" x2="427" y1="47" y2="47"/></g><!--class IRemote--><g id="elem_IRemote"><rect codeLine="5" fill="#F1F1F1" height="48" id="IRemote" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="92" x="50.5" y="115"/><ellipse cx="65.5" cy="131" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M66.4531,127.7813 L68.1719,127.7813 C68.5625,127.7813 68.75,127.75 68.875,127.6719 C69.1406,127.5156 69.2813,127.2344 69.2813,126.9375 C69.2813,126.6719 69.1719,126.4063 68.9375,126.2344 C68.7656,126.125 68.625,126.0938 68.1719,126.0938 L63.0313,126.0938 C62.5938,126.0938 62.4688,126.1094 62.3125,126.2031 C62.0625,126.3594 61.9063,126.6563 61.9063,126.9375 C61.9063,127.2188 62.0469,127.4688 62.2656,127.6406 C62.4219,127.75 62.6094,127.7813 63.0313,127.7813 L64.75,127.7813 L64.75,134.2969 L63.0313,134.2969 C62.5938,134.2969 62.4688,134.3125 62.3125,134.4219 C62.0625,134.5781 61.9063,134.8594 61.9063,135.1563 C61.9063,135.4063 62.0469,135.6719 62.2656,135.8281 C62.4219,135.9531 62.625,136 63.0313,136 L68.1719,136 C68.9219,136 69.2813,135.7188 69.2813,135.1563 C69.2813,134.875 69.1719,134.625 68.9375,134.4531 C68.7656,134.3281 68.625,134.2969 68.1719,134.2969 L66.4531,134.2969 L66.4531,127.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="60" x="79.5" y="135.8467">IRemote</text><line style="stroke:#181818;stroke-width:0.5;" x1="51.5" x2="141.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="51.5" x2="141.5" y1="155" y2="155"/></g><!--class Stub--><g id="elem_Stub"><rect codeLine="7" fill="#F1F1F1" height="48" id="Stub" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="128" x="51.5" y="231"/><ellipse cx="66.5" cy="247" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M68.5781,248.8125 L68.9688,249.7969 L68.5781,249.7969 C68.125,249.7969 68.0156,249.8125 67.8594,249.9219 C67.6094,250.0781 67.4531,250.3594 67.4531,250.6563 C67.4531,250.9219 67.5938,251.1719 67.8125,251.3281 C67.9531,251.4531 68.1563,251.5 68.5781,251.5 L70.9375,251.5 C71.2969,251.5 71.5156,251.4688 71.6563,251.375 C71.9063,251.2344 72.0625,250.9375 72.0625,250.6563 C72.0625,250.375 71.9219,250.125 71.7031,249.9688 C71.5313,249.8281 71.375,249.7969 70.9063,249.7969 L67.5156,241.5938 L63.8438,241.5938 C63.3906,241.5938 63.2656,241.6094 63.1094,241.7031 C62.8594,241.875 62.7031,242.1563 62.7031,242.4375 C62.7031,242.7188 62.8438,242.9688 63.0625,243.1406 C63.2344,243.25 63.4063,243.2813 63.8438,243.2813 L64.9219,243.2813 L62.2813,249.7969 C61.8594,249.7969 61.7031,249.8125 61.5469,249.9219 C61.2969,250.0781 61.1406,250.3594 61.1406,250.6563 C61.1406,251.2188 61.5156,251.5 62.2656,251.5 L64.5313,251.5 C64.8906,251.5 65.1094,251.4688 65.2344,251.375 C65.5,251.2344 65.6406,250.9375 65.6406,250.6563 C65.6406,250.375 65.5156,250.125 65.2969,249.9531 C65.125,249.8281 64.9844,249.7969 64.5313,249.7969 L64.1406,249.7969 L64.5313,248.8125 L68.5781,248.8125 Z M67.875,247.1094 L65.2031,247.1094 L66.5469,243.8438 L67.875,247.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="96" x="80.5" y="251.8467">IRemote.Stub</text><line style="stroke:#181818;stroke-width:0.5;" x1="52.5" x2="178.5" y1="263" y2="263"/><line style="stroke:#181818;stroke-width:0.5;" x1="52.5" x2="178.5" y1="271" y2="271"/></g><!--class Proxy--><g id="elem_Proxy"><rect codeLine="11" fill="#F1F1F1" height="64.2969" id="Proxy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="238" x="252.5" y="223"/><ellipse cx="294.5" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M296.8438,234.6719 C295.9063,234.2344 295.3125,234.0938 294.4375,234.0938 C291.8125,234.0938 289.8125,236.1719 289.8125,238.8906 L289.8125,240.0156 C289.8125,242.5938 291.9219,244.4844 294.8125,244.4844 C296.0313,244.4844 297.1875,244.1875 297.9375,243.6406 C298.5156,243.2344 298.8438,242.7813 298.8438,242.3906 C298.8438,241.9375 298.4531,241.5469 297.9844,241.5469 C297.7656,241.5469 297.5625,241.625 297.375,241.8125 C296.9219,242.2969 296.9219,242.2969 296.7344,242.3906 C296.3125,242.6563 295.625,242.7813 294.8594,242.7813 C292.8125,242.7813 291.5156,241.6875 291.5156,239.9844 L291.5156,238.8906 C291.5156,237.1094 292.7656,235.7969 294.5,235.7969 C295.0781,235.7969 295.6875,235.9531 296.1563,236.2031 C296.6406,236.4844 296.8125,236.7031 296.9063,237.1094 C296.9688,237.5156 297,237.6406 297.1406,237.7656 C297.2813,237.9063 297.5156,238.0156 297.7344,238.0156 C298,238.0156 298.2656,237.875 298.4375,237.6563 C298.5469,237.5 298.5781,237.3125 298.5781,236.8906 L298.5781,235.4688 C298.5781,235.0313 298.5625,234.9063 298.4688,234.75 C298.3125,234.4844 298.0313,234.3438 297.7344,234.3438 C297.4375,234.3438 297.2344,234.4375 297.0156,234.75 L296.8438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="314.5" y="243.8467">IRemote.Stub.Proxy</text><line style="stroke:#181818;stroke-width:0.5;" x1="253.5" x2="489.5" y1="255" y2="255"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="260.5" y="265.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="272.5" y="271.9951">android.os.IBinder mRemote;</text><line style="stroke:#181818;stroke-width:0.5;" x1="253.5" x2="489.5" y1="279.2969" y2="279.2969"/></g><!--reverse link IBinder to Binder--><g id="link_IBinder_Binder"><path codeLine="4" d="M315.6136,68.7853 C300.7876,86.4433 291.974,96.941 277.081,114.678 " fill="none" id="IBinder-backto-Binder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="327.188,55,311.0185,64.9271,320.2087,72.6434,327.188,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link IInterface to IRemote--><g id="link_IInterface_IRemote"><path codeLine="6" d="M96.5,73 C96.5,90.658 96.5,96.941 96.5,114.678 " fill="none" id="IInterface-backto-IRemote" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="96.5,55,90.5,73,102.5,73,96.5,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Binder to Stub--><g id="link_Binder_Stub"><path codeLine="8" d="M214.7276,174.3385 C190.0916,194.1165 168.817,211.1961 144.193,230.9647 " fill="none" id="Binder-backto-Stub" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="228.764,163.07,210.9714,169.6597,218.4838,179.0173,228.764,163.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link IRemote to Stub--><g id="link_IRemote_Stub"><path codeLine="9" d="M103.3041,180.8251 C106.6005,200.6031 108.366,211.1961 111.661,230.9647 " fill="none" id="IRemote-backto-Stub" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="100.3449,163.07,97.3858,181.8115,109.2225,179.8387,100.3449,163.07" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link IRemote to Proxy--><g id="link_IRemote_Proxy"><path codeLine="14" d="M159.1569,165.9741 C201.1279,183.3731 247.282,202.5062 296.496,222.9076 " fill="none" id="IRemote-backto-Proxy" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="142.529,159.081,156.8592,171.5167,161.4545,160.4314,142.529,159.081" style="stroke:#181818;stroke-width:1.0;"/></g><!--link IBinder to Proxy--><g id="link_IBinder_Proxy"><path codeLine="15" d="M349.128,55.338 C353.654,95.526 361.576,165.8804 366.648,210.9159 " fill="none" id="IBinder-to-Proxy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="367.991,222.8405,371.2944,216.4305,366.648,210.9159,363.3446,217.3259,367.991,222.8405" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[ROzD3W8X38NtFKN3qeHUG5Vks1az0GEOa3YG02OQnxixyZF3HDdm-kNrjRKkcN2LoY2JJWTlDVb8GZJCK4PSIr0t6UF6UxHEcv1zHVxnYCvKDTGV3nFdhTCksuYp6Nqoi8ukniRb45EGAY6hX2xfFkG1Nm5zU0RLDXEYGjgUVG2TWdyySqnM-0AS7_-z1SVIjeVtDZltBTTnlYla0m00]--></g></svg>

<p>下面是<code>IRemote</code>的内部类<code>Stub</code>的源码实现：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Stub</span> <span class="keyword">extends</span> <span class="title class_">android</span>.os.Binder <span class="keyword">implements</span> <span class="title class_">me</span>.rjy.android.demo.IRemote</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> java.lang.<span class="type">String</span> <span class="variable">DESCRIPTOR</span> <span class="operator">=</span> <span class="string">&quot;me.rjy.android.demo.IRemote&quot;</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">Stub</span><span class="params">()</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">this</span>.attachInterface(<span class="built_in">this</span>, DESCRIPTOR);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> me.rjy.android.demo.IRemote <span class="title function_">asInterface</span><span class="params">(android.os.IBinder obj)</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ((obj==<span class="literal">null</span>)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    android.os.<span class="type">IInterface</span> <span class="variable">iin</span> <span class="operator">=</span> obj.queryLocalInterface(DESCRIPTOR);</span><br><span class="line">    <span class="keyword">if</span> (((iin!=<span class="literal">null</span>)&amp;&amp;(iin <span class="keyword">instanceof</span> me.rjy.android.demo.IRemote))) &#123;</span><br><span class="line">      <span class="keyword">return</span> ((me.rjy.android.demo.IRemote)iin);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">me</span>.rjy.android.demo.IRemote.Stub.Proxy(obj);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@Override</span> <span class="keyword">public</span> android.os.IBinder <span class="title function_">asBinder</span><span class="params">()</span> &#123; <span class="keyword">return</span> <span class="built_in">this</span>; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//onTransact是binder跨进程通信的关键函数</span></span><br><span class="line">  <span class="meta">@Override</span> <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTransact</span><span class="params">(<span class="type">int</span> code, android.os.Parcel data, android.os.Parcel reply, <span class="type">int</span> flags)</span> <span class="keyword">throws</span> android.os.RemoteException</span><br><span class="line">  &#123;</span><br><span class="line">    java.lang.<span class="type">String</span> <span class="variable">descriptor</span> <span class="operator">=</span> DESCRIPTOR;</span><br><span class="line">    <span class="keyword">switch</span> (code)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> INTERFACE_TRANSACTION:</span><br><span class="line">      &#123;</span><br><span class="line">        reply.writeString(descriptor);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">case</span> TRANSACTION_setCallback:</span><br><span class="line">      &#123;</span><br><span class="line">        data.enforceInterface(descriptor);</span><br><span class="line">        me.rjy.android.demo.RemoteCallback _arg0;</span><br><span class="line">        _arg0 = me.rjy.android.demo.RemoteCallback.Stub.asInterface(data.readStrongBinder());</span><br><span class="line">        <span class="built_in">this</span>.setCallback(_arg0); <span class="comment">//调用RemoveService.binder.setCallback</span></span><br><span class="line">        reply.writeNoException();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onTransact(code, data, reply, flags);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">TRANSACTION_setCallback</span> <span class="operator">=</span> (android.os.IBinder.FIRST_CALL_TRANSACTION + <span class="number">0</span>);</span><br><span class="line">  ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>RemoveService的<code>IBinder onBind(Intent intent)</code>方法返回的就是<code>IRemote.Stub</code>的实现类：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RemoveService</span> <span class="title">extends</span> <span class="title">Service</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IBinder onBind(Intent intent) &#123;</span><br><span class="line">        <span class="keyword">return</span> binder;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> IBinder binder = new IRemote.Stub() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> void setCallback(RemoteCallback callback) throws RemoteException &#123;</span><br><span class="line">            callback.callback(<span class="string">&quot;I&#x27;m Service&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>所以，Stub是在服务端。</p>
<h2 id="Service绑定流程"><a href="#Service绑定流程" class="headerlink" title="Service绑定流程"></a>Service绑定流程</h2><pre class="mermaid">

zenuml
group App {
    &lt;&lt;App&gt;&gt; MainActivity
    &lt;&lt;App&gt;&gt; ContextImpl
    &lt;&lt;App&gt;&gt; ServiceDispatcher
    &lt;&lt;App&gt;&gt; InnerConnection
}
group AMS {
    &lt;&lt;AMS&gt;&gt; ActivityManagerService
    &lt;&lt;AMS&gt;&gt; ActiveServices
}
MainActivity-&gt;ContextImpl.bindService {
    bindServiceCommon {
        &quot;LoadedApk.getServiceDispatcher&quot; {
            new ServiceDispatcher() {
                new InnerConnection()
            }
        }
        ActivityManagerService.bindServiceInstance {
            ActiveServices.bindServiceLocked {
                retrieveServiceLocked
                InnerConnection.connected {
                    ServiceDispatcher.connected {
                        &quot;Handler.post RunConnection()&quot;
                    }
                }
            }
        }
    }
}
ServiceDispatcher-&gt;ServiceDispatcher.&quot;RunConnection.run() -&gt; doConnected&quot; {
    MainActivity.onServiceConnected
}
</pre>

<p>service的绑定过程用到了ServiceDispatcher和InnerConnection，来看下两者的类图结构：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="170px" preserveAspectRatio="none" style="width:611px;height:170px;background:#FFFFFF;" version="1.1" viewBox="0 0 611 170" width="611px" zoomAndPan="magnify"><defs/><g><!--class InnerConnection--><g id="elem_InnerConnection"><rect codeLine="1" fill="#F1F1F1" height="48" id="InnerConnection" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="375" x="7" y="115"/><ellipse cx="22" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,126.6719 C23.4063,126.2344 22.8125,126.0938 21.9375,126.0938 C19.3125,126.0938 17.3125,128.1719 17.3125,130.8906 L17.3125,132.0156 C17.3125,134.5938 19.4219,136.4844 22.3125,136.4844 C23.5313,136.4844 24.6875,136.1875 25.4375,135.6406 C26.0156,135.2344 26.3438,134.7813 26.3438,134.3906 C26.3438,133.9375 25.9531,133.5469 25.4844,133.5469 C25.2656,133.5469 25.0625,133.625 24.875,133.8125 C24.4219,134.2969 24.4219,134.2969 24.2344,134.3906 C23.8125,134.6563 23.125,134.7813 22.3594,134.7813 C20.3125,134.7813 19.0156,133.6875 19.0156,131.9844 L19.0156,130.8906 C19.0156,129.1094 20.2656,127.7969 22,127.7969 C22.5781,127.7969 23.1875,127.9531 23.6563,128.2031 C24.1406,128.4844 24.3125,128.7031 24.4063,129.1094 C24.4688,129.5156 24.5,129.6406 24.6406,129.7656 C24.7813,129.9063 25.0156,130.0156 25.2344,130.0156 C25.5,130.0156 25.7656,129.875 25.9375,129.6563 C26.0469,129.5 26.0781,129.3125 26.0781,128.8906 L26.0781,127.4688 C26.0781,127.0313 26.0625,126.9063 25.9688,126.75 C25.8125,126.4844 25.5313,126.3438 25.2344,126.3438 C24.9375,126.3438 24.7344,126.4375 24.5156,126.75 L24.3438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="343" x="36" y="135.8467">LoadedApk.ServiceDispatcher.InnerConnection</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="381" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="381" y1="155" y2="155"/></g><!--class Stub--><g id="elem_Stub"><rect codeLine="2" fill="#F1F1F1" height="48" id="Stub" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="206" x="91.5" y="7"/><ellipse cx="106.5" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M108.5781,24.8125 L108.9688,25.7969 L108.5781,25.7969 C108.125,25.7969 108.0156,25.8125 107.8594,25.9219 C107.6094,26.0781 107.4531,26.3594 107.4531,26.6563 C107.4531,26.9219 107.5938,27.1719 107.8125,27.3281 C107.9531,27.4531 108.1563,27.5 108.5781,27.5 L110.9375,27.5 C111.2969,27.5 111.5156,27.4688 111.6563,27.375 C111.9063,27.2344 112.0625,26.9375 112.0625,26.6563 C112.0625,26.375 111.9219,26.125 111.7031,25.9688 C111.5313,25.8281 111.375,25.7969 110.9063,25.7969 L107.5156,17.5938 L103.8438,17.5938 C103.3906,17.5938 103.2656,17.6094 103.1094,17.7031 C102.8594,17.875 102.7031,18.1563 102.7031,18.4375 C102.7031,18.7188 102.8438,18.9688 103.0625,19.1406 C103.2344,19.25 103.4063,19.2813 103.8438,19.2813 L104.9219,19.2813 L102.2813,25.7969 C101.8594,25.7969 101.7031,25.8125 101.5469,25.9219 C101.2969,26.0781 101.1406,26.3594 101.1406,26.6563 C101.1406,27.2188 101.5156,27.5 102.2656,27.5 L104.5313,27.5 C104.8906,27.5 105.1094,27.4688 105.2344,27.375 C105.5,27.2344 105.6406,26.9375 105.6406,26.6563 C105.6406,26.375 105.5156,26.125 105.2969,25.9531 C105.125,25.8281 104.9844,25.7969 104.5313,25.7969 L104.1406,25.7969 L104.5313,24.8125 L108.5781,24.8125 Z M107.875,23.1094 L105.2031,23.1094 L106.5469,19.8438 L107.875,23.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="174" x="120.5" y="27.8467">IServiceConnection.Stub</text><line style="stroke:#181818;stroke-width:0.5;" x1="92.5" x2="296.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="92.5" x2="296.5" y1="47" y2="47"/></g><!--class ServiceDispatcher--><g id="elem_ServiceDispatcher"><rect codeLine="5" fill="#F1F1F1" height="48" id="ServiceDispatcher" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="250" x="354.5" y="7"/><ellipse cx="369.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M371.8438,18.6719 C370.9063,18.2344 370.3125,18.0938 369.4375,18.0938 C366.8125,18.0938 364.8125,20.1719 364.8125,22.8906 L364.8125,24.0156 C364.8125,26.5938 366.9219,28.4844 369.8125,28.4844 C371.0313,28.4844 372.1875,28.1875 372.9375,27.6406 C373.5156,27.2344 373.8438,26.7813 373.8438,26.3906 C373.8438,25.9375 373.4531,25.5469 372.9844,25.5469 C372.7656,25.5469 372.5625,25.625 372.375,25.8125 C371.9219,26.2969 371.9219,26.2969 371.7344,26.3906 C371.3125,26.6563 370.625,26.7813 369.8594,26.7813 C367.8125,26.7813 366.5156,25.6875 366.5156,23.9844 L366.5156,22.8906 C366.5156,21.1094 367.7656,19.7969 369.5,19.7969 C370.0781,19.7969 370.6875,19.9531 371.1563,20.2031 C371.6406,20.4844 371.8125,20.7031 371.9063,21.1094 C371.9688,21.5156 372,21.6406 372.1406,21.7656 C372.2813,21.9063 372.5156,22.0156 372.7344,22.0156 C373,22.0156 373.2656,21.875 373.4375,21.6563 C373.5469,21.5 373.5781,21.3125 373.5781,20.8906 L373.5781,19.4688 C373.5781,19.0313 373.5625,18.9063 373.4688,18.75 C373.3125,18.4844 373.0313,18.3438 372.7344,18.3438 C372.4375,18.3438 372.2344,18.4375 372.0156,18.75 L371.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="383.5" y="27.8467">LoadedApk.ServiceDispatcher</text><line style="stroke:#181818;stroke-width:0.5;" x1="355.5" x2="603.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="355.5" x2="603.5" y1="47" y2="47"/></g><!--class ServiceConnection--><g id="elem_ServiceConnection"><rect fill="#F1F1F1" height="48" id="ServiceConnection" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="168" x="417.5" y="115"/><ellipse cx="432.5" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M434.8438,126.6719 C433.9063,126.2344 433.3125,126.0938 432.4375,126.0938 C429.8125,126.0938 427.8125,128.1719 427.8125,130.8906 L427.8125,132.0156 C427.8125,134.5938 429.9219,136.4844 432.8125,136.4844 C434.0313,136.4844 435.1875,136.1875 435.9375,135.6406 C436.5156,135.2344 436.8438,134.7813 436.8438,134.3906 C436.8438,133.9375 436.4531,133.5469 435.9844,133.5469 C435.7656,133.5469 435.5625,133.625 435.375,133.8125 C434.9219,134.2969 434.9219,134.2969 434.7344,134.3906 C434.3125,134.6563 433.625,134.7813 432.8594,134.7813 C430.8125,134.7813 429.5156,133.6875 429.5156,131.9844 L429.5156,130.8906 C429.5156,129.1094 430.7656,127.7969 432.5,127.7969 C433.0781,127.7969 433.6875,127.9531 434.1563,128.2031 C434.6406,128.4844 434.8125,128.7031 434.9063,129.1094 C434.9688,129.5156 435,129.6406 435.1406,129.7656 C435.2813,129.9063 435.5156,130.0156 435.7344,130.0156 C436,130.0156 436.2656,129.875 436.4375,129.6563 C436.5469,129.5 436.5781,129.3125 436.5781,128.8906 L436.5781,127.4688 C436.5781,127.0313 436.5625,126.9063 436.4688,126.75 C436.3125,126.4844 436.0313,126.3438 435.7344,126.3438 C435.4375,126.3438 435.2344,126.4375 435.0156,126.75 L434.8438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="446.5" y="135.8467">ServiceConnection</text><line style="stroke:#181818;stroke-width:0.5;" x1="418.5" x2="584.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="418.5" x2="584.5" y1="155" y2="155"/></g><!--reverse link Stub to InnerConnection--><g id="link_Stub_InnerConnection"><path codeLine="3" d="M194.5,73 C194.5,90.6584 194.5,96.9408 194.5,114.6784 " fill="none" id="Stub-backto-InnerConnection" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="194.5,55,188.5,73,200.5,73,194.5,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ServiceDispatcher to ServiceConnection--><g id="link_ServiceDispatcher_ServiceConnection"><path codeLine="8" d="M486.7126,66.7496 C490.3776,84.408 492.978,96.9408 496.66,114.6784 " fill="none" id="ServiceDispatcher-backto-ServiceConnection" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="484.274,55,481.5768,61.6877,486.7126,66.7496,489.4098,60.0619,484.274,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ServiceDispatcher to InnerConnection--><g id="link_ServiceDispatcher_InnerConnection"><path codeLine="9" d="M406.4118,59.1833 C358.7718,76.9026 304.445,97.1083 256.712,114.8617 " fill="none" id="ServiceDispatcher-backto-InnerConnection" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="417.659,55,410.641,53.3426,406.4118,59.1833,413.4298,60.8407,417.659,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[Iyv9B2vMKFB9Jqn9JN4ioDOBJYqgoqnETSaiBaWiISv8BTBppCjBBNBE1vB99PdvUKeAYSKAQ69SYKd59KM9oIKAIfvG0n2IUi4bfKbWNI065uXGiAdHrSKmX2kPe6CWng2BAbHpSTLoOGfh0It1S0uETMYE0G00]--></g></svg>

<p>IServiceConnection是一个binder接口，app是service端，ams是client端，当绑定成功后，ams通过IServiceConnection来通知app绑定成功。</p>
<h2 id="writeStrongBinder"><a href="#writeStrongBinder" class="headerlink" title="writeStrongBinder"></a>writeStrongBinder</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks\base\core\java\android\os\Parcel.java</span></span><br><span class="line">    <span class="meta">@FastNative</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">nativeWriteStrongBinder</span><span class="params">(<span class="type">long</span> nativePtr, IBinder val)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">writeStrongBinder</span><span class="params">(IBinder val)</span> &#123;</span><br><span class="line">        nativeWriteStrongBinder(mNativePtr, val);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>nativeWriteStrongBinder是native函数，对应的c++的实现源码如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//android_os_Parcel.cpp</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">android_os_Parcel_writeStrongBinder</span><span class="params">(JNIEnv* env, jclass clazz, jlong nativePtr, jobject object)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Parcel* parcel = <span class="built_in">reinterpret_cast</span>&lt;Parcel*&gt;(nativePtr);</span><br><span class="line">    <span class="keyword">if</span> (parcel != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="type">const</span> <span class="type">status_t</span> err = parcel-&gt;<span class="built_in">writeStrongBinder</span>(<span class="built_in">ibinderForJavaObject</span>(env, object));</span><br><span class="line">        <span class="keyword">if</span> (err != NO_ERROR) &#123;</span><br><span class="line">            <span class="built_in">signalExceptionForError</span>(env, clazz, err);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo User Manual</title>
    <url>/posts/27579.html</url>
    <content><![CDATA[<h2 id="VSCode-Hexo"><a href="#VSCode-Hexo" class="headerlink" title="VSCode + Hexo"></a>VSCode + Hexo</h2><h3 id="安装Paste-Image插件"><a href="#安装Paste-Image插件" class="headerlink" title="安装Paste Image插件"></a>安装<a href="https://marketplace.visualstudio.com/items?itemName=mushan.vscode-paste-image">Paste Image</a>插件</h3><p>安装完插件后，通过 <code>Ctrl + Shift + P</code> 快捷键打开setting.json<br><img src="/images/Hexo-User-Manual_2023-08-17-13-48-48.png" alt="Open Settings(JSON)"></p>
<p>然后，在setting.json文件中添加两行配置</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;pasteImage.path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;currentFileNameWithoutExt&#125;/&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;pasteImage.insertPattern&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;% asset_img $&#123;imageFileName&#125; %&#125;&quot;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>

<p>然后就可以使用<code>Ctrl + Alt + V</code>快捷键就可以粘贴图片到markdown文档中了。但是这个快捷键不一定好使。也可以通过<code>Ctrl + Shift + P</code>然后输入<code>past image</code>来粘贴。<br>插入的图片采用<code>asset_img</code>语法，关于asset_img详细信息可参考：<a href="https://hexo.io/docs/asset-folders">https://hexo.io/docs/asset-folders</a>。插入的图片将会放到markdown文件同名的文件夹中。</p>
<h3 id="安装Markdown-Preview-Enhanced插件"><a href="#安装Markdown-Preview-Enhanced插件" class="headerlink" title="安装Markdown Preview Enhanced插件"></a>安装<a href="https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced">Markdown Preview Enhanced</a>插件</h3><p><a href="https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced">Markdown Preview Enhanced</a>插件无法展示使用<code>asset_img</code>插入的图片，需要修改插件的<code>parser.js</code>。通过快捷键<code>Ctrl+Shift+P</code>打开<code>parser.js</code>:<br><img src="/images/Hexo-User-Manual_2023-08-17-13-52-11.png" alt="Extent Parser"><br>然后修改onWillParseMarkdown函数：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">onWillParseMarkdown</span>: <span class="keyword">function</span>(<span class="params">markdown</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> vscode = <span class="built_in">require</span>(<span class="string">&quot;vscode&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>)=&gt;</span> &#123;</span><br><span class="line">    markdown = markdown.<span class="title function_">replace</span>(</span><br><span class="line">      <span class="regexp">/\&#123;%\s*asset_img\s*(\S+)\s*\S*\s*%\&#125;/g</span>,</span><br><span class="line">      <span class="function">(<span class="params">whole, content</span>) =&gt;</span> &#123;</span><br><span class="line">        abs_filename = vscode.<span class="property">window</span>.<span class="property">activeTextEditor</span>.<span class="property">document</span>.<span class="property">fileName</span></span><br><span class="line">        filename = path.<span class="title function_">basename</span>(abs_filename);</span><br><span class="line">        filename = filename.<span class="title function_">substring</span>(<span class="number">0</span>,filename.<span class="title function_">indexOf</span>(<span class="string">&#x27;.&#x27;</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`![](<span class="subst">$&#123;filename + <span class="string">&quot;/&quot;</span>+ content&#125;</span>)`</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">resolve</span>(markdown)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>参考文章：</p>
<ul>
<li><a href="https://maple-leaf-0219.github.io/2020/vscode-hexo-markdown%E5%AE%9A%E5%88%B6%E6%80%9D%E8%B7%AF/">vscode hexo markdown定制思路</a></li>
<li><a href="https://yichengsu.github.io/2019/07/Hexo-with-VSCode/">Hexo with VSCode</a></li>
</ul>
<h2 id="主页配置显示文章摘抄"><a href="#主页配置显示文章摘抄" class="headerlink" title="主页配置显示文章摘抄"></a>主页配置显示文章摘抄</h2><p>默认情况下，在主页中会把整个文章都显示了，导致主页特别乱。可以通过在文章中插入下面代码来截取摘抄：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure>

<p>也可以通过description字段来单独撰写摘抄。</p>
<h2 id="代码段"><a href="#代码段" class="headerlink" title="代码段"></a>代码段</h2><p>可以通过代码段标签<code>raw</code>来禁止Markdown引擎渲染标签内的内容。</p>
<h2 id="VSCode中预览hexo的图片"><a href="#VSCode中预览hexo的图片" class="headerlink" title="VSCode中预览hexo的图片"></a>VSCode中预览hexo的图片</h2><h2 id="支持-plantuml-画图"><a href="#支持-plantuml-画图" class="headerlink" title="支持 plantuml 画图"></a>支持 plantuml 画图</h2><p><a href="https://github.com/miao1007/hexo-filter-plantuml">hexo-filter-plantuml</a><br>示例：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="387px" preserveAspectRatio="none" style="width:358px;height:387px;background:#FFFFFF;" version="1.1" viewBox="0 0 358 387" width="358px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="175.9297" style="stroke:#181818;stroke-width:1.0;" width="10" x="93.5" y="112.4297"/><rect fill="#FFFFFF" height="102.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="200" y="156.6953"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="305.5" y="185.8281"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="23" x2="23" y1="81.2969" y2="306.3594"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="98.5" x2="98.5" y1="81.2969" y2="306.3594"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="204.5" x2="204.5" y1="81.2969" y2="306.3594"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="310.5" x2="310.5" y1="81.2969" y2="306.3594"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="31" x="5" y="77.9951">User</text><ellipse cx="23.5" cy="13.5" fill="#E2E2F0" rx="8" ry="8" style="stroke:#181818;stroke-width:0.5;"/><path d="M23.5,21.5 L23.5,48.5 M10.5,29.5 L36.5,29.5 M23.5,48.5 L10.5,63.5 M23.5,48.5 L36.5,63.5 " fill="none" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="31" x="5" y="318.3545">User</text><ellipse cx="23.5" cy="330.1563" fill="#E2E2F0" rx="8" ry="8" style="stroke:#181818;stroke-width:0.5;"/><path d="M23.5,338.1563 L23.5,365.1563 M10.5,346.1563 L36.5,346.1563 M23.5,365.1563 L10.5,380.1563 M23.5,365.1563 L36.5,380.1563 " fill="none" style="stroke:#181818;stroke-width:0.5;"/><rect fill="#E2E2F0" height="30.2969" rx="10" ry="10" style="stroke:#181818;stroke-width:0.5;" width="86" x="55.5" y="50"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="72" x="62.5" y="69.9951">First Class</text><rect fill="#E2E2F0" height="30.2969" rx="10" ry="10" style="stroke:#181818;stroke-width:0.5;" width="86" x="55.5" y="305.3594"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="72" x="62.5" y="325.3545">First Class</text><rect fill="#E2E2F0" height="30.2969" rx="10" ry="10" style="stroke:#181818;stroke-width:0.5;" width="107" x="151.5" y="50"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="158.5" y="69.9951">Second Class</text><rect fill="#E2E2F0" height="30.2969" rx="10" ry="10" style="stroke:#181818;stroke-width:0.5;" width="107" x="151.5" y="305.3594"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="158.5" y="325.3545">Second Class</text><rect fill="#E2E2F0" height="30.2969" rx="10" ry="10" style="stroke:#181818;stroke-width:0.5;" width="84" x="268.5" y="50"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="70" x="275.5" y="69.9951">Last Class</text><rect fill="#E2E2F0" height="30.2969" rx="10" ry="10" style="stroke:#181818;stroke-width:0.5;" width="84" x="268.5" y="305.3594"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="70" x="275.5" y="325.3545">Last Class</text><rect fill="#FFFFFF" height="175.9297" style="stroke:#181818;stroke-width:1.0;" width="10" x="93.5" y="112.4297"/><rect fill="#FFFFFF" height="102.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="200" y="156.6953"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="305.5" y="185.8281"/><polygon fill="#181818" points="81.5,108.4297,91.5,112.4297,81.5,116.4297,85.5,112.4297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:2.0;" x1="23.5" x2="87.5" y1="112.4297" y2="112.4297"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="30.5" y="107.3638">DoWork</text><polygon fill="#181818" points="188,152.6953,198,156.6953,188,160.6953,192,156.6953" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:2.0;" x1="103.5" x2="194" y1="156.6953" y2="156.6953"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="43" x="110.5" y="136.4966">Create</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="53" x="110.5" y="151.6294">Request</text><polygon fill="#181818" points="293.5,181.8281,303.5,185.8281,293.5,189.8281,297.5,185.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:2.0;" x1="210" x2="299.5" y1="185.8281" y2="185.8281"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="217" y="180.7622">DoWork</text><polygon fill="#181818" points="221,210.9609,211,214.9609,221,218.9609,217,214.9609" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:2.0;stroke-dasharray:2.0,2.0;" x1="215" x2="309.5" y1="214.9609" y2="214.9609"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="227" y="209.895">WorkDone</text><line style="stroke:#A80036;stroke-width:2.0;" x1="301.5" x2="319.5" y1="205.9609" y2="223.9609"/><line style="stroke:#A80036;stroke-width:2.0;" x1="301.5" x2="319.5" y1="223.9609" y2="205.9609"/><polygon fill="#181818" points="114.5,255.2266,104.5,259.2266,114.5,263.2266,110.5,259.2266" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:2.0;stroke-dasharray:2.0,2.0;" x1="108.5" x2="204" y1="259.2266" y2="259.2266"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="53" x="120.5" y="239.0278">Request</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="120.5" y="254.1606">Created</text><polygon fill="#181818" points="34.5,284.3594,24.5,288.3594,34.5,292.3594,30.5,288.3594" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:2.0;stroke-dasharray:2.0,2.0;" x1="28.5" x2="97.5" y1="288.3594" y2="288.3594"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="34" x="40.5" y="283.2935">Done</text><!--SRC=[PO-xJWCn44Nx-OfH-aWe1KMAI6j7L1G8WgX7tX5OcxMN6OVNr-DP0l6ArkVSUySwn3IHq8ZAhoTEWJkH_7vuYM58h8eRq3z5yYdr8KjYmSrL0qRw6AjCpwpnY_6wPR-zToGbXZXHAbXhM8unCG25aWKVbGMcnbZTHD62_aYgAoJ5ReaVEEJKDzmj-IqjqXx09d2zmswB-_oKPR3f-4Q5QpTqXjmMlR2ztDlHMYwA0t2c-Fzf3nxNFsa3-ro_rTUmv4_RTJEig-VEyqHVdRQzcpKxqXRcYijztm00]--></g></svg>

<h2 id="支持-GraphViz-画图"><a href="#支持-GraphViz-画图" class="headerlink" title="支持 GraphViz 画图"></a>支持 GraphViz 画图</h2><p>使用<a href="https://github.com/rjyblog/hexo-tag-viz.git">hexo-tag-viz</a>插件来绘制。支持把<code>dot</code>或<code>viz</code>代码块渲染成graphviz图形。<br>可以通过 <code>engine=xxx</code> 来选择不同的渲染引擎。支持的引擎包括 <code>circo</code>，<code>dot</code>，<code>neato</code>，<code>osage</code>，或者 <code>twopi</code>。默认使用 <code>dot</code> 引擎。</p>
<div style="border:1px dotted black; background-color: #F2F3F4; padding: 5px;">
    &#96;&#96;&#96; viz <br>
    digraph { <br>
        A -> {B; C; D} <br>
    } <br>
    &#96;&#96;&#96;
</div>

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: %0 Pages: 1 -->
<svg width="206pt" height="116pt"
 viewBox="0.00 0.00 206.00 116.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 112)">
<title>%0</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-112 202,-112 202,4 -4,4"/>
<!-- A -->
<g id="node1" class="node">
<title>A</title>
<ellipse fill="none" stroke="#000000" cx="99" cy="-90" rx="27" ry="18"/>
<text text-anchor="middle" x="99" y="-85.8" font-family="Times,serif" font-size="14.00" fill="#000000">A</text>
</g>
<!-- B -->
<g id="node2" class="node">
<title>B</title>
<ellipse fill="none" stroke="#000000" cx="27" cy="-18" rx="27" ry="18"/>
<text text-anchor="middle" x="27" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">B</text>
</g>
<!-- A&#45;&gt;B -->
<g id="edge1" class="edge">
<title>A&#45;&gt;B</title>
<path fill="none" stroke="#000000" d="M83.7307,-74.7307C73.803,-64.803 60.6847,-51.6847 49.5637,-40.5637"/>
<polygon fill="#000000" stroke="#000000" points="51.7933,-37.8436 42.2473,-33.2473 46.8436,-42.7933 51.7933,-37.8436"/>
</g>
<!-- C -->
<g id="node3" class="node">
<title>C</title>
<ellipse fill="none" stroke="#000000" cx="99" cy="-18" rx="27" ry="18"/>
<text text-anchor="middle" x="99" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">C</text>
</g>
<!-- A&#45;&gt;C -->
<g id="edge2" class="edge">
<title>A&#45;&gt;C</title>
<path fill="none" stroke="#000000" d="M99,-71.8314C99,-64.131 99,-54.9743 99,-46.4166"/>
<polygon fill="#000000" stroke="#000000" points="102.5001,-46.4132 99,-36.4133 95.5001,-46.4133 102.5001,-46.4132"/>
</g>
<!-- D -->
<g id="node4" class="node">
<title>D</title>
<ellipse fill="none" stroke="#000000" cx="171" cy="-18" rx="27" ry="18"/>
<text text-anchor="middle" x="171" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">D</text>
</g>
<!-- A&#45;&gt;D -->
<g id="edge3" class="edge">
<title>A&#45;&gt;D</title>
<path fill="none" stroke="#000000" d="M114.2693,-74.7307C124.197,-64.803 137.3153,-51.6847 148.4363,-40.5637"/>
<polygon fill="#000000" stroke="#000000" points="151.1564,-42.7933 155.7527,-33.2473 146.2067,-37.8436 151.1564,-42.7933"/>
</g>
</g>
</svg>


<p>通过engine参数指定引擎：</p>
<div style="border:1px dotted black; background-color: #F2F3F4; padding: 5px;">
    &#96;&#96;&#96; viz engine=neato<br>
    digraph { <br>
        A -> {B; C; D} <br>
    } <br>
    &#96;&#96;&#96;
</div>

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: %0 Pages: 1 -->
<svg width="186pt" height="176pt"
 viewBox="0.00 0.00 185.76 175.70" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 171.7004)">
<title>%0</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-171.7004 181.7629,-171.7004 181.7629,4 -4,4"/>
<!-- A -->
<g id="node1" class="node">
<title>A</title>
<ellipse fill="none" stroke="#000000" cx="74.8817" cy="-89.712" rx="27" ry="18"/>
<text text-anchor="middle" x="74.8817" y="-85.512" font-family="Times,serif" font-size="14.00" fill="#000000">A</text>
</g>
<!-- B -->
<g id="node2" class="node">
<title>B</title>
<ellipse fill="none" stroke="#000000" cx="150.7629" cy="-101.4894" rx="27" ry="18"/>
<text text-anchor="middle" x="150.7629" y="-97.2894" font-family="Times,serif" font-size="14.00" fill="#000000">B</text>
</g>
<!-- A&#45;&gt;B -->
<g id="edge1" class="edge">
<title>A&#45;&gt;B</title>
<path fill="none" stroke="#000000" d="M101.4213,-93.8312C105.6043,-94.4804 109.9911,-95.1613 114.3509,-95.838"/>
<polygon fill="#000000" stroke="#000000" points="113.9479,-99.3172 124.3664,-97.3925 115.0216,-92.4001 113.9479,-99.3172"/>
</g>
<!-- C -->
<g id="node3" class="node">
<title>C</title>
<ellipse fill="none" stroke="#000000" cx="47.5051" cy="-18" rx="27" ry="18"/>
<text text-anchor="middle" x="47.5051" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">C</text>
</g>
<!-- A&#45;&gt;C -->
<g id="edge2" class="edge">
<title>A&#45;&gt;C</title>
<path fill="none" stroke="#000000" d="M68.1145,-71.9854C64.9982,-63.8223 61.2324,-53.958 57.7769,-44.9065"/>
<polygon fill="#000000" stroke="#000000" points="61.031,-43.6167 54.1945,-35.5227 54.4913,-46.1133 61.031,-43.6167"/>
</g>
<!-- D -->
<g id="node4" class="node">
<title>D</title>
<ellipse fill="none" stroke="#000000" cx="27" cy="-149.7004" rx="27" ry="18"/>
<text text-anchor="middle" x="27" y="-145.5004" font-family="Times,serif" font-size="14.00" fill="#000000">D</text>
</g>
<!-- A&#45;&gt;D -->
<g id="edge3" class="edge">
<title>A&#45;&gt;D</title>
<path fill="none" stroke="#000000" d="M62.0503,-105.7878C57.2199,-111.8396 51.6141,-118.8627 46.3215,-125.4936"/>
<polygon fill="#000000" stroke="#000000" points="43.3697,-123.5812 39.8668,-133.5802 48.8406,-127.948 43.3697,-123.5812"/>
</g>
</g>
</svg>


<!-- 参考：<https://shd101wyy.github.io/markdown-preview-enhanced/#/diagrams?id=graphviz> -->

<h2 id="链接本站文章"><a href="#链接本站文章" class="headerlink" title="链接本站文章"></a>链接本站文章</h2><p>官方介绍：<a href="https://hexo.io/zh-cn/docs/tag-plugins#%E5%BC%95%E7%94%A8%E6%96%87%E7%AB%A0">引用文章</a></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&#123;% post_link android/Android-Activity启动流程 %&#125;</span><br></pre></td></tr></table></figure>

<p>对应的完整路径是：<code>source/_posts/android/Android-Activity启动流程.md</code>。</p>
]]></content>
      <tags>
        <tag>Markdown</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown基本语法</title>
    <url>/posts/18133.html</url>
    <content><![CDATA[<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>Markdown语法的标志可以使用#表示，共支持6级标题</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure>

<p>为了美观，也可以采用下面这种对称形式</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题 #</span></span><br><span class="line"><span class="section">## 二级标题 ##</span></span><br><span class="line"><span class="section">### 三级标题 ###</span></span><br><span class="line"><span class="section">#### 四级标题 ####</span></span><br><span class="line"><span class="section">##### 五级标题 #####</span></span><br><span class="line"><span class="section">###### 六级标题 ######</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p><strong>无序列表</strong> 使用星号（*）、加号（+）或是减号（-）作为列表标记，三种标记符产生的效果完全相同，比如：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*</span> Red</span><br><span class="line"><span class="bullet">*</span> Blue</span><br><span class="line"><span class="bullet">*</span> Green</span><br></pre></td></tr></table></figure>

<p>上述文字产生的列表如下：</p>
<ul>
<li>Red</li>
<li>Blue</li>
<li>Green</li>
</ul>
<p><strong>有序列表</strong> 则使用一个数字+英文句点进行表示，如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> Red</span><br><span class="line"><span class="bullet">2.</span> Blue</span><br><span class="line"><span class="bullet">3.</span> Green</span><br><span class="line"><span class="bullet">2.</span> Black</span><br></pre></td></tr></table></figure>

<p>很重要的一点是，列表标记上使用的数字并不会影响输出的结果。上述问题显示效果如下：</p>
<ol>
<li>Red</li>
<li>Blue</li>
<li>Green</li>
<li>Black</li>
</ol>
<hr>
<h2 id="代码段"><a href="#代码段" class="headerlink" title="代码段"></a>代码段</h2><p>Markdown的代码块使用反向单引号 ` 来标记。如果代码只有一行，可以使用单个 ` 包起来，比如 ` int a =  b + c ; `，显示效果为：<code>int a = b + c;</code><br>对于多行代码，需要使用 ``` 进行包裹，如下：</p>
<div style="border:1px dotted black; background-color: #F2F3F4; padding: 5px;">
&#96;&#96;&#96; <br>
int a = 1; <br>
a += 1; <br>
&#96;&#96;&#96; <br>
</div>

<p>上述文字的显示效果如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">int a = 1;</span><br><span class="line">a += 1;</span><br></pre></td></tr></table></figure>

<p>另外，代码段也可以使用4个空格开头进行表示。</p>
<p>为代码高亮指定编程语言，可以在```后面加上编程语言来, ``` cpp</p>
<div style="border:1px dotted black; background-color: #F2F3F4; padding: 5px;">
&#96;&#96;&#96; cpp <br>
void main(int argc, char* argv[]) { <br>
    // do something <br>
} <br>
&#96;&#96;&#96;
</div>

<p>上述代码展示效果如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>参考链接：<a href="https://docs.github.com/en/free-pro-team@latest/github/writing-on-github/creating-and-highlighting-code-blocks#syntax-highlighting">GitHub: Syntax highlighting</a></p>
<hr>
<h2 id="文字格式"><a href="#文字格式" class="headerlink" title="文字格式"></a>文字格式</h2><p><code>*斜体*，**粗体**，***粗斜体***，~~删除线~~</code><br>上述文字的显示效果：<em>斜体</em>，<strong>粗体</strong>，**<em>粗斜体**</em>，<del>删除线</del>。需要注意，符号标记和文字之间不能有空格。</p>
<p>文字上标和下标：<code>&lt;sub&gt;下标文字&lt;/sub&gt;  &lt;sup&gt;上标文字&lt;/sup&gt;</code>。效果：这是<sub>下标文字</sub> ，这是 <sup>上标文字</sup>。</p>
<p><strong>字体大小</strong>可以使用html的语法标签：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">big</span>&gt;</span>大号字体<span class="tag">&lt;/<span class="name">big</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span>小号字体<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>字体大小效果：这是<big>大号字体</big>，这是<small>小号字体</small></p>
<p><strong>字体颜色</strong>可以使用html的font标签：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span>This is some text!<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>字体颜色效果：<font color="red">红色文字</font>。</p>
<hr>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>链接的格式为：&#91; text &#93;(<a href="http://example.com/">http://example.com</a> “title”)  。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这是一个 [<span class="string">我的主页</span>](<span class="link">https://www.jianshu.com/u/ee2923f61e8d &quot;主页&quot;</span>) 链接示例。</span><br></pre></td></tr></table></figure>

<p>显示效果：这是一个 <a href="https://rjyblog.github.io/" title="主页">我的主页</a> 链接示例。</p>
<p>如果想创建一个本文中章节的链接，需要使用下面格式：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">本文章节</span>](<span class="link">#章节标题</span>)</span><br></pre></td></tr></table></figure>

<p>备注：如果使用vscode编辑markdown，在输入#时会有章节标题的提示，选择即可。</p>
<hr>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>图片的格式为： !&#91;Alt text&#93;(/path/to/img.jpg “Optional title”) 。</p>
<p>详细叙述如下：</p>
<ul>
<li>一个惊叹号 !</li>
<li>接着一个方括号，里面放上图片的替代文字</li>
<li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 ‘title’ 文字。</li>
</ul>
<hr>
<h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>可以在一行中用三个及以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。下面每种写法都可以建立分隔线 *** ，--- ，___ 。</p>
<hr>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>引用使用 &gt; 进行标识。在引用文字结束时，和后面文字间隔一个空行即可结束引用。在引用区块中也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 这是一段引用文字。</span></span><br><span class="line"><span class="quote">&gt; 引用文字的第二句，呵呵呵！</span></span><br></pre></td></tr></table></figure>

<p>显示效果如下：</p>
<blockquote>
<p>这是一段引用文字。<br>引用文字的第二句，呵呵呵！</p>
</blockquote>
<p>引用也支持嵌套，只需要根据需要加上不同数量的 &gt; 即可。</p>
<hr>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>表格实例如下。注意其中的冒号 : ，可以用于实现居中、左对齐、右对齐的效果。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| name       |  city                 |   deposit       |</span><br><span class="line">|------------|:---------------------:|----------------:|</span><br><span class="line">| Abbi       | Shanghai              |  $1600          |</span><br><span class="line">| Gabriel    | Guangzhou             | $12             |</span><br><span class="line">| Jason      | Beijing               | $1              |</span><br></pre></td></tr></table></figure>

<p>显示效果如下：</p>
<table>
<thead>
<tr>
<th>name</th>
<th align="center">city</th>
<th align="right">deposit</th>
</tr>
</thead>
<tbody><tr>
<td>Abbi</td>
<td align="center">Shanghai</td>
<td align="right">$1600</td>
</tr>
<tr>
<td>Gabriel</td>
<td align="center">Guangzhou</td>
<td align="right">$12</td>
</tr>
<tr>
<td>Jason</td>
<td align="center">Beijing</td>
<td align="right">$1</td>
</tr>
</tbody></table>
<p>注意，表格前面要有一个空行。</p>
<hr>
<h2 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h2><h3 id="反斜杠"><a href="#反斜杠" class="headerlink" title="反斜杠"></a>反斜杠</h3><p>Markdown 可以利用反斜杠来插入一些在语法中有特殊意义的符号，也就是把特殊符号显示为普通符号。<br>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line"><span class="bullet">*</span>   星号</span><br><span class="line">_   底线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">&lt;&gt;  尖括号</span><br><span class="line">()  圆括号</span><br><span class="line"><span class="section">#   井字号</span></span><br><span class="line"><span class="bullet">+</span>   加号</span><br><span class="line"><span class="bullet">-</span>   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   惊叹号</span><br><span class="line">|   竖线</span><br></pre></td></tr></table></figure>

<h3 id="使用Unicode编码"><a href="#使用Unicode编码" class="headerlink" title="使用Unicode编码"></a>使用Unicode编码</h3><p>如果需要在Markdown文档中使用Markdown的保留字符，比如 &#124; &#96; &#91; &#93; 等具有特殊意义的字符时，就需要进行转义，否则文章的展示就会有问题。一般情况可以使用加反斜杠 \ 来进行转义。但是反斜杠并不是所有情况都好使，最彻底的方式就是使用Unicode编码来解决。</p>
<table>
<thead>
<tr>
<th>原字符</th>
<th>Unicode编码</th>
</tr>
</thead>
<tbody><tr>
<td>&#124;</td>
<td><code>&amp;#124;</code></td>
</tr>
<tr>
<td>&#96;</td>
<td><code>&amp;#96;</code></td>
</tr>
<tr>
<td>&#91;</td>
<td><code>&amp;#91;</code></td>
</tr>
<tr>
<td>&#93;</td>
<td><code>&amp;#93;</code></td>
</tr>
<tr>
<td>&#35;</td>
<td><code>&amp;#35;</code></td>
</tr>
</tbody></table>
<p>另外，如果期望输入额外的空格可以使用<code>&amp;#160;</code>。</p>
<p>=&gt; <a href="https://tool.oschina.net/encode">Unicode在线转码</a></p>
<h3 id="禁止超链接"><a href="#禁止超链接" class="headerlink" title="禁止超链接"></a>禁止超链接</h3><p>如果一个url格式的字符串不想展示为超链接的格式，有两种方式可以做到：</p>
<ol>
<li>使用反引号包裹，比如 &#96;www&#xfeff;.baidu.com&#96; , 展示效果为<code>www.baidu.com</code></li>
<li>通过<code>&amp;#xfeff;</code>（<a href="https://www.codetable.net/hex/feff">Zero Width No-Break Space</a>）Unicode编码来把超链接打断，比如 <code>http&amp;#xfeff;://www.baidu.com</code>，展示效果为 http&#xfeff;://<a href="http://www.baidu.com/">www.baidu.com</a></li>
</ol>
<hr>
<h2 id="表情符号"><a href="#表情符号" class="headerlink" title="表情符号"></a>表情符号</h2><p>插入表情符号的方式有两种：</p>
<ol>
<li>通过复制粘贴的方式插入，比如从<a href="https://emojipedia.org/">Emojipedia</a>网站复制粘贴过来。</li>
<li>插入表情符号的代码，<a href="https://gist.github.com/rxaviers/7360908">https://gist.github.com/rxaviers/7360908</a>这个网站收录的几乎所有的表情符号代码。通过代码的方式插入的表情符号在不同的应用软件上展示效果会有些差异。</li>
</ol>
<hr>
<h2 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h2><p>数学符号使用美元符来包裹，比如<code>$2^n$</code>，显示效果是$2^n$。如果数学表达式中包含markdown的保留字符，则需要使用 <font color=red>$&#96;数学公式&#96;$</font> 的样式。<br>参考文章：<a href="https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/writing-mathematical-expressions">Writing mathematical expressions</a>、<a href="https://zhuanlan.zhihu.com/p/441454622">MarkDown数学公式</a></p>
<h2 id="符号"><a href="#符号" class="headerlink" title="符号"></a>符号</h2><p>Markdown可以支持所有的HTML的符号，参考<a href="https://www.w3schools.com/html/html_symbols.asp">HTML Symbols</a>。</p>
<table>
<thead>
<tr>
<th>代码</th>
<th>样式</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td><code>&amp;uarr;</code></td>
<td>&uarr;</td>
<td></td>
</tr>
<tr>
<td><code>&amp;darr;</code></td>
<td>&darr;</td>
<td></td>
</tr>
<tr>
<td><code>&amp;larr;</code></td>
<td>&larr;</td>
<td></td>
</tr>
<tr>
<td><code>&amp;rarr;</code></td>
<td>&rarr;</td>
<td></td>
</tr>
<tr>
<td><code>&amp;harr;</code></td>
<td>&harr;</td>
<td>Double headed arrow</td>
</tr>
</tbody></table>
<hr>
<h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h2><p>使用<code>* [ ]</code>或者<code>- [ ]</code>两种格式都可以，推荐使用前者：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*</span> [ ] 未完成任务一</span><br><span class="line"><span class="bullet">*</span> [ ] 未完成任务二</span><br><span class="line"><span class="bullet">*</span> [x] 已完成任务</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> [ ] 未完成任务一</span><br><span class="line"><span class="bullet">-</span> [ ] 未完成任务二</span><br><span class="line"><span class="bullet">-</span> [x] 已完成任务</span><br></pre></td></tr></table></figure>

<p>显示效果如下：</p>
<ul>
<li><input disabled="" type="checkbox"> 未完成任务一</li>
<li><input disabled="" type="checkbox"> 未完成任务二</li>
<li><input checked="" disabled="" type="checkbox"> 已完成任务</li>
</ul>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul>
<li><a href="https://www.markdownguide.org/basic-syntax/">Markdown Guide-Basic Syntax</a></li>
<li><a href="https://docs.github.com/en/free-pro-team@latest/github/writing-on-github/working-with-advanced-formatting">GitHub: Working with advanced formatting</a></li>
<li><a href="https://www.markdownguide.org/hacks/">Workarounds for things not officially supported by Markdown.</a></li>
<li><a href="https://www.jianshu.com/p/q81RER">献给写作者的 Markdown 新手指南</a></li>
<li><a href="http://wowubuntu.com/markdown/#philosophy">Markdown 语法说明</a></li>
<li><a href="https://www.jianshu.com/p/qqGjLN">为什么作家应该用 Markdown 保存自己的文稿</a></li>
<li><a href="https://reimbar.org/dev/arrows/">How to do arrows in Markdown</a></li>
<li><a href="https://www.jianshu.com/p/d63887d0c706">Markdown箭头的输入方法汇总</a></li>
</ul>
]]></content>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>PlantUML样式指南</title>
    <url>/posts/32780962.html</url>
    <content><![CDATA[<h2 id="连接线样式"><a href="#连接线样式" class="headerlink" title="连接线样式"></a>连接线样式</h2><p>连接线的样式支持：bold, plain, dotted，dashed。设置颜色必须可以使用颜色名称，或者16进制的RGB样式，但是必须使用<code>#</code>开头。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">A -[dashed,#green]right-&gt; B</span><br><span class="line">A2 -[bold,#ff00ff]-&gt; B2</span><br></pre></td></tr></table></figure>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="170px" preserveAspectRatio="none" style="width:150px;height:170px;background:#FFFFFF;" version="1.1" viewBox="0 0 150 170" width="150px" zoomAndPan="magnify"><defs/><g><!--class A1--><g id="elem_A1"><rect codeLine="1" fill="#F1F1F1" height="48" id="A1" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="51" x="7" y="115"/><ellipse cx="22" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,126.6719 C23.4063,126.2344 22.8125,126.0938 21.9375,126.0938 C19.3125,126.0938 17.3125,128.1719 17.3125,130.8906 L17.3125,132.0156 C17.3125,134.5938 19.4219,136.4844 22.3125,136.4844 C23.5313,136.4844 24.6875,136.1875 25.4375,135.6406 C26.0156,135.2344 26.3438,134.7813 26.3438,134.3906 C26.3438,133.9375 25.9531,133.5469 25.4844,133.5469 C25.2656,133.5469 25.0625,133.625 24.875,133.8125 C24.4219,134.2969 24.4219,134.2969 24.2344,134.3906 C23.8125,134.6563 23.125,134.7813 22.3594,134.7813 C20.3125,134.7813 19.0156,133.6875 19.0156,131.9844 L19.0156,130.8906 C19.0156,129.1094 20.2656,127.7969 22,127.7969 C22.5781,127.7969 23.1875,127.9531 23.6563,128.2031 C24.1406,128.4844 24.3125,128.7031 24.4063,129.1094 C24.4688,129.5156 24.5,129.6406 24.6406,129.7656 C24.7813,129.9063 25.0156,130.0156 25.2344,130.0156 C25.5,130.0156 25.7656,129.875 25.9375,129.6563 C26.0469,129.5 26.0781,129.3125 26.0781,128.8906 L26.0781,127.4688 C26.0781,127.0313 26.0625,126.9063 25.9688,126.75 C25.8125,126.4844 25.5313,126.3438 25.2344,126.3438 C24.9375,126.3438 24.7344,126.4375 24.5156,126.75 L24.3438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="19" x="36" y="135.8467">A1</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="57" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="57" y1="155" y2="155"/></g><!--class B1--><g id="elem_B1"><rect fill="#F1F1F1" height="48" id="B1" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="51" x="7" y="7"/><ellipse cx="22" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,18.6719 C23.4063,18.2344 22.8125,18.0938 21.9375,18.0938 C19.3125,18.0938 17.3125,20.1719 17.3125,22.8906 L17.3125,24.0156 C17.3125,26.5938 19.4219,28.4844 22.3125,28.4844 C23.5313,28.4844 24.6875,28.1875 25.4375,27.6406 C26.0156,27.2344 26.3438,26.7813 26.3438,26.3906 C26.3438,25.9375 25.9531,25.5469 25.4844,25.5469 C25.2656,25.5469 25.0625,25.625 24.875,25.8125 C24.4219,26.2969 24.4219,26.2969 24.2344,26.3906 C23.8125,26.6563 23.125,26.7813 22.3594,26.7813 C20.3125,26.7813 19.0156,25.6875 19.0156,23.9844 L19.0156,22.8906 C19.0156,21.1094 20.2656,19.7969 22,19.7969 C22.5781,19.7969 23.1875,19.9531 23.6563,20.2031 C24.1406,20.4844 24.3125,20.7031 24.4063,21.1094 C24.4688,21.5156 24.5,21.6406 24.6406,21.7656 C24.7813,21.9063 25.0156,22.0156 25.2344,22.0156 C25.5,22.0156 25.7656,21.875 25.9375,21.6563 C26.0469,21.5 26.0781,21.3125 26.0781,20.8906 L26.0781,19.4688 C26.0781,19.0313 26.0625,18.9063 25.9688,18.75 C25.8125,18.4844 25.5313,18.3438 25.2344,18.3438 C24.9375,18.3438 24.7344,18.4375 24.5156,18.75 L24.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="19" x="36" y="27.8467">B1</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="57" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="57" y1="47" y2="47"/></g><!--class A2--><g id="elem_A2"><rect fill="#F1F1F1" height="48" id="A2" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="50" x="93.5" y="7"/><ellipse cx="108.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M110.8438,18.6719 C109.9063,18.2344 109.3125,18.0938 108.4375,18.0938 C105.8125,18.0938 103.8125,20.1719 103.8125,22.8906 L103.8125,24.0156 C103.8125,26.5938 105.9219,28.4844 108.8125,28.4844 C110.0313,28.4844 111.1875,28.1875 111.9375,27.6406 C112.5156,27.2344 112.8438,26.7813 112.8438,26.3906 C112.8438,25.9375 112.4531,25.5469 111.9844,25.5469 C111.7656,25.5469 111.5625,25.625 111.375,25.8125 C110.9219,26.2969 110.9219,26.2969 110.7344,26.3906 C110.3125,26.6563 109.625,26.7813 108.8594,26.7813 C106.8125,26.7813 105.5156,25.6875 105.5156,23.9844 L105.5156,22.8906 C105.5156,21.1094 106.7656,19.7969 108.5,19.7969 C109.0781,19.7969 109.6875,19.9531 110.1563,20.2031 C110.6406,20.4844 110.8125,20.7031 110.9063,21.1094 C110.9688,21.5156 111,21.6406 111.1406,21.7656 C111.2813,21.9063 111.5156,22.0156 111.7344,22.0156 C112,22.0156 112.2656,21.875 112.4375,21.6563 C112.5469,21.5 112.5781,21.3125 112.5781,20.8906 L112.5781,19.4688 C112.5781,19.0313 112.5625,18.9063 112.4688,18.75 C112.3125,18.4844 112.0313,18.3438 111.7344,18.3438 C111.4375,18.3438 111.2344,18.4375 111.0156,18.75 L110.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="18" x="122.5" y="27.8467">A2</text><line style="stroke:#181818;stroke-width:0.5;" x1="94.5" x2="142.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="94.5" x2="142.5" y1="47" y2="47"/></g><!--class B2--><g id="elem_B2"><rect fill="#F1F1F1" height="48" id="B2" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="50" x="93.5" y="115"/><ellipse cx="108.5" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M110.8438,126.6719 C109.9063,126.2344 109.3125,126.0938 108.4375,126.0938 C105.8125,126.0938 103.8125,128.1719 103.8125,130.8906 L103.8125,132.0156 C103.8125,134.5938 105.9219,136.4844 108.8125,136.4844 C110.0313,136.4844 111.1875,136.1875 111.9375,135.6406 C112.5156,135.2344 112.8438,134.7813 112.8438,134.3906 C112.8438,133.9375 112.4531,133.5469 111.9844,133.5469 C111.7656,133.5469 111.5625,133.625 111.375,133.8125 C110.9219,134.2969 110.9219,134.2969 110.7344,134.3906 C110.3125,134.6563 109.625,134.7813 108.8594,134.7813 C106.8125,134.7813 105.5156,133.6875 105.5156,131.9844 L105.5156,130.8906 C105.5156,129.1094 106.7656,127.7969 108.5,127.7969 C109.0781,127.7969 109.6875,127.9531 110.1563,128.2031 C110.6406,128.4844 110.8125,128.7031 110.9063,129.1094 C110.9688,129.5156 111,129.6406 111.1406,129.7656 C111.2813,129.9063 111.5156,130.0156 111.7344,130.0156 C112,130.0156 112.2656,129.875 112.4375,129.6563 C112.5469,129.5 112.5781,129.3125 112.5781,128.8906 L112.5781,127.4688 C112.5781,127.0313 112.5625,126.9063 112.4688,126.75 C112.3125,126.4844 112.0313,126.3438 111.7344,126.3438 C111.4375,126.3438 111.2344,126.4375 111.0156,126.75 L110.8438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="18" x="122.5" y="135.8467">B2</text><line style="stroke:#181818;stroke-width:0.5;" x1="94.5" x2="142.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="94.5" x2="142.5" y1="155" y2="155"/></g><!--reverse link B1 to A1--><g id="link_B1_A1"><path codeLine="2" d="M32.5,61 C32.5,78.6584 32.5,96.9408 32.5,114.6784 " fill="none" id="B1-backto-A1" style="stroke:#008000;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#008000" points="32.5,55,28.5,64,32.5,60,36.5,64,32.5,55" style="stroke:#008000;stroke-width:1.0;"/></g><!--link A2 to B2--><g id="link_A2_B2"><path codeLine="3" d="M118.5,55 C118.5,72.6584 118.5,90.9408 118.5,108.6784 " fill="none" id="A2-to-B2" style="stroke:#FF00FF;stroke-width:2.0;"/><polygon fill="#FF00FF" points="118.5,114.6784,122.5,105.6784,118.5,109.6784,114.5,105.6784,118.5,114.6784" style="stroke:#FF00FF;stroke-width:2.0;"/></g><!--SRC=[Iyv9B2vMS3JaSZHKq8rEIIpEI4tHKKulIatDYoqjqBLJS09A6G6bal9pW19fQGO6QMcn874Z0000]--></g></svg>

<p>也可以使用如下写法：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">A --&gt; B #blue;line.dashed;text:blue : 连接线</span><br></pre></td></tr></table></figure>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="187px" preserveAspectRatio="none" style="width:76px;height:187px;background:#FFFFFF;" version="1.1" viewBox="0 0 76 187" width="76px" zoomAndPan="magnify"><defs/><g><!--class A--><g id="elem_A"><rect fill="#F1F1F1" height="48" id="A" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="42" x="7" y="7"/><ellipse cx="22" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,18.6719 C23.4063,18.2344 22.8125,18.0938 21.9375,18.0938 C19.3125,18.0938 17.3125,20.1719 17.3125,22.8906 L17.3125,24.0156 C17.3125,26.5938 19.4219,28.4844 22.3125,28.4844 C23.5313,28.4844 24.6875,28.1875 25.4375,27.6406 C26.0156,27.2344 26.3438,26.7813 26.3438,26.3906 C26.3438,25.9375 25.9531,25.5469 25.4844,25.5469 C25.2656,25.5469 25.0625,25.625 24.875,25.8125 C24.4219,26.2969 24.4219,26.2969 24.2344,26.3906 C23.8125,26.6563 23.125,26.7813 22.3594,26.7813 C20.3125,26.7813 19.0156,25.6875 19.0156,23.9844 L19.0156,22.8906 C19.0156,21.1094 20.2656,19.7969 22,19.7969 C22.5781,19.7969 23.1875,19.9531 23.6563,20.2031 C24.1406,20.4844 24.3125,20.7031 24.4063,21.1094 C24.4688,21.5156 24.5,21.6406 24.6406,21.7656 C24.7813,21.9063 25.0156,22.0156 25.2344,22.0156 C25.5,22.0156 25.7656,21.875 25.9375,21.6563 C26.0469,21.5 26.0781,21.3125 26.0781,20.8906 L26.0781,19.4688 C26.0781,19.0313 26.0625,18.9063 25.9688,18.75 C25.8125,18.4844 25.5313,18.3438 25.2344,18.3438 C24.9375,18.3438 24.7344,18.4375 24.5156,18.75 L24.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="10" x="36" y="27.8467">A</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="48" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="48" y1="47" y2="47"/></g><!--class B--><g id="elem_B"><rect fill="#F1F1F1" height="48" id="B" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="42" x="7" y="132"/><ellipse cx="22" cy="148" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,143.6719 C23.4063,143.2344 22.8125,143.0938 21.9375,143.0938 C19.3125,143.0938 17.3125,145.1719 17.3125,147.8906 L17.3125,149.0156 C17.3125,151.5938 19.4219,153.4844 22.3125,153.4844 C23.5313,153.4844 24.6875,153.1875 25.4375,152.6406 C26.0156,152.2344 26.3438,151.7813 26.3438,151.3906 C26.3438,150.9375 25.9531,150.5469 25.4844,150.5469 C25.2656,150.5469 25.0625,150.625 24.875,150.8125 C24.4219,151.2969 24.4219,151.2969 24.2344,151.3906 C23.8125,151.6563 23.125,151.7813 22.3594,151.7813 C20.3125,151.7813 19.0156,150.6875 19.0156,148.9844 L19.0156,147.8906 C19.0156,146.1094 20.2656,144.7969 22,144.7969 C22.5781,144.7969 23.1875,144.9531 23.6563,145.2031 C24.1406,145.4844 24.3125,145.7031 24.4063,146.1094 C24.4688,146.5156 24.5,146.6406 24.6406,146.7656 C24.7813,146.9063 25.0156,147.0156 25.2344,147.0156 C25.5,147.0156 25.7656,146.875 25.9375,146.6563 C26.0469,146.5 26.0781,146.3125 26.0781,145.8906 L26.0781,144.4688 C26.0781,144.0313 26.0625,143.9063 25.9688,143.75 C25.8125,143.4844 25.5313,143.3438 25.2344,143.3438 C24.9375,143.3438 24.7344,143.4375 24.5156,143.75 L24.3438,143.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="10" x="36" y="152.8467">B</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="48" y1="164" y2="164"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="48" y1="172" y2="172"/></g><!--link A to B--><g id="link_A_B"><path codeLine="1" d="M28,55.135 C28,77.126 28,104.0123 28,125.9684 " fill="none" id="A-to-B" style="stroke:#0000FF;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#0000FF" points="28,131.9684,32,122.9684,28,126.9684,24,122.9684,28,131.9684" style="stroke:#0000FF;stroke-width:1.0;"/><text fill="#0000FF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="39" x="29" y="98.0669">&#36830;&#25509;&#32447;</text></g><!--SRC=[SrJGrRLJS59GJiefJRNEoSnBrKj9BCv8JR4kIQqeiGA9AbWflDW_xrdVqkUxzWC0]--></g></svg>

<h2 id="调整布局"><a href="#调整布局" class="headerlink" title="调整布局"></a>调整布局</h2><p>PlantUML绘图会自动布局，但是如果想要手动对布局进行调整就很不方便，只能进行微调，没法做到精细的调整。</p>
<h3 id="改变连接线方向"><a href="#改变连接线方向" class="headerlink" title="改变连接线方向"></a>改变连接线方向</h3><p>连接线的方向支持left, right, up, down。也可以通过缩写表示，比如<code>-d-&gt;</code>。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">Center -left-&gt; Left</span><br><span class="line">Center -up-&gt; Up</span><br><span class="line">Center -down-&gt; Down</span><br><span class="line">Center -right-&gt; Right</span><br></pre></td></tr></table></figure>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="278px" preserveAspectRatio="none" style="width:299px;height:278px;background:#FFFFFF;" version="1.1" viewBox="0 0 299 278" width="299px" zoomAndPan="magnify"><defs/><g><!--class Center--><g id="elem_Center"><rect fill="#F1F1F1" height="48" id="Center" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="82" x="104" y="115"/><ellipse cx="119" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M121.3438,126.6719 C120.4063,126.2344 119.8125,126.0938 118.9375,126.0938 C116.3125,126.0938 114.3125,128.1719 114.3125,130.8906 L114.3125,132.0156 C114.3125,134.5938 116.4219,136.4844 119.3125,136.4844 C120.5313,136.4844 121.6875,136.1875 122.4375,135.6406 C123.0156,135.2344 123.3438,134.7813 123.3438,134.3906 C123.3438,133.9375 122.9531,133.5469 122.4844,133.5469 C122.2656,133.5469 122.0625,133.625 121.875,133.8125 C121.4219,134.2969 121.4219,134.2969 121.2344,134.3906 C120.8125,134.6563 120.125,134.7813 119.3594,134.7813 C117.3125,134.7813 116.0156,133.6875 116.0156,131.9844 L116.0156,130.8906 C116.0156,129.1094 117.2656,127.7969 119,127.7969 C119.5781,127.7969 120.1875,127.9531 120.6563,128.2031 C121.1406,128.4844 121.3125,128.7031 121.4063,129.1094 C121.4688,129.5156 121.5,129.6406 121.6406,129.7656 C121.7813,129.9063 122.0156,130.0156 122.2344,130.0156 C122.5,130.0156 122.7656,129.875 122.9375,129.6563 C123.0469,129.5 123.0781,129.3125 123.0781,128.8906 L123.0781,127.4688 C123.0781,127.0313 123.0625,126.9063 122.9688,126.75 C122.8125,126.4844 122.5313,126.3438 122.2344,126.3438 C121.9375,126.3438 121.7344,126.4375 121.5156,126.75 L121.3438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="133" y="135.8467">Center</text><line style="stroke:#181818;stroke-width:0.5;" x1="105" x2="185" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="105" x2="185" y1="155" y2="155"/></g><!--class Left--><g id="elem_Left"><rect fill="#F1F1F1" height="48" id="Left" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="62" x="7" y="115"/><ellipse cx="22" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,126.6719 C23.4063,126.2344 22.8125,126.0938 21.9375,126.0938 C19.3125,126.0938 17.3125,128.1719 17.3125,130.8906 L17.3125,132.0156 C17.3125,134.5938 19.4219,136.4844 22.3125,136.4844 C23.5313,136.4844 24.6875,136.1875 25.4375,135.6406 C26.0156,135.2344 26.3438,134.7813 26.3438,134.3906 C26.3438,133.9375 25.9531,133.5469 25.4844,133.5469 C25.2656,133.5469 25.0625,133.625 24.875,133.8125 C24.4219,134.2969 24.4219,134.2969 24.2344,134.3906 C23.8125,134.6563 23.125,134.7813 22.3594,134.7813 C20.3125,134.7813 19.0156,133.6875 19.0156,131.9844 L19.0156,130.8906 C19.0156,129.1094 20.2656,127.7969 22,127.7969 C22.5781,127.7969 23.1875,127.9531 23.6563,128.2031 C24.1406,128.4844 24.3125,128.7031 24.4063,129.1094 C24.4688,129.5156 24.5,129.6406 24.6406,129.7656 C24.7813,129.9063 25.0156,130.0156 25.2344,130.0156 C25.5,130.0156 25.7656,129.875 25.9375,129.6563 C26.0469,129.5 26.0781,129.3125 26.0781,128.8906 L26.0781,127.4688 C26.0781,127.0313 26.0625,126.9063 25.9688,126.75 C25.8125,126.4844 25.5313,126.3438 25.2344,126.3438 C24.9375,126.3438 24.7344,126.4375 24.5156,126.75 L24.3438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="36" y="135.8467">Left</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="68" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="68" y1="155" y2="155"/></g><!--class Up--><g id="elem_Up"><rect fill="#F1F1F1" height="48" id="Up" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="51" x="119.5" y="7"/><ellipse cx="134.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M136.8438,18.6719 C135.9063,18.2344 135.3125,18.0938 134.4375,18.0938 C131.8125,18.0938 129.8125,20.1719 129.8125,22.8906 L129.8125,24.0156 C129.8125,26.5938 131.9219,28.4844 134.8125,28.4844 C136.0313,28.4844 137.1875,28.1875 137.9375,27.6406 C138.5156,27.2344 138.8438,26.7813 138.8438,26.3906 C138.8438,25.9375 138.4531,25.5469 137.9844,25.5469 C137.7656,25.5469 137.5625,25.625 137.375,25.8125 C136.9219,26.2969 136.9219,26.2969 136.7344,26.3906 C136.3125,26.6563 135.625,26.7813 134.8594,26.7813 C132.8125,26.7813 131.5156,25.6875 131.5156,23.9844 L131.5156,22.8906 C131.5156,21.1094 132.7656,19.7969 134.5,19.7969 C135.0781,19.7969 135.6875,19.9531 136.1563,20.2031 C136.6406,20.4844 136.8125,20.7031 136.9063,21.1094 C136.9688,21.5156 137,21.6406 137.1406,21.7656 C137.2813,21.9063 137.5156,22.0156 137.7344,22.0156 C138,22.0156 138.2656,21.875 138.4375,21.6563 C138.5469,21.5 138.5781,21.3125 138.5781,20.8906 L138.5781,19.4688 C138.5781,19.0313 138.5625,18.9063 138.4688,18.75 C138.3125,18.4844 138.0313,18.3438 137.7344,18.3438 C137.4375,18.3438 137.2344,18.4375 137.0156,18.75 L136.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="19" x="148.5" y="27.8467">Up</text><line style="stroke:#181818;stroke-width:0.5;" x1="120.5" x2="169.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="120.5" x2="169.5" y1="47" y2="47"/></g><!--class Down--><g id="elem_Down"><rect fill="#F1F1F1" height="48" id="Down" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="72" x="109" y="223"/><ellipse cx="124" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M126.3438,234.6719 C125.4063,234.2344 124.8125,234.0938 123.9375,234.0938 C121.3125,234.0938 119.3125,236.1719 119.3125,238.8906 L119.3125,240.0156 C119.3125,242.5938 121.4219,244.4844 124.3125,244.4844 C125.5313,244.4844 126.6875,244.1875 127.4375,243.6406 C128.0156,243.2344 128.3438,242.7813 128.3438,242.3906 C128.3438,241.9375 127.9531,241.5469 127.4844,241.5469 C127.2656,241.5469 127.0625,241.625 126.875,241.8125 C126.4219,242.2969 126.4219,242.2969 126.2344,242.3906 C125.8125,242.6563 125.125,242.7813 124.3594,242.7813 C122.3125,242.7813 121.0156,241.6875 121.0156,239.9844 L121.0156,238.8906 C121.0156,237.1094 122.2656,235.7969 124,235.7969 C124.5781,235.7969 125.1875,235.9531 125.6563,236.2031 C126.1406,236.4844 126.3125,236.7031 126.4063,237.1094 C126.4688,237.5156 126.5,237.6406 126.6406,237.7656 C126.7813,237.9063 127.0156,238.0156 127.2344,238.0156 C127.5,238.0156 127.7656,237.875 127.9375,237.6563 C128.0469,237.5 128.0781,237.3125 128.0781,236.8906 L128.0781,235.4688 C128.0781,235.0313 128.0625,234.9063 127.9688,234.75 C127.8125,234.4844 127.5313,234.3438 127.2344,234.3438 C126.9375,234.3438 126.7344,234.4375 126.5156,234.75 L126.3438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="40" x="138" y="243.8467">Down</text><line style="stroke:#181818;stroke-width:0.5;" x1="110" x2="180" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="110" x2="180" y1="263" y2="263"/></g><!--class Right--><g id="elem_Right"><rect fill="#F1F1F1" height="48" id="Right" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="71" x="221.5" y="115"/><ellipse cx="236.5" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M238.8438,126.6719 C237.9063,126.2344 237.3125,126.0938 236.4375,126.0938 C233.8125,126.0938 231.8125,128.1719 231.8125,130.8906 L231.8125,132.0156 C231.8125,134.5938 233.9219,136.4844 236.8125,136.4844 C238.0313,136.4844 239.1875,136.1875 239.9375,135.6406 C240.5156,135.2344 240.8438,134.7813 240.8438,134.3906 C240.8438,133.9375 240.4531,133.5469 239.9844,133.5469 C239.7656,133.5469 239.5625,133.625 239.375,133.8125 C238.9219,134.2969 238.9219,134.2969 238.7344,134.3906 C238.3125,134.6563 237.625,134.7813 236.8594,134.7813 C234.8125,134.7813 233.5156,133.6875 233.5156,131.9844 L233.5156,130.8906 C233.5156,129.1094 234.7656,127.7969 236.5,127.7969 C237.0781,127.7969 237.6875,127.9531 238.1563,128.2031 C238.6406,128.4844 238.8125,128.7031 238.9063,129.1094 C238.9688,129.5156 239,129.6406 239.1406,129.7656 C239.2813,129.9063 239.5156,130.0156 239.7344,130.0156 C240,130.0156 240.2656,129.875 240.4375,129.6563 C240.5469,129.5 240.5781,129.3125 240.5781,128.8906 L240.5781,127.4688 C240.5781,127.0313 240.5625,126.9063 240.4688,126.75 C240.3125,126.4844 240.0313,126.3438 239.7344,126.3438 C239.4375,126.3438 239.2344,126.4375 239.0156,126.75 L238.8438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="39" x="250.5" y="135.8467">Right</text><line style="stroke:#181818;stroke-width:0.5;" x1="222.5" x2="291.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="222.5" x2="291.5" y1="155" y2="155"/></g><!--reverse link Left to Center--><g id="link_Left_Center"><path codeLine="1" d="M75.3477,139 C86.8728,139 92.398,139 103.9231,139 " fill="none" id="Left-backto-Center" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="69.3477,139,78.3477,143,74.3477,139,78.3477,135,69.3477,139" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Up to Center--><g id="link_Up_Center"><path codeLine="2" d="M145,61 C145,78.658 145,96.941 145,114.678 " fill="none" id="Up-backto-Center" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="145,55,141,64,145,60,149,64,145,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--link Center to Down--><g id="link_Center_Down"><path codeLine="3" d="M145,163 C145,180.6584 145,198.9408 145,216.6784 " fill="none" id="Center-to-Down" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="145,222.6784,149,213.6784,145,217.6784,141,213.6784,145,222.6784" style="stroke:#181818;stroke-width:1.0;"/></g><!--link Center to Right--><g id="link_Center_Right"><path codeLine="4" d="M186.125,139 C197.845,139 203.565,139 215.286,139 " fill="none" id="Center-to-Right" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="221.286,139,212.286,135,216.286,139,212.286,143,221.286,139" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[SqxDAqajKj3DIKqhqRLJy05INCvGiT82e4Xe0PoVab-U1nHn0L9miQBCz0oGnY0G3G00]--></g></svg>

<p>但是，当图形比较复杂时，改变方向有时候也无法达到理想的效果。</p>
<h3 id="使用隐藏连接线"><a href="#使用隐藏连接线" class="headerlink" title="使用隐藏连接线"></a>使用隐藏连接线</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[a]</span><br><span class="line">[b]</span><br><span class="line">[c]</span><br><span class="line">[d]</span><br><span class="line">a - b</span><br><span class="line">c - d</span><br><span class="line">a -[hidden]up- c</span><br></pre></td></tr></table></figure>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="165px" preserveAspectRatio="none" style="width:146px;height:165px;background:#FFFFFF;" version="1.1" viewBox="0 0 146 165" width="146px" zoomAndPan="magnify"><defs/><g><!--entity a--><g id="elem_a"><rect fill="#F1F1F1" height="46.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="48" x="7" y="113"/><rect fill="#F1F1F1" height="10" style="stroke:#181818;stroke-width:0.5;" width="15" x="35" y="118"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="33" y="120"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="33" y="124"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="8" x="22" y="145.9951">a</text></g><!--entity b--><g id="elem_b"><rect fill="#F1F1F1" height="46.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="50" x="90" y="113"/><rect fill="#F1F1F1" height="10" style="stroke:#181818;stroke-width:0.5;" width="15" x="120" y="118"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="118" y="120"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="118" y="124"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="10" x="105" y="145.9951">b</text></g><!--entity c--><g id="elem_c"><rect fill="#F1F1F1" height="46.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="48" x="7" y="7"/><rect fill="#F1F1F1" height="10" style="stroke:#181818;stroke-width:0.5;" width="15" x="35" y="12"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="33" y="14"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="33" y="18"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="8" x="22" y="39.9951">c</text></g><!--entity d--><g id="elem_d"><rect fill="#F1F1F1" height="46.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="49" x="90.5" y="7"/><rect fill="#F1F1F1" height="10" style="stroke:#181818;stroke-width:0.5;" width="15" x="119.5" y="12"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="117.5" y="14"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="117.5" y="18"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="9" x="105.5" y="39.9951">d</text></g><!--link a to b--><g id="link_a_b"><path d="M55.2812,136 C66.7896,136 78.2979,136 89.8062,136 " fill="none" id="a-b" style="stroke:#181818;stroke-width:1.0;"/></g><!--link c to d--><g id="link_c_d"><path d="M55.2812,30 C66.9451,30 78.6089,30 90.2727,30 " fill="none" id="c-d" style="stroke:#181818;stroke-width:1.0;"/></g><!--link c to a--><!--SRC=[YqwCvOfE0k9a84w9vKfKq5L8uae6aYaWTdH6PafAQbviQO6kGZ80]--></g></svg>

<h3 id="together隐含分组"><a href="#together隐含分组" class="headerlink" title="together隐含分组"></a>together隐含分组</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">together &#123;</span><br><span class="line">  [a]</span><br><span class="line">  [b]</span><br><span class="line">&#125;</span><br><span class="line">[c]</span><br><span class="line">a -- b</span><br><span class="line">a -- c</span><br></pre></td></tr></table></figure>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="165px" preserveAspectRatio="none" style="width:146px;height:165px;background:#FFFFFF;" version="1.1" viewBox="0 0 146 165" width="146px" zoomAndPan="magnify"><defs/><g><!--entity a--><g id="elem_a"><rect fill="#F1F1F1" height="46.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="48" x="8" y="7"/><rect fill="#F1F1F1" height="10" style="stroke:#181818;stroke-width:0.5;" width="15" x="36" y="12"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="34" y="14"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="34" y="18"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="8" x="23" y="39.9951">a</text></g><!--entity b--><g id="elem_b"><rect fill="#F1F1F1" height="46.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="50" x="7" y="113"/><rect fill="#F1F1F1" height="10" style="stroke:#181818;stroke-width:0.5;" width="15" x="37" y="118"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="35" y="120"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="35" y="124"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="10" x="22" y="145.9951">b</text></g><!--entity c--><g id="elem_c"><rect fill="#F1F1F1" height="46.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="48" x="92" y="113"/><rect fill="#F1F1F1" height="10" style="stroke:#181818;stroke-width:0.5;" width="15" x="120" y="118"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="118" y="120"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="118" y="124"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="8" x="107" y="145.9951">c</text></g><!--link a to b--><g id="link_a_b"><path d="M32,53.056 C32,70.705 32,95.3353 32,112.9761 " fill="none" id="a-b" style="stroke:#181818;stroke-width:1.0;"/></g><!--link a to c--><g id="link_a_c"><path d="M49.8142,53.056 C64.0693,70.705 83.9631,95.3353 98.211,112.9761 " fill="none" id="a-c" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[AybFJot9I2rIgEPIK8XEZ0MHIR5SjLpHoR5SYGgwkWf942eP0000]--></g></svg>

<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.augmentedmind.de/2021/01/17/plantuml-layout-tutorial-styles/">PlantUML layout and styles tutorial</a></p>
]]></content>
      <tags>
        <tag>Markdown</tag>
        <tag>PlantUML</tag>
      </tags>
  </entry>
  <entry>
    <title>Red Black Tree</title>
    <url>/posts/2588.html</url>
    <content><![CDATA[<h2 id="红黑树的定义"><a href="#红黑树的定义" class="headerlink" title="红黑树的定义"></a>红黑树的定义</h2><p>红黑树是一种自平衡二进制搜索树。每个节点存储一个代表颜色的标记位，用于在数的插入和删除期间保持数的近似平衡。红黑树是一个特殊的二叉树，用于组织可以进行比较的数据元素。</p>
<h2 id="红黑树的特点"><a href="#红黑树的特点" class="headerlink" title="红黑树的特点"></a>红黑树的特点</h2><ol>
<li>每个节点都必须是红色或者黑色；</li>
<li>跟节点是黑色。这条规则有时会被忽略，因为跟节点始终可以从红色变为黑色，但反过来就不一定成立。该规则对数据分析影响很小；</li>
<li>所有叶子节点（包括空节点）都是黑色；</li>
<li>红色节点的子节点都是黑色；</li>
<li>从给定节点到其任何后代NIL节点的每条路径都经过相同数量的黑色节点；</li>
</ol>
<p>参考链接：</p>
<ul>
<li><a href="https://xlinux.nist.gov/dads/HTML/redblack.html">https://xlinux.nist.gov/dads/HTML/redblack.html</a></li>
<li><a href="https://en.wikipedia.org/wiki/Red%E2%80%93black_tree">https://en.wikipedia.org/wiki/Red%E2%80%93black_tree</a></li>
<li><a href="https://medium.com/@kevinsmavani007/red-black-tree-47e3249cf17">https://medium.com/@kevinsmavani007/red-black-tree-47e3249cf17</a></li>
</ul>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
  </entry>
  <entry>
    <title>C++成员函数指针</title>
    <url>/posts/63718.html</url>
    <content><![CDATA[<p>对于类的普通成员函数和静态成员函数，定义函数指针的方法是不同的，如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">func_normal</span><span class="params">()</span> </span>&#123;      <span class="comment">//普通成员函数</span></span><br><span class="line">        std::cout &lt;&lt; __func__ &lt;&lt; std::endl;</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func_static</span><span class="params">()</span> </span>&#123;    <span class="comment">//静态成员函数（static）</span></span><br><span class="line">        std::cout &lt;&lt; __func__ &lt;&lt; std::endl;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//g++ -std=c++11 to enable std::function</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">foo</span><span class="params">(std::function&lt;<span class="type">void</span>()&gt; pf)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">pf</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* normal function pointer */</span></span><br><span class="line">    <span class="built_in">void</span> (Test::*pfunc_n)() = <span class="literal">NULL</span>;</span><br><span class="line">    pfunc_n = &amp;Test::func_normal;</span><br><span class="line">    Test t;</span><br><span class="line">    (t.*pfunc_n)();</span><br><span class="line">    <span class="built_in">foo</span>(std::<span class="built_in">bind</span>(&amp;Test::func_normal, &amp;t));</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* static function pointer */</span></span><br><span class="line">    <span class="built_in">void</span> (*pfunc_s)() = <span class="literal">NULL</span>;</span><br><span class="line">    pfunc_s = &amp;Test::func_static;</span><br><span class="line">    <span class="built_in">pfunc_s</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果一个非静态成员函数指针作为函数参数，则只能把对象传入函数中，然后通过对象调用函数指针。在C++11中引入了function，其本质也是把类传入了函数。</p>
]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>算法复杂度</title>
    <url>/posts/30614.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
  </entry>
  <entry>
    <title>C++智能指针</title>
    <url>/posts/99c27b28.html</url>
    <content><![CDATA[<h2 id="std-shared-ptr"><a href="#std-shared-ptr" class="headerlink" title="std::shared_ptr"></a>std::shared_ptr</h2><p><a href="https://en.cppreference.com/w/cpp/memory/shared_ptr">std::shared_ptr</a>共享智能指针，可以支持多个智能指针共享一个对象实例。shared_ptr持有的实例会在下面场景下被销毁：</p>
<ul>
<li>持有实例的最后一个shared_ptr被销毁；</li>
<li>持有实例的最后一个shared_ptr被另一个智能指针赋值，或者shared_ptr调用了reset();</li>
</ul>
<p><img src="/images/C++/shared_ptr.drawio.svg" alt="shared_ptr"></p>
<p>使用方法：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">shared_ptr&lt;User&gt; sp1 = <span class="built_in">make_shared</span>&lt;User&gt;(<span class="number">1</span>, <span class="string">&quot;sp1&quot;</span>, <span class="string">&quot;123456&quot;</span>);</span><br><span class="line"><span class="function">shared_ptr&lt;User&gt; <span class="title">sp2</span><span class="params">(<span class="keyword">new</span> User(<span class="number">2</span>, <span class="string">&quot;sp2&quot;</span>, <span class="string">&quot;123456&quot;</span>))</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指针和赋值动作可以分开</span></span><br><span class="line"><span class="function">shared_ptr&lt;User&gt; <span class="title">sp3</span><span class="params">(<span class="literal">nullptr</span>)</span></span>;</span><br><span class="line">sp3 = <span class="built_in">make_shared</span>&lt;User&gt;(<span class="number">3</span>, <span class="string">&quot;sp3&quot;</span>, <span class="string">&quot;123456&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Control Block的ref将会加一</span></span><br><span class="line">audo p4 = sp1;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Control Block和Object都会被交换</span></span><br><span class="line">sp1.<span class="built_in">swap</span>(sp2);</span><br></pre></td></tr></table></figure>

<p>参考：<a href="https://learn.microsoft.com/zh-cn/cpp/cpp/how-to-create-and-use-shared-ptr-instances?view=msvc-170">创建和使用 shared_ptr 实例</a></p>
<p>注意：不要使用裸指针来初始化智能指针，会导致多次释放内存造成崩溃：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    User* user = <span class="keyword">new</span> <span class="built_in">User</span>(<span class="number">0</span>, <span class="string">&quot;Jone&quot;</span>, <span class="string">&quot;12345&quot;</span>);</span><br><span class="line">    <span class="function">shared_ptr&lt;User&gt; <span class="title">p1</span><span class="params">(user)</span></span>;</span><br><span class="line">    <span class="function">shared_ptr&lt;User&gt; <span class="title">p2</span><span class="params">(user)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当test()函数退出时，p2会先调用User析构，然后p1会再次调用User析构函数，同时两次释放同一块内存，就会导致程序出错。下面是正确的写法：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="function">shared_ptr&lt;User&gt; <span class="title">p1</span><span class="params">(<span class="keyword">new</span> User(<span class="number">0</span>, <span class="string">&quot;Jone&quot;</span>, <span class="string">&quot;12345&quot;</span>))</span></span>;</span><br><span class="line">    shared_ptr&lt;User&gt; p2 = p1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 类的构造与析构</title>
    <url>/posts/17009.html</url>
    <content><![CDATA[<h2 id="类的构造"><a href="#类的构造" class="headerlink" title="类的构造"></a>类的构造</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">User</span>(<span class="type">int</span> id, string name, string phone);</span><br></pre></td></tr></table></figure>

<p>可以采用如下格式来进行类实例的创建：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">User user = <span class="built_in">User</span>(<span class="number">1</span>, <span class="string">&quot;Jone&quot;</span>, <span class="string">&quot;123456&quot;</span>);</span><br><span class="line"><span class="function">User <span class="title">user</span><span class="params">(<span class="number">1</span>, <span class="string">&quot;Jone&quot;</span>, <span class="string">&quot;123456&quot;</span>)</span></span>;</span><br><span class="line">User* user = <span class="keyword">new</span> <span class="built_in">User</span>(<span class="number">1</span>, <span class="string">&quot;Jone&quot;</span>, <span class="string">&quot;123456&quot;</span>);</span><br><span class="line"></span><br><span class="line">User user = &#123; <span class="number">1</span>, <span class="string">&quot;Jone&quot;</span>, <span class="string">&quot;123456&quot;</span> &#125;;           <span class="comment">//C++ 11</span></span><br><span class="line">User user&#123; <span class="number">1</span>, <span class="string">&quot;Jone&quot;</span>, <span class="string">&quot;123456&quot;</span> &#125;;              <span class="comment">//C++ 11</span></span><br><span class="line">User* user = <span class="keyword">new</span> User&#123; <span class="number">1</span>, <span class="string">&quot;Jone&quot;</span>, <span class="string">&quot;123456&quot;</span> &#125;;  <span class="comment">//C++ 11</span></span><br></pre></td></tr></table></figure>

<p>如果User类有默认构造函数，则下面方式可以直接构造一个类：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">User user;  <span class="comment">//此处不是变量的声明，而是类实例的创建</span></span><br><span class="line">User* user = <span class="keyword">new</span> User;  <span class="comment">//此处也是使用默认构造函数</span></span><br></pre></td></tr></table></figure>

<p>对于只有一个参数的构造函数，可以采用赋值的方式创建一个类实例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">A a = <span class="number">10</span>;  <span class="comment">//构造函数为 A(int id);</span></span><br></pre></td></tr></table></figure>

<p>这种形式容易带来问题，可以使用<code>explicit</code>来修饰只有一个参数的构造函数，就能禁用这种类的构造写法。</p>
<h2 id="构造函数分类"><a href="#构造函数分类" class="headerlink" title="构造函数分类"></a>构造函数分类</h2><ul>
<li>明确定义的可以传参的普通构造函数；</li>
<li>默认构造函数，如果没有明确定义构造函数，那么编译器就会生成一个默认的构造函数；</li>
<li>拷贝构造函数，如果没有明确定义拷贝构造函数，编译器会默认生成一个拷贝构造函数，默认的拷贝构造函数是浅拷贝，如果需要实现深拷贝，则需要明确定义一个；</li>
<li>赋值运算符，建议和构造函数一起定义，而不要只定义其中一个【<a href="https://learn.microsoft.com/zh-cn/cpp/cpp/copy-constructors-and-copy-assignment-operators-cpp?view=msvc-170">参考</a>】；</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//明确定义的默认构造函数</span></span><br><span class="line">    <span class="built_in">A</span>() &#123; cout &lt;&lt; <span class="string">&quot;A()&quot;</span> &lt;&lt; endl; &#125;</span><br><span class="line">    <span class="comment">//可以传参的普通构造函数</span></span><br><span class="line">    <span class="built_in">A</span>(string name) : <span class="built_in">mName</span>(name) &#123; cout &lt;&lt; <span class="string">&quot;A(&quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot;)&quot;</span> &lt;&lt; endl; &#125;</span><br><span class="line">    <span class="comment">//拷贝构造函数</span></span><br><span class="line">    <span class="built_in">A</span>(<span class="type">const</span> A&amp; other) : <span class="built_in">mName</span>(other.mName) &#123; cout &lt;&lt; <span class="string">&quot;A copy(&quot;</span> + other.mName + <span class="string">&quot;)&quot;</span> &lt;&lt; endl; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">string <span class="title">getName</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> mName; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setName</span><span class="params">(string name)</span> </span>&#123; mName = name; &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    string mName;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="function">A <span class="title">a</span><span class="params">(<span class="string">&quot;a1&quot;</span>)</span></span>;</span><br><span class="line">    A a1 = a; <span class="comment">//调用的拷贝构造函数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上述代码的输出结构是：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">A(a1)</span><br><span class="line">A copy(a1)</span><br></pre></td></tr></table></figure>

<p>从输出中可以看出赋值操作符调用了拷贝构造函数；</p>
<h2 id="类的初始化顺序"><a href="#类的初始化顺序" class="headerlink" title="类的初始化顺序"></a>类的初始化顺序</h2><p>根据ISO/IEC 14882:1998(E) 中12.6.2一节的介绍。</p>
<blockquote>
<p>Initialization shall proceed in the following order:</p>
<ul>
<li>First, and only for the constructor of the most derived class as described below, virtual base classes shall be initialized in the order they appear on a depth-first left-to-right traversal of the directed acyclic graph of base classes, where “left-to-right” is the order of appearance of the base class names in the derived class base-specifier-list.</li>
<li>Then, direct base classes shall be initialized in declaration order as they appear in the base-specifier-list (regardless of the order of the mem-initializers).</li>
<li>Then, nonstatic data members shall be initialized in the order they were declared in the class definition (again regardless of the order of the mem-initializers).</li>
<li>Finally, the body of the constructor is executed.</li>
</ul>
</blockquote>
<p>上面的引用文字我没有完全看懂。但可以大体解释如下：</p>
<ul>
<li>首先，对基类进行初始化；</li>
<li>然后，初始化非静态数据成员。对于在初始化成员列表中的数据成员，编译器会使用列表中的值对数据成员进行初始化；没有出现在初始化成员列表中的数据成员，编译器会按照默认方式进行初始化（如果是类，就是调用类的默认构造函数）；</li>
<li>最后，构造函数体会被执行。</li>
</ul>
<h2 id="初始化成员列表（member-initializer-list）"><a href="#初始化成员列表（member-initializer-list）" class="headerlink" title="初始化成员列表（member initializer list）"></a>初始化成员列表（member initializer list）</h2><p>执行构造函数时，先执行初始化列表的内容，若初始化里面没有数据，则编译器按照系统默认的方式对成员变量赋值，随后再进行构造函数中花括号内部的指令。</p>
<ul>
<li>对于引用型成员变量和const常量型成员变量，则必须通过初始化列表初始化该成员变量。</li>
<li>如果成员类或者基类没有默认构造函数，则必须通过初始化表初始化该成员变量。</li>
<li>成员变量初始化顺序有声明顺序决定，而与初始化列表的顺序无关。</li>
<li>对于参数列表中所列的成员变量，可以不包含所有的成员变量。</li>
</ul>
<p>出于效率方面的考虑：对于有默认构造函数的成员类，编译器会在构建父类之前调用成员类的默认构造函数，如果在构造函数中又对该成员类进行赋值，则该成员类的构造函数调用了两次。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">A</span>() &#123; cout &lt;&lt; <span class="string">&quot;A()&quot;</span> &lt;&lt; endl; &#125;</span><br><span class="line">    <span class="built_in">A</span>(string name) &#123; cout &lt;&lt; <span class="string">&quot;A(&quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot;)&quot;</span> &lt;&lt; endl; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">B</span>(A&amp; a);</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    A _a;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">B::<span class="built_in">B</span>(A&amp; a) &#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;B()&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">this</span>-&gt;_a = a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="function">A <span class="title">a</span><span class="params">(<span class="string">&quot;a1&quot;</span>)</span></span>;</span><br><span class="line">    <span class="function">B <span class="title">b</span><span class="params">(a)</span></span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上述程序的执行结果是：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">A(a1)</span><br><span class="line">A()</span><br><span class="line">B()</span><br></pre></td></tr></table></figure>

<p>可以看出A的默认构造函数在B构造函数之前被执行了，这不符合预期，我们期望只有A(a1)，而A()是多余的。如果使用初始化列表的方式，则不存在这个问题，将B的构造函数改成如下形式：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">B::<span class="built_in">B</span>(A&amp; a) : _a(a) &#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;B()&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>修改之后的程序运行结果如下，这样就符合预期了：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">A(a1)</span><br><span class="line">B()</span><br></pre></td></tr></table></figure>

<h2 id="构造和析构顺序"><a href="#构造和析构顺序" class="headerlink" title="构造和析构顺序"></a>构造和析构顺序</h2><p>C++一个原则是：先构造后析构，在类的继承关系中，父类先构造，子类后构造；而析构时，则是子类先析构，父类后析构。如果在一个含注重，栈中构造了先后构造了A、B两个类（注意不是在堆中），则函数退出时，B先执行析构，然后才是A的析构。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">GrandFather</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">GrandFather</span>() &#123; std::cout &lt;&lt; <span class="string">&quot;construct grandfather&quot;</span> &lt;&lt; std::endl; &#125;</span><br><span class="line">    ~<span class="built_in">GrandFather</span>() &#123; std::cout &lt;&lt; <span class="string">&quot;destruct grandfather&quot;</span> &lt;&lt; std::endl; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Father</span> : <span class="keyword">public</span> GrandFather &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Father</span>() &#123; std::cout &lt;&lt; <span class="string">&quot;construct father&quot;</span> &lt;&lt; std::endl; &#125;</span><br><span class="line">    ~<span class="built_in">Father</span>() &#123; std::cout &lt;&lt; <span class="string">&quot;destruct father&quot;</span> &lt;&lt; std::endl; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> : <span class="keyword">public</span> Father &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Son</span>() &#123; std::cout &lt;&lt; <span class="string">&quot;construct son&quot;</span> &lt;&lt; std::endl; &#125;</span><br><span class="line">    ~<span class="built_in">Son</span>() &#123; std::cout &lt;&lt; <span class="string">&quot;destruct son&quot;</span> &lt;&lt; std::endl; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Son* f = <span class="keyword">new</span> <span class="built_in">Son</span>();</span><br><span class="line">    <span class="keyword">delete</span> f;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">construct grandfather</span><br><span class="line">construct father</span><br><span class="line">construct son</span><br><span class="line">destruct son</span><br><span class="line">destruct father</span><br><span class="line">destruct grandfather</span><br></pre></td></tr></table></figure>

<p>可以看出来，构造函数的顺序是先父类后子类，而析构则是先子类后父类。</p>
<h3 id="析构函数导致的资源泄漏"><a href="#析构函数导致的资源泄漏" class="headerlink" title="析构函数导致的资源泄漏"></a>析构函数导致的资源泄漏</h3><p>如果main函数改为下面代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Father* f = <span class="keyword">new</span> <span class="built_in">Son</span>();</span><br><span class="line">    <span class="keyword">delete</span> f;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">construct grandfather</span><br><span class="line">construct father</span><br><span class="line">construct son</span><br><span class="line">destruct father</span><br><span class="line">destruct grandfather</span><br></pre></td></tr></table></figure>

<p><code>Son</code>的析构函数没有调用，同样如果改成<code>GrandFather* f = new Son();</code>，<code>Son</code>和<code>Father</code>的析构函数都不会被调用。如果析构函数中需要进行资源释放，那么就会导致资源泄漏问题。要解决此问题，需要通过<code>virtual</code>来修饰析构函数。可以只修饰GrandFather的析构，也可以全部都加上virtual。</p>
<h3 id="父类被多次构造"><a href="#父类被多次构造" class="headerlink" title="父类被多次构造"></a>父类被多次构造</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">GrandFather</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">GrandFather</span>() &#123; std::cout &lt;&lt; <span class="string">&quot;construct grandfather&quot;</span> &lt;&lt; std::endl; &#125;</span><br><span class="line">    ~<span class="built_in">GrandFather</span>() &#123; std::cout &lt;&lt; <span class="string">&quot;destruct grandfather&quot;</span> &lt;&lt; std::endl; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Father1</span>: <span class="keyword">public</span> GrandFather &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Father1</span>() &#123; std::cout &lt;&lt; <span class="string">&quot;construct father1&quot;</span> &lt;&lt; std::endl; &#125;</span><br><span class="line">    ~<span class="built_in">Father1</span>() &#123; std::cout &lt;&lt; <span class="string">&quot;destruct father1&quot;</span> &lt;&lt; std::endl; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Father2</span>: <span class="keyword">public</span> GrandFather &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Father2</span>() &#123; std::cout &lt;&lt; <span class="string">&quot;construct father2&quot;</span> &lt;&lt; std::endl; &#125;</span><br><span class="line">    ~<span class="built_in">Father2</span>() &#123; std::cout &lt;&lt; <span class="string">&quot;destruct father2&quot;</span> &lt;&lt; std::endl; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span>: <span class="keyword">public</span> Father1, Father2 &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Son</span>() &#123; std::cout &lt;&lt; <span class="string">&quot;construct son&quot;</span> &lt;&lt; std::endl; &#125;</span><br><span class="line">    ~<span class="built_in">Son</span>() &#123; std::cout &lt;&lt; <span class="string">&quot;destruct son&quot;</span> &lt;&lt; std::endl; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Son* f = <span class="keyword">new</span> <span class="built_in">Son</span>();</span><br><span class="line">    <span class="keyword">delete</span> f;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行程序的输出结果：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">construct grandfather</span><br><span class="line">construct father1</span><br><span class="line">construct grandfather</span><br><span class="line">construct father2</span><br><span class="line">construct son</span><br><span class="line">destruct son</span><br><span class="line">destruct father2</span><br><span class="line">destruct grandfather</span><br><span class="line">destruct father1</span><br><span class="line">destruct grandfather</span><br></pre></td></tr></table></figure>

<p>可以看到<code>GrandFather</code>被构建了两次，这明显不符合预期。要解决这个问题需要在继承时添加<code>virtual</code>关键字，如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Father1</span>: <span class="keyword">virtual</span> <span class="keyword">public</span> GrandFather &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Father2</span>: <span class="keyword">virtual</span> <span class="keyword">public</span> GrandFather &#123;&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="数组与构造函数"><a href="#数组与构造函数" class="headerlink" title="数组与构造函数"></a>数组与构造函数</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Stock stocks[<span class="number">4</span>];</span><br></pre></td></tr></table></figure>

<p>这个数据会构造4个Stock类，即，调用了4次Stock的默认构造函数。如果数组的元素类没有默认构造函数可以使用下面形式：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Shop shops[<span class="number">4</span>] = &#123;</span><br><span class="line">    <span class="built_in">Stock</span>(<span class="number">0</span>, <span class="string">&quot;name&quot;</span>),</span><br><span class="line">    <span class="built_in">Stock</span>(<span class="number">1</span>, <span class="string">&quot;name&quot;</span>),</span><br><span class="line">    <span class="built_in">Stock</span>(<span class="number">2</span>, <span class="string">&quot;name&quot;</span>),</span><br><span class="line">    <span class="built_in">Stock</span>(<span class="number">3</span>, <span class="string">&quot;name&quot;</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="http://en.cppreference.com/w/cpp/language/initializer_list">Constructors and member initializer lists</a></li>
</ul>
]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++类内存布局</title>
    <url>/posts/77080af6.html</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> baseValue;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">baseFun</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> bValue;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">fb1</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">fb2</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123; cout &lt;&lt; <span class="string">&quot;B::test()&quot;</span> &lt;&lt; endl; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span> : <span class="keyword">public</span> Base &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> cValue;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">fc1</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">fc2</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123; cout &lt;&lt; <span class="string">&quot;C::test()&quot;</span> &lt;&lt; endl; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> : <span class="keyword">public</span> B, <span class="keyword">public</span> C</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> aPublicValue;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">fb2</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    <span class="comment">//virtual void test() &#123; cout &lt;&lt; &quot;A::test()&quot; &lt;&lt; endl; &#125;</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">fc2</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">funcA1</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">funcA2</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">funcA3</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">short</span> aPrivateValue;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><img src="/images/C++%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AD%98%E5%B8%83%E5%B1%80.drawio.svg" alt="C++对象内存布局"></p>
<p>通过VisualStudio来查看A类的内存布局：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">class A	size(28):</span><br><span class="line">	+---</span><br><span class="line"> 0	| +--- (base class B)</span><br><span class="line"> 0	| | &#123;vfptr&#125;</span><br><span class="line"> 4	| | bValue</span><br><span class="line">	| +---</span><br><span class="line"> 8	| +--- (base class C)</span><br><span class="line"> 8	| | +--- (base class Base)</span><br><span class="line"> 8	| | | &#123;vfptr&#125;</span><br><span class="line">12	| | | baseValue</span><br><span class="line">	| | +---</span><br><span class="line">16	| | cValue</span><br><span class="line">	| +---</span><br><span class="line">20	| aPublicValue</span><br><span class="line">24	| aPrivateValue</span><br><span class="line">  	| &lt;alignment member&gt; (size=2)</span><br><span class="line">	+---</span><br><span class="line"></span><br><span class="line">A::$vftable@B@:</span><br><span class="line">	| &amp;A_meta</span><br><span class="line">	|  0</span><br><span class="line"> 0	| &amp;B::fb1 </span><br><span class="line"> 1	| &amp;A::fb2 </span><br><span class="line"> 2	| &amp;B::test </span><br><span class="line"> 3	| &amp;A::funcA1 </span><br><span class="line"> 4	| &amp;A::funcA2 </span><br><span class="line"></span><br><span class="line">A::$vftable@C@:</span><br><span class="line">	| -8</span><br><span class="line"> 0	| &amp;Base::baseFun </span><br><span class="line"> 1	| &amp;C::fc1 </span><br><span class="line"> 2	| &amp;A::fc2 </span><br><span class="line"> 3	| &amp;C::test </span><br><span class="line"></span><br><span class="line">A::fb2 this adjustor: 0</span><br><span class="line">A::fc2 this adjustor: 8</span><br><span class="line">A::funcA1 this adjustor: 0</span><br><span class="line">A::funcA2 this adjustor: 0</span><br></pre></td></tr></table></figure>

<p>从<code>A::$vftable@B@</code>可以看出虚函数表中A和B合并在一起了，并且<code>A::fb2</code>覆盖了<code>B::fb2</code>。而C类的vftable则是独立存储。</p>
<p>B和C两个类都定义了test()函数，而A类则没有覆盖test方法，如果A类调用test方法到底采用的是那个呢？在<code>A::$vftable@B@</code>指向的是<code>B::test</code>。而<code>A::$vftable@C@</code>指向的是<code>C::test</code>。我们通过下面代码进行测试：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    A a;</span><br><span class="line">    <span class="comment">//a.test(); //此处会导致编译错误，因为无法确定test的实现</span></span><br><span class="line">    a.B::<span class="built_in">test</span>(); <span class="comment">//通过限定引用可以解决多义性问题</span></span><br><span class="line">    B&amp; b = <span class="built_in">static_cast</span>&lt;B&amp;&gt;(a);</span><br><span class="line">    b.<span class="built_in">test</span>();  <span class="comment">//打印 B::test()</span></span><br><span class="line">    C* c = <span class="built_in">static_cast</span>&lt;C*&gt;(&amp;a);</span><br><span class="line">    c-&gt;<span class="built_in">test</span>(); <span class="comment">//打印 C::test()</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>所以基于A类的实例是无法调用test函数的，但是把A类转换成B/C的引用或者指针后，就能调用test方法了，但只能分别调用自己的函数实现。</p>
<p>我们现在把C继承Base使用virtual进行修饰，代码改动如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">C</span> : <span class="keyword">public</span> <span class="keyword">virtual</span> Base</span><br></pre></td></tr></table></figure>

<p>A类的内存布局情况如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">class A	size(36):</span><br><span class="line">	+---</span><br><span class="line"> 0	| +--- (base class B)</span><br><span class="line"> 0	| | &#123;vfptr&#125;</span><br><span class="line"> 4	| | bValue</span><br><span class="line">	| +---</span><br><span class="line"> 8	| +--- (base class C)</span><br><span class="line"> 8	| | &#123;vfptr&#125;</span><br><span class="line">12	| | &#123;vbptr&#125;</span><br><span class="line">16	| | cValue</span><br><span class="line">	| +---</span><br><span class="line">20	| aPublicValue</span><br><span class="line">24	| aPrivateValue</span><br><span class="line">  	| &lt;alignment member&gt; (size=2)</span><br><span class="line">	+---</span><br><span class="line">	+--- (virtual base Base)</span><br><span class="line">28	| &#123;vfptr&#125;</span><br><span class="line">32	| baseValue</span><br><span class="line">	+---</span><br><span class="line"></span><br><span class="line">A::$vftable@:</span><br><span class="line">	| &amp;A_meta</span><br><span class="line">	|  0</span><br><span class="line"> 0	| &amp;B::fb1 </span><br><span class="line"> 1	| &amp;A::fb2 </span><br><span class="line"> 2	| &amp;B::test </span><br><span class="line"> 3	| &amp;A::funcA1 </span><br><span class="line"> 4	| &amp;A::funcA2 </span><br><span class="line"></span><br><span class="line">A::$vftable@C@:</span><br><span class="line">	| -8</span><br><span class="line"> 0	| &amp;C::fc1 </span><br><span class="line"> 1	| &amp;A::fc2 </span><br><span class="line"> 2	| &amp;C::test </span><br><span class="line"></span><br><span class="line">A::$vbtable@:</span><br><span class="line"> 0	| -4</span><br><span class="line"> 1	| 16 (Ad(C+4)Base)</span><br><span class="line"></span><br><span class="line">A::$vftable@Base@:</span><br><span class="line">	| -28</span><br><span class="line"> 0	| &amp;Base::baseFun </span><br><span class="line"></span><br><span class="line">A::fb2 this adjustor: 0</span><br><span class="line">A::fc2 this adjustor: 8</span><br><span class="line">A::funcA1 this adjustor: 0</span><br><span class="line">A::funcA2 this adjustor: 0</span><br><span class="line">vbi:	   class  offset o.vbptr  o.vbte fVtorDisp</span><br><span class="line">            Base      28      12       4 0</span><br></pre></td></tr></table></figure>

<p>可以看出class c中多了一个{vbptr}指针，这个叫做虚基类指针。</p>
<h3 id="查看类内存布局的方法"><a href="#查看类内存布局的方法" class="headerlink" title="查看类内存布局的方法"></a>查看类内存布局的方法</h3><h4 id="使用VisualStudio"><a href="#使用VisualStudio" class="headerlink" title="使用VisualStudio"></a>使用VisualStudio</h4><p>在VisualStudio中：工具 &gt; 命令行 &gt; 开发者命令行提示，然后输入命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cl /d1 reportAllClassLayout xxx.cpp &gt; class.txt</span><br></pre></td></tr></table></figure>

<p>输入内容比较多，搜索“class ClassName”就可以找到对应类的内部布局信息。</p>
<h4 id="使用clang"><a href="#使用clang" class="headerlink" title="使用clang"></a>使用clang</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">clang -Xclang -fdump-record-layouts -stdlib=libc++  -std=gnu++11 xxx.cpp</span><br><span class="line">clang -Xclang -fdump-vtable-layouts -stdlib=libc++ -std=gnu++11 -I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11 -c xxx.cpp</span><br></pre></td></tr></table></figure>

<p>这种方式好像在继承关系使用virtual修饰时没有</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">*** Dumping AST Record Layout</span><br><span class="line">         0 | class A</span><br><span class="line">         0 |   class B (primary base)</span><br><span class="line">         0 |     (B vtable pointer)</span><br><span class="line">         8 |     int bValue</span><br><span class="line">        16 |   class C (base)</span><br><span class="line">        16 |     (C vtable pointer)</span><br><span class="line">        24 |     int cValue</span><br><span class="line">        28 |   int aPublicValue</span><br><span class="line">        32 |   short aPrivateValue</span><br><span class="line">        36 |   class Base (virtual base)</span><br><span class="line">        36 |     int baseValue</span><br><span class="line">           | [sizeof=40, dsize=40, align=8,</span><br><span class="line">           |  nvsize=34, nvalign=8]</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://learn.microsoft.com/zh-cn/cpp/cpp/multiple-base-classes?view=msvc-170">多个基类</a></p>
]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C/C++ 程序内存分段</title>
    <url>/posts/55021.html</url>
    <content><![CDATA[<p><img src="/images/C%E7%A8%8B%E5%BA%8F%E5%86%85%E5%AD%98%E5%88%86%E6%AE%B5_2023-08-17-13-44-16.png" alt="内存分段示意图"></p>
<h2 id="栈-stack"><a href="#栈-stack" class="headerlink" title="栈(stack)"></a>栈(stack)</h2><p>栈又称堆栈， 是用户存放程序临时创建的局部变量，也就是说我们函数括弧“{}”中定义的变量（但不包括static声明的变量，static意味着在数据段中存放变量）。除此以外，在函数被调用时，其参数也会被压入发起调用的进程栈中，并且待到调用结束后，函数的返回值也会被存放回栈中。由于栈的先进后出特点，所以栈特别方便用来保存/恢复调用现场。从这个意义上讲，我们可以把堆栈看成一个寄存、交换临时数据的内存区。</p>
<h2 id="堆（heap）"><a href="#堆（heap）" class="headerlink" title="堆（heap）"></a>堆（heap）</h2><p>堆是用于存放进程运行中被动态分配的内存段，它的大小并不固定，可动态扩张或缩减。当进程调用malloc等函数分配内存时，新分配的内存就被动态添加到堆上（堆被扩张）；当利用free等函数释放内存时，被释放的内存从堆中被剔除（堆被缩减）</p>
<h2 id="BSS段（bss-segment）"><a href="#BSS段（bss-segment）" class="headerlink" title="BSS段（bss segment）"></a>BSS段（bss segment）</h2><p>BSS（Block Started by Symbol）属于静态内存分配，通常是指用来存放程序中未初始化的全局变量和静态变量的一块内存区域。特点是可读写。</p>
<p>BSS段在磁盘上不是真的占用变量大小的空间，它仅仅记录了变量所需要的大小（占位符），也就是说，在该段中记录了所有未初始化全局变量与局部静态变量的大小总和，至于每个变量的大小则存储在符号表的size属性中。当可执行文件加载运行前，会为BSS段中的变量分配足够的空间并全部自动清零（因此，才有未初始化的全局变量的值为0的说法）。</p>
<p>BSS段主要是为了节省可执行文件在磁盘上所占的空间，对未初始化的大型数组的节省效率比较明显。</p>
<p>默认情况下，编译器会把初始化值为0的变量（比如static int a = 0）放在BSS段。但可以通过“#pragma explicit_zero_data on”把初始值为零的变量放到data段，而不是bss段。</p>
<h2 id="数据段（data-segment）"><a href="#数据段（data-segment）" class="headerlink" title="数据段（data segment）"></a>数据段（data segment）</h2><p>通常是指用来存放程序中已初始化的全局变量的一块内存区域，会占用磁盘文件空间。数据段属于静态内存分配。</p>
<h2 id="只读数据段（read-only-data-segment）"><a href="#只读数据段（read-only-data-segment）" class="headerlink" title="只读数据段（read only data segment）"></a>只读数据段（read only data segment）</h2><p>rodata用于存储使用const修饰的变量，或者只读类型的字符串等。</p>
<h2 id="代码段（code-segment-text-segment）"><a href="#代码段（code-segment-text-segment）" class="headerlink" title="代码段（code segment/text segment）"></a>代码段（code segment/text segment）</h2><p>通常是指用来存放程序执行代码的一块内存区域。这部分区域的大小在程序运行前就已经确定，并且内存区域通常属于只读, 某些架构也允许代码段为可写，即允许修改程序。在代码段中，也有可能包含一些只读的常数变量，例如字符串常量等。</p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul>
<li><a href="https://blog.csdn.net/virtual_func/article/details/48529249">关于BSS段的大小</a></li>
<li><a href="https://blog.csdn.net/jxhui23/article/details/8064766">数据段、代码段、堆栈段、BSS段的区别</a></li>
</ul>
]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>Mixin模式</title>
    <url>/posts/52098.html</url>
    <content><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Mixin">Mixin wiki</a></p>
<p><a href="http://www.cnblogs.com/xybaby/p/6484262.html">Mixin模式</a></p>
]]></content>
      <categories>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title>gcc编译过程</title>
    <url>/posts/52729.html</url>
    <content><![CDATA[<!-- ![gcc编译过程](/images/gcc编译过程_2023-08-17-13-45-43.png) -->

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: %0 Pages: 1 -->
<svg width="617pt" height="44pt"
 viewBox="0.00 0.00 616.91 44.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 40)">
<title>%0</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-40 612.9124,-40 612.9124,4 -4,4"/>
<!-- c -->
<g id="node1" class="node">
<title>c</title>
<polygon fill="none" stroke="#000000" points="54,-36 0,-36 0,0 54,0 54,-36"/>
<text text-anchor="middle" x="27" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">hello.c</text>
</g>
<!-- i -->
<g id="node2" class="node">
<title>i</title>
<polygon fill="none" stroke="#000000" points="201.1564,-36 147.1564,-36 147.1564,0 201.1564,0 201.1564,-36"/>
<text text-anchor="middle" x="174.1564" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">hello.i</text>
</g>
<!-- c&#45;&gt;i -->
<g id="edge1" class="edge">
<title>c&#45;&gt;i</title>
<path fill="none" stroke="#000000" d="M54.3341,-18C77.565,-18 111.1389,-18 136.841,-18"/>
<polygon fill="#000000" stroke="#000000" points="136.9687,-21.5001 146.9687,-18 136.9686,-14.5001 136.9687,-21.5001"/>
<text text-anchor="middle" x="100.5782" y="-22.2" font-family="Times,serif" font-size="14.00" fill="#000000">预处理 &#45;E</text>
</g>
<!-- s -->
<g id="node3" class="node">
<title>s</title>
<polygon fill="none" stroke="#000000" points="347.9348,-36 293.9348,-36 293.9348,0 347.9348,0 347.9348,-36"/>
<text text-anchor="middle" x="320.9348" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">hello.s</text>
</g>
<!-- i&#45;&gt;s -->
<g id="edge2" class="edge">
<title>i&#45;&gt;s</title>
<path fill="none" stroke="#000000" d="M201.4203,-18C224.5915,-18 258.0791,-18 283.7153,-18"/>
<polygon fill="#000000" stroke="#000000" points="283.8169,-21.5001 293.8169,-18 283.8169,-14.5001 283.8169,-21.5001"/>
<text text-anchor="middle" x="247.5456" y="-22.2" font-family="Times,serif" font-size="14.00" fill="#000000">编译 &#45;S</text>
</g>
<!-- o -->
<g id="node4" class="node">
<title>o</title>
<polygon fill="none" stroke="#000000" points="488.056,-36 433.0598,-36 433.0598,0 488.056,0 488.056,-36"/>
<text text-anchor="middle" x="460.5579" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">hello.o</text>
</g>
<!-- s&#45;&gt;o -->
<g id="edge3" class="edge">
<title>s&#45;&gt;o</title>
<path fill="none" stroke="#000000" d="M348.187,-18C369.4793,-18 399.3129,-18 422.8895,-18"/>
<polygon fill="#000000" stroke="#000000" points="422.8973,-21.5001 432.8973,-18 422.8972,-14.5001 422.8973,-21.5001"/>
<text text-anchor="middle" x="390.6224" y="-22.2" font-family="Times,serif" font-size="14.00" fill="#000000">汇编 &#45;c</text>
</g>
<!-- e -->
<g id="node5" class="node">
<title>e</title>
<polygon fill="none" stroke="#000000" points="608.9124,-36 554.9124,-36 554.9124,0 608.9124,0 608.9124,-36"/>
<text text-anchor="middle" x="581.9124" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">hello</text>
</g>
<!-- o&#45;&gt;e -->
<g id="edge4" class="edge">
<title>o&#45;&gt;e</title>
<path fill="none" stroke="#000000" d="M488.0951,-18C504.8922,-18 526.5769,-18 544.8666,-18"/>
<polygon fill="#000000" stroke="#000000" points="544.9022,-21.5001 554.9022,-18 544.9022,-14.5001 544.9022,-21.5001"/>
<text text-anchor="middle" x="521.3591" y="-22.2" font-family="Times,serif" font-size="14.00" fill="#000000">链接</text>
</g>
</g>
</svg>


<h2 id="示例如下："><a href="#示例如下：" class="headerlink" title="示例如下："></a>示例如下：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gcc -E hello.c -o hello.i</span><br><span class="line">gcc -S hello.i -o hello.s</span><br><span class="line">gcc -c hello.s -o hello.o</span><br><span class="line">gcc hello.s -o hello</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>编程语言参考网站</title>
    <url>/posts/31550.html</url>
    <content><![CDATA[<h2 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h2><hr>
<ul>
<li><a href="http://www.cplusplus.com/reference/">Standard C++ Library reference</a></li>
<li><a href="https://zh.cppreference.com/">C++ 参考手册</a></li>
<li><a href="https://en.wikibooks.org/wiki/C%2B%2B_Programming/All_Chapters">C++ Programming - Wikibooks</a></li>
<li><a href="https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md">C++ Core Guidelines</a> by Bjarne Stroustrup &amp; Herb Sutter</li>
<li><a href="http://www.stroustrup.com/bs_faq2.html">Bjarne Stroustrup’s C++ Style and Technique FAQ</a></li>
<li><a href="https://www.boost.org/">Boost: C++ libraries</a></li>
<li><a href="https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list">The Definitive C++ Book Guide and List</a></li>
</ul>
<h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><hr>
<ul>
<li><a href="https://docs.python.org/3/library/index.html#the-python-standard-library" title="Permalink to this headline">The Python Standard Library</a></li>
<li><a href="https://google.github.io/styleguide/pyguide.html">Google Python Style Guide</a></li>
<li><a href="http://www.runoob.com/python3/python3-tutorial.html">Python 3 教程 - 菜鸟教程</a></li>
<li><a href="http://www.runoob.com/python/python-tutorial.html">Python 2 教程 - 菜鸟教程</a></li>
</ul>
<h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><hr>
<ul>
<li><a href="https://developer.android.google.cn/guide?hl=zh_cn">开发者指南</a></li>
<li><a href="https://developer.android.google.cn/reference/">Android API reference</a></li>
<li><a href="https://developer.android.com/guide/platform/">Android Platform Architecture</a></li>
<li><a href="https://developer.android.google.cn/reference/android/media/MediaCodec">MediaCodec</a></li>
<li><a href="https://developer.android.google.cn/training/articles/perf-jni">JNI tips</a></li>
</ul>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>C++</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>软件设计原则</title>
    <url>/posts/56256.html</url>
    <content><![CDATA[<h3 id="SOLID"><a href="#SOLID" class="headerlink" title="SOLID"></a><a href="https://en.wikipedia.org/wiki/SOLID">SOLID</a></h3><hr>
<h4 id="Single-responsibility-principle-单一职责"><a href="#Single-responsibility-principle-单一职责" class="headerlink" title="Single responsibility principle 单一职责"></a><a href="https://en.wikipedia.org/wiki/Single_responsibility_principle">Single responsibility principle</a> 单一职责</h4><p>The single responsibility principle is a computer programming principle that states that every module, class, or function should have responsibility over a single part of the functionality provided by the software, and that responsibility should be entirely encapsulated by the class, module or function. All its services should be narrowly aligned with that responsibility. Robert C. Martin expresses the principle as, “A class should have only one reason to change,” although, because of confusion around the word “reason” he more recently stated “This principle is about people.(Actor)”</p>
<p>Martin defines a responsibility as a reason to change, and concludes that a class or module should have one, and only one, reason to be changed (i.e. rewritten). As an example, consider a module that compiles and prints a report. Imagine such a module can be changed for two reasons. First, the content of the report could change. Second, the format of the report could change. These two things change for very different causes; one substantive, and one cosmetic. The single responsibility principle says that these two aspects of the problem are really two separate responsibilities, and should therefore be in separate classes or modules. It would be a bad design to couple two things that change for different reasons at different times.</p>
<p>The reason it is important to keep a class focused on a single concern is that it makes the class more robust. Continuing with the foregoing example, if there is a change to the report compilation process, there is greater danger that the printing code will break if it is part of the same class.</p>
<h4 id="Open–closed-principle-开闭原则"><a href="#Open–closed-principle-开闭原则" class="headerlink" title="Open–closed principle 开闭原则"></a><a href="https://en.wikipedia.org/wiki/Open%E2%80%93closed_principle">Open–closed principle</a> 开闭原则</h4><p>Open/closed principle states “software entities (classes, modules, functions, etc.) should be open for extension, but closed for modification”; that is, such an entity can allow its behaviour to be extended without modifying its source code.</p>
<p>The name open/closed principle has been used in two ways. Both ways use generalizations (for instance, inheritance or delegate functions) to resolve the apparent dilemma, but the goals, techniques, and results are different.</p>
<h4 id="Liskov-substitution-principle-里式替换"><a href="#Liskov-substitution-principle-里式替换" class="headerlink" title="Liskov substitution principle 里式替换"></a><a href="https://en.wikipedia.org/wiki/Liskov_substitution_principle">Liskov substitution principle</a> 里式替换</h4><h4 id="Interface-segregation-principle-ISP"><a href="#Interface-segregation-principle-ISP" class="headerlink" title="Interface segregation principle (ISP)"></a><a href="https://en.wikipedia.org/wiki/Interface_segregation_principle">Interface segregation principle (ISP)</a></h4><p>ISP states that no client should be forced to depend on methods it does not use. ISP splits interfaces that are very large into smaller and more specific ones so that clients will only have to know about the methods that are of interest to them. Such shrunken interfaces are also called role interfaces. ISP is intended to keep a system decoupled and thus easier to refactor, change, and redeploy.</p>
<h4 id="Dependency-inversion-principle"><a href="#Dependency-inversion-principle" class="headerlink" title="Dependency inversion principle"></a><a href="https://en.wikipedia.org/wiki/Dependency_inversion_principle">Dependency inversion principle</a></h4><p>In object-oriented design, the dependency inversion principle is a specific form of decoupling software modules. When following this principle, the conventional dependency relationships established from high-level, policy-setting modules to low-level, dependency modules are reversed, thus rendering high-level modules independent of the low-level module implementation details. The principle states:</p>
<ul>
<li>High-level modules should not depend on low-level modules. Both should depend on abstractions (e.g. interfaces).</li>
<li>Abstractions should not depend on details. Details (concrete implementations) should depend on abstractions.</li>
</ul>
<p>By dictating that both high-level and low-level objects must depend on the same abstraction, this design principle inverts the way some people may think about object-oriented programming.</p>
<p> Depend upon abstractions.  Do not depend upon concrete classes. P177</p>
<p> In conventional application architecture, lower-level components (e.g. Utility Layer) are designed to be consumed by higher-level components (e.g. Policy Layer) which enable increasingly complex systems to be built. In this composition, higher-level components depend directly upon lower-level components to achieve some task. This dependency upon lower-level components limits the reuse opportunities of the higher-level components.The goal of the dependency inversion pattern is to avoid this highly coupled distribution with the mediation of an abstract layer, and to increase the re-usability of higher/policy layers.<br> <img src="/img/in-post/Traditional_Layers_Pattern.png" alt="Traditional_Layers_Pattern" title="Traditional Layers Pattern"></p>
<p> With the addition of an abstract layer, both high- and lower-level layers reduce the traditional dependencies from top to bottom. Nevertheless, the “inversion” concept does not mean that lower-level layers depend on higher-level layers. Both layers should depend on abstractions that draw the behavior needed by higher-level layers.<br> <img src="/img/in-post/DIPLayersPattern.png" alt="DIPLayersPattern" title="DIP Layers Pattern"></p>
<p> In a direct application of dependency inversion, the abstracts are owned by the upper/policy layers. This architecture groups the higher/policy components and the abstractions that define lower services together in the same package. The lower-level layers are created by inheritance/implementation of these abstract classes or interfaces.[1]</p>
<p>The inversion of the dependencies and ownership encourages the re-usability of the higher/policy layers. Upper layers could use other implementations of the lower services. When the lower-level layer components are closed or when the application requires the reuse of existing services, it is common that an Adapter mediates between the services and the abstractions.</p>
<h3 id="GRASP"><a href="#GRASP" class="headerlink" title="GRASP"></a><a href="https://en.wikipedia.org/wiki/GRASP_(object-oriented_design)">GRASP</a></h3><hr>
<p>General Responsibility Assignment Software Patterns (or Principles), abbreviated GRASP, consist of guidelines for assigning responsibility to classes and objects in object-oriented design. It is not related to the <a href="https://en.wikipedia.org/wiki/SOLID">SOLID</a> design principle.</p>
<p>The different patterns and principles used in GRASP are <a href="https://en.wikipedia.org/wiki/GRASP_(object-oriented_design)#Controller">controller</a>, <a href="https://en.wikipedia.org/wiki/GRASP_(object-oriented_design)#Creator">creator</a>, <a href="https://en.wikipedia.org/wiki/GRASP_(object-oriented_design)#Indirection">indirection</a>, <a href="https://en.wikipedia.org/wiki/GRASP_(object-oriented_design)#Information_expert">information expert</a>, <a href="https://en.wikipedia.org/wiki/GRASP_(object-oriented_design)#High_cohesion">high cohesion</a>, <a href="https://en.wikipedia.org/wiki/GRASP_(object-oriented_design)#Low_coupling">low coupling</a>, <a href="https://en.wikipedia.org/wiki/GRASP_(object-oriented_design)#Polymorphism">polymorphism</a>, <a href="https://en.wikipedia.org/wiki/GRASP_(object-oriented_design)#Protected_variations">protected variations</a>, and <a href="https://en.wikipedia.org/wiki/GRASP_(object-oriented_design)#Pure_fabrication">pure fabrication</a>. All these patterns answer some software problems, and these problems are common to almost every software development project. These techniques have not been invented to create new ways of working, but to better document and standardize old, tried-and-tested programming principles in object-oriented design.</p>
<h3 id="Separation-of-Concerns-关注点分离"><a href="#Separation-of-Concerns-关注点分离" class="headerlink" title="Separation of Concerns 关注点分离"></a><a href="https://en.wikipedia.org/wiki/Separation_of_concerns">Separation of Concerns</a> 关注点分离</h3><hr>
<h3 id="Don’t-Repeat-Yourself"><a href="#Don’t-Repeat-Yourself" class="headerlink" title="Don’t Repeat Yourself"></a><a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself">Don’t Repeat Yourself</a></h3><hr>
<h3 id="Inversion-of-Control"><a href="#Inversion-of-Control" class="headerlink" title="Inversion of Control"></a><a href="https://en.wikipedia.org/wiki/Inversion_of_control">Inversion of Control</a></h3><hr>
<p>Inversion of control is sometimes facetiously referred to as the “Hollywood Principle: Don’t call us, we’ll call you”.<br>(The Hollywood Principle: Don’t call us, we’ll call you. 《Head First design patterns - ora 2004》 P334)</p>
<p><a href="https://martinfowler.com/bliki/InversionOfControl.html">Inversion of Control</a> by Martin Fowler</p>
<h3 id="Dependency-Injection"><a href="#Dependency-Injection" class="headerlink" title="Dependency Injection"></a><a href="https://en.wikipedia.org/wiki/Dependency_injection">Dependency Injection</a></h3><hr>
]]></content>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter三棵树</title>
    <url>/posts/507c84ae.html</url>
    <content><![CDATA[<h2 id="Widget树"><a href="#Widget树" class="headerlink" title="Widget树"></a>Widget树</h2><p>先看下Widget的家族：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="494px" preserveAspectRatio="none" style="width:967px;height:494px;background:#FFFFFF;" version="1.1" viewBox="0 0 967 494" width="967px" zoomAndPan="magnify"><defs/><g><!--class Widget--><g id="elem_Widget"><rect codeLine="1" fill="#F1F1F1" height="48" id="Widget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="82" x="588" y="7"/><ellipse cx="603" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M605.0781,24.8125 L605.4688,25.7969 L605.0781,25.7969 C604.625,25.7969 604.5156,25.8125 604.3594,25.9219 C604.1094,26.0781 603.9531,26.3594 603.9531,26.6563 C603.9531,26.9219 604.0938,27.1719 604.3125,27.3281 C604.4531,27.4531 604.6563,27.5 605.0781,27.5 L607.4375,27.5 C607.7969,27.5 608.0156,27.4688 608.1563,27.375 C608.4063,27.2344 608.5625,26.9375 608.5625,26.6563 C608.5625,26.375 608.4219,26.125 608.2031,25.9688 C608.0313,25.8281 607.875,25.7969 607.4063,25.7969 L604.0156,17.5938 L600.3438,17.5938 C599.8906,17.5938 599.7656,17.6094 599.6094,17.7031 C599.3594,17.875 599.2031,18.1563 599.2031,18.4375 C599.2031,18.7188 599.3438,18.9688 599.5625,19.1406 C599.7344,19.25 599.9063,19.2813 600.3438,19.2813 L601.4219,19.2813 L598.7813,25.7969 C598.3594,25.7969 598.2031,25.8125 598.0469,25.9219 C597.7969,26.0781 597.6406,26.3594 597.6406,26.6563 C597.6406,27.2188 598.0156,27.5 598.7656,27.5 L601.0313,27.5 C601.3906,27.5 601.6094,27.4688 601.7344,27.375 C602,27.2344 602.1406,26.9375 602.1406,26.6563 C602.1406,26.375 602.0156,26.125 601.7969,25.9531 C601.625,25.8281 601.4844,25.7969 601.0313,25.7969 L600.6406,25.7969 L601.0313,24.8125 L605.0781,24.8125 Z M604.375,23.1094 L601.7031,23.1094 L603.0469,19.8438 L604.375,23.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="50" x="617" y="27.8467">Widget</text><line style="stroke:#181818;stroke-width:0.5;" x1="589" x2="669" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="589" x2="669" y1="47" y2="47"/></g><!--class RenderObjectWidget--><g id="elem_RenderObjectWidget"><rect codeLine="3" fill="#F1F1F1" height="48" id="RenderObjectWidget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="180" x="257" y="115"/><ellipse cx="272" cy="131" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M274.0781,132.8125 L274.4688,133.7969 L274.0781,133.7969 C273.625,133.7969 273.5156,133.8125 273.3594,133.9219 C273.1094,134.0781 272.9531,134.3594 272.9531,134.6563 C272.9531,134.9219 273.0938,135.1719 273.3125,135.3281 C273.4531,135.4531 273.6563,135.5 274.0781,135.5 L276.4375,135.5 C276.7969,135.5 277.0156,135.4688 277.1563,135.375 C277.4063,135.2344 277.5625,134.9375 277.5625,134.6563 C277.5625,134.375 277.4219,134.125 277.2031,133.9688 C277.0313,133.8281 276.875,133.7969 276.4063,133.7969 L273.0156,125.5938 L269.3438,125.5938 C268.8906,125.5938 268.7656,125.6094 268.6094,125.7031 C268.3594,125.875 268.2031,126.1563 268.2031,126.4375 C268.2031,126.7188 268.3438,126.9688 268.5625,127.1406 C268.7344,127.25 268.9063,127.2813 269.3438,127.2813 L270.4219,127.2813 L267.7813,133.7969 C267.3594,133.7969 267.2031,133.8125 267.0469,133.9219 C266.7969,134.0781 266.6406,134.3594 266.6406,134.6563 C266.6406,135.2188 267.0156,135.5 267.7656,135.5 L270.0313,135.5 C270.3906,135.5 270.6094,135.4688 270.7344,135.375 C271,135.2344 271.1406,134.9375 271.1406,134.6563 C271.1406,134.375 271.0156,134.125 270.7969,133.9531 C270.625,133.8281 270.4844,133.7969 270.0313,133.7969 L269.6406,133.7969 L270.0313,132.8125 L274.0781,132.8125 Z M273.375,131.1094 L270.7031,131.1094 L272.0469,127.8438 L273.375,131.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="148" x="286" y="135.8467">RenderObjectWidget</text><line style="stroke:#181818;stroke-width:0.5;" x1="258" x2="436" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="258" x2="436" y1="155" y2="155"/></g><!--class SingleChildRenderObjectWidget--><g id="elem_SingleChildRenderObjectWidget"><rect codeLine="5" fill="#F1F1F1" height="48" id="SingleChildRenderObjectWidget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="260" x="7" y="223"/><ellipse cx="22" cy="239" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.0781,240.8125 L24.4688,241.7969 L24.0781,241.7969 C23.625,241.7969 23.5156,241.8125 23.3594,241.9219 C23.1094,242.0781 22.9531,242.3594 22.9531,242.6563 C22.9531,242.9219 23.0938,243.1719 23.3125,243.3281 C23.4531,243.4531 23.6563,243.5 24.0781,243.5 L26.4375,243.5 C26.7969,243.5 27.0156,243.4688 27.1563,243.375 C27.4063,243.2344 27.5625,242.9375 27.5625,242.6563 C27.5625,242.375 27.4219,242.125 27.2031,241.9688 C27.0313,241.8281 26.875,241.7969 26.4063,241.7969 L23.0156,233.5938 L19.3438,233.5938 C18.8906,233.5938 18.7656,233.6094 18.6094,233.7031 C18.3594,233.875 18.2031,234.1563 18.2031,234.4375 C18.2031,234.7188 18.3438,234.9688 18.5625,235.1406 C18.7344,235.25 18.9063,235.2813 19.3438,235.2813 L20.4219,235.2813 L17.7813,241.7969 C17.3594,241.7969 17.2031,241.8125 17.0469,241.9219 C16.7969,242.0781 16.6406,242.3594 16.6406,242.6563 C16.6406,243.2188 17.0156,243.5 17.7656,243.5 L20.0313,243.5 C20.3906,243.5 20.6094,243.4688 20.7344,243.375 C21,243.2344 21.1406,242.9375 21.1406,242.6563 C21.1406,242.375 21.0156,242.125 20.7969,241.9531 C20.625,241.8281 20.4844,241.7969 20.0313,241.7969 L19.6406,241.7969 L20.0313,240.8125 L24.0781,240.8125 Z M23.375,239.1094 L20.7031,239.1094 L22.0469,235.8438 L23.375,239.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="228" x="36" y="243.8467">SingleChildRenderObjectWidget</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="266" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="266" y1="263" y2="263"/></g><!--class MultiChildRenderObjectWidget--><g id="elem_MultiChildRenderObjectWidget"><rect codeLine="6" fill="#F1F1F1" height="48" id="MultiChildRenderObjectWidget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="250" x="302" y="223"/><ellipse cx="317" cy="239" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M319.0781,240.8125 L319.4688,241.7969 L319.0781,241.7969 C318.625,241.7969 318.5156,241.8125 318.3594,241.9219 C318.1094,242.0781 317.9531,242.3594 317.9531,242.6563 C317.9531,242.9219 318.0938,243.1719 318.3125,243.3281 C318.4531,243.4531 318.6563,243.5 319.0781,243.5 L321.4375,243.5 C321.7969,243.5 322.0156,243.4688 322.1563,243.375 C322.4063,243.2344 322.5625,242.9375 322.5625,242.6563 C322.5625,242.375 322.4219,242.125 322.2031,241.9688 C322.0313,241.8281 321.875,241.7969 321.4063,241.7969 L318.0156,233.5938 L314.3438,233.5938 C313.8906,233.5938 313.7656,233.6094 313.6094,233.7031 C313.3594,233.875 313.2031,234.1563 313.2031,234.4375 C313.2031,234.7188 313.3438,234.9688 313.5625,235.1406 C313.7344,235.25 313.9063,235.2813 314.3438,235.2813 L315.4219,235.2813 L312.7813,241.7969 C312.3594,241.7969 312.2031,241.8125 312.0469,241.9219 C311.7969,242.0781 311.6406,242.3594 311.6406,242.6563 C311.6406,243.2188 312.0156,243.5 312.7656,243.5 L315.0313,243.5 C315.3906,243.5 315.6094,243.4688 315.7344,243.375 C316,243.2344 316.1406,242.9375 316.1406,242.6563 C316.1406,242.375 316.0156,242.125 315.7969,241.9531 C315.625,241.8281 315.4844,241.7969 315.0313,241.7969 L314.6406,241.7969 L315.0313,240.8125 L319.0781,240.8125 Z M318.375,239.1094 L315.7031,239.1094 L317.0469,235.8438 L318.375,239.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="218" x="331" y="243.8467">MultiChildRenderObjectWidget</text><line style="stroke:#181818;stroke-width:0.5;" x1="303" x2="551" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="303" x2="551" y1="263" y2="263"/></g><!--class Flex--><g id="elem_Flex"><rect fill="#F1F1F1" height="48" id="Flex" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="61" x="396.5" y="331"/><ellipse cx="411.5" cy="347" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M413.8438,342.6719 C412.9063,342.2344 412.3125,342.0938 411.4375,342.0938 C408.8125,342.0938 406.8125,344.1719 406.8125,346.8906 L406.8125,348.0156 C406.8125,350.5938 408.9219,352.4844 411.8125,352.4844 C413.0313,352.4844 414.1875,352.1875 414.9375,351.6406 C415.5156,351.2344 415.8438,350.7813 415.8438,350.3906 C415.8438,349.9375 415.4531,349.5469 414.9844,349.5469 C414.7656,349.5469 414.5625,349.625 414.375,349.8125 C413.9219,350.2969 413.9219,350.2969 413.7344,350.3906 C413.3125,350.6563 412.625,350.7813 411.8594,350.7813 C409.8125,350.7813 408.5156,349.6875 408.5156,347.9844 L408.5156,346.8906 C408.5156,345.1094 409.7656,343.7969 411.5,343.7969 C412.0781,343.7969 412.6875,343.9531 413.1563,344.2031 C413.6406,344.4844 413.8125,344.7031 413.9063,345.1094 C413.9688,345.5156 414,345.6406 414.1406,345.7656 C414.2813,345.9063 414.5156,346.0156 414.7344,346.0156 C415,346.0156 415.2656,345.875 415.4375,345.6563 C415.5469,345.5 415.5781,345.3125 415.5781,344.8906 L415.5781,343.4688 C415.5781,343.0313 415.5625,342.9063 415.4688,342.75 C415.3125,342.4844 415.0313,342.3438 414.7344,342.3438 C414.4375,342.3438 414.2344,342.4375 414.0156,342.75 L413.8438,342.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="29" x="425.5" y="351.8467">Flex</text><line style="stroke:#181818;stroke-width:0.5;" x1="397.5" x2="456.5" y1="363" y2="363"/><line style="stroke:#181818;stroke-width:0.5;" x1="397.5" x2="456.5" y1="371" y2="371"/></g><!--class Column--><g id="elem_Column"><rect fill="#F1F1F1" height="48" id="Column" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="86" x="330" y="439"/><ellipse cx="345" cy="455" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M347.3438,450.6719 C346.4063,450.2344 345.8125,450.0938 344.9375,450.0938 C342.3125,450.0938 340.3125,452.1719 340.3125,454.8906 L340.3125,456.0156 C340.3125,458.5938 342.4219,460.4844 345.3125,460.4844 C346.5313,460.4844 347.6875,460.1875 348.4375,459.6406 C349.0156,459.2344 349.3438,458.7813 349.3438,458.3906 C349.3438,457.9375 348.9531,457.5469 348.4844,457.5469 C348.2656,457.5469 348.0625,457.625 347.875,457.8125 C347.4219,458.2969 347.4219,458.2969 347.2344,458.3906 C346.8125,458.6563 346.125,458.7813 345.3594,458.7813 C343.3125,458.7813 342.0156,457.6875 342.0156,455.9844 L342.0156,454.8906 C342.0156,453.1094 343.2656,451.7969 345,451.7969 C345.5781,451.7969 346.1875,451.9531 346.6563,452.2031 C347.1406,452.4844 347.3125,452.7031 347.4063,453.1094 C347.4688,453.5156 347.5,453.6406 347.6406,453.7656 C347.7813,453.9063 348.0156,454.0156 348.2344,454.0156 C348.5,454.0156 348.7656,453.875 348.9375,453.6563 C349.0469,453.5 349.0781,453.3125 349.0781,452.8906 L349.0781,451.4688 C349.0781,451.0313 349.0625,450.9063 348.9688,450.75 C348.8125,450.4844 348.5313,450.3438 348.2344,450.3438 C347.9375,450.3438 347.7344,450.4375 347.5156,450.75 L347.3438,450.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="54" x="359" y="459.8467">Column</text><line style="stroke:#181818;stroke-width:0.5;" x1="331" x2="415" y1="471" y2="471"/><line style="stroke:#181818;stroke-width:0.5;" x1="331" x2="415" y1="479" y2="479"/></g><!--class Row--><g id="elem_Row"><rect fill="#F1F1F1" height="48" id="Row" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="62" x="451" y="439"/><ellipse cx="466" cy="455" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M468.3438,450.6719 C467.4063,450.2344 466.8125,450.0938 465.9375,450.0938 C463.3125,450.0938 461.3125,452.1719 461.3125,454.8906 L461.3125,456.0156 C461.3125,458.5938 463.4219,460.4844 466.3125,460.4844 C467.5313,460.4844 468.6875,460.1875 469.4375,459.6406 C470.0156,459.2344 470.3438,458.7813 470.3438,458.3906 C470.3438,457.9375 469.9531,457.5469 469.4844,457.5469 C469.2656,457.5469 469.0625,457.625 468.875,457.8125 C468.4219,458.2969 468.4219,458.2969 468.2344,458.3906 C467.8125,458.6563 467.125,458.7813 466.3594,458.7813 C464.3125,458.7813 463.0156,457.6875 463.0156,455.9844 L463.0156,454.8906 C463.0156,453.1094 464.2656,451.7969 466,451.7969 C466.5781,451.7969 467.1875,451.9531 467.6563,452.2031 C468.1406,452.4844 468.3125,452.7031 468.4063,453.1094 C468.4688,453.5156 468.5,453.6406 468.6406,453.7656 C468.7813,453.9063 469.0156,454.0156 469.2344,454.0156 C469.5,454.0156 469.7656,453.875 469.9375,453.6563 C470.0469,453.5 470.0781,453.3125 470.0781,452.8906 L470.0781,451.4688 C470.0781,451.0313 470.0625,450.9063 469.9688,450.75 C469.8125,450.4844 469.5313,450.3438 469.2344,450.3438 C468.9375,450.3438 468.7344,450.4375 468.5156,450.75 L468.3438,450.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="30" x="480" y="459.8467">Row</text><line style="stroke:#181818;stroke-width:0.5;" x1="452" x2="512" y1="471" y2="471"/><line style="stroke:#181818;stroke-width:0.5;" x1="452" x2="512" y1="479" y2="479"/></g><!--class StatefulWidget--><g id="elem_StatefulWidget"><rect codeLine="13" fill="#F1F1F1" height="48" id="StatefulWidget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="137" x="472.5" y="115"/><ellipse cx="487.5" cy="131" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M489.5781,132.8125 L489.9688,133.7969 L489.5781,133.7969 C489.125,133.7969 489.0156,133.8125 488.8594,133.9219 C488.6094,134.0781 488.4531,134.3594 488.4531,134.6563 C488.4531,134.9219 488.5938,135.1719 488.8125,135.3281 C488.9531,135.4531 489.1563,135.5 489.5781,135.5 L491.9375,135.5 C492.2969,135.5 492.5156,135.4688 492.6563,135.375 C492.9063,135.2344 493.0625,134.9375 493.0625,134.6563 C493.0625,134.375 492.9219,134.125 492.7031,133.9688 C492.5313,133.8281 492.375,133.7969 491.9063,133.7969 L488.5156,125.5938 L484.8438,125.5938 C484.3906,125.5938 484.2656,125.6094 484.1094,125.7031 C483.8594,125.875 483.7031,126.1563 483.7031,126.4375 C483.7031,126.7188 483.8438,126.9688 484.0625,127.1406 C484.2344,127.25 484.4063,127.2813 484.8438,127.2813 L485.9219,127.2813 L483.2813,133.7969 C482.8594,133.7969 482.7031,133.8125 482.5469,133.9219 C482.2969,134.0781 482.1406,134.3594 482.1406,134.6563 C482.1406,135.2188 482.5156,135.5 483.2656,135.5 L485.5313,135.5 C485.8906,135.5 486.1094,135.4688 486.2344,135.375 C486.5,135.2344 486.6406,134.9375 486.6406,134.6563 C486.6406,134.375 486.5156,134.125 486.2969,133.9531 C486.125,133.8281 485.9844,133.7969 485.5313,133.7969 L485.1406,133.7969 L485.5313,132.8125 L489.5781,132.8125 Z M488.875,131.1094 L486.2031,131.1094 L487.5469,127.8438 L488.875,131.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="105" x="501.5" y="135.8467">StatefulWidget</text><line style="stroke:#181818;stroke-width:0.5;" x1="473.5" x2="608.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="473.5" x2="608.5" y1="155" y2="155"/></g><!--class StatelessWidget--><g id="elem_StatelessWidget"><rect codeLine="14" fill="#F1F1F1" height="48" id="StatelessWidget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="645" y="115"/><ellipse cx="660" cy="131" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M662.0781,132.8125 L662.4688,133.7969 L662.0781,133.7969 C661.625,133.7969 661.5156,133.8125 661.3594,133.9219 C661.1094,134.0781 660.9531,134.3594 660.9531,134.6563 C660.9531,134.9219 661.0938,135.1719 661.3125,135.3281 C661.4531,135.4531 661.6563,135.5 662.0781,135.5 L664.4375,135.5 C664.7969,135.5 665.0156,135.4688 665.1563,135.375 C665.4063,135.2344 665.5625,134.9375 665.5625,134.6563 C665.5625,134.375 665.4219,134.125 665.2031,133.9688 C665.0313,133.8281 664.875,133.7969 664.4063,133.7969 L661.0156,125.5938 L657.3438,125.5938 C656.8906,125.5938 656.7656,125.6094 656.6094,125.7031 C656.3594,125.875 656.2031,126.1563 656.2031,126.4375 C656.2031,126.7188 656.3438,126.9688 656.5625,127.1406 C656.7344,127.25 656.9063,127.2813 657.3438,127.2813 L658.4219,127.2813 L655.7813,133.7969 C655.3594,133.7969 655.2031,133.8125 655.0469,133.9219 C654.7969,134.0781 654.6406,134.3594 654.6406,134.6563 C654.6406,135.2188 655.0156,135.5 655.7656,135.5 L658.0313,135.5 C658.3906,135.5 658.6094,135.4688 658.7344,135.375 C659,135.2344 659.1406,134.9375 659.1406,134.6563 C659.1406,134.375 659.0156,134.125 658.7969,133.9531 C658.625,133.8281 658.4844,133.7969 658.0313,133.7969 L657.6406,133.7969 L658.0313,132.8125 L662.0781,132.8125 Z M661.375,131.1094 L658.7031,131.1094 L660.0469,127.8438 L661.375,131.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="114" x="674" y="135.8467">StatelessWidget</text><line style="stroke:#181818;stroke-width:0.5;" x1="646" x2="790" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="646" x2="790" y1="155" y2="155"/></g><!--class InheritedWidget--><g id="elem_InheritedWidget"><rect codeLine="15" fill="#F1F1F1" height="48" id="InheritedWidget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="814" y="223"/><ellipse cx="829" cy="239" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M831.0781,240.8125 L831.4688,241.7969 L831.0781,241.7969 C830.625,241.7969 830.5156,241.8125 830.3594,241.9219 C830.1094,242.0781 829.9531,242.3594 829.9531,242.6563 C829.9531,242.9219 830.0938,243.1719 830.3125,243.3281 C830.4531,243.4531 830.6563,243.5 831.0781,243.5 L833.4375,243.5 C833.7969,243.5 834.0156,243.4688 834.1563,243.375 C834.4063,243.2344 834.5625,242.9375 834.5625,242.6563 C834.5625,242.375 834.4219,242.125 834.2031,241.9688 C834.0313,241.8281 833.875,241.7969 833.4063,241.7969 L830.0156,233.5938 L826.3438,233.5938 C825.8906,233.5938 825.7656,233.6094 825.6094,233.7031 C825.3594,233.875 825.2031,234.1563 825.2031,234.4375 C825.2031,234.7188 825.3438,234.9688 825.5625,235.1406 C825.7344,235.25 825.9063,235.2813 826.3438,235.2813 L827.4219,235.2813 L824.7813,241.7969 C824.3594,241.7969 824.2031,241.8125 824.0469,241.9219 C823.7969,242.0781 823.6406,242.3594 823.6406,242.6563 C823.6406,243.2188 824.0156,243.5 824.7656,243.5 L827.0313,243.5 C827.3906,243.5 827.6094,243.4688 827.7344,243.375 C828,243.2344 828.1406,242.9375 828.1406,242.6563 C828.1406,242.375 828.0156,242.125 827.7969,241.9531 C827.625,241.8281 827.4844,241.7969 827.0313,241.7969 L826.6406,241.7969 L827.0313,240.8125 L831.0781,240.8125 Z M830.375,239.1094 L827.7031,239.1094 L829.0469,235.8438 L830.375,239.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="114" x="843" y="243.8467">InheritedWidget</text><line style="stroke:#181818;stroke-width:0.5;" x1="815" x2="959" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="815" x2="959" y1="263" y2="263"/></g><!--class ProxyWidget--><g id="elem_ProxyWidget"><rect codeLine="16" fill="#F1F1F1" height="48" id="ProxyWidget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="826.5" y="115"/><ellipse cx="841.5" cy="131" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M843.5781,132.8125 L843.9688,133.7969 L843.5781,133.7969 C843.125,133.7969 843.0156,133.8125 842.8594,133.9219 C842.6094,134.0781 842.4531,134.3594 842.4531,134.6563 C842.4531,134.9219 842.5938,135.1719 842.8125,135.3281 C842.9531,135.4531 843.1563,135.5 843.5781,135.5 L845.9375,135.5 C846.2969,135.5 846.5156,135.4688 846.6563,135.375 C846.9063,135.2344 847.0625,134.9375 847.0625,134.6563 C847.0625,134.375 846.9219,134.125 846.7031,133.9688 C846.5313,133.8281 846.375,133.7969 845.9063,133.7969 L842.5156,125.5938 L838.8438,125.5938 C838.3906,125.5938 838.2656,125.6094 838.1094,125.7031 C837.8594,125.875 837.7031,126.1563 837.7031,126.4375 C837.7031,126.7188 837.8438,126.9688 838.0625,127.1406 C838.2344,127.25 838.4063,127.2813 838.8438,127.2813 L839.9219,127.2813 L837.2813,133.7969 C836.8594,133.7969 836.7031,133.8125 836.5469,133.9219 C836.2969,134.0781 836.1406,134.3594 836.1406,134.6563 C836.1406,135.2188 836.5156,135.5 837.2656,135.5 L839.5313,135.5 C839.8906,135.5 840.1094,135.4688 840.2344,135.375 C840.5,135.2344 840.6406,134.9375 840.6406,134.6563 C840.6406,134.375 840.5156,134.125 840.2969,133.9531 C840.125,133.8281 839.9844,133.7969 839.5313,133.7969 L839.1406,133.7969 L839.5313,132.8125 L843.5781,132.8125 Z M842.875,131.1094 L840.2031,131.1094 L841.5469,127.8438 L842.875,131.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="89" x="855.5" y="135.8467">ProxyWidget</text><line style="stroke:#181818;stroke-width:0.5;" x1="827.5" x2="946.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="827.5" x2="946.5" y1="155" y2="155"/></g><!--class Container--><g id="elem_Container"><rect fill="#F1F1F1" height="48" id="Container" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="103" x="666.5" y="223"/><ellipse cx="681.5" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M683.8438,234.6719 C682.9063,234.2344 682.3125,234.0938 681.4375,234.0938 C678.8125,234.0938 676.8125,236.1719 676.8125,238.8906 L676.8125,240.0156 C676.8125,242.5938 678.9219,244.4844 681.8125,244.4844 C683.0313,244.4844 684.1875,244.1875 684.9375,243.6406 C685.5156,243.2344 685.8438,242.7813 685.8438,242.3906 C685.8438,241.9375 685.4531,241.5469 684.9844,241.5469 C684.7656,241.5469 684.5625,241.625 684.375,241.8125 C683.9219,242.2969 683.9219,242.2969 683.7344,242.3906 C683.3125,242.6563 682.625,242.7813 681.8594,242.7813 C679.8125,242.7813 678.5156,241.6875 678.5156,239.9844 L678.5156,238.8906 C678.5156,237.1094 679.7656,235.7969 681.5,235.7969 C682.0781,235.7969 682.6875,235.9531 683.1563,236.2031 C683.6406,236.4844 683.8125,236.7031 683.9063,237.1094 C683.9688,237.5156 684,237.6406 684.1406,237.7656 C684.2813,237.9063 684.5156,238.0156 684.7344,238.0156 C685,238.0156 685.2656,237.875 685.4375,237.6563 C685.5469,237.5 685.5781,237.3125 685.5781,236.8906 L685.5781,235.4688 C685.5781,235.0313 685.5625,234.9063 685.4688,234.75 C685.3125,234.4844 685.0313,234.3438 684.7344,234.3438 C684.4375,234.3438 684.2344,234.4375 684.0156,234.75 L683.8438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="695.5" y="243.8467">Container</text><line style="stroke:#181818;stroke-width:0.5;" x1="667.5" x2="768.5" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="667.5" x2="768.5" y1="263" y2="263"/></g><!--reverse link Widget to RenderObjectWidget--><g id="link_Widget_RenderObjectWidget"><path codeLine="4" d="M571.146,53.7464 C523.944,71.4894 462.787,94.477 408.351,114.939 " fill="none" id="Widget-backto-RenderObjectWidget" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="587.995,47.413,569.0349,48.1301,573.2572,59.3628,587.995,47.413" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RenderObjectWidget to SingleChildRenderObjectWidget--><g id="link_RenderObjectWidget_SingleChildRenderObjectWidget"><path codeLine="7" d="M285.3641,171.1111 C250.2611,188.8301 218.012,205.108 182.84,222.862 " fill="none" id="RenderObjectWidget-backto-SingleChildRenderObjectWidget" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="301.433,163,282.6604,165.7548,288.0678,176.4674,301.433,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RenderObjectWidget to MultiChildRenderObjectWidget--><g id="link_RenderObjectWidget_MultiChildRenderObjectWidget"><path codeLine="8" d="M375.2024,177.3673 C388.5294,195.0253 396.012,204.941 409.399,222.678 " fill="none" id="RenderObjectWidget-backto-MultiChildRenderObjectWidget" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="364.359,163,370.4133,180.9818,379.9915,173.7528,364.359,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link MultiChildRenderObjectWidget to Flex--><g id="link_MultiChildRenderObjectWidget_Flex"><path codeLine="9" d="M427,289 C427,306.658 427,312.941 427,330.678 " fill="none" id="MultiChildRenderObjectWidget-backto-Flex" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="427,271,421,289,433,289,427,271" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Flex to Column--><g id="link_Flex_Column"><path codeLine="10" d="M407.1122,395.0386 C398.1162,412.697 393.917,420.9408 384.881,438.6784 " fill="none" id="Flex-backto-Column" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="415.283,379,401.766,392.315,412.4584,397.7622,415.283,379" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Flex to Row--><g id="link_Flex_Row"><path codeLine="11" d="M447.2238,394.9774 C456.3858,412.6358 460.696,420.9408 469.899,438.6784 " fill="none" id="Flex-backto-Row" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="438.934,379,441.898,397.7407,452.5497,392.2142,438.934,379" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Widget to StatelessWidget--><g id="link_Widget_StatelessWidget"><path codeLine="17" d="M659.8864,68.7853 C674.7124,86.4433 683.526,96.941 698.419,114.678 " fill="none" id="Widget-backto-StatelessWidget" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="648.312,55,655.2913,72.6434,664.4815,64.9271,648.312,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Widget to StatefulWidget--><g id="link_Widget_StatefulWidget"><path codeLine="18" d="M598.4076,68.8496 C583.7486,86.5076 575.087,96.941 560.361,114.678 " fill="none" id="Widget-backto-StatefulWidget" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="609.905,55,593.7911,65.0171,603.0241,72.682,609.905,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Widget to ProxyWidget--><g id="link_Widget_ProxyWidget"><path codeLine="19" d="M686.8155,55.7537 C730.2065,73.5817 782.198,94.942 830.608,114.831 " fill="none" id="Widget-backto-ProxyWidget" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="670.166,48.913,684.5352,61.3036,689.0957,50.2039,670.166,48.913" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ProxyWidget to InheritedWidget--><g id="link_ProxyWidget_InheritedWidget"><path codeLine="20" d="M887,181 C887,198.658 887,204.941 887,222.678 " fill="none" id="ProxyWidget-backto-InheritedWidget" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="887,163,881,181,893,181,887,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link StatelessWidget to Container--><g id="link_StatelessWidget_Container"><path codeLine="22" d="M718,181 C718,198.658 718,204.941 718,222.678 " fill="none" id="StatelessWidget-backto-Container" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="718,163,712,181,724,181,718,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[XP713i8W38RlFCLUO6_WROc91wFP3fxPg1kcGW8bcuaFRnOq8Z2y0EtNzcz-U6_9y86g0RcrrKMA4OWn_fjkGGamf_u60xrB_5NjddMTmz60JgeHePaaYl_5HuSajshJbD-XhB3LLPGgGT- -HrZOUlYmqUZkAaYqUawyx8WJN1rk6BLI16lp-A0cC990vF7PwEMH-Q1uQiA- -uGe71UyFOnNOP78nn95N2emBm00]--></g></svg>

<h3 id="StatelessWidget"><a href="#StatelessWidget" class="headerlink" title="StatelessWidget"></a>StatelessWidget</h3><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="310px" preserveAspectRatio="none" style="width:477px;height:310px;background:#FFFFFF;" version="1.1" viewBox="0 0 477 310" width="477px" zoomAndPan="magnify"><defs/><g><!--class StatelessWidget--><g id="elem_StatelessWidget"><rect codeLine="1" fill="#F1F1F1" height="80.5938" id="StatelessWidget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="268" x="7" y="223"/><ellipse cx="79.75" cy="239" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M81.8281,240.8125 L82.2188,241.7969 L81.8281,241.7969 C81.375,241.7969 81.2656,241.8125 81.1094,241.9219 C80.8594,242.0781 80.7031,242.3594 80.7031,242.6563 C80.7031,242.9219 80.8438,243.1719 81.0625,243.3281 C81.2031,243.4531 81.4063,243.5 81.8281,243.5 L84.1875,243.5 C84.5469,243.5 84.7656,243.4688 84.9063,243.375 C85.1563,243.2344 85.3125,242.9375 85.3125,242.6563 C85.3125,242.375 85.1719,242.125 84.9531,241.9688 C84.7813,241.8281 84.625,241.7969 84.1563,241.7969 L80.7656,233.5938 L77.0938,233.5938 C76.6406,233.5938 76.5156,233.6094 76.3594,233.7031 C76.1094,233.875 75.9531,234.1563 75.9531,234.4375 C75.9531,234.7188 76.0938,234.9688 76.3125,235.1406 C76.4844,235.25 76.6563,235.2813 77.0938,235.2813 L78.1719,235.2813 L75.5313,241.7969 C75.1094,241.7969 74.9531,241.8125 74.7969,241.9219 C74.5469,242.0781 74.3906,242.3594 74.3906,242.6563 C74.3906,243.2188 74.7656,243.5 75.5156,243.5 L77.7813,243.5 C78.1406,243.5 78.3594,243.4688 78.4844,243.375 C78.75,243.2344 78.8906,242.9375 78.8906,242.6563 C78.8906,242.375 78.7656,242.125 78.5469,241.9531 C78.375,241.8281 78.2344,241.7969 77.7813,241.7969 L77.3906,241.7969 L77.7813,240.8125 L81.8281,240.8125 Z M81.125,239.1094 L78.4531,239.1094 L79.7969,235.8438 L81.125,239.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="114" x="100.25" y="243.8467">StatelessWidget</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="274" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="274" y1="263" y2="263"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250" x="13" y="279.9951">StatelessElement createElement()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="256" x="13" y="296.292">Widget build(BuildContext context)</text></g><!--class Element--><g id="elem_Element"><rect codeLine="5" fill="#F1F1F1" height="48" id="Element" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="91" x="219.5" y="7"/><ellipse cx="234.5" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M236.5781,24.8125 L236.9688,25.7969 L236.5781,25.7969 C236.125,25.7969 236.0156,25.8125 235.8594,25.9219 C235.6094,26.0781 235.4531,26.3594 235.4531,26.6563 C235.4531,26.9219 235.5938,27.1719 235.8125,27.3281 C235.9531,27.4531 236.1563,27.5 236.5781,27.5 L238.9375,27.5 C239.2969,27.5 239.5156,27.4688 239.6563,27.375 C239.9063,27.2344 240.0625,26.9375 240.0625,26.6563 C240.0625,26.375 239.9219,26.125 239.7031,25.9688 C239.5313,25.8281 239.375,25.7969 238.9063,25.7969 L235.5156,17.5938 L231.8438,17.5938 C231.3906,17.5938 231.2656,17.6094 231.1094,17.7031 C230.8594,17.875 230.7031,18.1563 230.7031,18.4375 C230.7031,18.7188 230.8438,18.9688 231.0625,19.1406 C231.2344,19.25 231.4063,19.2813 231.8438,19.2813 L232.9219,19.2813 L230.2813,25.7969 C229.8594,25.7969 229.7031,25.8125 229.5469,25.9219 C229.2969,26.0781 229.1406,26.3594 229.1406,26.6563 C229.1406,27.2188 229.5156,27.5 230.2656,27.5 L232.5313,27.5 C232.8906,27.5 233.1094,27.4688 233.2344,27.375 C233.5,27.2344 233.6406,26.9375 233.6406,26.6563 C233.6406,26.375 233.5156,26.125 233.2969,25.9531 C233.125,25.8281 232.9844,25.7969 232.5313,25.7969 L232.1406,25.7969 L232.5313,24.8125 L236.5781,24.8125 Z M235.875,23.1094 L233.2031,23.1094 L234.5469,19.8438 L235.875,23.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="59" x="248.5" y="27.8467">Element</text><line style="stroke:#181818;stroke-width:0.5;" x1="220.5" x2="309.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="220.5" x2="309.5" y1="47" y2="47"/></g><!--class ComponentElement--><g id="elem_ComponentElement"><rect codeLine="8" fill="#F1F1F1" height="48" id="ComponentElement" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="174" x="281" y="115"/><ellipse cx="296" cy="131" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M298.0781,132.8125 L298.4688,133.7969 L298.0781,133.7969 C297.625,133.7969 297.5156,133.8125 297.3594,133.9219 C297.1094,134.0781 296.9531,134.3594 296.9531,134.6563 C296.9531,134.9219 297.0938,135.1719 297.3125,135.3281 C297.4531,135.4531 297.6563,135.5 298.0781,135.5 L300.4375,135.5 C300.7969,135.5 301.0156,135.4688 301.1563,135.375 C301.4063,135.2344 301.5625,134.9375 301.5625,134.6563 C301.5625,134.375 301.4219,134.125 301.2031,133.9688 C301.0313,133.8281 300.875,133.7969 300.4063,133.7969 L297.0156,125.5938 L293.3438,125.5938 C292.8906,125.5938 292.7656,125.6094 292.6094,125.7031 C292.3594,125.875 292.2031,126.1563 292.2031,126.4375 C292.2031,126.7188 292.3438,126.9688 292.5625,127.1406 C292.7344,127.25 292.9063,127.2813 293.3438,127.2813 L294.4219,127.2813 L291.7813,133.7969 C291.3594,133.7969 291.2031,133.8125 291.0469,133.9219 C290.7969,134.0781 290.6406,134.3594 290.6406,134.6563 C290.6406,135.2188 291.0156,135.5 291.7656,135.5 L294.0313,135.5 C294.3906,135.5 294.6094,135.4688 294.7344,135.375 C295,135.2344 295.1406,134.9375 295.1406,134.6563 C295.1406,134.375 295.0156,134.125 294.7969,133.9531 C294.625,133.8281 294.4844,133.7969 294.0313,133.7969 L293.6406,133.7969 L294.0313,132.8125 L298.0781,132.8125 Z M297.375,131.1094 L294.7031,131.1094 L296.0469,127.8438 L297.375,131.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="142" x="310" y="135.8467">ComponentElement</text><line style="stroke:#181818;stroke-width:0.5;" x1="282" x2="454" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="282" x2="454" y1="155" y2="155"/></g><!--class Widget--><g id="elem_Widget"><rect fill="#F1F1F1" height="48" id="Widget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="84" x="120" y="115"/><ellipse cx="135" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M137.3438,126.6719 C136.4063,126.2344 135.8125,126.0938 134.9375,126.0938 C132.3125,126.0938 130.3125,128.1719 130.3125,130.8906 L130.3125,132.0156 C130.3125,134.5938 132.4219,136.4844 135.3125,136.4844 C136.5313,136.4844 137.6875,136.1875 138.4375,135.6406 C139.0156,135.2344 139.3438,134.7813 139.3438,134.3906 C139.3438,133.9375 138.9531,133.5469 138.4844,133.5469 C138.2656,133.5469 138.0625,133.625 137.875,133.8125 C137.4219,134.2969 137.4219,134.2969 137.2344,134.3906 C136.8125,134.6563 136.125,134.7813 135.3594,134.7813 C133.3125,134.7813 132.0156,133.6875 132.0156,131.9844 L132.0156,130.8906 C132.0156,129.1094 133.2656,127.7969 135,127.7969 C135.5781,127.7969 136.1875,127.9531 136.6563,128.2031 C137.1406,128.4844 137.3125,128.7031 137.4063,129.1094 C137.4688,129.5156 137.5,129.6406 137.6406,129.7656 C137.7813,129.9063 138.0156,130.0156 138.2344,130.0156 C138.5,130.0156 138.7656,129.875 138.9375,129.6563 C139.0469,129.5 139.0781,129.3125 139.0781,128.8906 L139.0781,127.4688 C139.0781,127.0313 139.0625,126.9063 138.9688,126.75 C138.8125,126.4844 138.5313,126.3438 138.2344,126.3438 C137.9375,126.3438 137.7344,126.4375 137.5156,126.75 L137.3438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="149" y="135.8467">Widget</text><line style="stroke:#181818;stroke-width:0.5;" x1="121" x2="203" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="121" x2="203" y1="155" y2="155"/></g><!--class StatelessElement--><g id="elem_StatelessElement"><rect fill="#F1F1F1" height="48" id="StatelessElement" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="160" x="310" y="239.5"/><ellipse cx="325" cy="255.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M327.3438,251.1719 C326.4063,250.7344 325.8125,250.5938 324.9375,250.5938 C322.3125,250.5938 320.3125,252.6719 320.3125,255.3906 L320.3125,256.5156 C320.3125,259.0938 322.4219,260.9844 325.3125,260.9844 C326.5313,260.9844 327.6875,260.6875 328.4375,260.1406 C329.0156,259.7344 329.3438,259.2813 329.3438,258.8906 C329.3438,258.4375 328.9531,258.0469 328.4844,258.0469 C328.2656,258.0469 328.0625,258.125 327.875,258.3125 C327.4219,258.7969 327.4219,258.7969 327.2344,258.8906 C326.8125,259.1563 326.125,259.2813 325.3594,259.2813 C323.3125,259.2813 322.0156,258.1875 322.0156,256.4844 L322.0156,255.3906 C322.0156,253.6094 323.2656,252.2969 325,252.2969 C325.5781,252.2969 326.1875,252.4531 326.6563,252.7031 C327.1406,252.9844 327.3125,253.2031 327.4063,253.6094 C327.4688,254.0156 327.5,254.1406 327.6406,254.2656 C327.7813,254.4063 328.0156,254.5156 328.2344,254.5156 C328.5,254.5156 328.7656,254.375 328.9375,254.1563 C329.0469,254 329.0781,253.8125 329.0781,253.3906 L329.0781,251.9688 C329.0781,251.5313 329.0625,251.4063 328.9688,251.25 C328.8125,250.9844 328.5313,250.8438 328.2344,250.8438 C327.9375,250.8438 327.7344,250.9375 327.5156,251.25 L327.3438,251.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="339" y="260.3467">StatelessElement</text><line style="stroke:#181818;stroke-width:0.5;" x1="311" x2="469" y1="271.5" y2="271.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="311" x2="469" y1="279.5" y2="279.5"/></g><!--reverse link Widget to StatelessWidget--><g id="link_Widget_StatelessWidget"><path codeLine="10" d="M155.009,180.7823 C152.134,197.5553 151.209,202.95 147.825,222.6881 " fill="none" id="Widget-backto-StatelessWidget" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="158.05,163.041,149.0953,179.7686,160.9228,181.7959,158.05,163.041" style="stroke:#181818;stroke-width:1.0;"/></g><!--link StatelessWidget to StatelessElement--><g id="link_StatelessWidget_StatelessElement"><path codeLine="11" d="M275.227,263.5 C286.734,263.5 292.241,263.5 303.748,263.5 " fill="none" id="StatelessWidget-to-StatelessElement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="309.748,263.5,300.748,259.5,304.748,263.5,300.748,267.5,309.748,263.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ComponentElement to StatelessElement--><g id="link_ComponentElement_StatelessElement"><path codeLine="12" d="M375.3194,180.7576 C379.2274,202.5206 381.879,217.281 385.806,239.1455 " fill="none" id="ComponentElement-backto-StatelessElement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="372.138,163.041,369.4138,181.8181,381.2249,179.6972,372.138,163.041" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Element to ComponentElement--><g id="link_Element_ComponentElement"><path codeLine="13" d="M299.8932,67.909 C317.0522,85.567 328.103,96.941 345.338,114.678 " fill="none" id="Element-backto-ComponentElement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="287.349,55,295.5902,72.0904,304.1962,63.7276,287.349,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Element to Widget--><g id="link_Element_Widget"><path codeLine="14" d="M234.2882,63.606 C217.1292,81.264 201.897,96.941 184.662,114.678 " fill="none" id="Element-backto-Widget" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="242.651,55,235.6009,56.5154,234.2882,63.606,241.3383,62.0906,242.651,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[IqmgBYbAJ2vH22v9B4dDIIqk3izCIKyjKQZcKW02kAXhJcfkQbw9Gd9HAb04ojFG12k2waWgpSn9qN02aSxvUIMf5K3L45gJgvOh4MOHpAHgBcHHv_pSWlmye3XKceiBQgfDZQukkkEuq1shQuVXKYvq4z5CWYb3aSLm1KnM2oW9iGi0]--></g></svg>

<h3 id="StatefulWidget"><a href="#StatefulWidget" class="headerlink" title="StatefulWidget"></a>StatefulWidget</h3><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="454px" preserveAspectRatio="none" style="width:462px;height:454px;background:#FFFFFF;" version="1.1" viewBox="0 0 462 454" width="462px" zoomAndPan="magnify"><defs/><g><!--class Widget--><g id="elem_Widget"><rect codeLine="1" fill="#F1F1F1" height="64.2969" id="Widget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="195" x="228" y="116"/><ellipse cx="296.25" cy="132" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M298.3281,133.8125 L298.7188,134.7969 L298.3281,134.7969 C297.875,134.7969 297.7656,134.8125 297.6094,134.9219 C297.3594,135.0781 297.2031,135.3594 297.2031,135.6563 C297.2031,135.9219 297.3438,136.1719 297.5625,136.3281 C297.7031,136.4531 297.9063,136.5 298.3281,136.5 L300.6875,136.5 C301.0469,136.5 301.2656,136.4688 301.4063,136.375 C301.6563,136.2344 301.8125,135.9375 301.8125,135.6563 C301.8125,135.375 301.6719,135.125 301.4531,134.9688 C301.2813,134.8281 301.125,134.7969 300.6563,134.7969 L297.2656,126.5938 L293.5938,126.5938 C293.1406,126.5938 293.0156,126.6094 292.8594,126.7031 C292.6094,126.875 292.4531,127.1563 292.4531,127.4375 C292.4531,127.7188 292.5938,127.9688 292.8125,128.1406 C292.9844,128.25 293.1563,128.2813 293.5938,128.2813 L294.6719,128.2813 L292.0313,134.7969 C291.6094,134.7969 291.4531,134.8125 291.2969,134.9219 C291.0469,135.0781 290.8906,135.3594 290.8906,135.6563 C290.8906,136.2188 291.2656,136.5 292.0156,136.5 L294.2813,136.5 C294.6406,136.5 294.8594,136.4688 294.9844,136.375 C295.25,136.2344 295.3906,135.9375 295.3906,135.6563 C295.3906,135.375 295.2656,135.125 295.0469,134.9531 C294.875,134.8281 294.7344,134.7969 294.2813,134.7969 L293.8906,134.7969 L294.2813,133.8125 L298.3281,133.8125 Z M297.625,132.1094 L294.9531,132.1094 L296.2969,128.8438 L297.625,132.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="50" x="316.75" y="136.8467">Widget</text><line style="stroke:#181818;stroke-width:0.5;" x1="229" x2="422" y1="148" y2="148"/><line style="stroke:#181818;stroke-width:0.5;" x1="229" x2="422" y1="156" y2="156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="234" y="172.9951">Element createElement()</text></g><!--class StatefulWidget--><g id="elem_StatefulWidget"><rect codeLine="4" fill="#F1F1F1" height="80.5938" id="StatefulWidget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="253" x="202" y="241"/><ellipse cx="271.75" cy="257" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M273.8281,258.8125 L274.2188,259.7969 L273.8281,259.7969 C273.375,259.7969 273.2656,259.8125 273.1094,259.9219 C272.8594,260.0781 272.7031,260.3594 272.7031,260.6563 C272.7031,260.9219 272.8438,261.1719 273.0625,261.3281 C273.2031,261.4531 273.4063,261.5 273.8281,261.5 L276.1875,261.5 C276.5469,261.5 276.7656,261.4688 276.9063,261.375 C277.1563,261.2344 277.3125,260.9375 277.3125,260.6563 C277.3125,260.375 277.1719,260.125 276.9531,259.9688 C276.7813,259.8281 276.625,259.7969 276.1563,259.7969 L272.7656,251.5938 L269.0938,251.5938 C268.6406,251.5938 268.5156,251.6094 268.3594,251.7031 C268.1094,251.875 267.9531,252.1563 267.9531,252.4375 C267.9531,252.7188 268.0938,252.9688 268.3125,253.1406 C268.4844,253.25 268.6563,253.2813 269.0938,253.2813 L270.1719,253.2813 L267.5313,259.7969 C267.1094,259.7969 266.9531,259.8125 266.7969,259.9219 C266.5469,260.0781 266.3906,260.3594 266.3906,260.6563 C266.3906,261.2188 266.7656,261.5 267.5156,261.5 L269.7813,261.5 C270.1406,261.5 270.3594,261.4688 270.4844,261.375 C270.75,261.2344 270.8906,260.9375 270.8906,260.6563 C270.8906,260.375 270.7656,260.125 270.5469,259.9531 C270.375,259.8281 270.2344,259.7969 269.7813,259.7969 L269.3906,259.7969 L269.7813,258.8125 L273.8281,258.8125 Z M273.125,257.1094 L270.4531,257.1094 L271.7969,253.8438 L273.125,257.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="105" x="292.25" y="261.8467">StatefulWidget</text><line style="stroke:#181818;stroke-width:0.5;" x1="203" x2="454" y1="273" y2="273"/><line style="stroke:#181818;stroke-width:0.5;" x1="203" x2="454" y1="281" y2="281"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="208" y="297.9951">StatefulElement createElement()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="208" y="314.292">State createState()</text></g><!--class State--><g id="elem_State"><rect codeLine="10" fill="#F1F1F1" height="48" id="State" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="226" x="215.5" y="399"/><ellipse cx="230.5" cy="415" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M232.5781,416.8125 L232.9688,417.7969 L232.5781,417.7969 C232.125,417.7969 232.0156,417.8125 231.8594,417.9219 C231.6094,418.0781 231.4531,418.3594 231.4531,418.6563 C231.4531,418.9219 231.5938,419.1719 231.8125,419.3281 C231.9531,419.4531 232.1563,419.5 232.5781,419.5 L234.9375,419.5 C235.2969,419.5 235.5156,419.4688 235.6563,419.375 C235.9063,419.2344 236.0625,418.9375 236.0625,418.6563 C236.0625,418.375 235.9219,418.125 235.7031,417.9688 C235.5313,417.8281 235.375,417.7969 234.9063,417.7969 L231.5156,409.5938 L227.8438,409.5938 C227.3906,409.5938 227.2656,409.6094 227.1094,409.7031 C226.8594,409.875 226.7031,410.1563 226.7031,410.4375 C226.7031,410.7188 226.8438,410.9688 227.0625,411.1406 C227.2344,411.25 227.4063,411.2813 227.8438,411.2813 L228.9219,411.2813 L226.2813,417.7969 C225.8594,417.7969 225.7031,417.8125 225.5469,417.9219 C225.2969,418.0781 225.1406,418.3594 225.1406,418.6563 C225.1406,419.2188 225.5156,419.5 226.2656,419.5 L228.5313,419.5 C228.8906,419.5 229.1094,419.4688 229.2344,419.375 C229.5,419.2344 229.6406,418.9375 229.6406,418.6563 C229.6406,418.375 229.5156,418.125 229.2969,417.9531 C229.125,417.8281 228.9844,417.7969 228.5313,417.7969 L228.1406,417.7969 L228.5313,416.8125 L232.5781,416.8125 Z M231.875,415.1094 L229.2031,415.1094 L230.5469,411.8438 L231.875,415.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="37" x="244.5" y="419.8467">State</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="155" x="289.5" y="396"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="153" x="290.5" y="408.1387">T extends StatefulWidget</text><line style="stroke:#181818;stroke-width:0.5;" x1="216.5" x2="440.5" y1="431" y2="431"/><line style="stroke:#181818;stroke-width:0.5;" x1="216.5" x2="440.5" y1="439" y2="439"/></g><!--class StatefulElement--><g id="elem_StatefulElement"><rect fill="#F1F1F1" height="48" id="StatefulElement" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="151" x="16" y="257.5"/><ellipse cx="31" cy="273.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M33.3438,269.1719 C32.4063,268.7344 31.8125,268.5938 30.9375,268.5938 C28.3125,268.5938 26.3125,270.6719 26.3125,273.3906 L26.3125,274.5156 C26.3125,277.0938 28.4219,278.9844 31.3125,278.9844 C32.5313,278.9844 33.6875,278.6875 34.4375,278.1406 C35.0156,277.7344 35.3438,277.2813 35.3438,276.8906 C35.3438,276.4375 34.9531,276.0469 34.4844,276.0469 C34.2656,276.0469 34.0625,276.125 33.875,276.3125 C33.4219,276.7969 33.4219,276.7969 33.2344,276.8906 C32.8125,277.1563 32.125,277.2813 31.3594,277.2813 C29.3125,277.2813 28.0156,276.1875 28.0156,274.4844 L28.0156,273.3906 C28.0156,271.6094 29.2656,270.2969 31,270.2969 C31.5781,270.2969 32.1875,270.4531 32.6563,270.7031 C33.1406,270.9844 33.3125,271.2031 33.4063,271.6094 C33.4688,272.0156 33.5,272.1406 33.6406,272.2656 C33.7813,272.4063 34.0156,272.5156 34.2344,272.5156 C34.5,272.5156 34.7656,272.375 34.9375,272.1563 C35.0469,272 35.0781,271.8125 35.0781,271.3906 L35.0781,269.9688 C35.0781,269.5313 35.0625,269.4063 34.9688,269.25 C34.8125,268.9844 34.5313,268.8438 34.2344,268.8438 C33.9375,268.8438 33.7344,268.9375 33.5156,269.25 L33.3438,269.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="45" y="278.3467">StatefulElement</text><line style="stroke:#181818;stroke-width:0.5;" x1="17" x2="166" y1="289.5" y2="289.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="17" x2="166" y1="297.5" y2="297.5"/></g><!--class Element--><g id="elem_Element"><rect codeLine="15" fill="#F1F1F1" height="48" id="Element" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="91" x="161" y="7"/><ellipse cx="176" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M178.0781,24.8125 L178.4688,25.7969 L178.0781,25.7969 C177.625,25.7969 177.5156,25.8125 177.3594,25.9219 C177.1094,26.0781 176.9531,26.3594 176.9531,26.6563 C176.9531,26.9219 177.0938,27.1719 177.3125,27.3281 C177.4531,27.4531 177.6563,27.5 178.0781,27.5 L180.4375,27.5 C180.7969,27.5 181.0156,27.4688 181.1563,27.375 C181.4063,27.2344 181.5625,26.9375 181.5625,26.6563 C181.5625,26.375 181.4219,26.125 181.2031,25.9688 C181.0313,25.8281 180.875,25.7969 180.4063,25.7969 L177.0156,17.5938 L173.3438,17.5938 C172.8906,17.5938 172.7656,17.6094 172.6094,17.7031 C172.3594,17.875 172.2031,18.1563 172.2031,18.4375 C172.2031,18.7188 172.3438,18.9688 172.5625,19.1406 C172.7344,19.25 172.9063,19.2813 173.3438,19.2813 L174.4219,19.2813 L171.7813,25.7969 C171.3594,25.7969 171.2031,25.8125 171.0469,25.9219 C170.7969,26.0781 170.6406,26.3594 170.6406,26.6563 C170.6406,27.2188 171.0156,27.5 171.7656,27.5 L174.0313,27.5 C174.3906,27.5 174.6094,27.4688 174.7344,27.375 C175,27.2344 175.1406,26.9375 175.1406,26.6563 C175.1406,26.375 175.0156,26.125 174.7969,25.9531 C174.625,25.8281 174.4844,25.7969 174.0313,25.7969 L173.6406,25.7969 L174.0313,24.8125 L178.0781,24.8125 Z M177.375,23.1094 L174.7031,23.1094 L176.0469,19.8438 L177.375,23.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="59" x="190" y="27.8467">Element</text><line style="stroke:#181818;stroke-width:0.5;" x1="162" x2="251" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="162" x2="251" y1="47" y2="47"/></g><!--class ComponentElement--><g id="elem_ComponentElement"><rect fill="#F1F1F1" height="48" id="ComponentElement" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="179" x="7" y="124"/><ellipse cx="22" cy="140" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,135.6719 C23.4063,135.2344 22.8125,135.0938 21.9375,135.0938 C19.3125,135.0938 17.3125,137.1719 17.3125,139.8906 L17.3125,141.0156 C17.3125,143.5938 19.4219,145.4844 22.3125,145.4844 C23.5313,145.4844 24.6875,145.1875 25.4375,144.6406 C26.0156,144.2344 26.3438,143.7813 26.3438,143.3906 C26.3438,142.9375 25.9531,142.5469 25.4844,142.5469 C25.2656,142.5469 25.0625,142.625 24.875,142.8125 C24.4219,143.2969 24.4219,143.2969 24.2344,143.3906 C23.8125,143.6563 23.125,143.7813 22.3594,143.7813 C20.3125,143.7813 19.0156,142.6875 19.0156,140.9844 L19.0156,139.8906 C19.0156,138.1094 20.2656,136.7969 22,136.7969 C22.5781,136.7969 23.1875,136.9531 23.6563,137.2031 C24.1406,137.4844 24.3125,137.7031 24.4063,138.1094 C24.4688,138.5156 24.5,138.6406 24.6406,138.7656 C24.7813,138.9063 25.0156,139.0156 25.2344,139.0156 C25.5,139.0156 25.7656,138.875 25.9375,138.6563 C26.0469,138.5 26.0781,138.3125 26.0781,137.8906 L26.0781,136.4688 C26.0781,136.0313 26.0625,135.9063 25.9688,135.75 C25.8125,135.4844 25.5313,135.3438 25.2344,135.3438 C24.9375,135.3438 24.7344,135.4375 24.5156,135.75 L24.3438,135.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="36" y="144.8467">ComponentElement</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="185" y1="156" y2="156"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="185" y1="164" y2="164"/></g><!--reverse link Widget to StatefulWidget--><g id="link_Widget_StatefulWidget"><path codeLine="9" d="M326.6212,198.1593 C327.0332,216.2353 327.147,221.191 327.589,240.58 " fill="none" id="Widget-backto-StatefulWidget" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="326.211,180.164,320.6227,198.296,332.6196,198.0226,326.211,180.164" style="stroke:#181818;stroke-width:1.0;"/></g><!--link StatefulWidget to State--><g id="link_StatefulWidget_State"><path codeLine="11" d="M316.874,322.102 C314.905,346.912 314.6115,372.0927 317.8165,392.946 " fill="none" id="StatefulWidget-to-State" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="318.728,398.8764,321.3144,389.3732,317.9685,393.9344,313.4072,390.5885,318.728,398.8764" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link State to StatefulWidget--><g id="link_State_StatefulWidget"><path codeLine="13" d="M340.7742,387.0322 C344.1672,366.1789 342.895,346.912 340.81,322.102 " fill="none" id="State-backto-StatefulWidget" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="338.847,398.8764,343.7587,393.5967,340.7742,387.0322,335.8625,392.3119,338.847,398.8764" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link StatefulElement to State--><g id="link_StatefulElement_State"><path codeLine="12" d="M124.117,313.9687 C144.413,332.8637 166.234,351.0444 196.5,369 C216.039,380.5921 238.583,390.6973 259.447,398.8873 " fill="none" id="StatefulElement-backto-State" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="115.334,305.792,116.9999,312.808,124.117,313.9687,122.4511,306.9527,115.334,305.792" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="122" x="197.5" y="365.0669">widget.createState</text></g><!--reverse link Element to Widget--><g id="link_Element_Widget"><path codeLine="16" d="M239.2102,63.6108 C257.2762,81.0688 273.561,96.807 293.331,115.912 " fill="none" id="Element-backto-Widget" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="230.581,55.272,232.116,62.3178,239.2102,63.6108,237.6752,56.565,230.581,55.272" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link StatefulElement to StatefulWidget--><g id="link_StatefulElement_StatefulWidget"><path codeLine="17" d="M173.414,281.5 C184.845,281.5 190.277,281.5 201.708,281.5 " fill="none" id="StatefulElement-backto-StatefulWidget" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="167.414,281.5,176.414,285.5,172.414,281.5,176.414,277.5,167.414,281.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ComponentElement to StatefulElement--><g id="link_ComponentElement_StatefulElement"><path codeLine="18" d="M94.9337,190.194 C94.0254,214.083 93.3016,233.117 92.3904,257.083 " fill="none" id="ComponentElement-backto-StatefulElement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="95.6176,172.207,88.938,189.966,100.9294,190.422,95.6176,172.207" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Element to ComponentElement--><g id="link_Element_ComponentElement"><path codeLine="19" d="M171.7978,68.2794 C152.7128,88.2314 137.802,103.821 118.727,123.763 " fill="none" id="Element-backto-ComponentElement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="184.24,55.272,167.462,64.132,176.1336,72.4268,184.24,55.272" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[TOx12i8m38RlUOeSLQWF8ACNyGaKFDSj4w7hnfQXu7ntIzVQ6R6d9ldovpENWNjJCfvlrPKOdu3-7Imrv1ZBdWnJh5PhU859_97zf1xjrrvg_jl_C74I_Y4NOaunAIMonStYXFHWSjKWE0t2IIaz8o2zDka8xl0UuEr2QCOpb4soIao2PMA4f8MbcfD9TlXnKcEd9etxjkbQvnk9auq4nl8D]--></g></svg>

<h2 id="Element树"><a href="#Element树" class="headerlink" title="Element树"></a>Element树</h2><p>先看下Element的家族：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="402px" preserveAspectRatio="none" style="width:849px;height:402px;background:#FFFFFF;" version="1.1" viewBox="0 0 849 402" width="849px" zoomAndPan="magnify"><defs/><g><!--class BuildContext--><g id="elem_BuildContext"><rect codeLine="1" fill="#F1F1F1" height="64.2969" id="BuildContext" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="151" x="437" y="7"/><ellipse cx="464.6" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M466.6781,24.8125 L467.0688,25.7969 L466.6781,25.7969 C466.225,25.7969 466.1156,25.8125 465.9594,25.9219 C465.7094,26.0781 465.5531,26.3594 465.5531,26.6563 C465.5531,26.9219 465.6938,27.1719 465.9125,27.3281 C466.0531,27.4531 466.2563,27.5 466.6781,27.5 L469.0375,27.5 C469.3969,27.5 469.6156,27.4688 469.7563,27.375 C470.0063,27.2344 470.1625,26.9375 470.1625,26.6563 C470.1625,26.375 470.0219,26.125 469.8031,25.9688 C469.6313,25.8281 469.475,25.7969 469.0063,25.7969 L465.6156,17.5938 L461.9438,17.5938 C461.4906,17.5938 461.3656,17.6094 461.2094,17.7031 C460.9594,17.875 460.8031,18.1563 460.8031,18.4375 C460.8031,18.7188 460.9438,18.9688 461.1625,19.1406 C461.3344,19.25 461.5063,19.2813 461.9438,19.2813 L463.0219,19.2813 L460.3813,25.7969 C459.9594,25.7969 459.8031,25.8125 459.6469,25.9219 C459.3969,26.0781 459.2406,26.3594 459.2406,26.6563 C459.2406,27.2188 459.6156,27.5 460.3656,27.5 L462.6313,27.5 C462.9906,27.5 463.2094,27.4688 463.3344,27.375 C463.6,27.2344 463.7406,26.9375 463.7406,26.6563 C463.7406,26.375 463.6156,26.125 463.3969,25.9531 C463.225,25.8281 463.0844,25.7969 462.6313,25.7969 L462.2406,25.7969 L462.6313,24.8125 L466.6781,24.8125 Z M465.975,23.1094 L463.3031,23.1094 L464.6469,19.8438 L465.975,23.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="91" x="481.4" y="27.8467">BuildContext</text><line style="stroke:#181818;stroke-width:0.5;" x1="438" x2="587" y1="39" y2="39"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="443" y="55.9951">Widget get widget;</text><line style="stroke:#181818;stroke-width:0.5;" x1="438" x2="587" y1="63.2969" y2="63.2969"/></g><!--class Element--><g id="elem_Element"><rect codeLine="4" fill="#F1F1F1" height="48" id="Element" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="91" x="467" y="131"/><ellipse cx="482" cy="147" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M484.0781,148.8125 L484.4688,149.7969 L484.0781,149.7969 C483.625,149.7969 483.5156,149.8125 483.3594,149.9219 C483.1094,150.0781 482.9531,150.3594 482.9531,150.6563 C482.9531,150.9219 483.0938,151.1719 483.3125,151.3281 C483.4531,151.4531 483.6563,151.5 484.0781,151.5 L486.4375,151.5 C486.7969,151.5 487.0156,151.4688 487.1563,151.375 C487.4063,151.2344 487.5625,150.9375 487.5625,150.6563 C487.5625,150.375 487.4219,150.125 487.2031,149.9688 C487.0313,149.8281 486.875,149.7969 486.4063,149.7969 L483.0156,141.5938 L479.3438,141.5938 C478.8906,141.5938 478.7656,141.6094 478.6094,141.7031 C478.3594,141.875 478.2031,142.1563 478.2031,142.4375 C478.2031,142.7188 478.3438,142.9688 478.5625,143.1406 C478.7344,143.25 478.9063,143.2813 479.3438,143.2813 L480.4219,143.2813 L477.7813,149.7969 C477.3594,149.7969 477.2031,149.8125 477.0469,149.9219 C476.7969,150.0781 476.6406,150.3594 476.6406,150.6563 C476.6406,151.2188 477.0156,151.5 477.7656,151.5 L480.0313,151.5 C480.3906,151.5 480.6094,151.4688 480.7344,151.375 C481,151.2344 481.1406,150.9375 481.1406,150.6563 C481.1406,150.375 481.0156,150.125 480.7969,149.9531 C480.625,149.8281 480.4844,149.7969 480.0313,149.7969 L479.6406,149.7969 L480.0313,148.8125 L484.0781,148.8125 Z M483.375,147.1094 L480.7031,147.1094 L482.0469,143.8438 L483.375,147.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="59" x="496" y="151.8467">Element</text><line style="stroke:#181818;stroke-width:0.5;" x1="468" x2="557" y1="163" y2="163"/><line style="stroke:#181818;stroke-width:0.5;" x1="468" x2="557" y1="171" y2="171"/></g><!--class RenderObjectElement--><g id="elem_RenderObjectElement"><rect codeLine="5" fill="#F1F1F1" height="48" id="RenderObjectElement" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="189" x="310" y="239"/><ellipse cx="325" cy="255" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M327.0781,256.8125 L327.4688,257.7969 L327.0781,257.7969 C326.625,257.7969 326.5156,257.8125 326.3594,257.9219 C326.1094,258.0781 325.9531,258.3594 325.9531,258.6563 C325.9531,258.9219 326.0938,259.1719 326.3125,259.3281 C326.4531,259.4531 326.6563,259.5 327.0781,259.5 L329.4375,259.5 C329.7969,259.5 330.0156,259.4688 330.1563,259.375 C330.4063,259.2344 330.5625,258.9375 330.5625,258.6563 C330.5625,258.375 330.4219,258.125 330.2031,257.9688 C330.0313,257.8281 329.875,257.7969 329.4063,257.7969 L326.0156,249.5938 L322.3438,249.5938 C321.8906,249.5938 321.7656,249.6094 321.6094,249.7031 C321.3594,249.875 321.2031,250.1563 321.2031,250.4375 C321.2031,250.7188 321.3438,250.9688 321.5625,251.1406 C321.7344,251.25 321.9063,251.2813 322.3438,251.2813 L323.4219,251.2813 L320.7813,257.7969 C320.3594,257.7969 320.2031,257.8125 320.0469,257.9219 C319.7969,258.0781 319.6406,258.3594 319.6406,258.6563 C319.6406,259.2188 320.0156,259.5 320.7656,259.5 L323.0313,259.5 C323.3906,259.5 323.6094,259.4688 323.7344,259.375 C324,259.2344 324.1406,258.9375 324.1406,258.6563 C324.1406,258.375 324.0156,258.125 323.7969,257.9531 C323.625,257.8281 323.4844,257.7969 323.0313,257.7969 L322.6406,257.7969 L323.0313,256.8125 L327.0781,256.8125 Z M326.375,255.1094 L323.7031,255.1094 L325.0469,251.8438 L326.375,255.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="157" x="339" y="259.8467">RenderObjectElement</text><line style="stroke:#181818;stroke-width:0.5;" x1="311" x2="498" y1="271" y2="271"/><line style="stroke:#181818;stroke-width:0.5;" x1="311" x2="498" y1="279" y2="279"/></g><!--class RenderObject--><g id="elem_RenderObject"><rect codeLine="6" fill="#F1F1F1" height="48" id="RenderObject" rx="2.5" ry="2.5" style="stroke:#0000FF;stroke-width:0.5;" width="130" x="144.5" y="239"/><ellipse cx="159.5" cy="255" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M161.5781,256.8125 L161.9688,257.7969 L161.5781,257.7969 C161.125,257.7969 161.0156,257.8125 160.8594,257.9219 C160.6094,258.0781 160.4531,258.3594 160.4531,258.6563 C160.4531,258.9219 160.5938,259.1719 160.8125,259.3281 C160.9531,259.4531 161.1563,259.5 161.5781,259.5 L163.9375,259.5 C164.2969,259.5 164.5156,259.4688 164.6563,259.375 C164.9063,259.2344 165.0625,258.9375 165.0625,258.6563 C165.0625,258.375 164.9219,258.125 164.7031,257.9688 C164.5313,257.8281 164.375,257.7969 163.9063,257.7969 L160.5156,249.5938 L156.8438,249.5938 C156.3906,249.5938 156.2656,249.6094 156.1094,249.7031 C155.8594,249.875 155.7031,250.1563 155.7031,250.4375 C155.7031,250.7188 155.8438,250.9688 156.0625,251.1406 C156.2344,251.25 156.4063,251.2813 156.8438,251.2813 L157.9219,251.2813 L155.2813,257.7969 C154.8594,257.7969 154.7031,257.8125 154.5469,257.9219 C154.2969,258.0781 154.1406,258.3594 154.1406,258.6563 C154.1406,259.2188 154.5156,259.5 155.2656,259.5 L157.5313,259.5 C157.8906,259.5 158.1094,259.4688 158.2344,259.375 C158.5,259.2344 158.6406,258.9375 158.6406,258.6563 C158.6406,258.375 158.5156,258.125 158.2969,257.9531 C158.125,257.8281 157.9844,257.7969 157.5313,257.7969 L157.1406,257.7969 L157.5313,256.8125 L161.5781,256.8125 Z M160.875,255.1094 L158.2031,255.1094 L159.5469,251.8438 L160.875,255.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="98" x="173.5" y="259.8467">RenderObject</text><line style="stroke:#0000FF;stroke-width:0.5;" x1="145.5" x2="273.5" y1="271" y2="271"/><line style="stroke:#0000FF;stroke-width:0.5;" x1="145.5" x2="273.5" y1="279" y2="279"/></g><!--class Widget--><g id="elem_Widget"><rect codeLine="7" fill="#F1F1F1" height="48" id="Widget" rx="2.5" ry="2.5" style="stroke:#0000FF;stroke-width:0.5;" width="82" x="349.5" y="131"/><ellipse cx="364.5" cy="147" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M366.5781,148.8125 L366.9688,149.7969 L366.5781,149.7969 C366.125,149.7969 366.0156,149.8125 365.8594,149.9219 C365.6094,150.0781 365.4531,150.3594 365.4531,150.6563 C365.4531,150.9219 365.5938,151.1719 365.8125,151.3281 C365.9531,151.4531 366.1563,151.5 366.5781,151.5 L368.9375,151.5 C369.2969,151.5 369.5156,151.4688 369.6563,151.375 C369.9063,151.2344 370.0625,150.9375 370.0625,150.6563 C370.0625,150.375 369.9219,150.125 369.7031,149.9688 C369.5313,149.8281 369.375,149.7969 368.9063,149.7969 L365.5156,141.5938 L361.8438,141.5938 C361.3906,141.5938 361.2656,141.6094 361.1094,141.7031 C360.8594,141.875 360.7031,142.1563 360.7031,142.4375 C360.7031,142.7188 360.8438,142.9688 361.0625,143.1406 C361.2344,143.25 361.4063,143.2813 361.8438,143.2813 L362.9219,143.2813 L360.2813,149.7969 C359.8594,149.7969 359.7031,149.8125 359.5469,149.9219 C359.2969,150.0781 359.1406,150.3594 359.1406,150.6563 C359.1406,151.2188 359.5156,151.5 360.2656,151.5 L362.5313,151.5 C362.8906,151.5 363.1094,151.4688 363.2344,151.375 C363.5,151.2344 363.6406,150.9375 363.6406,150.6563 C363.6406,150.375 363.5156,150.125 363.2969,149.9531 C363.125,149.8281 362.9844,149.7969 362.5313,149.7969 L362.1406,149.7969 L362.5313,148.8125 L366.5781,148.8125 Z M365.875,147.1094 L363.2031,147.1094 L364.5469,143.8438 L365.875,147.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="50" x="378.5" y="151.8467">Widget</text><line style="stroke:#0000FF;stroke-width:0.5;" x1="350.5" x2="430.5" y1="163" y2="163"/><line style="stroke:#0000FF;stroke-width:0.5;" x1="350.5" x2="430.5" y1="171" y2="171"/></g><!--class ComponentElement--><g id="elem_ComponentElement"><rect codeLine="8" fill="#F1F1F1" height="48" id="ComponentElement" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="174" x="534.5" y="239"/><ellipse cx="549.5" cy="255" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M551.5781,256.8125 L551.9688,257.7969 L551.5781,257.7969 C551.125,257.7969 551.0156,257.8125 550.8594,257.9219 C550.6094,258.0781 550.4531,258.3594 550.4531,258.6563 C550.4531,258.9219 550.5938,259.1719 550.8125,259.3281 C550.9531,259.4531 551.1563,259.5 551.5781,259.5 L553.9375,259.5 C554.2969,259.5 554.5156,259.4688 554.6563,259.375 C554.9063,259.2344 555.0625,258.9375 555.0625,258.6563 C555.0625,258.375 554.9219,258.125 554.7031,257.9688 C554.5313,257.8281 554.375,257.7969 553.9063,257.7969 L550.5156,249.5938 L546.8438,249.5938 C546.3906,249.5938 546.2656,249.6094 546.1094,249.7031 C545.8594,249.875 545.7031,250.1563 545.7031,250.4375 C545.7031,250.7188 545.8438,250.9688 546.0625,251.1406 C546.2344,251.25 546.4063,251.2813 546.8438,251.2813 L547.9219,251.2813 L545.2813,257.7969 C544.8594,257.7969 544.7031,257.8125 544.5469,257.9219 C544.2969,258.0781 544.1406,258.3594 544.1406,258.6563 C544.1406,259.2188 544.5156,259.5 545.2656,259.5 L547.5313,259.5 C547.8906,259.5 548.1094,259.4688 548.2344,259.375 C548.5,259.2344 548.6406,258.9375 548.6406,258.6563 C548.6406,258.375 548.5156,258.125 548.2969,257.9531 C548.125,257.8281 547.9844,257.7969 547.5313,257.7969 L547.1406,257.7969 L547.5313,256.8125 L551.5781,256.8125 Z M550.875,255.1094 L548.2031,255.1094 L549.5469,251.8438 L550.875,255.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="142" x="563.5" y="259.8467">ComponentElement</text><line style="stroke:#181818;stroke-width:0.5;" x1="535.5" x2="707.5" y1="271" y2="271"/><line style="stroke:#181818;stroke-width:0.5;" x1="535.5" x2="707.5" y1="279" y2="279"/></g><!--class LeafRenderObjectElement--><g id="elem_LeafRenderObjectElement"><rect fill="#F1F1F1" height="48" id="LeafRenderObjectElement" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="225" x="7" y="347"/><ellipse cx="22" cy="363" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,358.6719 C23.4063,358.2344 22.8125,358.0938 21.9375,358.0938 C19.3125,358.0938 17.3125,360.1719 17.3125,362.8906 L17.3125,364.0156 C17.3125,366.5938 19.4219,368.4844 22.3125,368.4844 C23.5313,368.4844 24.6875,368.1875 25.4375,367.6406 C26.0156,367.2344 26.3438,366.7813 26.3438,366.3906 C26.3438,365.9375 25.9531,365.5469 25.4844,365.5469 C25.2656,365.5469 25.0625,365.625 24.875,365.8125 C24.4219,366.2969 24.4219,366.2969 24.2344,366.3906 C23.8125,366.6563 23.125,366.7813 22.3594,366.7813 C20.3125,366.7813 19.0156,365.6875 19.0156,363.9844 L19.0156,362.8906 C19.0156,361.1094 20.2656,359.7969 22,359.7969 C22.5781,359.7969 23.1875,359.9531 23.6563,360.2031 C24.1406,360.4844 24.3125,360.7031 24.4063,361.1094 C24.4688,361.5156 24.5,361.6406 24.6406,361.7656 C24.7813,361.9063 25.0156,362.0156 25.2344,362.0156 C25.5,362.0156 25.7656,361.875 25.9375,361.6563 C26.0469,361.5 26.0781,361.3125 26.0781,360.8906 L26.0781,359.4688 C26.0781,359.0313 26.0625,358.9063 25.9688,358.75 C25.8125,358.4844 25.5313,358.3438 25.2344,358.3438 C24.9375,358.3438 24.7344,358.4375 24.5156,358.75 L24.3438,358.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="36" y="367.8467">LeafRenderObjectElement</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="231" y1="379" y2="379"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="231" y1="387" y2="387"/></g><!--class SingleChildRenderObjectElement--><g id="elem_SingleChildRenderObjectElement"><rect fill="#F1F1F1" height="48" id="SingleChildRenderObjectElement" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="274" x="267.5" y="347"/><ellipse cx="282.5" cy="363" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M284.8438,358.6719 C283.9063,358.2344 283.3125,358.0938 282.4375,358.0938 C279.8125,358.0938 277.8125,360.1719 277.8125,362.8906 L277.8125,364.0156 C277.8125,366.5938 279.9219,368.4844 282.8125,368.4844 C284.0313,368.4844 285.1875,368.1875 285.9375,367.6406 C286.5156,367.2344 286.8438,366.7813 286.8438,366.3906 C286.8438,365.9375 286.4531,365.5469 285.9844,365.5469 C285.7656,365.5469 285.5625,365.625 285.375,365.8125 C284.9219,366.2969 284.9219,366.2969 284.7344,366.3906 C284.3125,366.6563 283.625,366.7813 282.8594,366.7813 C280.8125,366.7813 279.5156,365.6875 279.5156,363.9844 L279.5156,362.8906 C279.5156,361.1094 280.7656,359.7969 282.5,359.7969 C283.0781,359.7969 283.6875,359.9531 284.1563,360.2031 C284.6406,360.4844 284.8125,360.7031 284.9063,361.1094 C284.9688,361.5156 285,361.6406 285.1406,361.7656 C285.2813,361.9063 285.5156,362.0156 285.7344,362.0156 C286,362.0156 286.2656,361.875 286.4375,361.6563 C286.5469,361.5 286.5781,361.3125 286.5781,360.8906 L286.5781,359.4688 C286.5781,359.0313 286.5625,358.9063 286.4688,358.75 C286.3125,358.4844 286.0313,358.3438 285.7344,358.3438 C285.4375,358.3438 285.2344,358.4375 285.0156,358.75 L284.8438,358.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="242" x="296.5" y="367.8467">SingleChildRenderObjectElement</text><line style="stroke:#181818;stroke-width:0.5;" x1="268.5" x2="540.5" y1="379" y2="379"/><line style="stroke:#181818;stroke-width:0.5;" x1="268.5" x2="540.5" y1="387" y2="387"/></g><!--class MultiChildRenderObjectElement--><g id="elem_MultiChildRenderObjectElement"><rect fill="#F1F1F1" height="48" id="MultiChildRenderObjectElement" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="265" x="577" y="347"/><ellipse cx="592" cy="363" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M594.3438,358.6719 C593.4063,358.2344 592.8125,358.0938 591.9375,358.0938 C589.3125,358.0938 587.3125,360.1719 587.3125,362.8906 L587.3125,364.0156 C587.3125,366.5938 589.4219,368.4844 592.3125,368.4844 C593.5313,368.4844 594.6875,368.1875 595.4375,367.6406 C596.0156,367.2344 596.3438,366.7813 596.3438,366.3906 C596.3438,365.9375 595.9531,365.5469 595.4844,365.5469 C595.2656,365.5469 595.0625,365.625 594.875,365.8125 C594.4219,366.2969 594.4219,366.2969 594.2344,366.3906 C593.8125,366.6563 593.125,366.7813 592.3594,366.7813 C590.3125,366.7813 589.0156,365.6875 589.0156,363.9844 L589.0156,362.8906 C589.0156,361.1094 590.2656,359.7969 592,359.7969 C592.5781,359.7969 593.1875,359.9531 593.6563,360.2031 C594.1406,360.4844 594.3125,360.7031 594.4063,361.1094 C594.4688,361.5156 594.5,361.6406 594.6406,361.7656 C594.7813,361.9063 595.0156,362.0156 595.2344,362.0156 C595.5,362.0156 595.7656,361.875 595.9375,361.6563 C596.0469,361.5 596.0781,361.3125 596.0781,360.8906 L596.0781,359.4688 C596.0781,359.0313 596.0625,358.9063 595.9688,358.75 C595.8125,358.4844 595.5313,358.3438 595.2344,358.3438 C594.9375,358.3438 594.7344,358.4375 594.5156,358.75 L594.3438,358.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="233" x="606" y="367.8467">MultiChildRenderObjectElement</text><line style="stroke:#181818;stroke-width:0.5;" x1="578" x2="841" y1="379" y2="379"/><line style="stroke:#181818;stroke-width:0.5;" x1="578" x2="841" y1="387" y2="387"/></g><!--link Widget to Element--><g id="link_Widget_Element"><path codeLine="9" d="M431.961,155 C443.601,155 443.242,155 454.882,155 " fill="none" id="Widget-to-Element" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="466.882,155,460.882,151,454.882,155,460.882,159,466.882,155" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BuildContext to Element--><g id="link_BuildContext_Element"><path codeLine="10" d="M512.5,89.151 C512.5,108.005 512.5,113.647 512.5,130.845 " fill="none" id="BuildContext-backto-Element" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="512.5,71.151,506.5,89.151,518.5,89.151,512.5,71.151" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Element to RenderObjectElement--><g id="link_Element_RenderObjectElement"><path codeLine="11" d="M476.2194,191.6081 C458.2274,209.2661 446.334,220.941 428.262,238.678 " fill="none" id="Element-backto-RenderObjectElement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="489.066,179,472.0167,187.3259,480.4221,195.8903,489.066,179" style="stroke:#181818;stroke-width:1.0;"/></g><!--link RenderObject to RenderObjectElement--><g id="link_RenderObject_RenderObjectElement"><path codeLine="12" d="M274.627,263 C286.38,263 286.133,263 297.885,263 " fill="none" id="RenderObject-to-RenderObjectElement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="309.885,263,303.885,259,297.885,263,303.885,267,309.885,263" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RenderObjectElement to LeafRenderObjectElement--><g id="link_RenderObjectElement_LeafRenderObjectElement"><path codeLine="13" d="M325.7882,293.275 C278.1482,310.9943 229.445,329.1083 181.712,346.8617 " fill="none" id="RenderObjectElement-backto-LeafRenderObjectElement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="342.659,287,323.6965,287.6514,327.8798,298.8986,342.659,287" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RenderObjectElement to SingleChildRenderObjectElement--><g id="link_RenderObjectElement_SingleChildRenderObjectElement"><path codeLine="14" d="M404.5,305 C404.5,322.6584 404.5,328.9408 404.5,346.6784 " fill="none" id="RenderObjectElement-backto-SingleChildRenderObjectElement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="404.5,287,398.5,305,410.5,305,404.5,287" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RenderObjectElement to MultiChildRenderObjectElement--><g id="link_RenderObjectElement_MultiChildRenderObjectElement"><path codeLine="15" d="M487.6824,292.9091 C538.7544,310.6588 592.081,329.1922 643.186,346.9531 " fill="none" id="RenderObjectElement-backto-MultiChildRenderObjectElement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="470.68,287,485.7127,298.5766,489.6521,287.2416,470.68,287" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Element to ComponentElement--><g id="link_Element_ComponentElement"><path codeLine="16" d="M549.0553,191.549 C567.2133,209.207 579.279,220.941 597.518,238.678 " fill="none" id="Element-backto-ComponentElement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="536.151,179,544.8723,195.8505,553.2384,187.2476,536.151,179" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[IqmgBYbAJ2vHS2hDp4bnpiyhIQqeKQZcKW22yCoKzDGI1H0k1pEjkMgv4c4QN7DISrFpIX02GQbvAQb5_abPgSabU2KLb7CoyrAjad9AKn4AadCIYujXLk9Mu9oVMv2V1pGQPWEKLj3IpKbDAz65ci25uXsR6brT1NGDO45iRiOY1ZSTMGwhGh2fFgc9QSIQ3DOGd9cNdfFgd05qCqdwV4jpIZ9nQaDHYXvm0000]--></g></svg>

<p>从类图可以看出Element是连接Widget和RenderObject的纽带。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="585px" preserveAspectRatio="none" style="width:696px;height:585px;background:#FFFFFF;" version="1.1" viewBox="0 0 696 585" width="696px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="80.5" y="67.4297"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="80.5" y="154.8281"/><rect fill="#FFFFFF" height="102.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="80.5" y="271.3594"/><rect fill="#FFFFFF" height="58.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="237.5" y="96.5625"/><rect fill="#FFFFFF" height="58.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="237.5" y="213.0938"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="237.5" y="503.4219"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="500" y="183.9609"/><rect fill="#FFFFFF" height="35.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="500" y="373.8906"/><rect fill="#FFFFFF" height="121.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="500" y="411.0234"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="623" y="445.1563"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="85" x2="85" y1="36.2969" y2="550.5547"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="242" x2="242" y1="36.2969" y2="550.5547"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="430.5" x2="430.5" y1="36.2969" y2="550.5547"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="504.5" x2="504.5" y1="36.2969" y2="550.5547"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="628" x2="628" y1="36.2969" y2="550.5547"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="161" x="5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="12" y="24.9951">ComponentElement</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="161" x="5" y="549.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="12" y="569.5498">ComponentElement</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="176" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="183" y="24.9951">StatefulElement</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="176" y="549.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="183" y="569.5498">StatefulElement</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="54" x="403.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="40" x="410.5" y="24.9951">State</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="54" x="403.5" y="549.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="40" x="410.5" y="569.5498">State</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="75" x="467.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="474.5" y="24.9951">Element</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="75" x="467.5" y="549.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="474.5" y="569.5498">Element</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="124" x="566" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="573" y="24.9951">StatefulWidget</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="124" x="566" y="549.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="573" y="569.5498">StatefulWidget</text><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="80.5" y="67.4297"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="80.5" y="154.8281"/><rect fill="#FFFFFF" height="102.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="80.5" y="271.3594"/><rect fill="#FFFFFF" height="58.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="237.5" y="96.5625"/><rect fill="#FFFFFF" height="58.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="237.5" y="213.0938"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="237.5" y="503.4219"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="500" y="183.9609"/><rect fill="#FFFFFF" height="35.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="500" y="373.8906"/><rect fill="#FFFFFF" height="121.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="500" y="411.0234"/><rect fill="#FFFFFF" height="29.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="623" y="445.1563"/><ellipse cx="7.5" cy="66.6797" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="68.5,63.4297,78.5,67.4297,68.5,71.4297,72.5,67.4297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="74.5" y1="67.4297" y2="67.4297"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="42" x="15" y="62.3638">mount</text><polygon fill="#181818" points="225.5,92.5625,235.5,96.5625,225.5,100.5625,229.5,96.5625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="85.5" x2="231.5" y1="96.5625" y2="96.5625"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="62" x="92.5" y="91.4966">_firstBuild</text><polygon fill="#181818" points="418.5,121.6953,428.5,125.6953,418.5,129.6953,422.5,125.6953" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="247.5" x2="424.5" y1="125.6953" y2="125.6953"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="53" x="254.5" y="120.6294">initState</text><polygon fill="#181818" points="101.5,150.8281,91.5,154.8281,101.5,158.8281,97.5,154.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="95.5" x2="241.5" y1="154.8281" y2="154.8281"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="62" x="107.5" y="149.7622">_firstBuild</text><polygon fill="#181818" points="488,179.9609,498,183.9609,488,187.9609,492,183.9609" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="85.5" x2="494" y1="183.9609" y2="183.9609"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="43" x="92.5" y="178.895">rebuild</text><polygon fill="#181818" points="258.5,209.0938,248.5,213.0938,258.5,217.0938,254.5,213.0938" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="252.5" x2="504" y1="213.0938" y2="213.0938"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="99" x="264.5" y="208.0278">performRebuild</text><polygon fill="#181818" points="418.5,238.2266,428.5,242.2266,418.5,246.2266,422.5,242.2266" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="247.5" x2="424.5" y1="242.2266" y2="242.2266"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="159" x="254.5" y="237.1606">didChangeDependencies</text><polygon fill="#181818" points="101.5,267.3594,91.5,271.3594,101.5,275.3594,97.5,271.3594" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="95.5" x2="241.5" y1="271.3594" y2="271.3594"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="99" x="107.5" y="266.2935">performRebuild</text><polygon fill="#181818" points="230.5,296.4922,240.5,300.4922,230.5,304.4922,234.5,300.4922" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="90.5" x2="236.5" y1="300.4922" y2="300.4922"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="30" x="97.5" y="295.4263">build</text><polygon fill="#181818" points="418.5,325.625,428.5,329.625,418.5,333.625,422.5,329.625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="242.5" x2="424.5" y1="329.625" y2="329.625"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="30" x="249.5" y="324.5591">build</text><polygon fill="#181818" points="488,369.8906,498,373.8906,488,377.8906,492,373.8906" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="85.5" x2="494" y1="373.8906" y2="373.8906"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="76" x="92.5" y="353.6919">updateChild</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="147" x="92.5" y="368.8247">&#26159;widget&#31995;&#32479;&#30340;&#26680;&#24515;&#26041;&#27861;</text><line style="stroke:#181818;stroke-width:1.0;" x1="515" x2="557" y1="403.0234" y2="403.0234"/><line style="stroke:#181818;stroke-width:1.0;" x1="557" x2="557" y1="403.0234" y2="416.0234"/><line style="stroke:#181818;stroke-width:1.0;" x1="516" x2="557" y1="416.0234" y2="416.0234"/><polygon fill="#181818" points="526,412.0234,516,416.0234,526,420.0234,522,416.0234" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="85" x="522" y="397.9575">inflateWidget</text><polygon fill="#181818" points="611,441.1563,621,445.1563,611,449.1563,615,445.1563" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="510" x2="617" y1="445.1563" y2="445.1563"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="94" x="517" y="440.0903">createElement</text><polygon fill="#181818" points="253.5,470.2891,243.5,474.2891,253.5,478.2891,249.5,474.2891" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="247.5" x2="627" y1="474.2891" y2="474.2891"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="259.5" y="469.2231">new</text><polygon fill="#181818" points="258.5,499.4219,248.5,503.4219,258.5,507.4219,254.5,503.4219" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="252.5" x2="499" y1="503.4219" y2="503.4219"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="42" x="264.5" y="498.356">mount</text><polygon fill="#181818" points="96.5,528.5547,86.5,532.5547,96.5,536.5547,92.5,532.5547" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="90.5" x2="241.5" y1="532.5547" y2="532.5547"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="42" x="102.5" y="527.4888">mount</text><!--SRC=[ZP8_he904CPxJh6zuG8K5g8NqC924yDZ1vq4Picww07Uky8pnaPlO66ZiV0qmZLSmR-0GhMR-Nupy-tC3eJPPBO8Ga50gkD3e8z6msA1Y4WPUOLfkgSS1LxatqAcUSL77igfQaNeSoC7F78iXeGglPOn-Lx5mcLktc09FobOvJO4wGaPT6_uPyCSkJrnQ0nj284ua8imhMU-qCLn5SvqOe6jCsMBLLdDzEePHI7Nl3tHz93YvNQEV0mgsHsJupfP_SMR_Vdq6oyEyUxV-5G3oVDraNwQMZRjJBcYhWGTkh_qNI_TZyK8vbys-FoSDTUGmHmUyx-RUGdbyou0]--></g></svg>

<h2 id="RenderObjectWidget源码分析"><a href="#RenderObjectWidget源码分析" class="headerlink" title="RenderObjectWidget源码分析"></a>RenderObjectWidget源码分析</h2><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="438px" preserveAspectRatio="none" style="width:486px;height:438px;background:#FFFFFF;" version="1.1" viewBox="0 0 486 438" width="486px" zoomAndPan="magnify"><defs/><g><!--class BuildContext--><g id="elem_BuildContext"><rect codeLine="1" fill="#F1F1F1" height="48" id="BuildContext" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="123" x="320.5" y="7"/><ellipse cx="335.5" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M337.5781,24.8125 L337.9688,25.7969 L337.5781,25.7969 C337.125,25.7969 337.0156,25.8125 336.8594,25.9219 C336.6094,26.0781 336.4531,26.3594 336.4531,26.6563 C336.4531,26.9219 336.5938,27.1719 336.8125,27.3281 C336.9531,27.4531 337.1563,27.5 337.5781,27.5 L339.9375,27.5 C340.2969,27.5 340.5156,27.4688 340.6563,27.375 C340.9063,27.2344 341.0625,26.9375 341.0625,26.6563 C341.0625,26.375 340.9219,26.125 340.7031,25.9688 C340.5313,25.8281 340.375,25.7969 339.9063,25.7969 L336.5156,17.5938 L332.8438,17.5938 C332.3906,17.5938 332.2656,17.6094 332.1094,17.7031 C331.8594,17.875 331.7031,18.1563 331.7031,18.4375 C331.7031,18.7188 331.8438,18.9688 332.0625,19.1406 C332.2344,19.25 332.4063,19.2813 332.8438,19.2813 L333.9219,19.2813 L331.2813,25.7969 C330.8594,25.7969 330.7031,25.8125 330.5469,25.9219 C330.2969,26.0781 330.1406,26.3594 330.1406,26.6563 C330.1406,27.2188 330.5156,27.5 331.2656,27.5 L333.5313,27.5 C333.8906,27.5 334.1094,27.4688 334.2344,27.375 C334.5,27.2344 334.6406,26.9375 334.6406,26.6563 C334.6406,26.375 334.5156,26.125 334.2969,25.9531 C334.125,25.8281 333.9844,25.7969 333.5313,25.7969 L333.1406,25.7969 L333.5313,24.8125 L337.5781,24.8125 Z M336.875,23.1094 L334.2031,23.1094 L335.5469,19.8438 L336.875,23.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="91" x="349.5" y="27.8467">BuildContext</text><line style="stroke:#181818;stroke-width:0.5;" x1="321.5" x2="442.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="321.5" x2="442.5" y1="47" y2="47"/></g><!--class Widget--><g id="elem_Widget"><rect codeLine="2" fill="#F1F1F1" height="48" id="Widget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="82" x="177" y="7"/><ellipse cx="192" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M194.0781,24.8125 L194.4688,25.7969 L194.0781,25.7969 C193.625,25.7969 193.5156,25.8125 193.3594,25.9219 C193.1094,26.0781 192.9531,26.3594 192.9531,26.6563 C192.9531,26.9219 193.0938,27.1719 193.3125,27.3281 C193.4531,27.4531 193.6563,27.5 194.0781,27.5 L196.4375,27.5 C196.7969,27.5 197.0156,27.4688 197.1563,27.375 C197.4063,27.2344 197.5625,26.9375 197.5625,26.6563 C197.5625,26.375 197.4219,26.125 197.2031,25.9688 C197.0313,25.8281 196.875,25.7969 196.4063,25.7969 L193.0156,17.5938 L189.3438,17.5938 C188.8906,17.5938 188.7656,17.6094 188.6094,17.7031 C188.3594,17.875 188.2031,18.1563 188.2031,18.4375 C188.2031,18.7188 188.3438,18.9688 188.5625,19.1406 C188.7344,19.25 188.9063,19.2813 189.3438,19.2813 L190.4219,19.2813 L187.7813,25.7969 C187.3594,25.7969 187.2031,25.8125 187.0469,25.9219 C186.7969,26.0781 186.6406,26.3594 186.6406,26.6563 C186.6406,27.2188 187.0156,27.5 187.7656,27.5 L190.0313,27.5 C190.3906,27.5 190.6094,27.4688 190.7344,27.375 C191,27.2344 191.1406,26.9375 191.1406,26.6563 C191.1406,26.375 191.0156,26.125 190.7969,25.9531 C190.625,25.8281 190.4844,25.7969 190.0313,25.7969 L189.6406,25.7969 L190.0313,24.8125 L194.0781,24.8125 Z M193.375,23.1094 L190.7031,23.1094 L192.0469,19.8438 L193.375,23.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="50" x="206" y="27.8467">Widget</text><line style="stroke:#181818;stroke-width:0.5;" x1="178" x2="258" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="178" x2="258" y1="47" y2="47"/></g><!--class Element--><g id="elem_Element"><rect codeLine="3" fill="#F1F1F1" height="48" id="Element" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="91" x="336.5" y="132.5"/><ellipse cx="351.5" cy="148.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M353.5781,150.3125 L353.9688,151.2969 L353.5781,151.2969 C353.125,151.2969 353.0156,151.3125 352.8594,151.4219 C352.6094,151.5781 352.4531,151.8594 352.4531,152.1563 C352.4531,152.4219 352.5938,152.6719 352.8125,152.8281 C352.9531,152.9531 353.1563,153 353.5781,153 L355.9375,153 C356.2969,153 356.5156,152.9688 356.6563,152.875 C356.9063,152.7344 357.0625,152.4375 357.0625,152.1563 C357.0625,151.875 356.9219,151.625 356.7031,151.4688 C356.5313,151.3281 356.375,151.2969 355.9063,151.2969 L352.5156,143.0938 L348.8438,143.0938 C348.3906,143.0938 348.2656,143.1094 348.1094,143.2031 C347.8594,143.375 347.7031,143.6563 347.7031,143.9375 C347.7031,144.2188 347.8438,144.4688 348.0625,144.6406 C348.2344,144.75 348.4063,144.7813 348.8438,144.7813 L349.9219,144.7813 L347.2813,151.2969 C346.8594,151.2969 346.7031,151.3125 346.5469,151.4219 C346.2969,151.5781 346.1406,151.8594 346.1406,152.1563 C346.1406,152.7188 346.5156,153 347.2656,153 L349.5313,153 C349.8906,153 350.1094,152.9688 350.2344,152.875 C350.5,152.7344 350.6406,152.4375 350.6406,152.1563 C350.6406,151.875 350.5156,151.625 350.2969,151.4531 C350.125,151.3281 349.9844,151.2969 349.5313,151.2969 L349.1406,151.2969 L349.5313,150.3125 L353.5781,150.3125 Z M352.875,148.6094 L350.2031,148.6094 L351.5469,145.3438 L352.875,148.6094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="59" x="365.5" y="153.3467">Element</text><line style="stroke:#181818;stroke-width:0.5;" x1="337.5" x2="426.5" y1="164.5" y2="164.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="337.5" x2="426.5" y1="172.5" y2="172.5"/></g><!--class RenderObject--><g id="elem_RenderObject"><rect codeLine="4" fill="#F1F1F1" height="48" id="RenderObject" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="130" x="13" y="258"/><ellipse cx="28" cy="274" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M30.0781,275.8125 L30.4688,276.7969 L30.0781,276.7969 C29.625,276.7969 29.5156,276.8125 29.3594,276.9219 C29.1094,277.0781 28.9531,277.3594 28.9531,277.6563 C28.9531,277.9219 29.0938,278.1719 29.3125,278.3281 C29.4531,278.4531 29.6563,278.5 30.0781,278.5 L32.4375,278.5 C32.7969,278.5 33.0156,278.4688 33.1563,278.375 C33.4063,278.2344 33.5625,277.9375 33.5625,277.6563 C33.5625,277.375 33.4219,277.125 33.2031,276.9688 C33.0313,276.8281 32.875,276.7969 32.4063,276.7969 L29.0156,268.5938 L25.3438,268.5938 C24.8906,268.5938 24.7656,268.6094 24.6094,268.7031 C24.3594,268.875 24.2031,269.1563 24.2031,269.4375 C24.2031,269.7188 24.3438,269.9688 24.5625,270.1406 C24.7344,270.25 24.9063,270.2813 25.3438,270.2813 L26.4219,270.2813 L23.7813,276.7969 C23.3594,276.7969 23.2031,276.8125 23.0469,276.9219 C22.7969,277.0781 22.6406,277.3594 22.6406,277.6563 C22.6406,278.2188 23.0156,278.5 23.7656,278.5 L26.0313,278.5 C26.3906,278.5 26.6094,278.4688 26.7344,278.375 C27,278.2344 27.1406,277.9375 27.1406,277.6563 C27.1406,277.375 27.0156,277.125 26.7969,276.9531 C26.625,276.8281 26.4844,276.7969 26.0313,276.7969 L25.6406,276.7969 L26.0313,275.8125 L30.0781,275.8125 Z M29.375,274.1094 L26.7031,274.1094 L28.0469,270.8438 L29.375,274.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="98" x="42" y="278.8467">RenderObject</text><line style="stroke:#181818;stroke-width:0.5;" x1="14" x2="142" y1="290" y2="290"/><line style="stroke:#181818;stroke-width:0.5;" x1="14" x2="142" y1="298" y2="298"/></g><!--class RenderObjectWidget--><g id="elem_RenderObjectWidget"><rect codeLine="6" fill="#F1F1F1" height="80.5938" id="RenderObjectWidget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="286" x="15" y="116"/><ellipse cx="79.75" cy="132" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M81.8281,133.8125 L82.2188,134.7969 L81.8281,134.7969 C81.375,134.7969 81.2656,134.8125 81.1094,134.9219 C80.8594,135.0781 80.7031,135.3594 80.7031,135.6563 C80.7031,135.9219 80.8438,136.1719 81.0625,136.3281 C81.2031,136.4531 81.4063,136.5 81.8281,136.5 L84.1875,136.5 C84.5469,136.5 84.7656,136.4688 84.9063,136.375 C85.1563,136.2344 85.3125,135.9375 85.3125,135.6563 C85.3125,135.375 85.1719,135.125 84.9531,134.9688 C84.7813,134.8281 84.625,134.7969 84.1563,134.7969 L80.7656,126.5938 L77.0938,126.5938 C76.6406,126.5938 76.5156,126.6094 76.3594,126.7031 C76.1094,126.875 75.9531,127.1563 75.9531,127.4375 C75.9531,127.7188 76.0938,127.9688 76.3125,128.1406 C76.4844,128.25 76.6563,128.2813 77.0938,128.2813 L78.1719,128.2813 L75.5313,134.7969 C75.1094,134.7969 74.9531,134.8125 74.7969,134.9219 C74.5469,135.0781 74.3906,135.3594 74.3906,135.6563 C74.3906,136.2188 74.7656,136.5 75.5156,136.5 L77.7813,136.5 C78.1406,136.5 78.3594,136.4688 78.4844,136.375 C78.75,136.2344 78.8906,135.9375 78.8906,135.6563 C78.8906,135.375 78.7656,135.125 78.5469,134.9531 C78.375,134.8281 78.2344,134.7969 77.7813,134.7969 L77.3906,134.7969 L77.7813,133.8125 L81.8281,133.8125 Z M81.125,132.1094 L78.4531,132.1094 L79.7969,128.8438 L81.125,132.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="148" x="100.25" y="136.8467">RenderObjectWidget</text><line style="stroke:#181818;stroke-width:0.5;" x1="16" x2="300" y1="148" y2="148"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="274" x="21" y="164.9951">RenderObjectElement createElement</text><line style="stroke:#181818;stroke-width:0.5;" x1="16" x2="300" y1="172.2969" y2="172.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="21" y="189.292">RenderObject createRenderObject()</text></g><!--class ContainerLayer--><g id="elem_ContainerLayer"><rect fill="#F1F1F1" height="48" id="ContainerLayer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="142" x="7" y="383"/><ellipse cx="22" cy="399" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,394.6719 C23.4063,394.2344 22.8125,394.0938 21.9375,394.0938 C19.3125,394.0938 17.3125,396.1719 17.3125,398.8906 L17.3125,400.0156 C17.3125,402.5938 19.4219,404.4844 22.3125,404.4844 C23.5313,404.4844 24.6875,404.1875 25.4375,403.6406 C26.0156,403.2344 26.3438,402.7813 26.3438,402.3906 C26.3438,401.9375 25.9531,401.5469 25.4844,401.5469 C25.2656,401.5469 25.0625,401.625 24.875,401.8125 C24.4219,402.2969 24.4219,402.2969 24.2344,402.3906 C23.8125,402.6563 23.125,402.7813 22.3594,402.7813 C20.3125,402.7813 19.0156,401.6875 19.0156,399.9844 L19.0156,398.8906 C19.0156,397.1094 20.2656,395.7969 22,395.7969 C22.5781,395.7969 23.1875,395.9531 23.6563,396.2031 C24.1406,396.4844 24.3125,396.7031 24.4063,397.1094 C24.4688,397.5156 24.5,397.6406 24.6406,397.7656 C24.7813,397.9063 25.0156,398.0156 25.2344,398.0156 C25.5,398.0156 25.7656,397.875 25.9375,397.6563 C26.0469,397.5 26.0781,397.3125 26.0781,396.8906 L26.0781,395.4688 C26.0781,395.0313 26.0625,394.9063 25.9688,394.75 C25.8125,394.4844 25.5313,394.3438 25.2344,394.3438 C24.9375,394.3438 24.7344,394.4375 24.5156,394.75 L24.3438,394.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="36" y="403.8467">ContainerLayer</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="148" y1="415" y2="415"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="148" y1="423" y2="423"/></g><!--class Layer--><g id="elem_Layer"><rect fill="#F1F1F1" height="48" id="Layer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="71" x="178.5" y="258"/><ellipse cx="193.5" cy="274" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M195.8438,269.6719 C194.9063,269.2344 194.3125,269.0938 193.4375,269.0938 C190.8125,269.0938 188.8125,271.1719 188.8125,273.8906 L188.8125,275.0156 C188.8125,277.5938 190.9219,279.4844 193.8125,279.4844 C195.0313,279.4844 196.1875,279.1875 196.9375,278.6406 C197.5156,278.2344 197.8438,277.7813 197.8438,277.3906 C197.8438,276.9375 197.4531,276.5469 196.9844,276.5469 C196.7656,276.5469 196.5625,276.625 196.375,276.8125 C195.9219,277.2969 195.9219,277.2969 195.7344,277.3906 C195.3125,277.6563 194.625,277.7813 193.8594,277.7813 C191.8125,277.7813 190.5156,276.6875 190.5156,274.9844 L190.5156,273.8906 C190.5156,272.1094 191.7656,270.7969 193.5,270.7969 C194.0781,270.7969 194.6875,270.9531 195.1563,271.2031 C195.6406,271.4844 195.8125,271.7031 195.9063,272.1094 C195.9688,272.5156 196,272.6406 196.1406,272.7656 C196.2813,272.9063 196.5156,273.0156 196.7344,273.0156 C197,273.0156 197.2656,272.875 197.4375,272.6563 C197.5469,272.5 197.5781,272.3125 197.5781,271.8906 L197.5781,270.4688 C197.5781,270.0313 197.5625,269.9063 197.4688,269.75 C197.3125,269.4844 197.0313,269.3438 196.7344,269.3438 C196.4375,269.3438 196.2344,269.4375 196.0156,269.75 L195.8438,269.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="39" x="207.5" y="278.8467">Layer</text><line style="stroke:#181818;stroke-width:0.5;" x1="179.5" x2="248.5" y1="290" y2="290"/><line style="stroke:#181818;stroke-width:0.5;" x1="179.5" x2="248.5" y1="298" y2="298"/></g><!--class PictureLayer--><g id="elem_PictureLayer"><rect fill="#F1F1F1" height="48" id="PictureLayer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="122" x="184" y="383"/><ellipse cx="199" cy="399" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M201.3438,394.6719 C200.4063,394.2344 199.8125,394.0938 198.9375,394.0938 C196.3125,394.0938 194.3125,396.1719 194.3125,398.8906 L194.3125,400.0156 C194.3125,402.5938 196.4219,404.4844 199.3125,404.4844 C200.5313,404.4844 201.6875,404.1875 202.4375,403.6406 C203.0156,403.2344 203.3438,402.7813 203.3438,402.3906 C203.3438,401.9375 202.9531,401.5469 202.4844,401.5469 C202.2656,401.5469 202.0625,401.625 201.875,401.8125 C201.4219,402.2969 201.4219,402.2969 201.2344,402.3906 C200.8125,402.6563 200.125,402.7813 199.3594,402.7813 C197.3125,402.7813 196.0156,401.6875 196.0156,399.9844 L196.0156,398.8906 C196.0156,397.1094 197.2656,395.7969 199,395.7969 C199.5781,395.7969 200.1875,395.9531 200.6563,396.2031 C201.1406,396.4844 201.3125,396.7031 201.4063,397.1094 C201.4688,397.5156 201.5,397.6406 201.6406,397.7656 C201.7813,397.9063 202.0156,398.0156 202.2344,398.0156 C202.5,398.0156 202.7656,397.875 202.9375,397.6563 C203.0469,397.5 203.0781,397.3125 203.0781,396.8906 L203.0781,395.4688 C203.0781,395.0313 203.0625,394.9063 202.9688,394.75 C202.8125,394.4844 202.5313,394.3438 202.2344,394.3438 C201.9375,394.3438 201.7344,394.4375 201.5156,394.75 L201.3438,394.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="213" y="403.8467">PictureLayer</text><line style="stroke:#181818;stroke-width:0.5;" x1="185" x2="305" y1="415" y2="415"/><line style="stroke:#181818;stroke-width:0.5;" x1="185" x2="305" y1="423" y2="423"/></g><!--class RenderObjectElement--><g id="elem_RenderObjectElement"><rect fill="#F1F1F1" height="48" id="RenderObjectElement" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="194" x="285" y="258"/><ellipse cx="300" cy="274" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M302.3438,269.6719 C301.4063,269.2344 300.8125,269.0938 299.9375,269.0938 C297.3125,269.0938 295.3125,271.1719 295.3125,273.8906 L295.3125,275.0156 C295.3125,277.5938 297.4219,279.4844 300.3125,279.4844 C301.5313,279.4844 302.6875,279.1875 303.4375,278.6406 C304.0156,278.2344 304.3438,277.7813 304.3438,277.3906 C304.3438,276.9375 303.9531,276.5469 303.4844,276.5469 C303.2656,276.5469 303.0625,276.625 302.875,276.8125 C302.4219,277.2969 302.4219,277.2969 302.2344,277.3906 C301.8125,277.6563 301.125,277.7813 300.3594,277.7813 C298.3125,277.7813 297.0156,276.6875 297.0156,274.9844 L297.0156,273.8906 C297.0156,272.1094 298.2656,270.7969 300,270.7969 C300.5781,270.7969 301.1875,270.9531 301.6563,271.2031 C302.1406,271.4844 302.3125,271.7031 302.4063,272.1094 C302.4688,272.5156 302.5,272.6406 302.6406,272.7656 C302.7813,272.9063 303.0156,273.0156 303.2344,273.0156 C303.5,273.0156 303.7656,272.875 303.9375,272.6563 C304.0469,272.5 304.0781,272.3125 304.0781,271.8906 L304.0781,270.4688 C304.0781,270.0313 304.0625,269.9063 303.9688,269.75 C303.8125,269.4844 303.5313,269.3438 303.2344,269.3438 C302.9375,269.3438 302.7344,269.4375 302.5156,269.75 L302.3438,269.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="314" y="278.8467">RenderObjectElement</text><line style="stroke:#181818;stroke-width:0.5;" x1="286" x2="478" y1="290" y2="290"/><line style="stroke:#181818;stroke-width:0.5;" x1="286" x2="478" y1="298" y2="298"/></g><!--reverse link RenderObject to ContainerLayer--><g id="link_RenderObject_ContainerLayer"><path codeLine="11" d="M78,318.135 C78,340.126 78,361.0123 78,382.9684 " fill="none" id="RenderObject-backto-ContainerLayer" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="78,306.135,74,312.135,78,318.135,82,312.135,78,306.135" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="80" x="79" y="349.0669">LayerHandle</text></g><!--reverse link Layer to ContainerLayer--><g id="link_Layer_ContainerLayer"><path codeLine="12" d="M193.6507,321.7827 C185.4697,336.4607 182.219,339.4638 168,353 C155.917,364.5027 140.896,374.5828 126.608,382.7772 " fill="none" id="Layer-backto-ContainerLayer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="202.414,306.06,188.4098,318.8616,198.8916,324.7038,202.414,306.06" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Layer to PictureLayer--><g id="link_Layer_PictureLayer"><path codeLine="13" d="M224.2297,323.5893 C229.7717,345.5803 233.662,361.0123 239.195,382.9684 " fill="none" id="Layer-backto-PictureLayer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="219.831,306.135,218.4116,325.0555,230.0478,322.123,219.831,306.135" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Widget to RenderObjectWidget--><g id="link_Widget_RenderObjectWidget"><path codeLine="16" d="M198.8489,71.4198 C190.5669,88.4688 186.98,95.85 177.26,115.856 " fill="none" id="Widget-backto-RenderObjectWidget" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="206.714,55.229,193.452,68.7981,204.2458,74.0414,206.714,55.229" style="stroke:#181818;stroke-width:1.0;"/></g><!--link Widget to Element--><g id="link_Widget_Element"><path codeLine="17" d="M248.847,55.229 C278.168,77.309 317.2231,106.7196 346.4981,128.7656 " fill="none" id="Widget-to-Element" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="351.291,132.375,346.5079,123.7656,347.2969,129.3672,341.6953,130.1562,351.291,132.375" style="stroke:#181818;stroke-width:1.0;"/></g><!--link RenderObjectWidget to RenderObject--><g id="link_RenderObjectWidget_RenderObject"><path codeLine="18" d="M132.247,197.256 C119.275,217.282 107.2651,235.8222 96.2361,252.8482 " fill="none" id="RenderObjectWidget-to-RenderObject" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="92.9741,257.884,101.2244,252.505,95.6925,253.6875,94.51,248.1556,92.9741,257.884" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Element to RenderObjectElement--><g id="link_Element_RenderObjectElement"><path codeLine="19" d="M382,198.729 C382,220.809 382,235.829 382,257.875 " fill="none" id="Element-backto-RenderObjectElement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="382,180.729,376,198.729,388,198.729,382,180.729" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BuildContext to Element--><g id="link_BuildContext_Element"><path codeLine="20" d="M382,73.229 C382,95.309 382,110.329 382,132.375 " fill="none" id="BuildContext-backto-Element" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="382,55.229,376,73.229,388,73.229,382,55.229" style="stroke:#181818;stroke-width:1.0;"/></g><!--link RenderObjectWidget to RenderObjectElement--><g id="link_RenderObjectWidget_RenderObjectElement"><path codeLine="21" d="M229.799,197.086 C266.27,217.193 304.0437,238.019 335.0277,255.102 " fill="none" id="RenderObjectWidget-to-RenderObjectElement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="340.282,257.999,334.3319,250.1507,335.9034,255.5849,330.4692,257.1564,340.282,257.999" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[bP712i8m44Jl-nKvgf1-W8W7HV0WA5uyRvD58ZL2ceAY_hjfayZQzc8kOUSDaqo2PUqTAYzMZQdq-cOztJrWLaz6dudDcugkP9bm9Al9xSiBXU49xt4IOm8NON6GyeHoX9voUj-LC9Scqt0M_9XcHI7Q0cWikHq-o8cvwFOjMbqHH6tnahBdu-HWb6ySHHqWtRn3mqOPIxdyFir8xnPp6NBjGMmEuRyHNN_49-i7]--></g></svg>

<h2 id="RenderObject树"><a href="#RenderObject树" class="headerlink" title="RenderObject树"></a>RenderObject树</h2><p>通常情况下RenderObject是由RenderObjectElement创建的，当Element状态变为unmounted时，要销毁RenderObject（调用RenderObject.dispose）。我们一般不会定义RenderObject的子类，而是使用RenderBox（或者RenderProxyBox），RenderBox采用的是笛卡尔坐标系，如果需要创建不是笛卡尔坐标系的布局，则就需要直接继承RenderObject了。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="311px" preserveAspectRatio="none" style="width:707px;height:311px;background:#FFFFFF;" version="1.1" viewBox="0 0 707 311" width="707px" zoomAndPan="magnify"><defs/><g><!--class RenderObject--><g id="elem_RenderObject"><rect codeLine="1" fill="#F1F1F1" height="80.5938" id="RenderObject" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="193" x="349" y="7"/><ellipse cx="392.35" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M394.4281,24.8125 L394.8188,25.7969 L394.4281,25.7969 C393.975,25.7969 393.8656,25.8125 393.7094,25.9219 C393.4594,26.0781 393.3031,26.3594 393.3031,26.6563 C393.3031,26.9219 393.4438,27.1719 393.6625,27.3281 C393.8031,27.4531 394.0063,27.5 394.4281,27.5 L396.7875,27.5 C397.1469,27.5 397.3656,27.4688 397.5063,27.375 C397.7563,27.2344 397.9125,26.9375 397.9125,26.6563 C397.9125,26.375 397.7719,26.125 397.5531,25.9688 C397.3813,25.8281 397.225,25.7969 396.7563,25.7969 L393.3656,17.5938 L389.6938,17.5938 C389.2406,17.5938 389.1156,17.6094 388.9594,17.7031 C388.7094,17.875 388.5531,18.1563 388.5531,18.4375 C388.5531,18.7188 388.6938,18.9688 388.9125,19.1406 C389.0844,19.25 389.2563,19.2813 389.6938,19.2813 L390.7719,19.2813 L388.1313,25.7969 C387.7094,25.7969 387.5531,25.8125 387.3969,25.9219 C387.1469,26.0781 386.9906,26.3594 386.9906,26.6563 C386.9906,27.2188 387.3656,27.5 388.1156,27.5 L390.3813,27.5 C390.7406,27.5 390.9594,27.4688 391.0844,27.375 C391.35,27.2344 391.4906,26.9375 391.4906,26.6563 C391.4906,26.375 391.3656,26.125 391.1469,25.9531 C390.975,25.8281 390.8344,25.7969 390.3813,25.7969 L389.9906,25.7969 L390.3813,24.8125 L394.4281,24.8125 Z M393.725,23.1094 L391.0531,23.1094 L392.3969,19.8438 L393.725,23.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="98" x="412.65" y="27.8467">RenderObject</text><line style="stroke:#181818;stroke-width:0.5;" x1="350" x2="541" y1="39" y2="39"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="355" y="55.9951">RenderObject? _parent;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="355" y="72.292">ParentData? parentData;</text><line style="stroke:#181818;stroke-width:0.5;" x1="350" x2="541" y1="79.5938" y2="79.5938"/></g><!--class RenderBox--><g id="elem_RenderBox"><rect codeLine="5" fill="#F1F1F1" height="48" id="RenderBox" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="111" x="266" y="148"/><ellipse cx="281" cy="164" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M283.0781,165.8125 L283.4688,166.7969 L283.0781,166.7969 C282.625,166.7969 282.5156,166.8125 282.3594,166.9219 C282.1094,167.0781 281.9531,167.3594 281.9531,167.6563 C281.9531,167.9219 282.0938,168.1719 282.3125,168.3281 C282.4531,168.4531 282.6563,168.5 283.0781,168.5 L285.4375,168.5 C285.7969,168.5 286.0156,168.4688 286.1563,168.375 C286.4063,168.2344 286.5625,167.9375 286.5625,167.6563 C286.5625,167.375 286.4219,167.125 286.2031,166.9688 C286.0313,166.8281 285.875,166.7969 285.4063,166.7969 L282.0156,158.5938 L278.3438,158.5938 C277.8906,158.5938 277.7656,158.6094 277.6094,158.7031 C277.3594,158.875 277.2031,159.1563 277.2031,159.4375 C277.2031,159.7188 277.3438,159.9688 277.5625,160.1406 C277.7344,160.25 277.9063,160.2813 278.3438,160.2813 L279.4219,160.2813 L276.7813,166.7969 C276.3594,166.7969 276.2031,166.8125 276.0469,166.9219 C275.7969,167.0781 275.6406,167.3594 275.6406,167.6563 C275.6406,168.2188 276.0156,168.5 276.7656,168.5 L279.0313,168.5 C279.3906,168.5 279.6094,168.4688 279.7344,168.375 C280,168.2344 280.1406,167.9375 280.1406,167.6563 C280.1406,167.375 280.0156,167.125 279.7969,166.9531 C279.625,166.8281 279.4844,166.7969 279.0313,166.7969 L278.6406,166.7969 L279.0313,165.8125 L283.0781,165.8125 Z M282.375,164.1094 L279.7031,164.1094 L281.0469,160.8438 L282.375,164.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="79" x="295" y="168.8467">RenderBox</text><line style="stroke:#181818;stroke-width:0.5;" x1="267" x2="376" y1="180" y2="180"/><line style="stroke:#181818;stroke-width:0.5;" x1="267" x2="376" y1="188" y2="188"/></g><!--class RenderProxyBox--><g id="elem_RenderProxyBox"><rect fill="#F1F1F1" height="48" id="RenderProxyBox" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="151" x="7" y="256"/><ellipse cx="22" cy="272" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,267.6719 C23.4063,267.2344 22.8125,267.0938 21.9375,267.0938 C19.3125,267.0938 17.3125,269.1719 17.3125,271.8906 L17.3125,273.0156 C17.3125,275.5938 19.4219,277.4844 22.3125,277.4844 C23.5313,277.4844 24.6875,277.1875 25.4375,276.6406 C26.0156,276.2344 26.3438,275.7813 26.3438,275.3906 C26.3438,274.9375 25.9531,274.5469 25.4844,274.5469 C25.2656,274.5469 25.0625,274.625 24.875,274.8125 C24.4219,275.2969 24.4219,275.2969 24.2344,275.3906 C23.8125,275.6563 23.125,275.7813 22.3594,275.7813 C20.3125,275.7813 19.0156,274.6875 19.0156,272.9844 L19.0156,271.8906 C19.0156,270.1094 20.2656,268.7969 22,268.7969 C22.5781,268.7969 23.1875,268.9531 23.6563,269.2031 C24.1406,269.4844 24.3125,269.7031 24.4063,270.1094 C24.4688,270.5156 24.5,270.6406 24.6406,270.7656 C24.7813,270.9063 25.0156,271.0156 25.2344,271.0156 C25.5,271.0156 25.7656,270.875 25.9375,270.6563 C26.0469,270.5 26.0781,270.3125 26.0781,269.8906 L26.0781,268.4688 C26.0781,268.0313 26.0625,267.9063 25.9688,267.75 C25.8125,267.4844 25.5313,267.3438 25.2344,267.3438 C24.9375,267.3438 24.7344,267.4375 24.5156,267.75 L24.3438,267.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="36" y="276.8467">RenderProxyBox</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="157" y1="288" y2="288"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="157" y1="296" y2="296"/></g><!--class RenderSliver--><g id="elem_RenderSliver"><rect codeLine="8" fill="#F1F1F1" height="48" id="RenderSliver" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="124" x="508.5" y="148"/><ellipse cx="523.5" cy="164" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M525.5781,165.8125 L525.9688,166.7969 L525.5781,166.7969 C525.125,166.7969 525.0156,166.8125 524.8594,166.9219 C524.6094,167.0781 524.4531,167.3594 524.4531,167.6563 C524.4531,167.9219 524.5938,168.1719 524.8125,168.3281 C524.9531,168.4531 525.1563,168.5 525.5781,168.5 L527.9375,168.5 C528.2969,168.5 528.5156,168.4688 528.6563,168.375 C528.9063,168.2344 529.0625,167.9375 529.0625,167.6563 C529.0625,167.375 528.9219,167.125 528.7031,166.9688 C528.5313,166.8281 528.375,166.7969 527.9063,166.7969 L524.5156,158.5938 L520.8438,158.5938 C520.3906,158.5938 520.2656,158.6094 520.1094,158.7031 C519.8594,158.875 519.7031,159.1563 519.7031,159.4375 C519.7031,159.7188 519.8438,159.9688 520.0625,160.1406 C520.2344,160.25 520.4063,160.2813 520.8438,160.2813 L521.9219,160.2813 L519.2813,166.7969 C518.8594,166.7969 518.7031,166.8125 518.5469,166.9219 C518.2969,167.0781 518.1406,167.3594 518.1406,167.6563 C518.1406,168.2188 518.5156,168.5 519.2656,168.5 L521.5313,168.5 C521.8906,168.5 522.1094,168.4688 522.2344,168.375 C522.5,168.2344 522.6406,167.9375 522.6406,167.6563 C522.6406,167.375 522.5156,167.125 522.2969,166.9531 C522.125,166.8281 521.9844,166.7969 521.5313,166.7969 L521.1406,166.7969 L521.5313,165.8125 L525.5781,165.8125 Z M524.875,164.1094 L522.2031,164.1094 L523.5469,160.8438 L524.875,164.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="92" x="537.5" y="168.8467">RenderSliver</text><line style="stroke:#181818;stroke-width:0.5;" x1="509.5" x2="631.5" y1="180" y2="180"/><line style="stroke:#181818;stroke-width:0.5;" x1="509.5" x2="631.5" y1="188" y2="188"/></g><!--class RenderProxySliver--><g id="elem_RenderProxySliver"><rect codeLine="9" fill="#F1F1F1" height="48" id="RenderProxySliver" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="163" x="537" y="256"/><ellipse cx="552" cy="272" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M554.0781,273.8125 L554.4688,274.7969 L554.0781,274.7969 C553.625,274.7969 553.5156,274.8125 553.3594,274.9219 C553.1094,275.0781 552.9531,275.3594 552.9531,275.6563 C552.9531,275.9219 553.0938,276.1719 553.3125,276.3281 C553.4531,276.4531 553.6563,276.5 554.0781,276.5 L556.4375,276.5 C556.7969,276.5 557.0156,276.4688 557.1563,276.375 C557.4063,276.2344 557.5625,275.9375 557.5625,275.6563 C557.5625,275.375 557.4219,275.125 557.2031,274.9688 C557.0313,274.8281 556.875,274.7969 556.4063,274.7969 L553.0156,266.5938 L549.3438,266.5938 C548.8906,266.5938 548.7656,266.6094 548.6094,266.7031 C548.3594,266.875 548.2031,267.1563 548.2031,267.4375 C548.2031,267.7188 548.3438,267.9688 548.5625,268.1406 C548.7344,268.25 548.9063,268.2813 549.3438,268.2813 L550.4219,268.2813 L547.7813,274.7969 C547.3594,274.7969 547.2031,274.8125 547.0469,274.9219 C546.7969,275.0781 546.6406,275.3594 546.6406,275.6563 C546.6406,276.2188 547.0156,276.5 547.7656,276.5 L550.0313,276.5 C550.3906,276.5 550.6094,276.4688 550.7344,276.375 C551,276.2344 551.1406,275.9375 551.1406,275.6563 C551.1406,275.375 551.0156,275.125 550.7969,274.9531 C550.625,274.8281 550.4844,274.7969 550.0313,274.7969 L549.6406,274.7969 L550.0313,273.8125 L554.0781,273.8125 Z M553.375,272.1094 L550.7031,272.1094 L552.0469,268.8438 L553.375,272.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="131" x="566" y="276.8467">RenderProxySliver</text><line style="stroke:#181818;stroke-width:0.5;" x1="538" x2="699" y1="288" y2="288"/><line style="stroke:#181818;stroke-width:0.5;" x1="538" x2="699" y1="296" y2="296"/></g><!--class RenderShiftedBox--><g id="elem_RenderShiftedBox"><rect codeLine="12" fill="#F1F1F1" height="48" id="RenderShiftedBox" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="161" x="193" y="256"/><ellipse cx="208" cy="272" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M210.0781,273.8125 L210.4688,274.7969 L210.0781,274.7969 C209.625,274.7969 209.5156,274.8125 209.3594,274.9219 C209.1094,275.0781 208.9531,275.3594 208.9531,275.6563 C208.9531,275.9219 209.0938,276.1719 209.3125,276.3281 C209.4531,276.4531 209.6563,276.5 210.0781,276.5 L212.4375,276.5 C212.7969,276.5 213.0156,276.4688 213.1563,276.375 C213.4063,276.2344 213.5625,275.9375 213.5625,275.6563 C213.5625,275.375 213.4219,275.125 213.2031,274.9688 C213.0313,274.8281 212.875,274.7969 212.4063,274.7969 L209.0156,266.5938 L205.3438,266.5938 C204.8906,266.5938 204.7656,266.6094 204.6094,266.7031 C204.3594,266.875 204.2031,267.1563 204.2031,267.4375 C204.2031,267.7188 204.3438,267.9688 204.5625,268.1406 C204.7344,268.25 204.9063,268.2813 205.3438,268.2813 L206.4219,268.2813 L203.7813,274.7969 C203.3594,274.7969 203.2031,274.8125 203.0469,274.9219 C202.7969,275.0781 202.6406,275.3594 202.6406,275.6563 C202.6406,276.2188 203.0156,276.5 203.7656,276.5 L206.0313,276.5 C206.3906,276.5 206.6094,276.4688 206.7344,276.375 C207,276.2344 207.1406,275.9375 207.1406,275.6563 C207.1406,275.375 207.0156,275.125 206.7969,274.9531 C206.625,274.8281 206.4844,274.7969 206.0313,274.7969 L205.6406,274.7969 L206.0313,273.8125 L210.0781,273.8125 Z M209.375,272.1094 L206.7031,272.1094 L208.0469,268.8438 L209.375,272.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="129" x="222" y="276.8467">RenderShiftedBox</text><line style="stroke:#181818;stroke-width:0.5;" x1="194" x2="353" y1="288" y2="288"/><line style="stroke:#181818;stroke-width:0.5;" x1="194" x2="353" y1="296" y2="296"/></g><!--class RenderFlex--><g id="elem_RenderFlex"><rect fill="#F1F1F1" height="48" id="RenderFlex" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="113" x="389" y="256"/><ellipse cx="404" cy="272" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M406.3438,267.6719 C405.4063,267.2344 404.8125,267.0938 403.9375,267.0938 C401.3125,267.0938 399.3125,269.1719 399.3125,271.8906 L399.3125,273.0156 C399.3125,275.5938 401.4219,277.4844 404.3125,277.4844 C405.5313,277.4844 406.6875,277.1875 407.4375,276.6406 C408.0156,276.2344 408.3438,275.7813 408.3438,275.3906 C408.3438,274.9375 407.9531,274.5469 407.4844,274.5469 C407.2656,274.5469 407.0625,274.625 406.875,274.8125 C406.4219,275.2969 406.4219,275.2969 406.2344,275.3906 C405.8125,275.6563 405.125,275.7813 404.3594,275.7813 C402.3125,275.7813 401.0156,274.6875 401.0156,272.9844 L401.0156,271.8906 C401.0156,270.1094 402.2656,268.7969 404,268.7969 C404.5781,268.7969 405.1875,268.9531 405.6563,269.2031 C406.1406,269.4844 406.3125,269.7031 406.4063,270.1094 C406.4688,270.5156 406.5,270.6406 406.6406,270.7656 C406.7813,270.9063 407.0156,271.0156 407.2344,271.0156 C407.5,271.0156 407.7656,270.875 407.9375,270.6563 C408.0469,270.5 408.0781,270.3125 408.0781,269.8906 L408.0781,268.4688 C408.0781,268.0313 408.0625,267.9063 407.9688,267.75 C407.8125,267.4844 407.5313,267.3438 407.2344,267.3438 C406.9375,267.3438 406.7344,267.4375 406.5156,267.75 L406.3438,267.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="418" y="276.8467">RenderFlex</text><line style="stroke:#181818;stroke-width:0.5;" x1="390" x2="501" y1="288" y2="288"/><line style="stroke:#181818;stroke-width:0.5;" x1="390" x2="501" y1="296" y2="296"/></g><!--reverse link RenderObject to RenderBox--><g id="link_RenderObject_RenderBox"><path codeLine="6" d="M392.4359,100.9223 C372.4939,120.6233 361.92,131.069 344.941,147.843 " fill="none" id="RenderObject-backto-RenderBox" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="405.241,88.272,388.2192,96.654,396.6527,105.1907,405.241,88.272" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RenderBox to RenderProxyBox--><g id="link_RenderBox_RenderProxyBox"><path codeLine="7" d="M253.1868,203.2979 C213.2358,221.0172 174.699,238.1083 134.67,255.8617 " fill="none" id="RenderBox-backto-RenderProxyBox" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="269.641,196,250.7542,197.8131,255.6194,208.7826,269.641,196" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RenderObject to RenderSliver--><g id="link_RenderObject_RenderSliver"><path codeLine="10" d="M498.9398,100.8707 C519.0428,120.5717 529.754,131.069 546.87,147.843 " fill="none" id="RenderObject-backto-RenderSliver" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="486.084,88.272,494.7402,105.156,503.1394,96.5855,486.084,88.272" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RenderSliver to RenderProxySliver--><g id="link_RenderSliver_RenderProxySliver"><path codeLine="11" d="M588.3399,212.3973 C596.3359,230.0557 599.907,237.9408 607.939,255.6784 " fill="none" id="RenderSliver-backto-RenderProxySliver" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="580.915,196,582.8742,214.8722,593.8057,209.9223,580.915,196" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RenderBox to RenderShiftedBox--><g id="link_RenderBox_RenderShiftedBox"><path codeLine="13" d="M303.6601,212.3973 C295.6641,230.0557 292.093,237.9408 284.061,255.6784 " fill="none" id="RenderBox-backto-RenderShiftedBox" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="311.085,196,298.1943,209.9223,309.1258,214.8722,311.085,196" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RenderBox to RenderFlex--><g id="link_RenderBox_RenderFlex"><path codeLine="14" d="M362.0882,207.6961 C382.7452,225.3545 397.468,237.9408 418.218,255.6784 " fill="none" id="RenderBox-backto-RenderFlex" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="348.406,196,358.1895,212.2568,365.9869,203.1353,348.406,196" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[IqmgBYbAJ2vH24hDIqajya_AIWLoghaKW01Po5uXlY2nA3Mln1ei5G1ckoIM9Deh5C3PrborN8ce1ZhbLt2X66rJewkB8GTa8Ki45ELNL89aqGmBpiaiIor25mMhXahXiWf56iB1i12xwS4PcMabgIautKf8tYqdjG80]--></g></svg>

<h2 id="三棵树的生成过程"><a href="#三棵树的生成过程" class="headerlink" title="三棵树的生成过程"></a>三棵树的生成过程</h2><h3 id="RootWidget创建过程"><a href="#RootWidget创建过程" class="headerlink" title="RootWidget创建过程"></a>RootWidget创建过程</h3><pre class="mermaid">

zenuml
WidgetsBinding.wrapWithDefaultView {

}
WidgetsBinding.scheduleAttachRootWidget {
    &quot;异步执行attachRootWidget&quot;
}
WidgetsBinding.attachRootWidget {
    new RootWidget
    attachToBuildOwner {
        RootWidget.attach {
            new RootElement
            RootElement.assignOwner
            BuildOwner.buildScope {
                RootElement.&quot;callback执行mount&quot; {
                    _rebuild {
                        &quot;Element.updateChild&quot;
                    }
                }
                &quot;首次build _dirtyElements为空&quot;
            }
        }
    }
}
</pre>

<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> runApp(Widget app) &#123; <span class="comment">//app就是用户组装的widget配置信息</span></span><br><span class="line">  <span class="keyword">final</span> WidgetsBinding binding = WidgetsFlutterBinding.ensureInitialized();</span><br><span class="line">  <span class="comment">//1. wrapWithDefaultView(app)会给app在加一个parent，这个parent就是View，View继承自StatelessWidget</span></span><br><span class="line">  <span class="comment">//2. scheduleAttachRootWidget异步调用attachRootWidget(rootWidget)</span></span><br><span class="line">  <span class="comment">//3. scheduleWarmUpFrame立马进行帧刷新，而不会等待Vsync信号</span></span><br><span class="line">  binding</span><br><span class="line">    ..scheduleAttachRootWidget(binding.wrapWithDefaultView(app))</span><br><span class="line">    ..scheduleWarmUpFrame();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//WidgetsBinding</span></span><br><span class="line"><span class="keyword">void</span> attachToBuildOwner(RootWidget widget) &#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">bool</span> isBootstrapFrame = rootElement == <span class="keyword">null</span>;</span><br><span class="line">  _readyToProduceFrames = <span class="keyword">true</span>;</span><br><span class="line">  <span class="comment">//RootWidget.attach会创建RootElement，并执行RootElement.mount，RootElement的parent为null</span></span><br><span class="line">  _rootElement = widget.attach(buildOwner!, rootElement <span class="keyword">as</span> RootElement?);</span><br><span class="line">  <span class="keyword">if</span> (isBootstrapFrame) &#123;</span><br><span class="line">    SchedulerBinding.instance.ensureVisualUpdate();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Element的根是RootElement，RootElement的mount就是创建Element树的起点：</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Element?</span> updateChild(<span class="built_in">Element?</span> child, Widget? newWidget, <span class="built_in">Object?</span> newSlot) &#123;</span><br><span class="line">  <span class="keyword">if</span> (newWidget == <span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (child != <span class="keyword">null</span>) &#123; </span><br><span class="line">      <span class="comment">//1. newWidget为空，child不为空，则将child从树中删除</span></span><br><span class="line">      <span class="comment">//deactivateChild(child)会执行下面语句：</span></span><br><span class="line">      <span class="comment">//a) child._parent = null;   从Element树中删除</span></span><br><span class="line">      <span class="comment">//b) child.detachRenderObject();  //render树中删除</span></span><br><span class="line">      <span class="comment">//c) owner!._inactiveElements.add(child);  添加到列表中最终会执行child.deactivate()</span></span><br><span class="line">      deactivateChild(child);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2. newWidget和child都为空，直接返回</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">Element</span> newChild;</span><br><span class="line">  <span class="keyword">if</span> (child != <span class="keyword">null</span>) &#123; <span class="comment">//3. newWidget和child都不为空</span></span><br><span class="line">    <span class="keyword">if</span> (child.widget == newWidget) &#123; <span class="comment">//3.1 widget是相同的实例，比如用const修饰的Widget</span></span><br><span class="line">      <span class="keyword">if</span> (child.slot != newSlot) &#123;</span><br><span class="line">        <span class="comment">//只有具备多个child的Element才给child分配slot，只有单个child的slog始终为null。</span></span><br><span class="line">        <span class="comment">//比如MultiChildRenderObjectElement.mount方法中会给每个child生成一个IndexedSlot</span></span><br><span class="line">        updateSlotForChild(child, newSlot);</span><br><span class="line">      &#125;</span><br><span class="line">      newChild = child; <span class="comment">//复用原来的Element</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Widget.canUpdate(child.widget, newWidget)) &#123; <span class="comment">//3.2 判断runtimeType和key是否都相同</span></span><br><span class="line">      <span class="keyword">if</span> (child.slot != newSlot) &#123;</span><br><span class="line">        updateSlotForChild(child, newSlot);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//newWidget会赋值给Element._widget，不同Element还有自己的实现：</span></span><br><span class="line">      <span class="comment">//* SingleChildRenderObjectElement.update中会继续执行updateChild</span></span><br><span class="line">      <span class="comment">//* MultiChildRenderObjectElement.update中执行updateChildren，会对比新旧两个列表，然后根据情况执行更新、删除、插入等操作</span></span><br><span class="line">      child.update(newWidget);</span><br><span class="line">      newChild = child;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; <span class="comment">//3.3 widget变成了完全不同的widget</span></span><br><span class="line">      deactivateChild(child); <span class="comment">//从树中删除老的Element和RenderObject</span></span><br><span class="line">      newChild = inflateWidget(newWidget, newSlot);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123; <span class="comment">//4. newWidget不为空，child为空，要添加新的child</span></span><br><span class="line">    newChild = inflateWidget(newWidget, newSlot);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> newChild;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在RootWidget首次执行mount时，走的是第4分支（newWidget不为空，child为空）。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Element</span> inflateWidget(Widget newWidget, <span class="built_in">Object?</span> newSlot) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> Key? key = newWidget.key;</span><br><span class="line">    <span class="keyword">if</span> (key <span class="keyword">is</span> GlobalKey) &#123;</span><br><span class="line">      <span class="comment">//取出GlobalKey关联的Element，如果还未关联或者Widget.canUpdate为false，则返回null。否则Element会从原来的树种摘除</span></span><br><span class="line">      <span class="keyword">final</span> <span class="built_in">Element?</span> newChild = _retakeInactiveElement(key, newWidget);</span><br><span class="line">      <span class="keyword">if</span> (newChild != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          newChild._activateWithParent(<span class="keyword">this</span>, newSlot);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (_) &#123;</span><br><span class="line">          ......</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//GlobalKey关联的Element可以复用，则执行updateChild</span></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">Element?</span> updatedChild = updateChild(newChild, newWidget, newSlot);</span><br><span class="line">        <span class="keyword">return</span> updatedChild!;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建新Element，比如StatefulWidget.createElement()</span></span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">Element</span> newChild = newWidget.createElement();</span><br><span class="line">    <span class="comment">//新的Element挂载到parent(this)上</span></span><br><span class="line">    newChild.mount(<span class="keyword">this</span>, newSlot);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> newChild;</span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;...&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Element-mount"><a href="#Element-mount" class="headerlink" title="Element.mount"></a>Element.mount</h3><p>下面是Element.mount的代码实现：</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> mount(<span class="built_in">Element?</span> parent, <span class="built_in">Object?</span> newSlot) &#123;</span><br><span class="line">  _parent = parent;</span><br><span class="line">  _slot = newSlot;</span><br><span class="line">  _lifecycleState = _ElementLifecycle.active;</span><br><span class="line">  _depth = _parent != <span class="keyword">null</span> ? _parent!.depth + <span class="number">1</span> : <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> (parent != <span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="comment">// Only assign ownership if the parent is non-null. If parent is null</span></span><br><span class="line">    <span class="comment">// (the root node), the owner should have already been assigned.</span></span><br><span class="line">    <span class="comment">// See RootRenderObjectElement.assignOwner().</span></span><br><span class="line">    _owner = parent.owner;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">final</span> Key? key = widget.key;</span><br><span class="line">  <span class="keyword">if</span> (key <span class="keyword">is</span> GlobalKey) &#123;</span><br><span class="line">    owner!._registerGlobalKey(key, <span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  _updateInheritance();  <span class="comment">//_inheritedElements = _parent?._inheritedElements;</span></span><br><span class="line">  attachNotificationTree();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Element.mount默认实现是更新_parent/_slot等。除了默认实现外，其他子类Element都会有自己的实现。</p>
<h4 id="ComponentElement"><a href="#ComponentElement" class="headerlink" title="ComponentElement"></a>ComponentElement</h4><p>ComponentElement是一个组合类，本身不会产生RenderObject。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">//ComponentElement</span></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> mount(<span class="built_in">Element?</span> parent, <span class="built_in">Object?</span> newSlot) &#123;</span><br><span class="line">    <span class="keyword">super</span>.mount(parent, newSlot);</span><br><span class="line">    _firstBuild();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> _firstBuild() &#123; <span class="comment">//StatefulElement会重写_firstBuild来执行didChangeDependencies</span></span><br><span class="line">    rebuild(); <span class="comment">// 最终会调用performRebuild.</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">void</span> performRebuild() &#123;</span><br><span class="line">    Widget? built;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      built = build(); <span class="comment">//执行StatelessWidget.build或者State&lt;StatefulWidget&gt;.build，用来创建一个newWidget传给updateChild</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (e, stack) &#123; ... &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">//将新build的newWidget</span></span><br><span class="line">      _child = updateChild(_child, built, slot);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e, stack) &#123; ... &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h4 id="SingleChildRenderObjectElement"><a href="#SingleChildRenderObjectElement" class="headerlink" title="SingleChildRenderObjectElement"></a>SingleChildRenderObjectElement</h4><p>SingleChildRenderObjectElement继承自RenderObjectElement，会创建自己的RenderObject。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">//SingleChildRenderObjectElement</span></span><br><span class="line">  <span class="keyword">void</span> mount(<span class="built_in">Element?</span> parent, <span class="built_in">Object?</span> newSlot) &#123;</span><br><span class="line">    <span class="keyword">super</span>.mount(parent, newSlot); <span class="comment">//RenderObjectElement.mount</span></span><br><span class="line">    _child = updateChild(_child, (widget <span class="keyword">as</span> SingleChildRenderObjectWidget).child, <span class="keyword">null</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//RenderObjectElement</span></span><br><span class="line">  <span class="keyword">void</span> mount(<span class="built_in">Element?</span> parent, <span class="built_in">Object?</span> newSlot) &#123;</span><br><span class="line">    <span class="keyword">super</span>.mount(parent, newSlot); <span class="comment">//调用Element.mount，更新_parent等信息</span></span><br><span class="line">    _renderObject = (widget <span class="keyword">as</span> RenderObjectWidget).createRenderObject(<span class="keyword">this</span>);  <span class="comment">//创建RenderObject</span></span><br><span class="line">    <span class="comment">//attachRenderObject会把新创建的RenderObject挂载到render tree中；</span></span><br><span class="line">    <span class="comment">//但当前Element的parent不一定是RenderObjectElement，因此会从Element树中向上找最近的RenderObjectElement进行挂载，</span></span><br><span class="line">    attachRenderObject(newSlot);</span><br><span class="line">    <span class="keyword">super</span>.performRebuild(); <span class="comment">// clears the &quot;dirty&quot; flag</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h4 id="MultiChildRenderObjectElement"><a href="#MultiChildRenderObjectElement" class="headerlink" title="MultiChildRenderObjectElement"></a>MultiChildRenderObjectElement</h4><p>MultiChildRenderObjectElement也是继承自RenderObjectElement，有多个孩子Element。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="meta">@override</span></span><br><span class="line"><span class="keyword">void</span> mount(<span class="built_in">Element?</span> parent, <span class="built_in">Object?</span> newSlot) &#123;</span><br><span class="line">  <span class="comment">//调用父类RenderObjectElement.mount，会创建RenderObject，并挂载到render tree</span></span><br><span class="line">  <span class="keyword">super</span>.mount(parent, newSlot);</span><br><span class="line">  <span class="keyword">final</span> MultiChildRenderObjectWidget multiChildRenderObjectWidget = widget <span class="keyword">as</span> MultiChildRenderObjectWidget;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">List</span>&lt;<span class="built_in">Element</span>&gt; children = <span class="built_in">List</span>&lt;<span class="built_in">Element</span>&gt;.filled(multiChildRenderObjectWidget.children.length, _NullElement.instance);</span><br><span class="line">  <span class="built_in">Element?</span> previousChild;</span><br><span class="line">  <span class="comment">//遍历widget children，比如Column/Row的children</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; children.length; i += <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">//inflateWidget的作用是为child widget创建Element，并执行Element.mount</span></span><br><span class="line">    <span class="comment">//新建一个IndexedSlot，第一个参数是index，第二个参数是前一个兄弟Element</span></span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">Element</span> newChild = inflateWidget(multiChildRenderObjectWidget.children[i], IndexedSlot&lt;<span class="built_in">Element?</span>&gt;(i, previousChild));</span><br><span class="line">    children[i] = newChild; <span class="comment">//child elment放到children数组中</span></span><br><span class="line">    previousChild = newChild;</span><br><span class="line">  &#125;</span><br><span class="line">  _children = children;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter Layout过程分析</title>
    <url>/posts/7f544006.html</url>
    <content><![CDATA[<p>layout的基本流程：</p>
<ol>
<li>parent将约束信息传递给child，来限制child的最大宽高；</li>
<li>child根据根据约束信息确认自己的大小(如果儿子还有孙子，则儿子继续执行所有1~4的布局流程)；</li>
<li>parent根据child返回的大小来确定自己的大小；</li>
<li>parent确定child的位置偏移，并将位置偏移记录在child.parentData.offset中；</li>
</ol>
<h2 id="Center的布局"><a href="#Center的布局" class="headerlink" title="Center的布局"></a>Center的布局</h2><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">//RenderPositionedBox</span></span><br><span class="line">  <span class="keyword">void</span> performLayout() &#123;</span><br><span class="line">    <span class="keyword">final</span> BoxConstraints constraints = <span class="keyword">this</span>.constraints;</span><br><span class="line">    <span class="comment">//当需要缩放，或者约束的宽度为无限大时 shrinkWrapWidth=true</span></span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">bool</span> shrinkWrapWidth = _widthFactor != <span class="keyword">null</span> || constraints.maxWidth == <span class="built_in">double</span>.infinity;</span><br><span class="line">    <span class="comment">//同上</span></span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">bool</span> shrinkWrapHeight = _heightFactor != <span class="keyword">null</span> || constraints.maxHeight == <span class="built_in">double</span>.infinity;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (child != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="comment">//child根据parent的约束进行布局，layout最终还是会调用performLayout来计算布局</span></span><br><span class="line">      child!.layout(constraints.loosen(), parentUsesSize: <span class="keyword">true</span>);</span><br><span class="line">      <span class="comment">//</span></span><br><span class="line">      size = constraints.constrain(Size(</span><br><span class="line">        shrinkWrapWidth ? child!.size.width * (_widthFactor ?? <span class="number">1.0</span>) : <span class="built_in">double</span>.infinity,</span><br><span class="line">        shrinkWrapHeight ? child!.size.height * (_heightFactor ?? <span class="number">1.0</span>) : <span class="built_in">double</span>.infinity,</span><br><span class="line">      ));</span><br><span class="line">      alignChild();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">//如果没有child，则返回一个无限大的布局大小</span></span><br><span class="line">      size = constraints.constrain(Size(</span><br><span class="line">        shrinkWrapWidth ? <span class="number">0.0</span> : <span class="built_in">double</span>.infinity,</span><br><span class="line">        shrinkWrapHeight ? <span class="number">0.0</span> : <span class="built_in">double</span>.infinity,</span><br><span class="line">      ));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter渲染流程</title>
    <url>/posts/60dc81b5.html</url>
    <content><![CDATA[<h2 id="Flutter启动"><a href="#Flutter启动" class="headerlink" title="Flutter启动"></a>Flutter启动</h2><p>在main函数中会调用</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  runApp(<span class="keyword">const</span> MyApp());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>下面是flutter sdk内部源码：</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> runApp(Widget app) &#123;</span><br><span class="line">  <span class="keyword">final</span> WidgetsBinding binding = WidgetsFlutterBinding.ensureInitialized();</span><br><span class="line">  binding</span><br><span class="line">    ..scheduleAttachRootWidget(binding.wrapWithDefaultView(app))</span><br><span class="line">    ..scheduleWarmUpFrame();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WidgetsFlutterBinding</span> <span class="keyword">extends</span> <span class="title">BindingBase</span> </span></span><br><span class="line"><span class="class">    <span class="title">with</span> <span class="title">GestureBinding</span>, </span></span><br><span class="line"><span class="class">        <span class="title">SchedulerBinding</span>, </span></span><br><span class="line"><span class="class">        <span class="title">ServicesBinding</span>, </span></span><br><span class="line"><span class="class">        <span class="title">PaintingBinding</span>, </span></span><br><span class="line"><span class="class">        <span class="title">SemanticsBinding</span>, </span></span><br><span class="line"><span class="class">        <span class="title">RendererBinding</span>, </span></span><br><span class="line"><span class="class">        <span class="title">WidgetsBinding</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> WidgetsBinding ensureInitialized() &#123;</span><br><span class="line">    <span class="keyword">if</span> (WidgetsBinding._instance == <span class="keyword">null</span>) &#123;</span><br><span class="line">      WidgetsFlutterBinding();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> WidgetsBinding.instance;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>WidgetsFlutterBinding继承自BindingBase，但通过with语句混入了各种Binding，我们都知道mixin的类是没有构造函数的。ensureInitialized()会调用WidgetsFlutterBinding构造函数，主要实现在BindingBase构造函数中。BindingBase在构造函数中会调用initInstances()，这个函数在各个mixin的Binding类中都有实现，首先调用的是WidgetsBinding的实现，然后一层一层调用super.initInstances()，这样所以Binding类的initInstances()都会被执行。下面是initInstances的调用时序：</p>
<pre class="mermaid">

zenuml
WidgetsBinding.initInstances {
    RendererBinding.initInstances {
        SemanticsBinding.initInstances {
            PaintingBinding.initInstances {
                ServicesBinding.initInstances {
                    SchedulerBinding.initInstances {
                        GestureBinding.initInstances {
                            return
                        }
                        return
                    }
                    return
                }
                createImageCache()
                return
            }
            return
        }
        createRootPipelineOwner
        return
    }
    &quot;_buildOwner &#x3D; BuildOwner();&quot;
    &quot;buildOwner!.onBuildScheduled &#x3D; _handleBuildScheduled;&quot;
}
</pre>

<ul>
<li><p>GestureBinding.initInstances：会向PlatformDispatcher设置手势事件的回调，会把从flutter engine接收的数据包解析成PointerEvent，包括PointerDownEvent、PointerUpEvent等；</p>
</li>
<li><p>SchedulerBinding提供了scheduleFrame()接口来主动触发一次绘制刷新。并且还会向PlatformDispatcher注册屏幕刷新事件的回调，如下：</p>
  <figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> ensureFrameCallbacksRegistered() &#123;</span><br><span class="line">platformDispatcher.onBeginFrame ??= _handleBeginFrame;</span><br><span class="line">platformDispatcher.onDrawFrame ??= _handleDrawFrame;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>当setState是就会调用到SchedulerBinding.scheduleFrame()</p>
<h2 id="启动渲染流程"><a href="#启动渲染流程" class="headerlink" title="启动渲染流程"></a>启动渲染流程</h2><p>在<code>packages/flutter/lib/src/widgets/binding.dart</code>中的<code>WidgetsBinding.drawFrame()</code>的注释中介绍了渲染流程。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="296px" preserveAspectRatio="none" style="width:503px;height:296px;background:#FFFFFF;" version="1.1" viewBox="0 0 503 296" width="503px" zoomAndPan="magnify"><defs/><g><!--class FlutterView--><g id="elem_FlutterView"><rect codeLine="1" fill="#F1F1F1" height="64.2969" id="FlutterView" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="160" x="7" y="116"/><ellipse cx="42.25" cy="132" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M44.5938,127.6719 C43.6563,127.2344 43.0625,127.0938 42.1875,127.0938 C39.5625,127.0938 37.5625,129.1719 37.5625,131.8906 L37.5625,133.0156 C37.5625,135.5938 39.6719,137.4844 42.5625,137.4844 C43.7813,137.4844 44.9375,137.1875 45.6875,136.6406 C46.2656,136.2344 46.5938,135.7813 46.5938,135.3906 C46.5938,134.9375 46.2031,134.5469 45.7344,134.5469 C45.5156,134.5469 45.3125,134.625 45.125,134.8125 C44.6719,135.2969 44.6719,135.2969 44.4844,135.3906 C44.0625,135.6563 43.375,135.7813 42.6094,135.7813 C40.5625,135.7813 39.2656,134.6875 39.2656,132.9844 L39.2656,131.8906 C39.2656,130.1094 40.5156,128.7969 42.25,128.7969 C42.8281,128.7969 43.4375,128.9531 43.9063,129.2031 C44.3906,129.4844 44.5625,129.7031 44.6563,130.1094 C44.7188,130.5156 44.75,130.6406 44.8906,130.7656 C45.0313,130.9063 45.2656,131.0156 45.4844,131.0156 C45.75,131.0156 46.0156,130.875 46.1875,130.6563 C46.2969,130.5 46.3281,130.3125 46.3281,129.8906 L46.3281,128.4688 C46.3281,128.0313 46.3125,127.9063 46.2188,127.75 C46.0625,127.4844 45.7813,127.3438 45.4844,127.3438 C45.1875,127.3438 44.9844,127.4375 44.7656,127.75 L44.5938,127.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="60.75" y="136.8467">FlutterView</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="166" y1="148" y2="148"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="166" y1="156" y2="156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="13" y="172.9951">render(Scene scene)</text></g><!--class RenderObject--><g id="elem_RenderObject"><rect fill="#F1F1F1" height="48" id="RenderObject" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="194.5" y="7"/><ellipse cx="209.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M211.8438,18.6719 C210.9063,18.2344 210.3125,18.0938 209.4375,18.0938 C206.8125,18.0938 204.8125,20.1719 204.8125,22.8906 L204.8125,24.0156 C204.8125,26.5938 206.9219,28.4844 209.8125,28.4844 C211.0313,28.4844 212.1875,28.1875 212.9375,27.6406 C213.5156,27.2344 213.8438,26.7813 213.8438,26.3906 C213.8438,25.9375 213.4531,25.5469 212.9844,25.5469 C212.7656,25.5469 212.5625,25.625 212.375,25.8125 C211.9219,26.2969 211.9219,26.2969 211.7344,26.3906 C211.3125,26.6563 210.625,26.7813 209.8594,26.7813 C207.8125,26.7813 206.5156,25.6875 206.5156,23.9844 L206.5156,22.8906 C206.5156,21.1094 207.7656,19.7969 209.5,19.7969 C210.0781,19.7969 210.6875,19.9531 211.1563,20.2031 C211.6406,20.4844 211.8125,20.7031 211.9063,21.1094 C211.9688,21.5156 212,21.6406 212.1406,21.7656 C212.2813,21.9063 212.5156,22.0156 212.7344,22.0156 C213,22.0156 213.2656,21.875 213.4375,21.6563 C213.5469,21.5 213.5781,21.3125 213.5781,20.8906 L213.5781,19.4688 C213.5781,19.0313 213.5625,18.9063 213.4688,18.75 C213.3125,18.4844 213.0313,18.3438 212.7344,18.3438 C212.4375,18.3438 212.2344,18.4375 212.0156,18.75 L211.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="223.5" y="27.8467">RenderObject</text><line style="stroke:#181818;stroke-width:0.5;" x1="195.5" x2="326.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="195.5" x2="326.5" y1="47" y2="47"/></g><!--class RenderView--><g id="elem_RenderView"><rect fill="#F1F1F1" height="48" id="RenderView" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="118" x="202" y="124"/><ellipse cx="217" cy="140" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M219.3438,135.6719 C218.4063,135.2344 217.8125,135.0938 216.9375,135.0938 C214.3125,135.0938 212.3125,137.1719 212.3125,139.8906 L212.3125,141.0156 C212.3125,143.5938 214.4219,145.4844 217.3125,145.4844 C218.5313,145.4844 219.6875,145.1875 220.4375,144.6406 C221.0156,144.2344 221.3438,143.7813 221.3438,143.3906 C221.3438,142.9375 220.9531,142.5469 220.4844,142.5469 C220.2656,142.5469 220.0625,142.625 219.875,142.8125 C219.4219,143.2969 219.4219,143.2969 219.2344,143.3906 C218.8125,143.6563 218.125,143.7813 217.3594,143.7813 C215.3125,143.7813 214.0156,142.6875 214.0156,140.9844 L214.0156,139.8906 C214.0156,138.1094 215.2656,136.7969 217,136.7969 C217.5781,136.7969 218.1875,136.9531 218.6563,137.2031 C219.1406,137.4844 219.3125,137.7031 219.4063,138.1094 C219.4688,138.5156 219.5,138.6406 219.6406,138.7656 C219.7813,138.9063 220.0156,139.0156 220.2344,139.0156 C220.5,139.0156 220.7656,138.875 220.9375,138.6563 C221.0469,138.5 221.0781,138.3125 221.0781,137.8906 L221.0781,136.4688 C221.0781,136.0313 221.0625,135.9063 220.9688,135.75 C220.8125,135.4844 220.5313,135.3438 220.2344,135.3438 C219.9375,135.3438 219.7344,135.4375 219.5156,135.75 L219.3438,135.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="231" y="144.8467">RenderView</text><line style="stroke:#181818;stroke-width:0.5;" x1="203" x2="319" y1="156" y2="156"/><line style="stroke:#181818;stroke-width:0.5;" x1="203" x2="319" y1="164" y2="164"/></g><!--class RenderBox--><g id="elem_RenderBox"><rect fill="#F1F1F1" height="48" id="RenderBox" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="111" x="385.5" y="124"/><ellipse cx="400.5" cy="140" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M402.8438,135.6719 C401.9063,135.2344 401.3125,135.0938 400.4375,135.0938 C397.8125,135.0938 395.8125,137.1719 395.8125,139.8906 L395.8125,141.0156 C395.8125,143.5938 397.9219,145.4844 400.8125,145.4844 C402.0313,145.4844 403.1875,145.1875 403.9375,144.6406 C404.5156,144.2344 404.8438,143.7813 404.8438,143.3906 C404.8438,142.9375 404.4531,142.5469 403.9844,142.5469 C403.7656,142.5469 403.5625,142.625 403.375,142.8125 C402.9219,143.2969 402.9219,143.2969 402.7344,143.3906 C402.3125,143.6563 401.625,143.7813 400.8594,143.7813 C398.8125,143.7813 397.5156,142.6875 397.5156,140.9844 L397.5156,139.8906 C397.5156,138.1094 398.7656,136.7969 400.5,136.7969 C401.0781,136.7969 401.6875,136.9531 402.1563,137.2031 C402.6406,137.4844 402.8125,137.7031 402.9063,138.1094 C402.9688,138.5156 403,138.6406 403.1406,138.7656 C403.2813,138.9063 403.5156,139.0156 403.7344,139.0156 C404,139.0156 404.2656,138.875 404.4375,138.6563 C404.5469,138.5 404.5781,138.3125 404.5781,137.8906 L404.5781,136.4688 C404.5781,136.0313 404.5625,135.9063 404.4688,135.75 C404.3125,135.4844 404.0313,135.3438 403.7344,135.3438 C403.4375,135.3438 403.2344,135.4375 403.0156,135.75 L402.8438,135.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="414.5" y="144.8467">RenderBox</text><line style="stroke:#181818;stroke-width:0.5;" x1="386.5" x2="495.5" y1="156" y2="156"/><line style="stroke:#181818;stroke-width:0.5;" x1="386.5" x2="495.5" y1="164" y2="164"/></g><!--class Scene--><g id="elem_Scene"><rect fill="#F1F1F1" height="48" id="Scene" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="76" x="49" y="241"/><ellipse cx="64" cy="257" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M66.3438,252.6719 C65.4063,252.2344 64.8125,252.0938 63.9375,252.0938 C61.3125,252.0938 59.3125,254.1719 59.3125,256.8906 L59.3125,258.0156 C59.3125,260.5938 61.4219,262.4844 64.3125,262.4844 C65.5313,262.4844 66.6875,262.1875 67.4375,261.6406 C68.0156,261.2344 68.3438,260.7813 68.3438,260.3906 C68.3438,259.9375 67.9531,259.5469 67.4844,259.5469 C67.2656,259.5469 67.0625,259.625 66.875,259.8125 C66.4219,260.2969 66.4219,260.2969 66.2344,260.3906 C65.8125,260.6563 65.125,260.7813 64.3594,260.7813 C62.3125,260.7813 61.0156,259.6875 61.0156,257.9844 L61.0156,256.8906 C61.0156,255.1094 62.2656,253.7969 64,253.7969 C64.5781,253.7969 65.1875,253.9531 65.6563,254.2031 C66.1406,254.4844 66.3125,254.7031 66.4063,255.1094 C66.4688,255.5156 66.5,255.6406 66.6406,255.7656 C66.7813,255.9063 67.0156,256.0156 67.2344,256.0156 C67.5,256.0156 67.7656,255.875 67.9375,255.6563 C68.0469,255.5 68.0781,255.3125 68.0781,254.8906 L68.0781,253.4688 C68.0781,253.0313 68.0625,252.9063 67.9688,252.75 C67.8125,252.4844 67.5313,252.3438 67.2344,252.3438 C66.9375,252.3438 66.7344,252.4375 66.5156,252.75 L66.3438,252.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="44" x="78" y="261.8467">Scene</text><line style="stroke:#181818;stroke-width:0.5;" x1="50" x2="124" y1="273" y2="273"/><line style="stroke:#181818;stroke-width:0.5;" x1="50" x2="124" y1="281" y2="281"/></g><!--reverse link RenderObject to RenderView--><g id="link_RenderObject_RenderView"><path codeLine="5" d="M261,73.272 C261,93.224 261,103.821 261,123.763 " fill="none" id="RenderObject-backto-RenderView" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="261,55.272,255,73.272,267,73.272,261,55.272" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RenderView to RenderBox--><g id="link_RenderView_RenderBox"><path codeLine="6" d="M332.438,148 C353.328,148 364.711,148 385.283,148 " fill="none" id="RenderView-backto-RenderBox" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="320.438,148,326.438,152,332.438,148,326.438,144,320.438,148" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="29" x="338.25" y="141.0669">child</text></g><!--link FlutterView to RenderView--><g id="link_FlutterView_RenderView"><path codeLine="7" d="M167.203,148 C178.683,148 178.164,148 189.644,148 " fill="none" id="FlutterView-to-RenderView" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="201.644,148,195.644,144,189.644,148,195.644,152,201.644,148" style="stroke:#181818;stroke-width:1.0;"/></g><!--link FlutterView to Scene--><g id="link_FlutterView_Scene"><path codeLine="8" d="M87,180.121 C87,199.2781 87,217.4234 87,234.8836 " fill="none" id="FlutterView-to-Scene" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="87,240.8836,91,231.8836,87,235.8836,83,231.8836,87,240.8836" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[Iyv9B2vMSCifBIb9BGhBJ2rNgEPI08AYrBoKr2ADuEJKl5I5OX2foLNBnHK45lPFoafDBb6mgT7LLO28W7Ho8PWAMZ09f_mA1Ik5v8pCd1HK-PpKj19TP8kva1sXgskd0BOR0000]--></g></svg>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="186px" preserveAspectRatio="none" style="width:639px;height:186px;background:#FFFFFF;" version="1.1" viewBox="0 0 639 186" width="639px" zoomAndPan="magnify"><defs/><g><!--class RendererBinding--><g id="elem_RendererBinding"><rect codeLine="1" fill="#F1F1F1" height="64.2969" id="RendererBinding" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="153" x="247.5" y="7"/><ellipse cx="262.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M264.8438,18.6719 C263.9063,18.2344 263.3125,18.0938 262.4375,18.0938 C259.8125,18.0938 257.8125,20.1719 257.8125,22.8906 L257.8125,24.0156 C257.8125,26.5938 259.9219,28.4844 262.8125,28.4844 C264.0313,28.4844 265.1875,28.1875 265.9375,27.6406 C266.5156,27.2344 266.8438,26.7813 266.8438,26.3906 C266.8438,25.9375 266.4531,25.5469 265.9844,25.5469 C265.7656,25.5469 265.5625,25.625 265.375,25.8125 C264.9219,26.2969 264.9219,26.2969 264.7344,26.3906 C264.3125,26.6563 263.625,26.7813 262.8594,26.7813 C260.8125,26.7813 259.5156,25.6875 259.5156,23.9844 L259.5156,22.8906 C259.5156,21.1094 260.7656,19.7969 262.5,19.7969 C263.0781,19.7969 263.6875,19.9531 264.1563,20.2031 C264.6406,20.4844 264.8125,20.7031 264.9063,21.1094 C264.9688,21.5156 265,21.6406 265.1406,21.7656 C265.2813,21.9063 265.5156,22.0156 265.7344,22.0156 C266,22.0156 266.2656,21.875 266.4375,21.6563 C266.5469,21.5 266.5781,21.3125 266.5781,20.8906 L266.5781,19.4688 C266.5781,19.0313 266.5625,18.9063 266.4688,18.75 C266.3125,18.4844 266.0313,18.3438 265.7344,18.3438 C265.4375,18.3438 265.2344,18.4375 265.0156,18.75 L264.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="276.5" y="27.8467">RendererBinding</text><line style="stroke:#181818;stroke-width:0.5;" x1="248.5" x2="399.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="248.5" x2="399.5" y1="47" y2="47"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="253.5" y="63.9951">drawFrame()</text></g><!--class PipelineOwner--><g id="elem_PipelineOwner"><rect fill="#F1F1F1" height="48" id="PipelineOwner" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="136" x="7" y="131"/><ellipse cx="22" cy="147" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,142.6719 C23.4063,142.2344 22.8125,142.0938 21.9375,142.0938 C19.3125,142.0938 17.3125,144.1719 17.3125,146.8906 L17.3125,148.0156 C17.3125,150.5938 19.4219,152.4844 22.3125,152.4844 C23.5313,152.4844 24.6875,152.1875 25.4375,151.6406 C26.0156,151.2344 26.3438,150.7813 26.3438,150.3906 C26.3438,149.9375 25.9531,149.5469 25.4844,149.5469 C25.2656,149.5469 25.0625,149.625 24.875,149.8125 C24.4219,150.2969 24.4219,150.2969 24.2344,150.3906 C23.8125,150.6563 23.125,150.7813 22.3594,150.7813 C20.3125,150.7813 19.0156,149.6875 19.0156,147.9844 L19.0156,146.8906 C19.0156,145.1094 20.2656,143.7969 22,143.7969 C22.5781,143.7969 23.1875,143.9531 23.6563,144.2031 C24.1406,144.4844 24.3125,144.7031 24.4063,145.1094 C24.4688,145.5156 24.5,145.6406 24.6406,145.7656 C24.7813,145.9063 25.0156,146.0156 25.2344,146.0156 C25.5,146.0156 25.7656,145.875 25.9375,145.6563 C26.0469,145.5 26.0781,145.3125 26.0781,144.8906 L26.0781,143.4688 C26.0781,143.0313 26.0625,142.9063 25.9688,142.75 C25.8125,142.4844 25.5313,142.3438 25.2344,142.3438 C24.9375,142.3438 24.7344,142.4375 24.5156,142.75 L24.3438,142.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="36" y="151.8467">PipelineOwner</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="142" y1="163" y2="163"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="142" y1="171" y2="171"/></g><!--class RenderView--><g id="elem_RenderView"><rect fill="#F1F1F1" height="48" id="RenderView" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="118" x="514" y="131"/><ellipse cx="529" cy="147" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M531.3438,142.6719 C530.4063,142.2344 529.8125,142.0938 528.9375,142.0938 C526.3125,142.0938 524.3125,144.1719 524.3125,146.8906 L524.3125,148.0156 C524.3125,150.5938 526.4219,152.4844 529.3125,152.4844 C530.5313,152.4844 531.6875,152.1875 532.4375,151.6406 C533.0156,151.2344 533.3438,150.7813 533.3438,150.3906 C533.3438,149.9375 532.9531,149.5469 532.4844,149.5469 C532.2656,149.5469 532.0625,149.625 531.875,149.8125 C531.4219,150.2969 531.4219,150.2969 531.2344,150.3906 C530.8125,150.6563 530.125,150.7813 529.3594,150.7813 C527.3125,150.7813 526.0156,149.6875 526.0156,147.9844 L526.0156,146.8906 C526.0156,145.1094 527.2656,143.7969 529,143.7969 C529.5781,143.7969 530.1875,143.9531 530.6563,144.2031 C531.1406,144.4844 531.3125,144.7031 531.4063,145.1094 C531.4688,145.5156 531.5,145.6406 531.6406,145.7656 C531.7813,145.9063 532.0156,146.0156 532.2344,146.0156 C532.5,146.0156 532.7656,145.875 532.9375,145.6563 C533.0469,145.5 533.0781,145.3125 533.0781,144.8906 L533.0781,143.4688 C533.0781,143.0313 533.0625,142.9063 532.9688,142.75 C532.8125,142.4844 532.5313,142.3438 532.2344,142.3438 C531.9375,142.3438 531.7344,142.4375 531.5156,142.75 L531.3438,142.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="543" y="151.8467">RenderView</text><line style="stroke:#181818;stroke-width:0.5;" x1="515" x2="631" y1="163" y2="163"/><line style="stroke:#181818;stroke-width:0.5;" x1="515" x2="631" y1="171" y2="171"/></g><!--class AbstractNode--><g id="elem_AbstractNode"><rect fill="#F1F1F1" height="48" id="AbstractNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="132" x="178" y="131"/><ellipse cx="193" cy="147" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M195.3438,142.6719 C194.4063,142.2344 193.8125,142.0938 192.9375,142.0938 C190.3125,142.0938 188.3125,144.1719 188.3125,146.8906 L188.3125,148.0156 C188.3125,150.5938 190.4219,152.4844 193.3125,152.4844 C194.5313,152.4844 195.6875,152.1875 196.4375,151.6406 C197.0156,151.2344 197.3438,150.7813 197.3438,150.3906 C197.3438,149.9375 196.9531,149.5469 196.4844,149.5469 C196.2656,149.5469 196.0625,149.625 195.875,149.8125 C195.4219,150.2969 195.4219,150.2969 195.2344,150.3906 C194.8125,150.6563 194.125,150.7813 193.3594,150.7813 C191.3125,150.7813 190.0156,149.6875 190.0156,147.9844 L190.0156,146.8906 C190.0156,145.1094 191.2656,143.7969 193,143.7969 C193.5781,143.7969 194.1875,143.9531 194.6563,144.2031 C195.1406,144.4844 195.3125,144.7031 195.4063,145.1094 C195.4688,145.5156 195.5,145.6406 195.6406,145.7656 C195.7813,145.9063 196.0156,146.0156 196.2344,146.0156 C196.5,146.0156 196.7656,145.875 196.9375,145.6563 C197.0469,145.5 197.0781,145.3125 197.0781,144.8906 L197.0781,143.4688 C197.0781,143.0313 197.0625,142.9063 196.9688,142.75 C196.8125,142.4844 196.5313,142.3438 196.2344,142.3438 C195.9375,142.3438 195.7344,142.4375 195.5156,142.75 L195.3438,142.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="207" y="151.8467">AbstractNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="179" x2="309" y1="163" y2="163"/><line style="stroke:#181818;stroke-width:0.5;" x1="179" x2="309" y1="171" y2="171"/></g><!--class RenderObject--><g id="elem_RenderObject"><rect fill="#F1F1F1" height="48" id="RenderObject" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="133" x="345.5" y="131"/><ellipse cx="360.5" cy="147" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M362.8438,142.6719 C361.9063,142.2344 361.3125,142.0938 360.4375,142.0938 C357.8125,142.0938 355.8125,144.1719 355.8125,146.8906 L355.8125,148.0156 C355.8125,150.5938 357.9219,152.4844 360.8125,152.4844 C362.0313,152.4844 363.1875,152.1875 363.9375,151.6406 C364.5156,151.2344 364.8438,150.7813 364.8438,150.3906 C364.8438,149.9375 364.4531,149.5469 363.9844,149.5469 C363.7656,149.5469 363.5625,149.625 363.375,149.8125 C362.9219,150.2969 362.9219,150.2969 362.7344,150.3906 C362.3125,150.6563 361.625,150.7813 360.8594,150.7813 C358.8125,150.7813 357.5156,149.6875 357.5156,147.9844 L357.5156,146.8906 C357.5156,145.1094 358.7656,143.7969 360.5,143.7969 C361.0781,143.7969 361.6875,143.9531 362.1563,144.2031 C362.6406,144.4844 362.8125,144.7031 362.9063,145.1094 C362.9688,145.5156 363,145.6406 363.1406,145.7656 C363.2813,145.9063 363.5156,146.0156 363.7344,146.0156 C364,146.0156 364.2656,145.875 364.4375,145.6563 C364.5469,145.5 364.5781,145.3125 364.5781,144.8906 L364.5781,143.4688 C364.5781,143.0313 364.5625,142.9063 364.4688,142.75 C364.3125,142.4844 364.0313,142.3438 363.7344,142.3438 C363.4375,142.3438 363.2344,142.4375 363.0156,142.75 L362.8438,142.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="374.5" y="151.8467">RenderObject</text><line style="stroke:#181818;stroke-width:0.5;" x1="346.5" x2="477.5" y1="163" y2="163"/><line style="stroke:#181818;stroke-width:0.5;" x1="346.5" x2="477.5" y1="171" y2="171"/></g><!--reverse link RendererBinding to PipelineOwner--><g id="link_RendererBinding_PipelineOwner"><path codeLine="4" d="M245.3782,75.9954 C204.0462,94.9186 162.999,113.7113 125.315,130.9644 " fill="none" id="RendererBinding-backto-PipelineOwner" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="256.289,71,249.1685,69.8607,245.3782,75.9954,252.4987,77.1346,256.289,71" style="stroke:#181818;stroke-width:1.0;"/></g><!--link RendererBinding to RenderView--><g id="link_RendererBinding_RenderView"><path codeLine="5" d="M391.711,71 C433.043,89.9232 479.5456,111.2136 517.2296,128.4667 " fill="none" id="RendererBinding-to-RenderView" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="522.685,130.9644,516.167,123.5809,518.1388,128.883,512.8368,130.8548,522.685,130.9644" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link PipelineOwner to AbstractNode--><g id="link_PipelineOwner_AbstractNode"><path codeLine="6" d="M155.326,155 C166.862,155 166.397,155 177.933,155 " fill="none" id="PipelineOwner-backto-AbstractNode" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="143.326,155,149.326,159,155.326,155,149.326,151,143.326,155" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link AbstractNode to RenderObject--><g id="link_AbstractNode_RenderObject"><path codeLine="7" d="M328.281,155 C339.937,155 333.592,155 345.247,155 " fill="none" id="AbstractNode-backto-RenderObject" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="310.281,155,328.281,161,328.281,149,310.281,155" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RenderObject to RenderView--><g id="link_RenderObject_RenderView"><path codeLine="8" d="M496.664,155 C508.333,155 502.002,155 513.672,155 " fill="none" id="RenderObject-backto-RenderView" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="478.664,155,496.664,161,496.664,149,478.664,155" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[Iyv9B2vM24hDIqajIYrooinBoSnBLwZcKW22bAB4ShUYnDnK3KskMYvqDLgwkWe1cGMfEPbvgVxbUQb562fqTUsW9eTbffPpeIW6QbTmJ2ekAKfCBl7BJqdbGkOesDJeGdNw9sMb9fTm8NEGP47c0W00]--></g></svg>

<p>绘制UI需要一个画布（Canvas）来进行绘制，然后PictureRecorder会生成一个Picture，并保存到PictureLayer中。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="170px" preserveAspectRatio="none" style="width:438px;height:170px;background:#FFFFFF;" version="1.1" viewBox="0 0 438 170" width="438px" zoomAndPan="magnify"><defs/><g><!--class Canvas--><g id="elem_Canvas"><rect fill="#F1F1F1" height="48" id="Canvas" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="82" x="7" y="7"/><ellipse cx="22" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,18.6719 C23.4063,18.2344 22.8125,18.0938 21.9375,18.0938 C19.3125,18.0938 17.3125,20.1719 17.3125,22.8906 L17.3125,24.0156 C17.3125,26.5938 19.4219,28.4844 22.3125,28.4844 C23.5313,28.4844 24.6875,28.1875 25.4375,27.6406 C26.0156,27.2344 26.3438,26.7813 26.3438,26.3906 C26.3438,25.9375 25.9531,25.5469 25.4844,25.5469 C25.2656,25.5469 25.0625,25.625 24.875,25.8125 C24.4219,26.2969 24.4219,26.2969 24.2344,26.3906 C23.8125,26.6563 23.125,26.7813 22.3594,26.7813 C20.3125,26.7813 19.0156,25.6875 19.0156,23.9844 L19.0156,22.8906 C19.0156,21.1094 20.2656,19.7969 22,19.7969 C22.5781,19.7969 23.1875,19.9531 23.6563,20.2031 C24.1406,20.4844 24.3125,20.7031 24.4063,21.1094 C24.4688,21.5156 24.5,21.6406 24.6406,21.7656 C24.7813,21.9063 25.0156,22.0156 25.2344,22.0156 C25.5,22.0156 25.7656,21.875 25.9375,21.6563 C26.0469,21.5 26.0781,21.3125 26.0781,20.8906 L26.0781,19.4688 C26.0781,19.0313 26.0625,18.9063 25.9688,18.75 C25.8125,18.4844 25.5313,18.3438 25.2344,18.3438 C24.9375,18.3438 24.7344,18.4375 24.5156,18.75 L24.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="36" y="27.8467">Canvas</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="88" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="88" y1="47" y2="47"/></g><!--class PictureRecorder--><g id="elem_PictureRecorder"><rect fill="#F1F1F1" height="48" id="PictureRecorder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="149" x="124.5" y="7"/><ellipse cx="139.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M141.8438,18.6719 C140.9063,18.2344 140.3125,18.0938 139.4375,18.0938 C136.8125,18.0938 134.8125,20.1719 134.8125,22.8906 L134.8125,24.0156 C134.8125,26.5938 136.9219,28.4844 139.8125,28.4844 C141.0313,28.4844 142.1875,28.1875 142.9375,27.6406 C143.5156,27.2344 143.8438,26.7813 143.8438,26.3906 C143.8438,25.9375 143.4531,25.5469 142.9844,25.5469 C142.7656,25.5469 142.5625,25.625 142.375,25.8125 C141.9219,26.2969 141.9219,26.2969 141.7344,26.3906 C141.3125,26.6563 140.625,26.7813 139.8594,26.7813 C137.8125,26.7813 136.5156,25.6875 136.5156,23.9844 L136.5156,22.8906 C136.5156,21.1094 137.7656,19.7969 139.5,19.7969 C140.0781,19.7969 140.6875,19.9531 141.1563,20.2031 C141.6406,20.4844 141.8125,20.7031 141.9063,21.1094 C141.9688,21.5156 142,21.6406 142.1406,21.7656 C142.2813,21.9063 142.5156,22.0156 142.7344,22.0156 C143,22.0156 143.2656,21.875 143.4375,21.6563 C143.5469,21.5 143.5781,21.3125 143.5781,20.8906 L143.5781,19.4688 C143.5781,19.0313 143.5625,18.9063 143.4688,18.75 C143.3125,18.4844 143.0313,18.3438 142.7344,18.3438 C142.4375,18.3438 142.2344,18.4375 142.0156,18.75 L141.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="153.5" y="27.8467">PictureRecorder</text><line style="stroke:#181818;stroke-width:0.5;" x1="125.5" x2="272.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="125.5" x2="272.5" y1="47" y2="47"/></g><!--class Picture--><g id="elem_Picture"><rect fill="#F1F1F1" height="48" id="Picture" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="83" x="242.5" y="115"/><ellipse cx="257.5" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M259.8438,126.6719 C258.9063,126.2344 258.3125,126.0938 257.4375,126.0938 C254.8125,126.0938 252.8125,128.1719 252.8125,130.8906 L252.8125,132.0156 C252.8125,134.5938 254.9219,136.4844 257.8125,136.4844 C259.0313,136.4844 260.1875,136.1875 260.9375,135.6406 C261.5156,135.2344 261.8438,134.7813 261.8438,134.3906 C261.8438,133.9375 261.4531,133.5469 260.9844,133.5469 C260.7656,133.5469 260.5625,133.625 260.375,133.8125 C259.9219,134.2969 259.9219,134.2969 259.7344,134.3906 C259.3125,134.6563 258.625,134.7813 257.8594,134.7813 C255.8125,134.7813 254.5156,133.6875 254.5156,131.9844 L254.5156,130.8906 C254.5156,129.1094 255.7656,127.7969 257.5,127.7969 C258.0781,127.7969 258.6875,127.9531 259.1563,128.2031 C259.6406,128.4844 259.8125,128.7031 259.9063,129.1094 C259.9688,129.5156 260,129.6406 260.1406,129.7656 C260.2813,129.9063 260.5156,130.0156 260.7344,130.0156 C261,130.0156 261.2656,129.875 261.4375,129.6563 C261.5469,129.5 261.5781,129.3125 261.5781,128.8906 L261.5781,127.4688 C261.5781,127.0313 261.5625,126.9063 261.4688,126.75 C261.3125,126.4844 261.0313,126.3438 260.7344,126.3438 C260.4375,126.3438 260.2344,126.4375 260.0156,126.75 L259.8438,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="271.5" y="135.8467">Picture</text><line style="stroke:#181818;stroke-width:0.5;" x1="243.5" x2="324.5" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="243.5" x2="324.5" y1="155" y2="155"/></g><!--class PictureLayer--><g id="elem_PictureLayer"><rect fill="#F1F1F1" height="48" id="PictureLayer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="122" x="309" y="7"/><ellipse cx="324" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M326.3438,18.6719 C325.4063,18.2344 324.8125,18.0938 323.9375,18.0938 C321.3125,18.0938 319.3125,20.1719 319.3125,22.8906 L319.3125,24.0156 C319.3125,26.5938 321.4219,28.4844 324.3125,28.4844 C325.5313,28.4844 326.6875,28.1875 327.4375,27.6406 C328.0156,27.2344 328.3438,26.7813 328.3438,26.3906 C328.3438,25.9375 327.9531,25.5469 327.4844,25.5469 C327.2656,25.5469 327.0625,25.625 326.875,25.8125 C326.4219,26.2969 326.4219,26.2969 326.2344,26.3906 C325.8125,26.6563 325.125,26.7813 324.3594,26.7813 C322.3125,26.7813 321.0156,25.6875 321.0156,23.9844 L321.0156,22.8906 C321.0156,21.1094 322.2656,19.7969 324,19.7969 C324.5781,19.7969 325.1875,19.9531 325.6563,20.2031 C326.1406,20.4844 326.3125,20.7031 326.4063,21.1094 C326.4688,21.5156 326.5,21.6406 326.6406,21.7656 C326.7813,21.9063 327.0156,22.0156 327.2344,22.0156 C327.5,22.0156 327.7656,21.875 327.9375,21.6563 C328.0469,21.5 328.0781,21.3125 328.0781,20.8906 L328.0781,19.4688 C328.0781,19.0313 328.0625,18.9063 327.9688,18.75 C327.8125,18.4844 327.5313,18.3438 327.2344,18.3438 C326.9375,18.3438 326.7344,18.4375 326.5156,18.75 L326.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="338" y="27.8467">PictureLayer</text><line style="stroke:#181818;stroke-width:0.5;" x1="310" x2="430" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="310" x2="430" y1="47" y2="47"/></g><!--reverse link Canvas to PictureRecorder--><g id="link_Canvas_PictureRecorder"><path codeLine="1" d="M101.0184,47.8383 C112.7323,50.3693 112.717,49.066 124.431,48.997 " fill="none" id="Canvas-backto-PictureRecorder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="89.2891,45.304,94.309,50.4809,101.0184,47.8383,95.9985,42.6614,89.2891,45.304" style="stroke:#181818;stroke-width:1.0;"/></g><!--link Canvas to PictureRecorder--><g id="link_Canvas_PictureRecorder"><path codeLine="2" d="M89.2891,16.696 C101.003,14.165 100.7172,12.8633 112.4312,12.9323 " fill="none" id="Canvas-to-PictureRecorder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="124.431,13.003,118.4547,8.9677,112.4312,12.9323,118.4075,16.9676,124.431,13.003" style="stroke:#181818;stroke-width:1.0;"/></g><!--link PictureRecorder to Picture--><g id="link_PictureRecorder_Picture"><path codeLine="3" d="M217.444,55 C231.603,72.6584 247.3214,92.26 261.5454,109.9976 " fill="none" id="PictureRecorder-to-Picture" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="265.299,114.6784,262.7891,105.1547,262.171,110.7777,256.548,110.1596,265.299,114.6784" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link PictureLayer to Picture--><g id="link_PictureLayer_Picture"><path codeLine="4" d="M343.7787,64.3189 C329.4527,81.9773 317.312,96.9408 302.921,114.6784 " fill="none" id="PictureLayer-backto-Picture" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="351.339,55,344.4526,57.1394,343.7787,64.3189,350.6652,62.1795,351.339,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[SqxCAqiiLj3ILGZ8J2ufBKeDIatEBqf9BU9oXiZeQc78eF4LT7NjO6fWSZw9bK09BLsuiG00]--></g></svg>

<h2 id="C-层类图"><a href="#C-层类图" class="headerlink" title="C++层类图"></a>C++层类图</h2><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="311px" preserveAspectRatio="none" style="width:409px;height:311px;background:#FFFFFF;" version="1.1" viewBox="0 0 409 311" width="409px" zoomAndPan="magnify"><defs/><g><!--class PictureRecorder--><g id="elem_PictureRecorder"><rect codeLine="1" fill="#F1F1F1" height="80.5938" id="PictureRecorder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="268" x="109" y="7"/><ellipse cx="180.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M182.5938,18.6719 C181.6563,18.2344 181.0625,18.0938 180.1875,18.0938 C177.5625,18.0938 175.5625,20.1719 175.5625,22.8906 L175.5625,24.0156 C175.5625,26.5938 177.6719,28.4844 180.5625,28.4844 C181.7813,28.4844 182.9375,28.1875 183.6875,27.6406 C184.2656,27.2344 184.5938,26.7813 184.5938,26.3906 C184.5938,25.9375 184.2031,25.5469 183.7344,25.5469 C183.5156,25.5469 183.3125,25.625 183.125,25.8125 C182.6719,26.2969 182.6719,26.2969 182.4844,26.3906 C182.0625,26.6563 181.375,26.7813 180.6094,26.7813 C178.5625,26.7813 177.2656,25.6875 177.2656,23.9844 L177.2656,22.8906 C177.2656,21.1094 178.5156,19.7969 180.25,19.7969 C180.8281,19.7969 181.4375,19.9531 181.9063,20.2031 C182.3906,20.4844 182.5625,20.7031 182.6563,21.1094 C182.7188,21.5156 182.75,21.6406 182.8906,21.7656 C183.0313,21.9063 183.2656,22.0156 183.4844,22.0156 C183.75,22.0156 184.0156,21.875 184.1875,21.6563 C184.2969,21.5 184.3281,21.3125 184.3281,20.8906 L184.3281,19.4688 C184.3281,19.0313 184.3125,18.9063 184.2188,18.75 C184.0625,18.4844 183.7813,18.3438 183.4844,18.3438 C183.1875,18.3438 182.9844,18.4375 182.7656,18.75 L182.5938,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="200.75" y="27.8467">PictureRecorder</text><line style="stroke:#181818;stroke-width:0.5;" x1="110" x2="376" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="110" x2="376" y1="47" y2="47"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="256" x="115" y="63.9951">DisplayListBuilder BeginRecording()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="115" y="80.292">Picture endRecording()</text></g><!--class DisplayListBuilder--><g id="elem_DisplayListBuilder"><rect fill="#F1F1F1" height="48" id="DisplayListBuilder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="160" x="7" y="148"/><ellipse cx="22" cy="164" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,159.6719 C23.4063,159.2344 22.8125,159.0938 21.9375,159.0938 C19.3125,159.0938 17.3125,161.1719 17.3125,163.8906 L17.3125,165.0156 C17.3125,167.5938 19.4219,169.4844 22.3125,169.4844 C23.5313,169.4844 24.6875,169.1875 25.4375,168.6406 C26.0156,168.2344 26.3438,167.7813 26.3438,167.3906 C26.3438,166.9375 25.9531,166.5469 25.4844,166.5469 C25.2656,166.5469 25.0625,166.625 24.875,166.8125 C24.4219,167.2969 24.4219,167.2969 24.2344,167.3906 C23.8125,167.6563 23.125,167.7813 22.3594,167.7813 C20.3125,167.7813 19.0156,166.6875 19.0156,164.9844 L19.0156,163.8906 C19.0156,162.1094 20.2656,160.7969 22,160.7969 C22.5781,160.7969 23.1875,160.9531 23.6563,161.2031 C24.1406,161.4844 24.3125,161.7031 24.4063,162.1094 C24.4688,162.5156 24.5,162.6406 24.6406,162.7656 C24.7813,162.9063 25.0156,163.0156 25.2344,163.0156 C25.5,163.0156 25.7656,162.875 25.9375,162.6563 C26.0469,162.5 26.0781,162.3125 26.0781,161.8906 L26.0781,160.4688 C26.0781,160.0313 26.0625,159.9063 25.9688,159.75 C25.8125,159.4844 25.5313,159.3438 25.2344,159.3438 C24.9375,159.3438 24.7344,159.4375 24.5156,159.75 L24.3438,159.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="36" y="168.8467">DisplayListBuilder</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="166" y1="180" y2="180"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="166" y1="188" y2="188"/></g><!--class Canvas--><g id="elem_Canvas"><rect fill="#F1F1F1" height="48" id="Canvas" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="82" x="202" y="148"/><ellipse cx="217" cy="164" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M219.3438,159.6719 C218.4063,159.2344 217.8125,159.0938 216.9375,159.0938 C214.3125,159.0938 212.3125,161.1719 212.3125,163.8906 L212.3125,165.0156 C212.3125,167.5938 214.4219,169.4844 217.3125,169.4844 C218.5313,169.4844 219.6875,169.1875 220.4375,168.6406 C221.0156,168.2344 221.3438,167.7813 221.3438,167.3906 C221.3438,166.9375 220.9531,166.5469 220.4844,166.5469 C220.2656,166.5469 220.0625,166.625 219.875,166.8125 C219.4219,167.2969 219.4219,167.2969 219.2344,167.3906 C218.8125,167.6563 218.125,167.7813 217.3594,167.7813 C215.3125,167.7813 214.0156,166.6875 214.0156,164.9844 L214.0156,163.8906 C214.0156,162.1094 215.2656,160.7969 217,160.7969 C217.5781,160.7969 218.1875,160.9531 218.6563,161.2031 C219.1406,161.4844 219.3125,161.7031 219.4063,162.1094 C219.4688,162.5156 219.5,162.6406 219.6406,162.7656 C219.7813,162.9063 220.0156,163.0156 220.2344,163.0156 C220.5,163.0156 220.7656,162.875 220.9375,162.6563 C221.0469,162.5 221.0781,162.3125 221.0781,161.8906 L221.0781,160.4688 C221.0781,160.0313 221.0625,159.9063 220.9688,159.75 C220.8125,159.4844 220.5313,159.3438 220.2344,159.3438 C219.9375,159.3438 219.7344,159.4375 219.5156,159.75 L219.3438,159.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="231" y="168.8467">Canvas</text><line style="stroke:#181818;stroke-width:0.5;" x1="203" x2="283" y1="180" y2="180"/><line style="stroke:#181818;stroke-width:0.5;" x1="203" x2="283" y1="188" y2="188"/></g><!--class Picture--><g id="elem_Picture"><rect fill="#F1F1F1" height="48" id="Picture" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="83" x="319.5" y="148"/><ellipse cx="334.5" cy="164" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M336.8438,159.6719 C335.9063,159.2344 335.3125,159.0938 334.4375,159.0938 C331.8125,159.0938 329.8125,161.1719 329.8125,163.8906 L329.8125,165.0156 C329.8125,167.5938 331.9219,169.4844 334.8125,169.4844 C336.0313,169.4844 337.1875,169.1875 337.9375,168.6406 C338.5156,168.2344 338.8438,167.7813 338.8438,167.3906 C338.8438,166.9375 338.4531,166.5469 337.9844,166.5469 C337.7656,166.5469 337.5625,166.625 337.375,166.8125 C336.9219,167.2969 336.9219,167.2969 336.7344,167.3906 C336.3125,167.6563 335.625,167.7813 334.8594,167.7813 C332.8125,167.7813 331.5156,166.6875 331.5156,164.9844 L331.5156,163.8906 C331.5156,162.1094 332.7656,160.7969 334.5,160.7969 C335.0781,160.7969 335.6875,160.9531 336.1563,161.2031 C336.6406,161.4844 336.8125,161.7031 336.9063,162.1094 C336.9688,162.5156 337,162.6406 337.1406,162.7656 C337.2813,162.9063 337.5156,163.0156 337.7344,163.0156 C338,163.0156 338.2656,162.875 338.4375,162.6563 C338.5469,162.5 338.5781,162.3125 338.5781,161.8906 L338.5781,160.4688 C338.5781,160.0313 338.5625,159.9063 338.4688,159.75 C338.3125,159.4844 338.0313,159.3438 337.7344,159.3438 C337.4375,159.3438 337.2344,159.4375 337.0156,159.75 L336.8438,159.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="348.5" y="168.8467">Picture</text><line style="stroke:#181818;stroke-width:0.5;" x1="320.5" x2="401.5" y1="180" y2="180"/><line style="stroke:#181818;stroke-width:0.5;" x1="320.5" x2="401.5" y1="188" y2="188"/></g><!--class DisplayList--><g id="elem_DisplayList"><rect fill="#F1F1F1" height="48" id="DisplayList" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="110" x="169" y="256"/><ellipse cx="184" cy="272" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M186.3438,267.6719 C185.4063,267.2344 184.8125,267.0938 183.9375,267.0938 C181.3125,267.0938 179.3125,269.1719 179.3125,271.8906 L179.3125,273.0156 C179.3125,275.5938 181.4219,277.4844 184.3125,277.4844 C185.5313,277.4844 186.6875,277.1875 187.4375,276.6406 C188.0156,276.2344 188.3438,275.7813 188.3438,275.3906 C188.3438,274.9375 187.9531,274.5469 187.4844,274.5469 C187.2656,274.5469 187.0625,274.625 186.875,274.8125 C186.4219,275.2969 186.4219,275.2969 186.2344,275.3906 C185.8125,275.6563 185.125,275.7813 184.3594,275.7813 C182.3125,275.7813 181.0156,274.6875 181.0156,272.9844 L181.0156,271.8906 C181.0156,270.1094 182.2656,268.7969 184,268.7969 C184.5781,268.7969 185.1875,268.9531 185.6563,269.2031 C186.1406,269.4844 186.3125,269.7031 186.4063,270.1094 C186.4688,270.5156 186.5,270.6406 186.6406,270.7656 C186.7813,270.9063 187.0156,271.0156 187.2344,271.0156 C187.5,271.0156 187.7656,270.875 187.9375,270.6563 C188.0469,270.5 188.0781,270.3125 188.0781,269.8906 L188.0781,268.4688 C188.0781,268.0313 188.0625,267.9063 187.9688,267.75 C187.8125,267.4844 187.5313,267.3438 187.2344,267.3438 C186.9375,267.3438 186.7344,267.4375 186.5156,267.75 L186.3438,267.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="198" y="276.8467">DisplayList</text><line style="stroke:#181818;stroke-width:0.5;" x1="170" x2="278" y1="288" y2="288"/><line style="stroke:#181818;stroke-width:0.5;" x1="170" x2="278" y1="296" y2="296"/></g><!--reverse link PictureRecorder to DisplayListBuilder--><g id="link_PictureRecorder_DisplayListBuilder"><path codeLine="5" d="M182.9132,95.6833 C157.8252,115.3843 137.851,131.069 116.49,147.843 " fill="none" id="PictureRecorder-backto-DisplayListBuilder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="192.351,88.272,185.1617,88.8317,182.9132,95.6833,190.1025,95.1236,192.351,88.272" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link PictureRecorder to Canvas--><g id="link_PictureRecorder_Canvas"><path codeLine="6" d="M230.1349,100.2426 C228.7539,119.9436 230.188,131.069 232.761,147.843 " fill="none" id="PictureRecorder-backto-Canvas" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="230.974,88.272,226.5642,93.9776,230.1349,100.2426,234.5447,94.537,230.974,88.272" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Canvas to PictureRecorder--><g id="link_Canvas_PictureRecorder"><path codeLine="7" d="M255.7655,135.9982 C258.4895,119.2242 257.196,107.973 255.733,88.272 " fill="none" id="Canvas-backto-PictureRecorder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="253.842,147.843,258.752,142.5618,255.7655,135.9982,250.8555,141.2794,253.842,147.843" style="stroke:#181818;stroke-width:1.0;"/></g><!--link PictureRecorder to Picture--><g id="link_PictureRecorder_Picture"><path codeLine="8" d="M281.311,88.272 C300.289,107.973 318.3736,126.7476 334.5306,143.5216 " fill="none" id="PictureRecorder-to-Picture" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="338.693,147.843,335.3303,138.586,335.2243,144.2419,329.5685,144.1359,338.693,147.843" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Picture to DisplayList--><g id="link_Picture_DisplayList"><path codeLine="9" d="M321.7823,203.3434 C298.9603,221.0018 277.067,237.9408 254.142,255.6784 " fill="none" id="Picture-backto-DisplayList" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="331.273,196,324.0798,196.5081,321.7823,203.3434,328.9754,202.8353,331.273,196" style="stroke:#181818;stroke-width:1.0;"/></g><!--link DisplayListBuilder to DisplayList--><g id="link_DisplayListBuilder_DisplayList"><path codeLine="10" d="M116.727,196 C139.549,213.6584 166.1876,234.2692 189.1126,252.0068 " fill="none" id="DisplayListBuilder-to-DisplayList" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="193.858,255.6784,189.1876,247.0073,189.9035,252.6187,184.2921,253.3346,193.858,255.6784" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[Iyv9B2vM2CXCBYajIWrAJSulIaajKgZcKW02bypYWfp4If_CuXAdqimSa8HJQdfc7aHPPbwwXYPO7LItGcfU2h9KBHUwiLgwkbWCnQhCEJ6lBB6O2qA1HT1KOUZIrRM3gO79eLl8XSL786r8mW00]--></g></svg>

<p>PictureRecorder在<code>【flutter_engine】\lib\ui\painting\picture_recorder.h</code>中声明。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="603px" preserveAspectRatio="none" style="width:993px;height:603px;background:#FFFFFF;" version="1.1" viewBox="0 0 993 603" width="993px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="483.3516" style="stroke:#181818;stroke-width:1.0;" width="10" x="24.5" y="75.4297"/><rect fill="#FFFFFF" height="19" style="stroke:#181818;stroke-width:1.0;" width="10" x="227.5" y="373.9531"/><rect fill="#FFFFFF" height="71.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="227.5" y="449.3828"/><rect fill="#FFFFFF" height="182.9922" style="stroke:#181818;stroke-width:1.0;" width="10" x="422.5" y="153.8281"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="29" x2="29" y1="36.2969" y2="567.7813"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="232" x2="232" y1="36.2969" y2="567.7813"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="427" x2="427" y1="36.2969" y2="567.7813"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="564" x2="564" y1="192.4766" y2="567.7813"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="683" x2="683" y1="275.9063" y2="567.7813"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="790" x2="790" y1="417.6016" y2="567.7813"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="917" x2="917" y1="36.2969" y2="567.7813"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="49" x="5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="12" y="24.9951">main</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="49" x="5" y="566.7813"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="12" y="586.7764">main</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="127" x="169" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="176" y="24.9951">WidgetsBinding</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="127" x="169" y="566.7813"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="176" y="586.7764">WidgetsBinding</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="135" x="360" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="367" y="24.9951">RendererBinding</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="135" x="360" y="566.7813"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="367" y="586.7764">RendererBinding</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="118" x="505" y="566.7813"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="512" y="586.7764">PipelineOwner</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="100" x="633" y="566.7813"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="640" y="586.7764">RenderView</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="95" x="743" y="566.7813"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="750" y="586.7764">BuildOwner</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="139" x="848" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="855" y="24.9951">SchedulerBinding</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="139" x="848" y="566.7813"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="855" y="586.7764">SchedulerBinding</text><rect fill="#FFFFFF" height="483.3516" style="stroke:#181818;stroke-width:1.0;" width="10" x="24.5" y="75.4297"/><rect fill="#FFFFFF" height="19" style="stroke:#181818;stroke-width:1.0;" width="10" x="227.5" y="373.9531"/><rect fill="#FFFFFF" height="71.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="227.5" y="449.3828"/><rect fill="#FFFFFF" height="182.9922" style="stroke:#181818;stroke-width:1.0;" width="10" x="422.5" y="153.8281"/><line style="stroke:#181818;stroke-width:1.0;" x1="29.5" x2="76.5" y1="62.4297" y2="62.4297"/><line style="stroke:#181818;stroke-width:1.0;" x1="76.5" x2="76.5" y1="62.4297" y2="75.4297"/><line style="stroke:#181818;stroke-width:1.0;" x1="35.5" x2="76.5" y1="75.4297" y2="75.4297"/><polygon fill="#181818" points="45.5,71.4297,35.5,75.4297,45.5,79.4297,41.5,75.4297" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="46" x="41.5" y="57.3638">runApp</text><polygon fill="#181818" points="220.5,105.5625,230.5,109.5625,220.5,113.5625,224.5,109.5625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="34.5" x2="226.5" y1="109.5625" y2="109.5625"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="103" x="41.5" y="104.4966">ensureInitialized</text><polygon fill="#181818" points="410.5,149.8281,420.5,153.8281,410.5,157.8281,414.5,153.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="232.5" x2="416.5" y1="153.8281" y2="153.8281"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="80" x="239.5" y="133.6294">initInstances</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="171" x="239.5" y="148.7622">(BindingBase.initInstances)</text><polygon fill="#181818" points="493,163.8281,503,167.8281,493,171.8281,497,167.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="432.5" x2="499" y1="167.8281" y2="167.8281"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="118" x="505" y="161.8281"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="512" y="181.8232">PipelineOwner</text><line style="stroke:#181818;stroke-width:1.0;" x1="432.5" x2="474.5" y1="224.2578" y2="224.2578"/><line style="stroke:#181818;stroke-width:1.0;" x1="474.5" x2="474.5" y1="224.2578" y2="237.2578"/><line style="stroke:#181818;stroke-width:1.0;" x1="433.5" x2="474.5" y1="237.2578" y2="237.2578"/><polygon fill="#181818" points="443.5,233.2578,433.5,237.2578,443.5,241.2578,439.5,237.2578" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="96" x="439.5" y="219.1919">initRenderView</text><polygon fill="#181818" points="621,247.2578,631,251.2578,621,255.2578,625,251.2578" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="432.5" x2="627" y1="251.2578" y2="251.2578"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="100" x="633" y="245.2578"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="640" y="265.2529">RenderView</text><polygon fill="#181818" points="575,303.6875,565,307.6875,575,311.6875,571,307.6875" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="569" x2="682" y1="307.6875" y2="307.6875"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="85" x="581" y="302.6216">&#35774;&#32622;rootNode</text><polygon fill="#181818" points="671,332.8203,681,336.8203,671,340.8203,675,336.8203" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="427.5" x2="677" y1="336.8203" y2="336.8203"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="124" x="434.5" y="331.7544">prepareInitialFrame</text><line style="stroke:#181818;stroke-width:1.0;" x1="232.5" x2="279.5" y1="360.9531" y2="360.9531"/><line style="stroke:#181818;stroke-width:1.0;" x1="279.5" x2="279.5" y1="360.9531" y2="373.9531"/><line style="stroke:#181818;stroke-width:1.0;" x1="238.5" x2="279.5" y1="373.9531" y2="373.9531"/><polygon fill="#181818" points="248.5,369.9531,238.5,373.9531,248.5,377.9531,244.5,373.9531" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="80" x="244.5" y="355.8872">initInstances</text><polygon fill="#181818" points="731,388.9531,741,392.9531,731,396.9531,735,392.9531" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="232.5" x2="737" y1="392.9531" y2="392.9531"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="95" x="743" y="386.9531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="750" y="406.9482">BuildOwner</text><polygon fill="#181818" points="215.5,445.3828,225.5,449.3828,215.5,453.3828,219.5,449.3828" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="34.5" x2="221.5" y1="449.3828" y2="449.3828"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="174" x="41.5" y="444.3169">scheduleAttachRootWidget</text><line style="stroke:#181818;stroke-width:1.0;" x1="237.5" x2="279.5" y1="478.5156" y2="478.5156"/><line style="stroke:#181818;stroke-width:1.0;" x1="279.5" x2="279.5" y1="478.5156" y2="491.5156"/><line style="stroke:#181818;stroke-width:1.0;" x1="238.5" x2="279.5" y1="491.5156" y2="491.5156"/><polygon fill="#181818" points="248.5,487.5156,238.5,491.5156,248.5,495.5156,244.5,491.5156" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="116" x="244.5" y="473.4497">attachRootWidget</text><polygon fill="#181818" points="778.5,516.6484,788.5,520.6484,778.5,524.6484,782.5,520.6484" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="232.5" x2="784.5" y1="520.6484" y2="520.6484"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="69" x="239.5" y="515.5825">buildScope</text><polygon fill="#181818" points="905.5,545.7813,915.5,549.7813,905.5,553.7813,909.5,549.7813" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="34.5" x2="911.5" y1="549.7813" y2="549.7813"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="154" x="41.5" y="544.7153">scheduleWarmUpFrame</text><!--SRC=[XL51JiCm4Bpx5Jv2AtY03qZD0QaNGAsW5ovBF6fNIZQMxL29H_K7y1ru1acJb3HjoSdQsPsTyMnEBFhcJkVrEvqQxKkPEQVo5b-nNIE6XCMohBNHa51wp8KZKyOVi6emKf4M40iFtq7rNguOSmcH94LubQksbr30xL7lMWtfrSOdTiXOyBWLU3sPd9iPGercWxumjfSvTVTlwRuwqJJwP_Vr_RdpHH4V2ekHRKOx3qU7fEuzvL0Mb4P-fuYXMtKcnW5oak8PIb9oPWyXzUIEHzMb-zOQ8Tt0bXbcCLAwMLJ_ROR67HfDuvoUHQFVwcAP5Wx_cEsyBbjZlGjtNbVaysUt3_aN]--></g></svg>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="507px" preserveAspectRatio="none" style="width:976px;height:507px;background:#FFFFFF;" version="1.1" viewBox="0 0 976 507" width="976px" zoomAndPan="magnify"><defs/><g><!--class RenderObjectWidget--><g id="elem_RenderObjectWidget"><rect fill="#F1F1F1" height="48" id="RenderObjectWidget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="185" x="446.5" y="7"/><ellipse cx="461.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M463.8438,18.6719 C462.9063,18.2344 462.3125,18.0938 461.4375,18.0938 C458.8125,18.0938 456.8125,20.1719 456.8125,22.8906 L456.8125,24.0156 C456.8125,26.5938 458.9219,28.4844 461.8125,28.4844 C463.0313,28.4844 464.1875,28.1875 464.9375,27.6406 C465.5156,27.2344 465.8438,26.7813 465.8438,26.3906 C465.8438,25.9375 465.4531,25.5469 464.9844,25.5469 C464.7656,25.5469 464.5625,25.625 464.375,25.8125 C463.9219,26.2969 463.9219,26.2969 463.7344,26.3906 C463.3125,26.6563 462.625,26.7813 461.8594,26.7813 C459.8125,26.7813 458.5156,25.6875 458.5156,23.9844 L458.5156,22.8906 C458.5156,21.1094 459.7656,19.7969 461.5,19.7969 C462.0781,19.7969 462.6875,19.9531 463.1563,20.2031 C463.6406,20.4844 463.8125,20.7031 463.9063,21.1094 C463.9688,21.5156 464,21.6406 464.1406,21.7656 C464.2813,21.9063 464.5156,22.0156 464.7344,22.0156 C465,22.0156 465.2656,21.875 465.4375,21.6563 C465.5469,21.5 465.5781,21.3125 465.5781,20.8906 L465.5781,19.4688 C465.5781,19.0313 465.5625,18.9063 465.4688,18.75 C465.3125,18.4844 465.0313,18.3438 464.7344,18.3438 C464.4375,18.3438 464.2344,18.4375 464.0156,18.75 L463.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="475.5" y="27.8467">RenderObjectWidget</text><line style="stroke:#181818;stroke-width:0.5;" x1="447.5" x2="630.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="447.5" x2="630.5" y1="47" y2="47"/></g><!--class RenderObjectToWidgetAdapter--><g id="elem_RenderObjectToWidgetAdapter"><rect fill="#F1F1F1" height="48" id="RenderObjectToWidgetAdapter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="262" x="408" y="116"/><ellipse cx="423" cy="132" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M425.3438,127.6719 C424.4063,127.2344 423.8125,127.0938 422.9375,127.0938 C420.3125,127.0938 418.3125,129.1719 418.3125,131.8906 L418.3125,133.0156 C418.3125,135.5938 420.4219,137.4844 423.3125,137.4844 C424.5313,137.4844 425.6875,137.1875 426.4375,136.6406 C427.0156,136.2344 427.3438,135.7813 427.3438,135.3906 C427.3438,134.9375 426.9531,134.5469 426.4844,134.5469 C426.2656,134.5469 426.0625,134.625 425.875,134.8125 C425.4219,135.2969 425.4219,135.2969 425.2344,135.3906 C424.8125,135.6563 424.125,135.7813 423.3594,135.7813 C421.3125,135.7813 420.0156,134.6875 420.0156,132.9844 L420.0156,131.8906 C420.0156,130.1094 421.2656,128.7969 423,128.7969 C423.5781,128.7969 424.1875,128.9531 424.6563,129.2031 C425.1406,129.4844 425.3125,129.7031 425.4063,130.1094 C425.4688,130.5156 425.5,130.6406 425.6406,130.7656 C425.7813,130.9063 426.0156,131.0156 426.2344,131.0156 C426.5,131.0156 426.7656,130.875 426.9375,130.6563 C427.0469,130.5 427.0781,130.3125 427.0781,129.8906 L427.0781,128.4688 C427.0781,128.0313 427.0625,127.9063 426.9688,127.75 C426.8125,127.4844 426.5313,127.3438 426.2344,127.3438 C425.9375,127.3438 425.7344,127.4375 425.5156,127.75 L425.3438,127.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="437" y="136.8467">RenderObjectToWidgetAdapter</text><line style="stroke:#181818;stroke-width:0.5;" x1="409" x2="669" y1="148" y2="148"/><line style="stroke:#181818;stroke-width:0.5;" x1="409" x2="669" y1="156" y2="156"/></g><!--class RenderObjectToWidgetElement--><g id="elem_RenderObjectToWidgetElement"><rect fill="#F1F1F1" height="48" id="RenderObjectToWidgetElement" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="264" x="705" y="116"/><ellipse cx="720" cy="132" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M722.3438,127.6719 C721.4063,127.2344 720.8125,127.0938 719.9375,127.0938 C717.3125,127.0938 715.3125,129.1719 715.3125,131.8906 L715.3125,133.0156 C715.3125,135.5938 717.4219,137.4844 720.3125,137.4844 C721.5313,137.4844 722.6875,137.1875 723.4375,136.6406 C724.0156,136.2344 724.3438,135.7813 724.3438,135.3906 C724.3438,134.9375 723.9531,134.5469 723.4844,134.5469 C723.2656,134.5469 723.0625,134.625 722.875,134.8125 C722.4219,135.2969 722.4219,135.2969 722.2344,135.3906 C721.8125,135.6563 721.125,135.7813 720.3594,135.7813 C718.3125,135.7813 717.0156,134.6875 717.0156,132.9844 L717.0156,131.8906 C717.0156,130.1094 718.2656,128.7969 720,128.7969 C720.5781,128.7969 721.1875,128.9531 721.6563,129.2031 C722.1406,129.4844 722.3125,129.7031 722.4063,130.1094 C722.4688,130.5156 722.5,130.6406 722.6406,130.7656 C722.7813,130.9063 723.0156,131.0156 723.2344,131.0156 C723.5,131.0156 723.7656,130.875 723.9375,130.6563 C724.0469,130.5 724.0781,130.3125 724.0781,129.8906 L724.0781,128.4688 C724.0781,128.0313 724.0625,127.9063 723.9688,127.75 C723.8125,127.4844 723.5313,127.3438 723.2344,127.3438 C722.9375,127.3438 722.7344,127.4375 722.5156,127.75 L722.3438,127.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="232" x="734" y="136.8467">RenderObjectToWidgetElement</text><line style="stroke:#181818;stroke-width:0.5;" x1="706" x2="968" y1="148" y2="148"/><line style="stroke:#181818;stroke-width:0.5;" x1="706" x2="968" y1="156" y2="156"/></g><!--class RenderObjectElement--><g id="elem_RenderObjectElement"><rect fill="#F1F1F1" height="48" id="RenderObjectElement" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="194" x="740" y="7"/><ellipse cx="755" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M757.3438,18.6719 C756.4063,18.2344 755.8125,18.0938 754.9375,18.0938 C752.3125,18.0938 750.3125,20.1719 750.3125,22.8906 L750.3125,24.0156 C750.3125,26.5938 752.4219,28.4844 755.3125,28.4844 C756.5313,28.4844 757.6875,28.1875 758.4375,27.6406 C759.0156,27.2344 759.3438,26.7813 759.3438,26.3906 C759.3438,25.9375 758.9531,25.5469 758.4844,25.5469 C758.2656,25.5469 758.0625,25.625 757.875,25.8125 C757.4219,26.2969 757.4219,26.2969 757.2344,26.3906 C756.8125,26.6563 756.125,26.7813 755.3594,26.7813 C753.3125,26.7813 752.0156,25.6875 752.0156,23.9844 L752.0156,22.8906 C752.0156,21.1094 753.2656,19.7969 755,19.7969 C755.5781,19.7969 756.1875,19.9531 756.6563,20.2031 C757.1406,20.4844 757.3125,20.7031 757.4063,21.1094 C757.4688,21.5156 757.5,21.6406 757.6406,21.7656 C757.7813,21.9063 758.0156,22.0156 758.2344,22.0156 C758.5,22.0156 758.7656,21.875 758.9375,21.6563 C759.0469,21.5 759.0781,21.3125 759.0781,20.8906 L759.0781,19.4688 C759.0781,19.0313 759.0625,18.9063 758.9688,18.75 C758.8125,18.4844 758.5313,18.3438 758.2344,18.3438 C757.9375,18.3438 757.7344,18.4375 757.5156,18.75 L757.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="769" y="27.8467">RenderObjectElement</text><line style="stroke:#181818;stroke-width:0.5;" x1="741" x2="933" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="741" x2="933" y1="47" y2="47"/></g><!--class StatelessWidget--><g id="elem_StatelessWidget"><rect fill="#F1F1F1" height="48" id="StatelessWidget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="151" x="221.5" y="116"/><ellipse cx="236.5" cy="132" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M238.8438,127.6719 C237.9063,127.2344 237.3125,127.0938 236.4375,127.0938 C233.8125,127.0938 231.8125,129.1719 231.8125,131.8906 L231.8125,133.0156 C231.8125,135.5938 233.9219,137.4844 236.8125,137.4844 C238.0313,137.4844 239.1875,137.1875 239.9375,136.6406 C240.5156,136.2344 240.8438,135.7813 240.8438,135.3906 C240.8438,134.9375 240.4531,134.5469 239.9844,134.5469 C239.7656,134.5469 239.5625,134.625 239.375,134.8125 C238.9219,135.2969 238.9219,135.2969 238.7344,135.3906 C238.3125,135.6563 237.625,135.7813 236.8594,135.7813 C234.8125,135.7813 233.5156,134.6875 233.5156,132.9844 L233.5156,131.8906 C233.5156,130.1094 234.7656,128.7969 236.5,128.7969 C237.0781,128.7969 237.6875,128.9531 238.1563,129.2031 C238.6406,129.4844 238.8125,129.7031 238.9063,130.1094 C238.9688,130.5156 239,130.6406 239.1406,130.7656 C239.2813,130.9063 239.5156,131.0156 239.7344,131.0156 C240,131.0156 240.2656,130.875 240.4375,130.6563 C240.5469,130.5 240.5781,130.3125 240.5781,129.8906 L240.5781,128.4688 C240.5781,128.0313 240.5625,127.9063 240.4688,127.75 C240.3125,127.4844 240.0313,127.3438 239.7344,127.3438 C239.4375,127.3438 239.2344,127.4375 239.0156,127.75 L238.8438,127.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="250.5" y="136.8467">StatelessWidget</text><line style="stroke:#181818;stroke-width:0.5;" x1="222.5" x2="371.5" y1="148" y2="148"/><line style="stroke:#181818;stroke-width:0.5;" x1="222.5" x2="371.5" y1="156" y2="156"/></g><!--class View--><g id="elem_View"><rect fill="#F1F1F1" height="48" id="View" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="66" x="274" y="241"/><ellipse cx="289" cy="257" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M291.3438,252.6719 C290.4063,252.2344 289.8125,252.0938 288.9375,252.0938 C286.3125,252.0938 284.3125,254.1719 284.3125,256.8906 L284.3125,258.0156 C284.3125,260.5938 286.4219,262.4844 289.3125,262.4844 C290.5313,262.4844 291.6875,262.1875 292.4375,261.6406 C293.0156,261.2344 293.3438,260.7813 293.3438,260.3906 C293.3438,259.9375 292.9531,259.5469 292.4844,259.5469 C292.2656,259.5469 292.0625,259.625 291.875,259.8125 C291.4219,260.2969 291.4219,260.2969 291.2344,260.3906 C290.8125,260.6563 290.125,260.7813 289.3594,260.7813 C287.3125,260.7813 286.0156,259.6875 286.0156,257.9844 L286.0156,256.8906 C286.0156,255.1094 287.2656,253.7969 289,253.7969 C289.5781,253.7969 290.1875,253.9531 290.6563,254.2031 C291.1406,254.4844 291.3125,254.7031 291.4063,255.1094 C291.4688,255.5156 291.5,255.6406 291.6406,255.7656 C291.7813,255.9063 292.0156,256.0156 292.2344,256.0156 C292.5,256.0156 292.7656,255.875 292.9375,255.6563 C293.0469,255.5 293.0781,255.3125 293.0781,254.8906 L293.0781,253.4688 C293.0781,253.0313 293.0625,252.9063 292.9688,252.75 C292.8125,252.4844 292.5313,252.3438 292.2344,252.3438 C291.9375,252.3438 291.7344,252.4375 291.5156,252.75 L291.3438,252.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="34" x="303" y="261.8467">View</text><line style="stroke:#181818;stroke-width:0.5;" x1="275" x2="339" y1="273" y2="273"/><line style="stroke:#181818;stroke-width:0.5;" x1="275" x2="339" y1="281" y2="281"/></g><!--class FlutterView--><g id="elem_FlutterView"><rect fill="#F1F1F1" height="48" id="FlutterView" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="115" x="158.5" y="366"/><ellipse cx="173.5" cy="382" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M175.8438,377.6719 C174.9063,377.2344 174.3125,377.0938 173.4375,377.0938 C170.8125,377.0938 168.8125,379.1719 168.8125,381.8906 L168.8125,383.0156 C168.8125,385.5938 170.9219,387.4844 173.8125,387.4844 C175.0313,387.4844 176.1875,387.1875 176.9375,386.6406 C177.5156,386.2344 177.8438,385.7813 177.8438,385.3906 C177.8438,384.9375 177.4531,384.5469 176.9844,384.5469 C176.7656,384.5469 176.5625,384.625 176.375,384.8125 C175.9219,385.2969 175.9219,385.2969 175.7344,385.3906 C175.3125,385.6563 174.625,385.7813 173.8594,385.7813 C171.8125,385.7813 170.5156,384.6875 170.5156,382.9844 L170.5156,381.8906 C170.5156,380.1094 171.7656,378.7969 173.5,378.7969 C174.0781,378.7969 174.6875,378.9531 175.1563,379.2031 C175.6406,379.4844 175.8125,379.7031 175.9063,380.1094 C175.9688,380.5156 176,380.6406 176.1406,380.7656 C176.2813,380.9063 176.5156,381.0156 176.7344,381.0156 C177,381.0156 177.2656,380.875 177.4375,380.6563 C177.5469,380.5 177.5781,380.3125 177.5781,379.8906 L177.5781,378.4688 C177.5781,378.0313 177.5625,377.9063 177.4688,377.75 C177.3125,377.4844 177.0313,377.3438 176.7344,377.3438 C176.4375,377.3438 176.2344,377.4375 176.0156,377.75 L175.8438,377.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="187.5" y="386.8467">FlutterView</text><line style="stroke:#181818;stroke-width:0.5;" x1="159.5" x2="272.5" y1="398" y2="398"/><line style="stroke:#181818;stroke-width:0.5;" x1="159.5" x2="272.5" y1="406" y2="406"/></g><!--class MyApp--><g id="elem_MyApp"><rect fill="#F1F1F1" height="48" id="MyApp" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="82" x="309" y="366"/><ellipse cx="324" cy="382" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M326.3438,377.6719 C325.4063,377.2344 324.8125,377.0938 323.9375,377.0938 C321.3125,377.0938 319.3125,379.1719 319.3125,381.8906 L319.3125,383.0156 C319.3125,385.5938 321.4219,387.4844 324.3125,387.4844 C325.5313,387.4844 326.6875,387.1875 327.4375,386.6406 C328.0156,386.2344 328.3438,385.7813 328.3438,385.3906 C328.3438,384.9375 327.9531,384.5469 327.4844,384.5469 C327.2656,384.5469 327.0625,384.625 326.875,384.8125 C326.4219,385.2969 326.4219,385.2969 326.2344,385.3906 C325.8125,385.6563 325.125,385.7813 324.3594,385.7813 C322.3125,385.7813 321.0156,384.6875 321.0156,382.9844 L321.0156,381.8906 C321.0156,380.1094 322.2656,378.7969 324,378.7969 C324.5781,378.7969 325.1875,378.9531 325.6563,379.2031 C326.1406,379.4844 326.3125,379.7031 326.4063,380.1094 C326.4688,380.5156 326.5,380.6406 326.6406,380.7656 C326.7813,380.9063 327.0156,381.0156 327.2344,381.0156 C327.5,381.0156 327.7656,380.875 327.9375,380.6563 C328.0469,380.5 328.0781,380.3125 328.0781,379.8906 L328.0781,378.4688 C328.0781,378.0313 328.0625,377.9063 327.9688,377.75 C327.8125,377.4844 327.5313,377.3438 327.2344,377.3438 C326.9375,377.3438 326.7344,377.4375 326.5156,377.75 L326.3438,377.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="338" y="386.8467">MyApp</text><line style="stroke:#181818;stroke-width:0.5;" x1="310" x2="390" y1="398" y2="398"/><line style="stroke:#181818;stroke-width:0.5;" x1="310" x2="390" y1="406" y2="406"/></g><g id="elem_GMN16"><path d="M291,475 L291,500.1328 A0,0 0 0 0 291,500.1328 L409,500.1328 A0,0 0 0 0 409,500.1328 L409,485 L399,475 L354,475 L350,414.1179 L346,475 L291,475 A0,0 0 0 0 291,475 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M399,475 L399,485 L409,485 L399,475 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="97" x="297" y="492.0669">&#29992;&#25143;&#23618;&#26681;Widget</text></g><!--class InheritedWidget--><g id="elem_InheritedWidget"><rect fill="#F1F1F1" height="48" id="InheritedWidget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="150" x="16" y="116"/><ellipse cx="31" cy="132" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M33.3438,127.6719 C32.4063,127.2344 31.8125,127.0938 30.9375,127.0938 C28.3125,127.0938 26.3125,129.1719 26.3125,131.8906 L26.3125,133.0156 C26.3125,135.5938 28.4219,137.4844 31.3125,137.4844 C32.5313,137.4844 33.6875,137.1875 34.4375,136.6406 C35.0156,136.2344 35.3438,135.7813 35.3438,135.3906 C35.3438,134.9375 34.9531,134.5469 34.4844,134.5469 C34.2656,134.5469 34.0625,134.625 33.875,134.8125 C33.4219,135.2969 33.4219,135.2969 33.2344,135.3906 C32.8125,135.6563 32.125,135.7813 31.3594,135.7813 C29.3125,135.7813 28.0156,134.6875 28.0156,132.9844 L28.0156,131.8906 C28.0156,130.1094 29.2656,128.7969 31,128.7969 C31.5781,128.7969 32.1875,128.9531 32.6563,129.2031 C33.1406,129.4844 33.3125,129.7031 33.4063,130.1094 C33.4688,130.5156 33.5,130.6406 33.6406,130.7656 C33.7813,130.9063 34.0156,131.0156 34.2344,131.0156 C34.5,131.0156 34.7656,130.875 34.9375,130.6563 C35.0469,130.5 35.0781,130.3125 35.0781,129.8906 L35.0781,128.4688 C35.0781,128.0313 35.0625,127.9063 34.9688,127.75 C34.8125,127.4844 34.5313,127.3438 34.2344,127.3438 C33.9375,127.3438 33.7344,127.4375 33.5156,127.75 L33.3438,127.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="45" y="136.8467">InheritedWidget</text><line style="stroke:#181818;stroke-width:0.5;" x1="17" x2="165" y1="148" y2="148"/><line style="stroke:#181818;stroke-width:0.5;" x1="17" x2="165" y1="156" y2="156"/></g><!--class _ViewScope--><g id="elem__ViewScope"><rect fill="#F1F1F1" height="48" id="_ViewScope" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="118" x="32" y="241"/><ellipse cx="47" cy="257" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M49.3438,252.6719 C48.4063,252.2344 47.8125,252.0938 46.9375,252.0938 C44.3125,252.0938 42.3125,254.1719 42.3125,256.8906 L42.3125,258.0156 C42.3125,260.5938 44.4219,262.4844 47.3125,262.4844 C48.5313,262.4844 49.6875,262.1875 50.4375,261.6406 C51.0156,261.2344 51.3438,260.7813 51.3438,260.3906 C51.3438,259.9375 50.9531,259.5469 50.4844,259.5469 C50.2656,259.5469 50.0625,259.625 49.875,259.8125 C49.4219,260.2969 49.4219,260.2969 49.2344,260.3906 C48.8125,260.6563 48.125,260.7813 47.3594,260.7813 C45.3125,260.7813 44.0156,259.6875 44.0156,257.9844 L44.0156,256.8906 C44.0156,255.1094 45.2656,253.7969 47,253.7969 C47.5781,253.7969 48.1875,253.9531 48.6563,254.2031 C49.1406,254.4844 49.3125,254.7031 49.4063,255.1094 C49.4688,255.5156 49.5,255.6406 49.6406,255.7656 C49.7813,255.9063 50.0156,256.0156 50.2344,256.0156 C50.5,256.0156 50.7656,255.875 50.9375,255.6563 C51.0469,255.5 51.0781,255.3125 51.0781,254.8906 L51.0781,253.4688 C51.0781,253.0313 51.0625,252.9063 50.9688,252.75 C50.8125,252.4844 50.5313,252.3438 50.2344,252.3438 C49.9375,252.3438 49.7344,252.4375 49.5156,252.75 L49.3438,252.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="61" y="261.8467">_ViewScope</text><line style="stroke:#181818;stroke-width:0.5;" x1="33" x2="149" y1="273" y2="273"/><line style="stroke:#181818;stroke-width:0.5;" x1="33" x2="149" y1="281" y2="281"/></g><!--class MediaQuery--><g id="elem_MediaQuery"><rect fill="#F1F1F1" height="48" id="MediaQuery" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="7" y="366"/><ellipse cx="22" cy="382" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,377.6719 C23.4063,377.2344 22.8125,377.0938 21.9375,377.0938 C19.3125,377.0938 17.3125,379.1719 17.3125,381.8906 L17.3125,383.0156 C17.3125,385.5938 19.4219,387.4844 22.3125,387.4844 C23.5313,387.4844 24.6875,387.1875 25.4375,386.6406 C26.0156,386.2344 26.3438,385.7813 26.3438,385.3906 C26.3438,384.9375 25.9531,384.5469 25.4844,384.5469 C25.2656,384.5469 25.0625,384.625 24.875,384.8125 C24.4219,385.2969 24.4219,385.2969 24.2344,385.3906 C23.8125,385.6563 23.125,385.7813 22.3594,385.7813 C20.3125,385.7813 19.0156,384.6875 19.0156,382.9844 L19.0156,381.8906 C19.0156,380.1094 20.2656,378.7969 22,378.7969 C22.5781,378.7969 23.1875,378.9531 23.6563,379.2031 C24.1406,379.4844 24.3125,379.7031 24.4063,380.1094 C24.4688,380.5156 24.5,380.6406 24.6406,380.7656 C24.7813,380.9063 25.0156,381.0156 25.2344,381.0156 C25.5,381.0156 25.7656,380.875 25.9375,380.6563 C26.0469,380.5 26.0781,380.3125 26.0781,379.8906 L26.0781,378.4688 C26.0781,378.0313 26.0625,377.9063 25.9688,377.75 C25.8125,377.4844 25.5313,377.3438 25.2344,377.3438 C24.9375,377.3438 24.7344,377.4375 24.5156,377.75 L24.3438,377.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="36" y="386.8467">MediaQuery</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="122" y1="398" y2="398"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="122" y1="406" y2="406"/></g><!--class RenderObjectWithChildMixin--><g id="elem_RenderObjectWithChildMixin"><rect fill="#F1F1F1" height="48" id="RenderObjectWithChildMixin" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="240" x="419" y="241"/><ellipse cx="434" cy="257" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M436.3438,252.6719 C435.4063,252.2344 434.8125,252.0938 433.9375,252.0938 C431.3125,252.0938 429.3125,254.1719 429.3125,256.8906 L429.3125,258.0156 C429.3125,260.5938 431.4219,262.4844 434.3125,262.4844 C435.5313,262.4844 436.6875,262.1875 437.4375,261.6406 C438.0156,261.2344 438.3438,260.7813 438.3438,260.3906 C438.3438,259.9375 437.9531,259.5469 437.4844,259.5469 C437.2656,259.5469 437.0625,259.625 436.875,259.8125 C436.4219,260.2969 436.4219,260.2969 436.2344,260.3906 C435.8125,260.6563 435.125,260.7813 434.3594,260.7813 C432.3125,260.7813 431.0156,259.6875 431.0156,257.9844 L431.0156,256.8906 C431.0156,255.1094 432.2656,253.7969 434,253.7969 C434.5781,253.7969 435.1875,253.9531 435.6563,254.2031 C436.1406,254.4844 436.3125,254.7031 436.4063,255.1094 C436.4688,255.5156 436.5,255.6406 436.6406,255.7656 C436.7813,255.9063 437.0156,256.0156 437.2344,256.0156 C437.5,256.0156 437.7656,255.875 437.9375,255.6563 C438.0469,255.5 438.0781,255.3125 438.0781,254.8906 L438.0781,253.4688 C438.0781,253.0313 438.0625,252.9063 437.9688,252.75 C437.8125,252.4844 437.5313,252.3438 437.2344,252.3438 C436.9375,252.3438 436.7344,252.4375 436.5156,252.75 L436.3438,252.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="448" y="261.8467">RenderObjectWithChildMixin</text><line style="stroke:#181818;stroke-width:0.5;" x1="420" x2="658" y1="273" y2="273"/><line style="stroke:#181818;stroke-width:0.5;" x1="420" x2="658" y1="281" y2="281"/></g><!--class RenderView--><g id="elem_RenderView"><rect fill="#F1F1F1" height="48" id="RenderView" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="118" x="480" y="366"/><ellipse cx="495" cy="382" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M497.3438,377.6719 C496.4063,377.2344 495.8125,377.0938 494.9375,377.0938 C492.3125,377.0938 490.3125,379.1719 490.3125,381.8906 L490.3125,383.0156 C490.3125,385.5938 492.4219,387.4844 495.3125,387.4844 C496.5313,387.4844 497.6875,387.1875 498.4375,386.6406 C499.0156,386.2344 499.3438,385.7813 499.3438,385.3906 C499.3438,384.9375 498.9531,384.5469 498.4844,384.5469 C498.2656,384.5469 498.0625,384.625 497.875,384.8125 C497.4219,385.2969 497.4219,385.2969 497.2344,385.3906 C496.8125,385.6563 496.125,385.7813 495.3594,385.7813 C493.3125,385.7813 492.0156,384.6875 492.0156,382.9844 L492.0156,381.8906 C492.0156,380.1094 493.2656,378.7969 495,378.7969 C495.5781,378.7969 496.1875,378.9531 496.6563,379.2031 C497.1406,379.4844 497.3125,379.7031 497.4063,380.1094 C497.4688,380.5156 497.5,380.6406 497.6406,380.7656 C497.7813,380.9063 498.0156,381.0156 498.2344,381.0156 C498.5,381.0156 498.7656,380.875 498.9375,380.6563 C499.0469,380.5 499.0781,380.3125 499.0781,379.8906 L499.0781,378.4688 C499.0781,378.0313 499.0625,377.9063 498.9688,377.75 C498.8125,377.4844 498.5313,377.3438 498.2344,377.3438 C497.9375,377.3438 497.7344,377.4375 497.5156,377.75 L497.3438,377.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="509" y="386.8467">RenderView</text><line style="stroke:#181818;stroke-width:0.5;" x1="481" x2="597" y1="398" y2="398"/><line style="stroke:#181818;stroke-width:0.5;" x1="481" x2="597" y1="406" y2="406"/></g><!--reverse link RenderObjectWidget to RenderObjectToWidgetAdapter--><g id="link_RenderObjectWidget_RenderObjectToWidgetAdapter"><path codeLine="1" d="M539,73.217 C539,91.165 539,97.892 539,115.828 " fill="none" id="RenderObjectWidget-backto-RenderObjectToWidgetAdapter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="539,55.217,533,73.217,545,73.217,539,55.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--link RenderObjectToWidgetAdapter to RenderObjectToWidgetElement--><g id="link_RenderObjectToWidgetAdapter_RenderObjectToWidgetElement"><path codeLine="2" d="M670.248,140 C681.756,140 687.263,140 698.771,140 " fill="none" id="RenderObjectToWidgetAdapter-to-RenderObjectToWidgetElement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="704.771,140,695.771,136,699.771,140,695.771,144,704.771,140" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RenderObjectElement to RenderObjectToWidgetElement--><g id="link_RenderObjectElement_RenderObjectToWidgetElement"><path codeLine="3" d="M837,73.217 C837,91.165 837,97.892 837,115.828 " fill="none" id="RenderObjectElement-backto-RenderObjectToWidgetElement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="837,55.217,831,73.217,843,73.217,837,55.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link StatelessWidget to View--><g id="link_StatelessWidget_View"><path codeLine="5" d="M300.3397,182.0758 C302.1277,204.0668 303.342,219.012 305.128,240.968 " fill="none" id="StatelessWidget-backto-View" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="298.881,164.135,294.3594,182.562,306.32,181.5896,298.881,164.135" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link View to FlutterView--><g id="link_View_FlutterView"><path codeLine="6" d="M282.7468,298.7818 C266.4768,320.7728 249.284,344.012 233.04,365.968 " fill="none" id="View-backto-FlutterView" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="289.884,289.135,283.0998,291.5793,282.7468,298.7818,289.531,296.3375,289.884,289.135" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link View to MyApp--><g id="link_View_MyApp"><path codeLine="7" d="M319.0481,300.4627 C326.7361,322.4537 334.273,344.012 341.948,365.968 " fill="none" id="View-backto-MyApp" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="315.088,289.135,313.2922,296.1189,319.0481,300.4627,320.844,293.4788,315.088,289.135" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="29" x="333" y="332.0669">child</text></g><!--reverse link InheritedWidget to _ViewScope--><g id="link_InheritedWidget__ViewScope"><path codeLine="11" d="M91,182.135 C91,204.126 91,219.012 91,240.968 " fill="none" id="InheritedWidget-backto-_ViewScope" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="91,164.135,85,182.135,97,182.135,91,164.135" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link _ViewScope to FlutterView--><g id="link__ViewScope_FlutterView"><path codeLine="12" d="M123.0653,297.5517 C145.4133,319.5427 170.281,344.012 192.594,365.968 " fill="none" id="_ViewScope-backto-FlutterView" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="114.512,289.135,115.9831,296.1945,123.0653,297.5517,121.5942,290.4922,114.512,289.135" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link _ViewScope to MediaQuery--><g id="link__ViewScope_MediaQuery"><path codeLine="13" d="M83.6279,300.8756 C78.9795,322.8666 74.5096,344.012 69.8685,365.968 " fill="none" id="_ViewScope-backto-MediaQuery" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="86.1096,289.135,80.9552,294.1781,83.6279,300.8756,88.7823,295.8325,86.1096,289.135" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="29" x="81" y="332.0669">child</text></g><!--reverse link MediaQuery to MyApp--><g id="link_MediaQuery_MyApp"><path codeLine="14" d="M107.6637,359.3378 C141.1462,337.5298 185.011,317.074 233.5,329 C262.764,336.198 292.823,352.191 315.077,365.996 " fill="none" id="MediaQuery-backto-MyApp" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="97.6085,365.887,104.8192,365.9641,107.6637,359.3378,100.453,359.2606,97.6085,365.887" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="29" x="203.5" y="332.0669">child</text></g><!--reverse link RenderObjectToWidgetAdapter to View--><g id="link_RenderObjectToWidgetAdapter_View"><path codeLine="16" d="M484.7609,169.7561 C439.7389,193.6261 381.105,224.712 340.304,246.343 " fill="none" id="RenderObjectToWidgetAdapter-backto-View" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="495.363,164.135,488.1883,163.4115,484.7609,169.7561,491.9357,170.4795,495.363,164.135" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RenderObjectToWidgetAdapter to RenderObjectWithChildMixin--><g id="link_RenderObjectToWidgetAdapter_RenderObjectWithChildMixin"><path codeLine="17" d="M539,176.135 C539,198.126 539,219.012 539,240.968 " fill="none" id="RenderObjectToWidgetAdapter-backto-RenderObjectWithChildMixin" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="539,164.135,535,170.135,539,176.135,543,170.135,539,164.135" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="60" x="540" y="207.0669">container</text></g><!--reverse link RenderObjectWithChildMixin to RenderView--><g id="link_RenderObjectWithChildMixin_RenderView"><path codeLine="18" d="M539,307.135 C539,329.126 539,344.012 539,365.968 " fill="none" id="RenderObjectWithChildMixin-backto-RenderView" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="539,289.135,533,307.135,545,307.135,539,289.135" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="540" y="332.0669">with</text></g><!--SRC=[XL7D3i504BxlKyovIJs0Y4I4nA4H9HobkaDNQhUf4IHEJXx00pYwEea7mclegf-sgCjcz_k- -URR6Hibnx0v6ADBFS57I51QcIRO2RoZOgR2dO0mP3aScEMlfJKV9oWfLVh0VlTx5h4sEOG-JgV9X5s1SwOFCA9NtPzHr3yDMijA440HN4_ud4b520D5f2QWXZ79hjlzPNCy7zQNtIbsPr4IBMKDwM4e27coQr-RjrqL87jVFn9aA0kvS5ep39UlC0d8o0RD7R3n_Fe_aPtQB7bLxMs9XP2waPBa29bPPaPMMXKA3vlxI8imZmGt]--></g></svg>

<h2 id="重绘"><a href="#重绘" class="headerlink" title="重绘"></a>重绘</h2><h3 id="帧调度"><a href="#帧调度" class="headerlink" title="帧调度"></a>帧调度</h3><p>我们在StatefulWidget中setState后就会触发UI重绘。<code>setState</code>会调用<code>Element.markNeedsBuild()</code></p>
<pre class="mermaid">

zenuml
State.setState {
    Element.markNeedsBuild {
        &quot;_dirty &#x3D; true&quot;
        BuildOwner.scheduleBuildFor {
            WidgetsBinding._handleBuildScheduled {
                SchedulerBinding.ensureVisualUpdate {
                    SchedulerBinding.scheduleFrame {
                        &quot;确保onBeginFrame&#x2F;onDrawFrame回调已设置&quot;
                        PlatformDispatcher.scheduleFrame {
                            &quot;调用engine的native实现&quot;
                            return
                        }
                    }
                    return
                }
                return
            }
            &quot;_dirtyElements.add(element)&quot;
            &quot;element._inDirtyList &#x3D; true&quot;
            return
        }
        return
    }
}
</pre>

<p>在调度帧刷新任务阶段，最重要的两个工作就是：</p>
<ol>
<li>调用PlatformDispatcher.scheduleFrame，通知引擎要进行下一帧的刷新；</li>
<li>将Element添加到<code>BuildOwner._dirtyElements</code>脏列表中。</li>
</ol>
<p>在scheduleFrame执行后，引擎就会在合适的时机先后执行<code>onBeginFrame</code>和<code>onDrawFrame</code>两个回调，比如下个vsync信号到来时。下面是PlatformDispatcher.scheduleFrame()函数的注释：</p>
<blockquote>
<p>Requests that, at the next appropriate opportunity, the [onBeginFrame] and [onDrawFrame] callbacks be invoked.</p>
</blockquote>
<h3 id="帧绘制"><a href="#帧绘制" class="headerlink" title="帧绘制"></a>帧绘制</h3><p>调度阶段之后，就会执行帧的绘制任务，帧的绘制分为如下几个阶段：</p>
<ul>
<li><strong>idle</strong>：空闲阶段。</li>
<li><strong>transientCallbacks</strong>：临时回调执行阶段。对应<code>SchedulerBinding.handleBeginFrame</code>（即，onBeginFrame），会执行通过<code>WidgetsBinding.instance.scheduleFrameCallback</code>注册的回调；</li>
<li><strong>midFrameMicrotasks</strong>：执行临时回调期间注册的Microtasks；</li>
<li><strong>persistentCallbacks</strong>：持久回调执行阶段，持久回调是通过SchedulerBinding.addPersistentFrameCallback来注册。在<code>RendererBinding.initInstances</code>就会注册一个永久回调，此永久回调中会执行<code>RendererBinding.drawFrame()</code>。</li>
<li><strong>postFrameCallbacks</strong>：执行通过SchedulerBinding.addPostFrameCallback注册的回调，这些回调是在一帧渲染完成后被执行。</li>
</ul>
<p>下面是这五个阶段的时序图：</p>
<pre class="mermaid">

zenuml
PlatformDispatcher.onBeginFrame {
    SchedulerBinding.handleBeginFrame {
        &quot;🚩SchedulerPhase.transientCallbacks&quot;
        &quot;🚩SchedulerPhase.midFrameMicrotasks&quot;
        return
    }
}
PlatformDispatcher.onDrawFrame {
    SchedulerBinding.handleDrawFrame {
        &quot;🚩SchedulerPhase.persistentCallbacks&quot; {
            WidgetsBinding.drawFrame
        }
        &quot;🚩SchedulerPhase.postFrameCallbacks&quot;
        &quot;🚩SchedulerPhase.idle&quot;
        return
    }
}
</pre>

<p>其中最重要的就是RendererBinding.drawFrame的执行，build、layout和draw都在这里被执行。下面是<code>WidgetsBinding.drawFrame()</code>的代码实现：</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">//WidgetsBinding</span></span><br><span class="line">  <span class="keyword">void</span> drawFrame() &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (rootElement != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="comment">//执行build和markNeedsLayout</span></span><br><span class="line">        buildOwner!.buildScope(rootElement!);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">super</span>.drawFrame(); <span class="comment">//RendererBinding.drawFrame()</span></span><br><span class="line">      buildOwner!.finalizeTree();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;&#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<pre class="mermaid">

zenuml
WidgetsBinding.drawFrame {
    BuildOwner.buildScope {
        &quot;_dirtyElements列表中Element执行rebuild&quot;
    }
    RendererBinding.&quot;super.drawFrame()&quot; {
        PipelineOwner.flushLayout
        PipelineOwner.flushCompositingBits
        PipelineOwner.flushPaint
        return
    }
}
</pre>

<h4 id="buildScope"><a href="#buildScope" class="headerlink" title="buildScope"></a>buildScope</h4><p>首先遍历BuildOwner._dirtyElements列表中Element，调用这些Element的rebuild方法。rebuild会调用到Widget或者State的build方法，如果某个组件需要更新，则其RenderObject.markNeedsLayout会被执行。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">//BuildOwner</span></span><br><span class="line">  <span class="keyword">void</span> buildScope(<span class="built_in">Element</span> context, [ VoidCallback? callback ]) &#123;</span><br><span class="line">    <span class="keyword">if</span> (callback == <span class="keyword">null</span> &amp;&amp; _dirtyElements.isEmpty) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      _scheduledFlushDirtyElements = <span class="keyword">true</span>;</span><br><span class="line">      <span class="comment">//setState时StatefulElement已经被放到这个_dirtyElements列表中了</span></span><br><span class="line">      _dirtyElements.sort(<span class="built_in">Element</span>._sort); </span><br><span class="line">      _dirtyElementsNeedsResorting = <span class="keyword">false</span>;</span><br><span class="line">      <span class="built_in">int</span> dirtyCount = _dirtyElements.length;</span><br><span class="line">      <span class="built_in">int</span> index = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span> (index &lt; dirtyCount) &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">Element</span> element = _dirtyElements[index];</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="comment">//执行rebuild，最终会执行到widget的build方法</span></span><br><span class="line">          element.rebuild();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e, stack) &#123;&#125;</span><br><span class="line">        index += <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (dirtyCount &lt; _dirtyElements.length || _dirtyElementsNeedsResorting!) &#123;</span><br><span class="line">          _dirtyElements.sort(<span class="built_in">Element</span>._sort);</span><br><span class="line">          _dirtyElementsNeedsResorting = <span class="keyword">false</span>;</span><br><span class="line">          dirtyCount = _dirtyElements.length;</span><br><span class="line">          <span class="keyword">while</span> (index &gt; <span class="number">0</span> &amp;&amp; _dirtyElements[index - <span class="number">1</span>].dirty) &#123;</span><br><span class="line">            index -= <span class="number">1</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      <span class="comment">//清除脏标记，以及清空脏列表</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">final</span> <span class="built_in">Element</span> element <span class="keyword">in</span> _dirtyElements) &#123;</span><br><span class="line">        <span class="keyword">assert</span>(element._inDirtyList);</span><br><span class="line">        element._inDirtyList = <span class="keyword">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      _dirtyElements.clear();</span><br><span class="line">      _scheduledFlushDirtyElements = <span class="keyword">false</span>;</span><br><span class="line">      _dirtyElementsNeedsResorting = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>我们看下<code>element.rebuild()</code>是如何实现的。先看下</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="78px" preserveAspectRatio="none" style="width:571px;height:78px;background:#FFFFFF;" version="1.1" viewBox="0 0 571 78" width="571px" zoomAndPan="magnify"><defs/><g><!--class Element--><g id="elem_Element"><rect codeLine="1" fill="#F1F1F1" height="64.2969" id="Element" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="162" x="7" y="7"/><ellipse cx="54.25" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M56.3281,24.8125 L56.7188,25.7969 L56.3281,25.7969 C55.875,25.7969 55.7656,25.8125 55.6094,25.9219 C55.3594,26.0781 55.2031,26.3594 55.2031,26.6563 C55.2031,26.9219 55.3438,27.1719 55.5625,27.3281 C55.7031,27.4531 55.9063,27.5 56.3281,27.5 L58.6875,27.5 C59.0469,27.5 59.2656,27.4688 59.4063,27.375 C59.6563,27.2344 59.8125,26.9375 59.8125,26.6563 C59.8125,26.375 59.6719,26.125 59.4531,25.9688 C59.2813,25.8281 59.125,25.7969 58.6563,25.7969 L55.2656,17.5938 L51.5938,17.5938 C51.1406,17.5938 51.0156,17.6094 50.8594,17.7031 C50.6094,17.875 50.4531,18.1563 50.4531,18.4375 C50.4531,18.7188 50.5938,18.9688 50.8125,19.1406 C50.9844,19.25 51.1563,19.2813 51.5938,19.2813 L52.6719,19.2813 L50.0313,25.7969 C49.6094,25.7969 49.4531,25.8125 49.2969,25.9219 C49.0469,26.0781 48.8906,26.3594 48.8906,26.6563 C48.8906,27.2188 49.2656,27.5 50.0156,27.5 L52.2813,27.5 C52.6406,27.5 52.8594,27.4688 52.9844,27.375 C53.25,27.2344 53.3906,26.9375 53.3906,26.6563 C53.3906,26.375 53.2656,26.125 53.0469,25.9531 C52.875,25.8281 52.7344,25.7969 52.2813,25.7969 L51.8906,25.7969 L52.2813,24.8125 L56.3281,24.8125 Z M55.625,23.1094 L52.9531,23.1094 L54.2969,19.8438 L55.625,23.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="59" x="74.75" y="27.8467">Element</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="168" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="168" y1="47" y2="47"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="13" y="63.9951">void rebuild({force})</text></g><!--class ComponentElement--><g id="elem_ComponentElement"><rect codeLine="4" fill="#F1F1F1" height="64.2969" id="ComponentElement" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="174" x="204" y="7"/><ellipse cx="219" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M221.0781,24.8125 L221.4688,25.7969 L221.0781,25.7969 C220.625,25.7969 220.5156,25.8125 220.3594,25.9219 C220.1094,26.0781 219.9531,26.3594 219.9531,26.6563 C219.9531,26.9219 220.0938,27.1719 220.3125,27.3281 C220.4531,27.4531 220.6563,27.5 221.0781,27.5 L223.4375,27.5 C223.7969,27.5 224.0156,27.4688 224.1563,27.375 C224.4063,27.2344 224.5625,26.9375 224.5625,26.6563 C224.5625,26.375 224.4219,26.125 224.2031,25.9688 C224.0313,25.8281 223.875,25.7969 223.4063,25.7969 L220.0156,17.5938 L216.3438,17.5938 C215.8906,17.5938 215.7656,17.6094 215.6094,17.7031 C215.3594,17.875 215.2031,18.1563 215.2031,18.4375 C215.2031,18.7188 215.3438,18.9688 215.5625,19.1406 C215.7344,19.25 215.9063,19.2813 216.3438,19.2813 L217.4219,19.2813 L214.7813,25.7969 C214.3594,25.7969 214.2031,25.8125 214.0469,25.9219 C213.7969,26.0781 213.6406,26.3594 213.6406,26.6563 C213.6406,27.2188 214.0156,27.5 214.7656,27.5 L217.0313,27.5 C217.3906,27.5 217.6094,27.4688 217.7344,27.375 C218,27.2344 218.1406,26.9375 218.1406,26.6563 C218.1406,26.375 218.0156,26.125 217.7969,25.9531 C217.625,25.8281 217.4844,25.7969 217.0313,25.7969 L216.6406,25.7969 L217.0313,24.8125 L221.0781,24.8125 Z M220.375,23.1094 L217.7031,23.1094 L219.0469,19.8438 L220.375,23.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="142" x="233" y="27.8467">ComponentElement</text><line style="stroke:#181818;stroke-width:0.5;" x1="205" x2="377" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="205" x2="377" y1="47" y2="47"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="210" y="63.9951">void performRebuild()</text></g><!--class StatefulElement--><g id="elem_StatefulElement"><rect codeLine="7" fill="#F1F1F1" height="64.2969" id="StatefulElement" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="151" x="413.5" y="7"/><ellipse cx="428.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M430.8438,18.6719 C429.9063,18.2344 429.3125,18.0938 428.4375,18.0938 C425.8125,18.0938 423.8125,20.1719 423.8125,22.8906 L423.8125,24.0156 C423.8125,26.5938 425.9219,28.4844 428.8125,28.4844 C430.0313,28.4844 431.1875,28.1875 431.9375,27.6406 C432.5156,27.2344 432.8438,26.7813 432.8438,26.3906 C432.8438,25.9375 432.4531,25.5469 431.9844,25.5469 C431.7656,25.5469 431.5625,25.625 431.375,25.8125 C430.9219,26.2969 430.9219,26.2969 430.7344,26.3906 C430.3125,26.6563 429.625,26.7813 428.8594,26.7813 C426.8125,26.7813 425.5156,25.6875 425.5156,23.9844 L425.5156,22.8906 C425.5156,21.1094 426.7656,19.7969 428.5,19.7969 C429.0781,19.7969 429.6875,19.9531 430.1563,20.2031 C430.6406,20.4844 430.8125,20.7031 430.9063,21.1094 C430.9688,21.5156 431,21.6406 431.1406,21.7656 C431.2813,21.9063 431.5156,22.0156 431.7344,22.0156 C432,22.0156 432.2656,21.875 432.4375,21.6563 C432.5469,21.5 432.5781,21.3125 432.5781,20.8906 L432.5781,19.4688 C432.5781,19.0313 432.5625,18.9063 432.4688,18.75 C432.3125,18.4844 432.0313,18.3438 431.7344,18.3438 C431.4375,18.3438 431.2344,18.4375 431.0156,18.75 L430.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="442.5" y="27.8467">StatefulElement</text><line style="stroke:#181818;stroke-width:0.5;" x1="414.5" x2="563.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="414.5" x2="563.5" y1="47" y2="47"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="419.5" y="63.9951">Widget build()</text></g><!--reverse link Element to ComponentElement--><g id="link_Element_ComponentElement"><path codeLine="10" d="M187.279,39 C198.849,39 192.419,39 203.989,39 " fill="none" id="Element-backto-ComponentElement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="169.279,39,187.279,45,187.279,33,169.279,39" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ComponentElement to StatefulElement--><g id="link_ComponentElement_StatefulElement"><path codeLine="11" d="M396.012,39 C407.718,39 401.423,39 413.129,39 " fill="none" id="ComponentElement-backto-StatefulElement" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="378.012,39,396.012,45,396.012,33,378.012,39" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[IqmgBYbAJ2vHSCr9pKtDAr6evb80WhByp1I5ejIaqioS58tgjFoYvDHQJQvQhaIOSkVyt8ByFA06BFeAKek0EdA3eDf1-f9p4ekB5O9B4ajIqqfpKFM4PwQafvOe81J3f6rgT37iuSAm6AGApM00]--></g></svg>

<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Element</span></span><br><span class="line">  <span class="keyword">void</span> rebuild(&#123;<span class="built_in">bool</span> force = <span class="keyword">false</span>&#125;) &#123;</span><br><span class="line">    <span class="keyword">if</span> (_lifecycleState != _ElementLifecycle.active || (!_dirty &amp;&amp; !force)) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">Element?</span> debugPreviousBuildTarget;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      performRebuild();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//ComponentElement</span></span><br><span class="line">  <span class="keyword">void</span> performRebuild() &#123;</span><br><span class="line">    Widget? built;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      built = build();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e, stack) &#123;</span><br><span class="line">      ......</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      <span class="comment">// We delay marking the element as clean until after calling build() so</span></span><br><span class="line">      <span class="comment">// that attempts to markNeedsBuild() during build() will be ignored.</span></span><br><span class="line">      <span class="keyword">super</span>.performRebuild(); <span class="comment">// clears the &quot;dirty&quot; flag</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      _child = updateChild(_child, built, slot);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e, stack) &#123;</span><br><span class="line">      ......</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//StatefulElement</span></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build() =&gt; state.build(<span class="keyword">this</span>); <span class="comment">//调用用户自定义的build生成Widget</span></span><br></pre></td></tr></table></figure>

<p>在重新build的阶段，比如setState更新了一个Text的文本内容，这个Text关联的RenderObject就会调用到<code>RenderObject.markNeedsLayout</code>，用来标记这个RenderObject需要重新布局，并向上遍历父节点直到布局边界点，并把布局边界点的RenderObject添加到<code>PipelineOwner._nodesNeedingLayout</code>列表中。代码如下：</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">//RenderObject</span></span><br><span class="line">  <span class="keyword">void</span> markNeedsLayout() &#123;</span><br><span class="line">    <span class="keyword">if</span> (_needsLayout) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (_relayoutBoundary == <span class="keyword">null</span>) &#123;</span><br><span class="line">      _needsLayout = <span class="keyword">true</span>;</span><br><span class="line">      <span class="keyword">if</span> (parent != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="comment">// _relayoutBoundary is cleaned by an ancestor in RenderObject.layout.</span></span><br><span class="line">        <span class="comment">// Conservatively mark everything dirty until it reaches the closest</span></span><br><span class="line">        <span class="comment">// known relayout boundary.</span></span><br><span class="line">        markParentNeedsLayout();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (_relayoutBoundary != <span class="keyword">this</span>) &#123;</span><br><span class="line">      <span class="comment">//parent的_needsLayout会设置为true，并调用parent.markNeedsLayout()</span></span><br><span class="line">      <span class="comment">//因此，这句代码的作用是在parent方向上将自身到布局边界路径上的所有节点都标记为需要布局，且添加到PipelineOwner中</span></span><br><span class="line">      markParentNeedsLayout();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">//当前节点就是_relayoutBoundary的情况就会停止向上遍历</span></span><br><span class="line">      _needsLayout = <span class="keyword">true</span>;</span><br><span class="line">      <span class="keyword">if</span> (owner != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="comment">//添加到PipelineOwner中</span></span><br><span class="line">        owner!._nodesNeedingLayout.add(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">//持久回调阶段，此调用不会起任何作用，具体可以看代码实现</span></span><br><span class="line">        owner!.requestVisualUpdate();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>注意：这里的布局边界和绘制边界的区别。如果每次更新UI要对整个树重新布局，这样无疑会到了很大的性能负担，而布局边界就是为了解决这个问题。什么样的节点是边界节点呢？我们会在layout阶段详细介绍。</p>
<h4 id="flushLayout"><a href="#flushLayout" class="headerlink" title="flushLayout"></a>flushLayout</h4><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">//RenderObject</span></span><br><span class="line">  <span class="keyword">void</span> layout(Constraints constraints, &#123; <span class="built_in">bool</span> parentUsesSize = <span class="keyword">false</span> &#125;) &#123;</span><br><span class="line">    <span class="comment">//判断是否是边界节点：</span></span><br><span class="line">    <span class="comment">//1. parentUsesSize为false，表示当前组件的parent的大小不依赖这个child组件，所以当前组件需要重新布局的时候不需要对parent进行重新布局；</span></span><br><span class="line">    <span class="comment">//2. sizedByParent为true，当前组件的大小只依赖parent的约束，而不受当前组件的子组件大小的影响。比如RenderAndroidView是嵌入的</span></span><br><span class="line">    <span class="comment">//   Android原生View，不可能再嵌套子孙widget的，大小只受父布局的约束；RenderTwoDimensionalViewport也是一个示例场景；</span></span><br><span class="line">    <span class="comment">//3. constraints.isTight严格约束，固定宽高，比如指定宽高的SizedBox</span></span><br><span class="line">    <span class="comment">//4. parent不是RenderObject，只有根组件RenderView没有parent</span></span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">bool</span> isRelayoutBoundary = !parentUsesSize || sizedByParent || constraints.isTight || parent <span class="keyword">is</span>! RenderObject;</span><br><span class="line">    <span class="comment">//如果符合布局边界条件，则使用当前组件为布局边界，否则使用parent的布局边界</span></span><br><span class="line">    <span class="keyword">final</span> RenderObject relayoutBoundary = isRelayoutBoundary ? <span class="keyword">this</span> : parent!._relayoutBoundary!;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!_needsLayout &amp;&amp; constraints == _constraints) &#123;</span><br><span class="line">      <span class="keyword">if</span> (relayoutBoundary != _relayoutBoundary) &#123;</span><br><span class="line">        <span class="comment">//如果布局边界发生了变化，则递归访问子孙组件，将子孙的_relayoutBoundary设置为新的布局边界；</span></span><br><span class="line">        <span class="comment">//递归终止条件是，子孙组件自身就是边界节点。</span></span><br><span class="line">        _relayoutBoundary = relayoutBoundary;</span><br><span class="line">        visitChildren(_propagateRelayoutBoundaryToChild);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    _constraints = constraints;</span><br><span class="line">    <span class="keyword">if</span> (_relayoutBoundary != <span class="keyword">null</span> &amp;&amp; relayoutBoundary != _relayoutBoundary) &#123;</span><br><span class="line">      <span class="comment">// The local relayout boundary has changed, must notify children in case</span></span><br><span class="line">      <span class="comment">// they also need updating. Otherwise, they will be confused about what</span></span><br><span class="line">      <span class="comment">// their actual relayout boundary is later.</span></span><br><span class="line">      <span class="comment">//递归清楚子孙组件的_relayoutBoundary，递归终止条件是子孙组件自身就是边界节点</span></span><br><span class="line">      visitChildren(_cleanChildRelayoutBoundary);</span><br><span class="line">    &#125;</span><br><span class="line">    _relayoutBoundary = relayoutBoundary;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (sizedByParent) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        performResize();</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e, stack) &#123;</span><br><span class="line">        _reportException(<span class="string">&#x27;performResize&#x27;</span>, e, stack);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    RenderObject? debugPreviousActiveLayout;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      performLayout(); <span class="comment">//执行布局算法</span></span><br><span class="line">      markNeedsSemanticsUpdate();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e, stack) &#123;</span><br><span class="line">      _reportException(<span class="string">&#x27;performLayout&#x27;</span>, e, stack);</span><br><span class="line">    &#125;</span><br><span class="line">    _needsLayout = <span class="keyword">false</span>; <span class="comment">//清空布局标记</span></span><br><span class="line">    <span class="comment">//标记是否进行重新绘制，重新绘制的节点会被添加到PipelineOwner._nodesNeedingPaint列表中</span></span><br><span class="line">    markNeedsPaint();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>



<ol start="2">
<li><p>WidgetsBinding.drawFrame会调用到<code>RenderObject.markNeedsPaint</code>，会把需要绘制的边界节点添加到<code>PipelineOwner._nodesNeedingPaint</code>中。</p>
</li>
<li><p><code>PipelineOwner.flushPaint</code>会遍历_nodesNeedingPaint</p>
</li>
<li><p><code>RenderView.compositeFrame</code>上屏：先通过layer构建Scene，然后再通过<code>FlutterView.render(scene)</code>来渲染，后面的流程就是c++的native流程了。</p>
</li>
</ol>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://book.flutterchina.club/chapter14/">Flutter实战·第二版–Flutter核心原理</a><br><a href="https://zhuanlan.zhihu.com/p/396509472">Flutter渲染之绘制上屏</a></p>
]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter点击事件处理机制</title>
    <url>/posts/be1f8948.html</url>
    <content><![CDATA[<p>一次点击一般会有先后两个事件：PointerDownEvent和PointerUpEvent，分别表示按下down和抬起up（如果手指发生了滑动，还会有PointerMoveEvent事件）。本文分别分析按下和抬起两个事件的处理流程。</p>
<p>备注：本文以<code>GestureDetector</code>为示例进行点击事件处理流程的分析，基于Flutter 2.5.3。</p>
<h2 id="PointerDownEvent（按下）事件的处理流程"><a href="#PointerDownEvent（按下）事件的处理流程" class="headerlink" title="PointerDownEvent（按下）事件的处理流程"></a>PointerDownEvent（按下）事件的处理流程</h2><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1341px" preserveAspectRatio="none" style="width:1035px;height:1341px;background:#FFFFFF;" version="1.1" viewBox="0 0 1035 1341" width="1035px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="191.7969" style="stroke:#181818;stroke-width:1.0;" width="10" x="156" y="204.125"/><rect fill="#FFFFFF" height="120.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="161" y="246.2578"/><rect fill="#FFFFFF" height="34.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="166" y="303.5234"/><rect fill="#FFFFFF" height="821.4531" style="stroke:#181818;stroke-width:1.0;" width="10" x="156" y="476.1875"/><rect fill="#FFBBBB" height="423.9922" style="stroke:#181818;stroke-width:1.0;" width="10" x="161" y="850.6484"/><rect fill="#FFFFFF" height="99.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="166" y="892.7813"/><rect fill="#FFFFFF" height="223.0625" style="stroke:#181818;stroke-width:1.0;" width="10" x="166" y="1051.5781"/><rect fill="#C0C0C0" height="156.7969" style="stroke:#181818;stroke-width:1.0;" width="10" x="171" y="1117.8438"/><rect fill="#FFFFFF" height="131.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="587" y="539.4531"/><rect fill="#FFFFFF" height="64.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="592" y="606.8516"/><rect fill="#FFFFFF" height="172.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="810" y="640.9844"/><rect fill="#FFFFFF" height="105.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="815" y="708.1172"/><rect fill="#FFFFFF" height="63.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="820" y="750.25"/><rect fill="#FFFFFF" height="65.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="810" y="926.9141"/><rect fill="#FFFFFF" height="65.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="810" y="1209.2422"/><rect fill="none" height="218.0625" style="stroke:#000000;stroke-width:1.5;" width="896.5" x="88.5" y="1071.5781"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="160.5" x2="160.5" y1="36.2969" y2="1306.6406"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="437" x2="437" y1="121.2109" y2="1306.6406"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="592" x2="592" y1="36.2969" y2="1306.6406"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="814.5" x2="814.5" y1="36.2969" y2="1306.6406"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="125" x="98.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="105.5" y="24.9951">GestureBinding</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="125" x="98.5" y="1305.6406"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="105.5" y="1325.6357">GestureBinding</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="112" x="381" y="1305.6406"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="388" y="1325.6357">HitTestResult</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="178" x="503" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="510" y="24.9951">RenderPointerListener</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="178" x="503" y="1305.6406"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="510" y="1325.6357">RenderPointerListener</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="179" x="725.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="732.5" y="24.9951">TapGestureRecognizer</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="179" x="725.5" y="1305.6406"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="732.5" y="1325.6357">TapGestureRecognizer</text><rect fill="#FFFFFF" height="191.7969" style="stroke:#181818;stroke-width:1.0;" width="10" x="156" y="204.125"/><rect fill="#FFFFFF" height="120.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="161" y="246.2578"/><rect fill="#FFFFFF" height="34.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="166" y="303.5234"/><rect fill="#FFFFFF" height="821.4531" style="stroke:#181818;stroke-width:1.0;" width="10" x="156" y="476.1875"/><rect fill="#FFBBBB" height="423.9922" style="stroke:#181818;stroke-width:1.0;" width="10" x="161" y="850.6484"/><rect fill="#FFFFFF" height="99.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="166" y="892.7813"/><rect fill="#FFFFFF" height="223.0625" style="stroke:#181818;stroke-width:1.0;" width="10" x="166" y="1051.5781"/><rect fill="#C0C0C0" height="156.7969" style="stroke:#181818;stroke-width:1.0;" width="10" x="171" y="1117.8438"/><rect fill="#FFFFFF" height="131.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="587" y="539.4531"/><rect fill="#FFFFFF" height="64.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="592" y="606.8516"/><rect fill="#FFFFFF" height="172.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="810" y="640.9844"/><rect fill="#FFFFFF" height="105.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="815" y="708.1172"/><rect fill="#FFFFFF" height="63.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="820" y="750.25"/><rect fill="#FFFFFF" height="65.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="810" y="926.9141"/><rect fill="#FFFFFF" height="65.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="810" y="1209.2422"/><ellipse cx="7.5" cy="81.8125" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="149,78.5625,159,82.5625,149,86.5625,153,82.5625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="155" y1="82.5625" y2="82.5625"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="125" x="15" y="62.3638">handlePointerEvent</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="129" x="15" y="77.4966">(PointerDownEvent)</text><polygon fill="#181818" points="369,107.6953,379,111.6953,369,115.6953,373,111.6953" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="161" x2="375" y1="111.6953" y2="111.6953"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="168" y="106.6294">new</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="112" x="381" y="90.5625"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="388" y="110.5576">HitTestResult</text><rect fill="#EEEEEE" height="3" style="stroke:#EEEEEE;stroke-width:1.0;" width="1028" x="0" y="152.4258"/><line style="stroke:#000000;stroke-width:1.0;" x1="0" x2="1028" y1="152.4258" y2="152.4258"/><line style="stroke:#000000;stroke-width:1.0;" x1="0" x2="1028" y1="155.4258" y2="155.4258"/><rect fill="#EEEEEE" height="23.1328" style="stroke:#000000;stroke-width:2.0;" width="137" x="445.5" y="141.8594"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="118" x="451.5" y="157.9263">&#21629;&#20013;&#27979;&#35797; hitTest</text><line style="stroke:#181818;stroke-width:1.0;" x1="161" x2="208" y1="191.125" y2="191.125"/><line style="stroke:#181818;stroke-width:1.0;" x1="208" x2="208" y1="191.125" y2="204.125"/><line style="stroke:#181818;stroke-width:1.0;" x1="167" x2="208" y1="204.125" y2="204.125"/><polygon fill="#181818" points="177,200.125,167,204.125,177,208.125,173,204.125" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="163" x="173" y="186.0591">(RendererBinding).hitTest</text><line style="stroke:#181818;stroke-width:1.0;" x1="166" x2="213" y1="233.2578" y2="233.2578"/><line style="stroke:#181818;stroke-width:1.0;" x1="213" x2="213" y1="233.2578" y2="246.2578"/><line style="stroke:#181818;stroke-width:1.0;" x1="172" x2="213" y1="246.2578" y2="246.2578"/><polygon fill="#181818" points="182,242.2578,172,246.2578,182,250.2578,178,246.2578" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="121" x="178" y="228.1919">renderView.hitTest</text><line style="stroke:#181818;stroke-width:1.0;" x1="171" x2="218" y1="290.5234" y2="290.5234"/><line style="stroke:#181818;stroke-width:1.0;" x1="218" x2="218" y1="290.5234" y2="303.5234"/><line style="stroke:#181818;stroke-width:1.0;" x1="177" x2="218" y1="303.5234" y2="303.5234"/><polygon fill="#181818" points="187,299.5234,177,303.5234,187,307.5234,183,303.5234" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="82" x="183" y="270.3247">child!.hitTest</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="104" x="183" y="285.4575">&#28145;&#24230;&#20248;&#20808;&#36941;&#21382;&#23376;&#26641;</text><polygon fill="#181818" points="425,333.6563,435,337.6563,425,341.6563,429,337.6563" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="171" x2="431" y1="337.6563" y2="337.6563"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="195" x="178" y="332.5903">add(&#21629;&#20013;&#27979;&#35797;&#36890;&#36807;&#30340;RenderBox)</text><polygon fill="#181818" points="425,362.7891,435,366.7891,425,370.7891,429,366.7891" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="166" x2="431" y1="366.7891" y2="366.7891"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="227" x="173" y="361.7231">add(HitTestEntry(RenderView.this))</text><polygon fill="#181818" points="425,391.9219,435,395.9219,425,399.9219,429,395.9219" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="161" x2="431" y1="395.9219" y2="395.9219"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="247" x="168" y="390.856">add(HitTestEntry(GestureBinding.this))</text><rect fill="#EEEEEE" height="3" style="stroke:#EEEEEE;stroke-width:1.0;" width="1028" x="0" y="424.4883"/><line style="stroke:#000000;stroke-width:1.0;" x1="0" x2="1028" y1="424.4883" y2="424.4883"/><line style="stroke:#000000;stroke-width:1.0;" x1="0" x2="1028" y1="427.4883" y2="427.4883"/><rect fill="#EEEEEE" height="23.1328" style="stroke:#000000;stroke-width:2.0;" width="143" x="442.5" y="413.9219"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="124" x="448.5" y="429.9888">&#28857;&#20987;down&#20107;&#20214;&#20998;&#21457;</text><line style="stroke:#181818;stroke-width:1.0;" x1="161" x2="208" y1="463.1875" y2="463.1875"/><line style="stroke:#181818;stroke-width:1.0;" x1="208" x2="208" y1="463.1875" y2="476.1875"/><line style="stroke:#181818;stroke-width:1.0;" x1="167" x2="208" y1="476.1875" y2="476.1875"/><polygon fill="#181818" points="177,472.1875,167,476.1875,177,480.1875,173,476.1875" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="91" x="173" y="458.1216">dispatchEvent</text><polygon fill="#181818" points="425,506.3203,435,510.3203,425,514.3203,429,510.3203" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="166" x2="431" y1="510.3203" y2="510.3203"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="156" x="173" y="505.2544">&#33719;&#21462;&#21629;&#20013;&#27979;&#35797;&#30340;target&#21015;&#34920;</text><polygon fill="#181818" points="575,535.4531,585,539.4531,575,543.4531,579,539.4531" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="166" x2="581" y1="539.4531" y2="539.4531"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="80" x="173" y="534.3872">handleEvent</text><line style="stroke:#181818;stroke-width:1.0;" x1="597" x2="644" y1="593.8516" y2="593.8516"/><line style="stroke:#181818;stroke-width:1.0;" x1="644" x2="644" y1="593.8516" y2="606.8516"/><line style="stroke:#181818;stroke-width:1.0;" x1="603" x2="644" y1="606.8516" y2="606.8516"/><polygon fill="#181818" points="613,602.8516,603,606.8516,613,610.8516,609,606.8516" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="177" x="609" y="558.52">onPointerDown?.call(event)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="199" x="609" y="573.6528">&#23545;&#24212;RawGestureDetectorState.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="132" x="609" y="588.7856">_handlePointerDown</text><polygon fill="#181818" points="798,636.9844,808,640.9844,798,644.9844,802,640.9844" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="602" x2="804" y1="640.9844" y2="640.9844"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="116" x="609" y="635.9185">addPointer(event)</text><line style="stroke:#181818;stroke-width:1.0;" x1="820" x2="867" y1="695.1172" y2="695.1172"/><line style="stroke:#181818;stroke-width:1.0;" x1="867" x2="867" y1="695.1172" y2="708.1172"/><line style="stroke:#181818;stroke-width:1.0;" x1="826" x2="867" y1="708.1172" y2="708.1172"/><polygon fill="#181818" points="836,704.1172,826,708.1172,836,712.1172,832,708.1172" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="166" x="832" y="690.0513">addAllowedPointer(event)</text><line style="stroke:#181818;stroke-width:1.0;" x1="825" x2="872" y1="737.25" y2="737.25"/><line style="stroke:#181818;stroke-width:1.0;" x1="872" x2="872" y1="737.25" y2="750.25"/><line style="stroke:#181818;stroke-width:1.0;" x1="831" x2="872" y1="750.25" y2="750.25"/><polygon fill="#181818" points="841,746.25,831,750.25,841,754.25,837,750.25" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="184" x="837" y="732.1841">startTrackingPointer(pointer)</text><polygon fill="#181818" points="177,780.3828,167,784.3828,177,788.3828,173,784.3828" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="171" x2="819" y1="784.3828" y2="784.3828"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="236" x="183" y="779.3169">pointerRouter.addRoute &#21152;&#20837;&#21040;&#36335;&#30001;&#20013;</text><polygon fill="#181818" points="177,809.5156,167,813.5156,177,817.5156,173,813.5156" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="171" x2="814" y1="813.5156" y2="813.5156"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="309" x="183" y="808.4497">gestureArena.add(pointer, this) &#28155;&#21152;&#21040;&#20107;&#20214;&#31454;&#25216;&#22330;</text><line style="stroke:#181818;stroke-width:1.0;" x1="166" x2="213" y1="837.6484" y2="837.6484"/><line style="stroke:#181818;stroke-width:1.0;" x1="213" x2="213" y1="837.6484" y2="850.6484"/><line style="stroke:#181818;stroke-width:1.0;" x1="172" x2="213" y1="850.6484" y2="850.6484"/><polygon fill="#181818" points="182,846.6484,172,850.6484,182,854.6484,178,850.6484" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="80" x="178" y="832.5825">handleEvent</text><line style="stroke:#181818;stroke-width:1.0;" x1="171" x2="218" y1="879.7813" y2="879.7813"/><line style="stroke:#181818;stroke-width:1.0;" x1="218" x2="218" y1="879.7813" y2="892.7813"/><line style="stroke:#181818;stroke-width:1.0;" x1="177" x2="218" y1="892.7813" y2="892.7813"/><polygon fill="#181818" points="187,888.7813,177,892.7813,187,896.7813,183,892.7813" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="173" x="183" y="874.7153">pointerRouter.route(event)</text><polygon fill="#181818" points="798,922.9141,808,926.9141,798,930.9141,802,926.9141" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="176" x2="804" y1="926.9141" y2="926.9141"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="80" x="183" y="921.8481">handleEvent</text><line style="stroke:#181818;stroke-width:1.0;" x1="820" x2="862" y1="991.3125" y2="991.3125"/><line style="stroke:#181818;stroke-width:1.0;" x1="862" x2="862" y1="991.3125" y2="1004.3125"/><line style="stroke:#181818;stroke-width:1.0;" x1="815" x2="862" y1="1004.3125" y2="1004.3125"/><polygon fill="#181818" points="825,1000.3125,815,1004.3125,825,1008.3125,821,1004.3125" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="169" x="827" y="955.981">&#27491;&#24120;&#25353;&#38190;&#25353;&#19979;&#30340;&#24773;&#20917;&#26080;&#25805;&#20316;&#12290;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="169" x="827" y="971.1138">&#22312;&#35302;&#25720;&#28857;&#31227;&#20986;&#25353;&#38190;&#21306;&#22495;&#31561;&#29305;&#27530;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="117" x="827" y="986.2466">&#24773;&#20917;&#20250;&#20570;&#28165;&#29702;&#25805;&#20316;&#12290;</text><line style="stroke:#181818;stroke-width:1.0;" x1="171" x2="218" y1="1038.5781" y2="1038.5781"/><line style="stroke:#181818;stroke-width:1.0;" x1="218" x2="218" y1="1038.5781" y2="1051.5781"/><line style="stroke:#181818;stroke-width:1.0;" x1="177" x2="218" y1="1051.5781" y2="1051.5781"/><polygon fill="#181818" points="187,1047.5781,177,1051.5781,187,1055.5781,183,1051.5781" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="124" x="183" y="1018.3794">gestureArena.close</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="130" x="183" y="1033.5122">&#38459;&#27490;&#26032;&#20107;&#20214;&#31454;&#20105;&#32773;&#21152;&#20837;</text><path d="M88.5,1071.5781 L287.5,1071.5781 L287.5,1078.7109 L277.5,1088.7109 L88.5,1088.7109 L88.5,1071.5781 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.5;"/><rect fill="none" height="218.0625" style="stroke:#000000;stroke-width:1.5;" width="896.5" x="88.5" y="1071.5781"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="154" x="103.5" y="1084.645">&#21482;&#26377;&#19968;&#20010;&#31454;&#20105;&#32773;&#25165;&#20250;&#25191;&#34892;</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="176" x2="223" y1="1104.8438" y2="1104.8438"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="223" x2="223" y1="1104.8438" y2="1117.8438"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="182" x2="223" y1="1117.8438" y2="1117.8438"/><polygon fill="#181818" points="192,1113.8438,182,1117.8438,192,1121.8438,188,1117.8438" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="117" x="188" y="1099.7778">scheduleMicrotask</text><line style="stroke:#181818;stroke-width:1.0;" x1="181" x2="223" y1="1167.1094" y2="1167.1094"/><line style="stroke:#181818;stroke-width:1.0;" x1="223" x2="223" y1="1167.1094" y2="1180.1094"/><line style="stroke:#181818;stroke-width:1.0;" x1="182" x2="223" y1="1180.1094" y2="1180.1094"/><polygon fill="#181818" points="192,1176.1094,182,1180.1094,192,1184.1094,188,1180.1094" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="144" x="188" y="1146.9106">GestureArenaManager</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="164" x="188" y="1162.0435">&#21024;&#38500;pointer id&#23545;&#24212;&#30340;&#31454;&#25216;&#22330;</text><polygon fill="#181818" points="798,1205.2422,808,1209.2422,798,1213.2422,802,1209.2422" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="181" x2="804" y1="1209.2422" y2="1209.2422"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="169" x="188" y="1204.1763">&#160;&#160;&#160;&#160;&#160;acceptGesture(pointer)</text><line style="stroke:#181818;stroke-width:1.0;" x1="820" x2="862" y1="1273.6406" y2="1273.6406"/><line style="stroke:#181818;stroke-width:1.0;" x1="862" x2="862" y1="1273.6406" y2="1286.6406"/><line style="stroke:#181818;stroke-width:1.0;" x1="815" x2="862" y1="1286.6406" y2="1286.6406"/><polygon fill="#181818" points="825,1282.6406,815,1286.6406,825,1290.6406,821,1286.6406" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="143" x="827" y="1238.3091">&#21807;&#19968;&#30340;&#31454;&#20105;&#32773;&#27492;&#26102;&#24182;&#19981;&#20250;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="143" x="827" y="1253.4419">&#31435;&#21051;&#35302;&#21457;&#28857;&#20987;&#20107;&#20214;&#22238;&#35843;&#65292;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="146" x="827" y="1268.5747">&#32780;&#26159;&#31561;&#24453;up&#20107;&#20214;&#30340;&#21040;&#26469;&#12290;</text><!--SRC=[fLLRJnf167tdLsnZqe1MOr_wO8EDraiVQj9GqvUID9lT2MpSp9BTGTe-uGK5nLjgrLBhfVKM3Q8FAXTjVqntPfUd_eKEkuC2Be8j9BCmEz-PC-SxtpTlbVRkGQ2Xi0fw9IXACC1rSK4UYZ9ufKWG0RL_543aXsxsjq-9G6lAuwg9Q-_cNaXec4xwW1QM4TVQIh4WYBXSNY-7bwxqR9gSpPgPprpGNiTvlGuWDJDjRLsSsmUW25IWiabF1qDeBborejz887A_E24eoUA3SemVaejJdD_JBzTmB5uScyFpKpYzIBQM6YdHnV6YwAvKe1XDcR-cZTIaVR1UvRt79G9UGD8eZq0DbuP2jxVREx3PVeZK3qmowz0eA6cUnlbo0AaEAGFTGRMKQcCyXwSB8ZMAdf_L2-SuFeKNbffEjYXf8Hu9GSjbJP0svo_mmagbkbHNnAi1W71yrTm-SC2mnM6MVYbf242WMhlRthVtTbvrPxW2A-haMOV0ox8RMENYXpYJm_bb7nzXVFe00W9IrDU82jdXX- -gwgu4K9_1C1zYA3uWA04eVMG4Q0hPShPlPR8SuHelSDoi0OaUMLOYe9RBlP4qcaWqhFB22CrS6InaF-l3tUfeBCAdXEdOGUbPlpWyiuLZkpX-ObvaZELJQg3c8GFsH0zjBdm9iSpg4MTL2KSk2YNu-8bT1CRH1fc9ulLyfTnEc_tt-uP5LctoEfNCjGmCzD9FSpLRhQzQUfHJVZk-Rh8hQTtBAQK6ID8_S3PBaedYyZ4TzUmiRGDa8eQdpiZg5laqfr-j_uwEqp9SFp3tzyXIblOfOx-0f_Ds44xcyUQcaKuOYHmvdg7jtWhMBrDuB4MoCMDnwXhbNitQGQygymYoeW4_BAuLIFexMRanZ9vFcD6ORLBE5Q2oXZYyS4ZMwUcYUlRmUWb9p56Q9B5lRYTl4N0oW2O4WHYMmP0ag0hYjP7wDdZUMVesuwh1YaCDyP0F09Mg7TygVjbX_k0aqMw2D3Kt1U50kAv57hOyVjBvjDx82m888HRPk4tKzH9Upb25RP9CuVGEMJt7kNCzMvBQ3usZMHmlK2FHgys-yDXbztN3F9duSvdqGpEQ96iPQYZyCnOEiQoc9cbB8DzsxpRHlxoXhVil]--></g></svg>

<h3 id="命中测试-hitTest"><a href="#命中测试-hitTest" class="headerlink" title="命中测试 hitTest"></a>命中测试 hitTest</h3><p>一次点击事件发生后，会首先进行命中测试。</p>
<p>命中测试hitTest在PointerDownEvent事件的处理流程中进行，从<code>RendererBinding.hitTest</code>开始，然后调用<code>GestureBinding.hitTest</code>，再调用<code>RenderView.hitTest</code>，RenderView会直接调用子节点的hitTest。（其实RendererBinding和GestureBinding都是对应一个WidgetsFlutterBinding类实例，属于继承关系。）RenderView的子节点是RenderBox的子类，从此之后，参与命中测试的组件都是RenderBox或者其子类。hitTest的默认处理逻辑在RenderBox中实现：</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">RenderBox</span> <span class="keyword">extends</span> <span class="title">RenderObject</span> </span>&#123;</span><br><span class="line">  <span class="built_in">bool</span> hitTest(BoxHitTestResult result, &#123; <span class="keyword">required</span> Offset position &#125;) &#123;</span><br><span class="line">    <span class="keyword">if</span> (_size!.contains(position)) &#123;</span><br><span class="line">      <span class="keyword">if</span> (hitTestChildren(result, position: position) || hitTestSelf(position)) &#123;</span><br><span class="line">        result.add(BoxHitTestEntry(<span class="keyword">this</span>, position));</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>处理逻辑解读：</p>
<ul>
<li>先判断点击的坐标是否在控件范围内，如果在，则表示命中测试，否则就返回，不会再对子节点进行命中测试；</li>
<li>执行hitTestChildren判断子节点是否命中测试，如果命中就加入到HitTestResult中；</li>
<li>最后把自己加入到HitTestResult中。</li>
</ul>
<p>因此，hitTest采用深度优先遍历算法，先将最内部的子节点加入到HitTestResult中，最后再加入自己。命中测试会把点击坐标位置的控件都加入到命中列表中，并没有区分是否是可点击控件。</p>
<h3 id="hitTestChildren"><a href="#hitTestChildren" class="headerlink" title="hitTestChildren"></a>hitTestChildren</h3><p>RenderBox的hitTestChildren默认实现始终返回false，RenderBox子类需要自己来实现。对于RenderProxyBox，方法在<code>RenderProxyBoxMixin</code>中实现：</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="meta">@override</span></span><br><span class="line"><span class="built_in">bool</span> hitTestChildren(BoxHitTestResult result, &#123; <span class="keyword">required</span> Offset position &#125;) &#123;</span><br><span class="line">  <span class="keyword">return</span> child?.hitTest(result, position: position) ?? <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>代码解读：</p>
<p><code>hitTestChildren</code>会直接调用子节点的hitTest，如果没有子节点就返回false，表示节点没有命中测试。</p>
<p>对于具有多个子节点的RenderObject，比如Column等，处理逻辑在<code>RenderCustomMultiChildLayoutBox.hitTestChildren</code>中，会使用倒序的方式调用child的hitTest。很多继承自RenderObject的子类都有自己的实现，比如RenderCustomPaint、RenderFittedBox、RenderFlex等。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="built_in">bool</span> defaultHitTestChildren(BoxHitTestResult result, &#123; <span class="keyword">required</span> Offset position &#125;) &#123;</span><br><span class="line">  ChildType? child = lastChild;  <span class="comment">//采用倒序，优先命中测试lastChild</span></span><br><span class="line">  <span class="keyword">while</span> (child != <span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="keyword">final</span> ParentDataType childParentData = child.parentData! <span class="keyword">as</span> ParentDataType;</span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">bool</span> isHit = result.addWithPaintOffset(</span><br><span class="line">      offset: childParentData.offset,</span><br><span class="line">      position: position,</span><br><span class="line">      hitTest: (BoxHitTestResult result, Offset? transformed) &#123;</span><br><span class="line">        <span class="keyword">assert</span>(transformed == position - childParentData.offset);</span><br><span class="line">        <span class="keyword">return</span> child!.hitTest(result, position: transformed!);</span><br><span class="line">      &#125;,</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">if</span> (isHit)</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    child = childParentData.previousSibling;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="点击事件分发"><a href="#点击事件分发" class="headerlink" title="点击事件分发"></a>点击事件分发</h3><p>命中测试完成后，就会执行down事件的分发，事件会分发给命中测试列表中的各个<code>RenderBox</code>，执行<code>RenderBox.handleEvent</code>函数。默认的handleEvent实现是空实现。GestureDetector会通过<code>RenderPointerListener</code>来处理按键。具体流程可以参考上面的时序图。</p>
<p>经过事件分发后，只有真正的点击事件处理组件才会被加入到事件路由和事件竞技场中。</p>
<h2 id="PointerUpEvent（抬起）事件处理流程"><a href="#PointerUpEvent（抬起）事件处理流程" class="headerlink" title="PointerUpEvent（抬起）事件处理流程"></a>PointerUpEvent（抬起）事件处理流程</h2><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1081px" preserveAspectRatio="none" style="width:851px;height:1081px;background:#FFFFFF;" version="1.1" viewBox="0 0 851 1081" width="851px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="875.6641" style="stroke:#181818;stroke-width:1.0;" width="10" x="152" y="161.8281"/><rect fill="#FFBBBB" height="702" style="stroke:#181818;stroke-width:1.0;" width="10" x="157" y="335.4922"/><rect fill="#FFFFFF" height="334.1953" style="stroke:#181818;stroke-width:1.0;" width="10" x="162" y="377.625"/><rect fill="#FFFFFF" height="287.5391" style="stroke:#181818;stroke-width:1.0;" width="10" x="162" y="748.9531"/><rect fill="#FFFFFF" height="95.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="392" y="195.9609"/><rect fill="#FFFFFF" height="28" style="stroke:#181818;stroke-width:1.0;" width="10" x="397" y="263.3594"/><rect fill="#FFFFFF" height="300.0625" style="stroke:#181818;stroke-width:1.0;" width="10" x="588" y="411.7578"/><rect fill="#FFFFFF" height="135.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="593" y="448.8906"/><rect fill="#FFFFFF" height="34.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="598" y="515.1563"/><rect fill="#FFFFFF" height="76.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="593" y="635.5547"/><rect fill="#FFFFFF" height="34.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="598" y="677.6875"/><rect fill="#FFFFFF" height="106.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="588" y="822.0234"/><rect fill="#FFFFFF" height="34.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="593" y="859.1563"/><rect fill="#FFFFFF" height="35.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="588" y="979.3594"/><rect fill="none" height="130.5313" style="stroke:#000000;stroke-width:1.5;" width="318.5" x="493.5" y="468.8906"/><rect fill="none" height="260.5391" style="stroke:#000000;stroke-width:1.5;" width="722.5" x="84.5" y="768.9531"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="156.5" x2="156.5" y1="36.2969" y2="1046.4922"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="397" x2="397" y1="36.2969" y2="1046.4922"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="592.5" x2="592.5" y1="36.2969" y2="1046.4922"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="125" x="94.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="101.5" y="24.9951">GestureBinding</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="125" x="94.5" y="1045.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="101.5" y="1065.4873">GestureBinding</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="178" x="308" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="315" y="24.9951">RenderPointerListener</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="178" x="308" y="1045.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="315" y="1065.4873">RenderPointerListener</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="179" x="503.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="510.5" y="24.9951">TapGestureRecognizer</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="179" x="503.5" y="1045.4922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="510.5" y="1065.4873">TapGestureRecognizer</text><rect fill="#FFFFFF" height="875.6641" style="stroke:#181818;stroke-width:1.0;" width="10" x="152" y="161.8281"/><rect fill="#FFBBBB" height="702" style="stroke:#181818;stroke-width:1.0;" width="10" x="157" y="335.4922"/><rect fill="#FFFFFF" height="334.1953" style="stroke:#181818;stroke-width:1.0;" width="10" x="162" y="377.625"/><rect fill="#FFFFFF" height="287.5391" style="stroke:#181818;stroke-width:1.0;" width="10" x="162" y="748.9531"/><rect fill="#FFFFFF" height="95.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="392" y="195.9609"/><rect fill="#FFFFFF" height="28" style="stroke:#181818;stroke-width:1.0;" width="10" x="397" y="263.3594"/><rect fill="#FFFFFF" height="300.0625" style="stroke:#181818;stroke-width:1.0;" width="10" x="588" y="411.7578"/><rect fill="#FFFFFF" height="135.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="593" y="448.8906"/><rect fill="#FFFFFF" height="34.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="598" y="515.1563"/><rect fill="#FFFFFF" height="76.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="593" y="635.5547"/><rect fill="#FFFFFF" height="34.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="598" y="677.6875"/><rect fill="#FFFFFF" height="106.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="588" y="822.0234"/><rect fill="#FFFFFF" height="34.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="593" y="859.1563"/><rect fill="#FFFFFF" height="35.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="588" y="979.3594"/><ellipse cx="7.5" cy="81.8125" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="145,78.5625,155,82.5625,145,86.5625,149,82.5625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="151" y1="82.5625" y2="82.5625"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="125" x="15" y="62.3638">handlePointerEvent</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="109" x="15" y="77.4966">(PointerUpEvent)</text><line style="stroke:#181818;stroke-width:1.0;" x1="157" x2="199" y1="111.6953" y2="111.6953"/><line style="stroke:#181818;stroke-width:1.0;" x1="199" x2="199" y1="111.6953" y2="124.6953"/><line style="stroke:#181818;stroke-width:1.0;" x1="158" x2="199" y1="124.6953" y2="124.6953"/><polygon fill="#181818" points="168,120.6953,158,124.6953,168,128.6953,164,124.6953" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="104" x="164" y="106.6294">&#21024;&#38500;&#21629;&#20013;&#27979;&#35797;&#32467;&#26524;</text><line style="stroke:#181818;stroke-width:1.0;" x1="157" x2="204" y1="148.8281" y2="148.8281"/><line style="stroke:#181818;stroke-width:1.0;" x1="204" x2="204" y1="148.8281" y2="161.8281"/><line style="stroke:#181818;stroke-width:1.0;" x1="163" x2="204" y1="161.8281" y2="161.8281"/><polygon fill="#181818" points="173,157.8281,163,161.8281,173,165.8281,169,161.8281" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="91" x="169" y="143.7622">dispatchEvent</text><polygon fill="#181818" points="380,191.9609,390,195.9609,380,199.9609,384,195.9609" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="162" x2="386" y1="195.9609" y2="195.9609"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="80" x="169" y="190.895">handleEvent</text><line style="stroke:#181818;stroke-width:1.0;" x1="407" x2="449" y1="255.3594" y2="255.3594"/><line style="stroke:#181818;stroke-width:1.0;" x1="449" x2="449" y1="255.3594" y2="268.3594"/><line style="stroke:#181818;stroke-width:1.0;" x1="408" x2="449" y1="268.3594" y2="268.3594"/><polygon fill="#181818" points="418,264.3594,408,268.3594,418,272.3594,414,268.3594" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="157" x="414" y="220.0278">onPointerUp?.call(event)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="172" x="414" y="235.1606">&#22312;GestureDetector&#30340;&#22330;&#26223;&#65292;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="113" x="414" y="250.2935">onPointerUp&#20026;null</text><line style="stroke:#181818;stroke-width:1.0;" x1="162" x2="209" y1="322.4922" y2="322.4922"/><line style="stroke:#181818;stroke-width:1.0;" x1="209" x2="209" y1="322.4922" y2="335.4922"/><line style="stroke:#181818;stroke-width:1.0;" x1="168" x2="209" y1="335.4922" y2="335.4922"/><polygon fill="#181818" points="178,331.4922,168,335.4922,178,339.4922,174,335.4922" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="80" x="174" y="317.4263">handleEvent</text><line style="stroke:#181818;stroke-width:1.0;" x1="167" x2="214" y1="364.625" y2="364.625"/><line style="stroke:#181818;stroke-width:1.0;" x1="214" x2="214" y1="364.625" y2="377.625"/><line style="stroke:#181818;stroke-width:1.0;" x1="173" x2="214" y1="377.625" y2="377.625"/><polygon fill="#181818" points="183,373.625,173,377.625,183,381.625,179,377.625" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="126" x="179" y="359.5591">pointerRouter.route</text><polygon fill="#181818" points="576,407.7578,586,411.7578,576,415.7578,580,411.7578" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="172" x2="582" y1="411.7578" y2="411.7578"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="80" x="179" y="406.6919">handleEvent</text><line style="stroke:#181818;stroke-width:1.0;" x1="598" x2="645" y1="435.8906" y2="435.8906"/><line style="stroke:#181818;stroke-width:1.0;" x1="645" x2="645" y1="435.8906" y2="448.8906"/><line style="stroke:#181818;stroke-width:1.0;" x1="604" x2="645" y1="448.8906" y2="448.8906"/><polygon fill="#181818" points="614,444.8906,604,448.8906,614,452.8906,610,448.8906" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="138" x="610" y="430.8247">handlePrimaryPointer</text><path d="M493.5,468.8906 L706.5,468.8906 L706.5,476.0234 L696.5,486.0234 L493.5,486.0234 L493.5,468.8906 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.5;"/><rect fill="none" height="130.5313" style="stroke:#000000;stroke-width:1.5;" width="318.5" x="493.5" y="468.8906"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="168" x="508.5" y="481.9575">&#21482;&#26377;&#19968;&#20010;&#31454;&#20105;&#32773;&#26102;&#25165;&#20250;&#25191;&#34892;</text><line style="stroke:#181818;stroke-width:1.0;" x1="603" x2="650" y1="502.1563" y2="502.1563"/><line style="stroke:#181818;stroke-width:1.0;" x1="650" x2="650" y1="502.1563" y2="515.1563"/><line style="stroke:#181818;stroke-width:1.0;" x1="609" x2="650" y1="515.1563" y2="515.1563"/><polygon fill="#181818" points="619,511.1563,609,515.1563,619,519.1563,615,515.1563" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="84" x="615" y="497.0903">handleTapUp</text><ellipse cx="841.5" cy="548.5391" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="824.5,545.2891,834.5,549.2891,824.5,553.2891,828.5,549.2891" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="603" x2="830.5" y1="549.2891" y2="549.2891"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="188" x="610" y="544.2231">onTap &#20351;&#29992;&#32773;&#25509;&#25910;&#21040;onTap&#20107;&#20214;</text><line style="stroke:#181818;stroke-width:1.0;" x1="603" x2="645" y1="583.4219" y2="583.4219"/><line style="stroke:#181818;stroke-width:1.0;" x1="645" x2="645" y1="583.4219" y2="596.4219"/><line style="stroke:#181818;stroke-width:1.0;" x1="598" x2="645" y1="596.4219" y2="596.4219"/><polygon fill="#181818" points="608,592.4219,598,596.4219,608,600.4219,604,596.4219" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="40" x="610" y="578.356">_reset</text><line style="stroke:#181818;stroke-width:1.0;" x1="598" x2="645" y1="622.5547" y2="622.5547"/><line style="stroke:#181818;stroke-width:1.0;" x1="645" x2="645" y1="622.5547" y2="635.5547"/><line style="stroke:#181818;stroke-width:1.0;" x1="604" x2="645" y1="635.5547" y2="635.5547"/><polygon fill="#181818" points="614,631.5547,604,635.5547,614,639.5547,610,635.5547" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="233" x="610" y="617.4888">stopTrackingIfPointerNoLongerDown</text><line style="stroke:#181818;stroke-width:1.0;" x1="603" x2="650" y1="664.6875" y2="664.6875"/><line style="stroke:#181818;stroke-width:1.0;" x1="650" x2="650" y1="664.6875" y2="677.6875"/><line style="stroke:#181818;stroke-width:1.0;" x1="609" x2="650" y1="677.6875" y2="677.6875"/><polygon fill="#181818" points="619,673.6875,609,677.6875,619,681.6875,615,677.6875" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="127" x="615" y="659.6216">stopTrackingPointer</text><polygon fill="#181818" points="178,707.8203,168,711.8203,178,715.8203,174,711.8203" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="172" x2="592" y1="711.8203" y2="711.8203"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="180" x="184" y="706.7544">pointerRouter.removeRoute</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="167" x2="214" y1="735.9531" y2="735.9531"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="214" x2="214" y1="735.9531" y2="748.9531"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="173" x2="214" y1="748.9531" y2="748.9531"/><polygon fill="#181818" points="183,744.9531,173,748.9531,183,752.9531,179,748.9531" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="211" x="179" y="730.8872">gestureArena.sweep&#22788;&#29702;&#31454;&#25216;&#36923;&#36753;</text><path d="M84.5,768.9531 L150.5,768.9531 L150.5,776.0859 L140.5,786.0859 L84.5,786.0859 L84.5,768.9531 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.5;"/><rect fill="none" height="260.5391" style="stroke:#000000;stroke-width:1.5;" width="722.5" x="84.5" y="768.9531"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="21" x="99.5" y="782.02">alt</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="175" x="165.5" y="781.1636">[&#23384;&#22312;&#22810;&#20010;&#31454;&#20105;&#32773;&#65292;&#21017;&#25191;&#34892;&#31454;&#25216;&#27969;&#31243;]</text><line style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="84.5" x2="807" y1="787.0859" y2="787.0859"/><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="54" x="89.5" y="797.2964">[&#31454;&#25216;&#32988;&#20986;]</text><polygon fill="#181818" points="576,818.0234,586,822.0234,576,826.0234,580,822.0234" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="172" x2="582" y1="822.0234" y2="822.0234"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="94" x="179" y="816.9575">acceptGesture</text><line style="stroke:#181818;stroke-width:1.0;" x1="598" x2="645" y1="846.1563" y2="846.1563"/><line style="stroke:#181818;stroke-width:1.0;" x1="645" x2="645" y1="846.1563" y2="859.1563"/><line style="stroke:#181818;stroke-width:1.0;" x1="604" x2="645" y1="859.1563" y2="859.1563"/><polygon fill="#181818" points="614,855.1563,604,859.1563,614,863.1563,610,859.1563" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="84" x="610" y="841.0903">handleTapUp</text><ellipse cx="841.5" cy="892.5391" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="824.5,889.2891,834.5,893.2891,824.5,897.2891,828.5,893.2891" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="598" x2="830.5" y1="893.2891" y2="893.2891"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="188" x="605" y="888.2231">onTap &#20351;&#29992;&#32773;&#25509;&#25910;&#21040;onTap&#20107;&#20214;</text><line style="stroke:#181818;stroke-width:1.0;" x1="598" x2="640" y1="927.4219" y2="927.4219"/><line style="stroke:#181818;stroke-width:1.0;" x1="640" x2="640" y1="927.4219" y2="940.4219"/><line style="stroke:#181818;stroke-width:1.0;" x1="593" x2="640" y1="940.4219" y2="940.4219"/><polygon fill="#181818" points="603,936.4219,593,940.4219,603,944.4219,599,940.4219" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="40" x="605" y="922.356">_reset</text><line style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="84.5" x2="807" y1="944.4219" y2="944.4219"/><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="54" x="89.5" y="954.6323">[&#31454;&#25216;&#22833;&#36133;]</text><polygon fill="#181818" points="576,975.3594,586,979.3594,576,983.3594,580,979.3594" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="172" x2="582" y1="979.3594" y2="979.3594"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="87" x="179" y="974.2935">rejectGesture</text><line style="stroke:#181818;stroke-width:1.0;" x1="598" x2="640" y1="1013.4922" y2="1013.4922"/><line style="stroke:#181818;stroke-width:1.0;" x1="640" x2="640" y1="1013.4922" y2="1026.4922"/><line style="stroke:#181818;stroke-width:1.0;" x1="593" x2="640" y1="1026.4922" y2="1026.4922"/><polygon fill="#181818" points="603,1022.4922,593,1026.4922,603,1030.4922,599,1026.4922" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="40" x="605" y="1008.4263">_reset</text><!--SRC=[jLHVQzDG57_FfxZWosIq7w0F4yUS24D6sPwio2KvPj7itd1psw5F5QUsTluPJhIb38KEosHCmPNIRlfbSfFioQ_WRH9BR5FRJCn3mZtd_iwVt_cTtAAPXUjWyoA3HODe1j5H3crWefcmIWt2WLqh0U45CXSTrwt0S1af8x3C0XeB92eVpkijiNlcT8_Savf__DRhlt7tczEny_Cvf1csXRcw4IHCWEI1QC2YkbOCcmC15Y331a9Sygs_m3EP7A9asEwLh8fDSmw2hWj4DDjH9Kl0GUMKUOrjqUovzUEVfpi54aCwtHufcgQY0LQvKS8SadFEmcIyes6qaLkNbfSNvJCRkLPOGvuMvJlB1fy4u1gs8cCULAeJus42mucNfeDNcR69sOE834MNDLX8l3fqcrMdMtQwXzxdVQTNzSjFt7STj_h2EMsurK_-nvsB9fJkTMiIcDv6uU2b7pbdFxozzY3pomDthoCgNmAxqwiv_Kwwz8EWTnZOm1Kv-_IbsvnQQmohz-L4RjoDoBf9LoZHWItHBV9l8N-pFod8g2GoOyg1JLg2u10NUbAyDFu_yuufCrdJUcYwoe3WhBq5O8dMjlVwgHII-xnyNkxxttSLR78aZjxBFHQjHbnbSdr5fHvAB4Iu9u-yTaq1qmOKMlp7JV6ibsPHiAg2nIFV_rBkRBgTHd-gueQgdXOrnfveVVM_7QHXZy4z-O-z47iZYpTHMxy0]--></g></svg>

<p><code>PointerUpEvent</code>表示一次点击事件周期的结束，因此除了触发控件的点击事件回调外，还做了一些清理工作，比如删除事件路由，执行reset等。还有一项很重要的工作就是处理竞技逻辑，当点击范围存在多个可点击控件时，通过竞技逻辑来决定哪个空间来处理本次点击事件。</p>
<p>下面是竞技场的代码实现：</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GestureArenaManager</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> sweep(<span class="built_in">int</span> pointer) &#123;</span><br><span class="line">    <span class="keyword">final</span> _GestureArena? state = _arenas[pointer];  <span class="comment">//根据pointer id获取竞技场</span></span><br><span class="line">    ...</span><br><span class="line">    _arenas.remove(pointer);  <span class="comment">//删除竞技场</span></span><br><span class="line">    <span class="keyword">if</span> (state.members.isNotEmpty) &#123;</span><br><span class="line">      <span class="comment">// First member wins.</span></span><br><span class="line">      state.members.first.acceptGesture(pointer);</span><br><span class="line">      <span class="comment">// Give all the other members the bad news.</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt; state.members.length; i++)</span><br><span class="line">        state.members[i].rejectGesture(pointer);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>竞技逻辑的代码实现非常简单，如果某次点击存在多个竞争者，则列表的第一个胜出，其他的都失败。所以，竞技的逻辑依赖竞争者的加入顺序，第一个加入的就会赢的胜利。这个顺序就是命中测试的顺序，可以参考hitTest一节的分析。</p>
<h2 id="GestureDetector相关的类图"><a href="#GestureDetector相关的类图" class="headerlink" title="GestureDetector相关的类图"></a>GestureDetector相关的类图</h2><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="938px" preserveAspectRatio="none" style="width:1209px;height:938px;background:#FFFFFF;" version="1.1" viewBox="0 0 1209 938" width="1209px" zoomAndPan="magnify"><defs/><g><!--class GestureDetector--><g id="elem_GestureDetector"><rect fill="#F1F1F1" height="48" id="GestureDetector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="155" x="605" y="7"/><ellipse cx="620" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M622.3438,18.6719 C621.4063,18.2344 620.8125,18.0938 619.9375,18.0938 C617.3125,18.0938 615.3125,20.1719 615.3125,22.8906 L615.3125,24.0156 C615.3125,26.5938 617.4219,28.4844 620.3125,28.4844 C621.5313,28.4844 622.6875,28.1875 623.4375,27.6406 C624.0156,27.2344 624.3438,26.7813 624.3438,26.3906 C624.3438,25.9375 623.9531,25.5469 623.4844,25.5469 C623.2656,25.5469 623.0625,25.625 622.875,25.8125 C622.4219,26.2969 622.4219,26.2969 622.2344,26.3906 C621.8125,26.6563 621.125,26.7813 620.3594,26.7813 C618.3125,26.7813 617.0156,25.6875 617.0156,23.9844 L617.0156,22.8906 C617.0156,21.1094 618.2656,19.7969 620,19.7969 C620.5781,19.7969 621.1875,19.9531 621.6563,20.2031 C622.1406,20.4844 622.3125,20.7031 622.4063,21.1094 C622.4688,21.5156 622.5,21.6406 622.6406,21.7656 C622.7813,21.9063 623.0156,22.0156 623.2344,22.0156 C623.5,22.0156 623.7656,21.875 623.9375,21.6563 C624.0469,21.5 624.0781,21.3125 624.0781,20.8906 L624.0781,19.4688 C624.0781,19.0313 624.0625,18.9063 623.9688,18.75 C623.8125,18.4844 623.5313,18.3438 623.2344,18.3438 C622.9375,18.3438 622.7344,18.4375 622.5156,18.75 L622.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="634" y="27.8467">GestureDetector</text><line style="stroke:#181818;stroke-width:0.5;" x1="606" x2="759" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="606" x2="759" y1="47" y2="47"/></g><!--class RawGestureDetector--><g id="elem_RawGestureDetector"><rect fill="#F1F1F1" height="48" id="RawGestureDetector" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="184" x="590.5" y="124"/><ellipse cx="605.5" cy="140" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M607.8438,135.6719 C606.9063,135.2344 606.3125,135.0938 605.4375,135.0938 C602.8125,135.0938 600.8125,137.1719 600.8125,139.8906 L600.8125,141.0156 C600.8125,143.5938 602.9219,145.4844 605.8125,145.4844 C607.0313,145.4844 608.1875,145.1875 608.9375,144.6406 C609.5156,144.2344 609.8438,143.7813 609.8438,143.3906 C609.8438,142.9375 609.4531,142.5469 608.9844,142.5469 C608.7656,142.5469 608.5625,142.625 608.375,142.8125 C607.9219,143.2969 607.9219,143.2969 607.7344,143.3906 C607.3125,143.6563 606.625,143.7813 605.8594,143.7813 C603.8125,143.7813 602.5156,142.6875 602.5156,140.9844 L602.5156,139.8906 C602.5156,138.1094 603.7656,136.7969 605.5,136.7969 C606.0781,136.7969 606.6875,136.9531 607.1563,137.2031 C607.6406,137.4844 607.8125,137.7031 607.9063,138.1094 C607.9688,138.5156 608,138.6406 608.1406,138.7656 C608.2813,138.9063 608.5156,139.0156 608.7344,139.0156 C609,139.0156 609.2656,138.875 609.4375,138.6563 C609.5469,138.5 609.5781,138.3125 609.5781,137.8906 L609.5781,136.4688 C609.5781,136.0313 609.5625,135.9063 609.4688,135.75 C609.3125,135.4844 609.0313,135.3438 608.7344,135.3438 C608.4375,135.3438 608.2344,135.4375 608.0156,135.75 L607.8438,135.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="619.5" y="144.8467">RawGestureDetector</text><line style="stroke:#181818;stroke-width:0.5;" x1="591.5" x2="773.5" y1="156" y2="156"/><line style="stroke:#181818;stroke-width:0.5;" x1="591.5" x2="773.5" y1="164" y2="164"/></g><!--class RawGestureDetectorState--><g id="elem_RawGestureDetectorState"><rect codeLine="6" fill="#F1F1F1" height="64.2969" id="RawGestureDetectorState" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="224" x="570.5" y="257"/><ellipse cx="585.5" cy="273" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M587.8438,268.6719 C586.9063,268.2344 586.3125,268.0938 585.4375,268.0938 C582.8125,268.0938 580.8125,270.1719 580.8125,272.8906 L580.8125,274.0156 C580.8125,276.5938 582.9219,278.4844 585.8125,278.4844 C587.0313,278.4844 588.1875,278.1875 588.9375,277.6406 C589.5156,277.2344 589.8438,276.7813 589.8438,276.3906 C589.8438,275.9375 589.4531,275.5469 588.9844,275.5469 C588.7656,275.5469 588.5625,275.625 588.375,275.8125 C587.9219,276.2969 587.9219,276.2969 587.7344,276.3906 C587.3125,276.6563 586.625,276.7813 585.8594,276.7813 C583.8125,276.7813 582.5156,275.6875 582.5156,273.9844 L582.5156,272.8906 C582.5156,271.1094 583.7656,269.7969 585.5,269.7969 C586.0781,269.7969 586.6875,269.9531 587.1563,270.2031 C587.6406,270.4844 587.8125,270.7031 587.9063,271.1094 C587.9688,271.5156 588,271.6406 588.1406,271.7656 C588.2813,271.9063 588.5156,272.0156 588.7344,272.0156 C589,272.0156 589.2656,271.875 589.4375,271.6563 C589.5469,271.5 589.5781,271.3125 589.5781,270.8906 L589.5781,269.4688 C589.5781,269.0313 589.5625,268.9063 589.4688,268.75 C589.3125,268.4844 589.0313,268.3438 588.7344,268.3438 C588.4375,268.3438 588.2344,268.4375 588.0156,268.75 L587.8438,268.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="599.5" y="277.8467">RawGestureDetectorState</text><line style="stroke:#181818;stroke-width:0.5;" x1="571.5" x2="793.5" y1="289" y2="289"/><line style="stroke:#181818;stroke-width:0.5;" x1="571.5" x2="793.5" y1="297" y2="297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="200" x="576.5" y="313.9951">_handlePointerDown(event)</text></g><!--class GestureRecognizer--><g id="elem_GestureRecognizer"><rect fill="#F1F1F1" height="48" id="GestureRecognizer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="170" x="597.5" y="390"/><ellipse cx="612.5" cy="406" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M614.8438,401.6719 C613.9063,401.2344 613.3125,401.0938 612.4375,401.0938 C609.8125,401.0938 607.8125,403.1719 607.8125,405.8906 L607.8125,407.0156 C607.8125,409.5938 609.9219,411.4844 612.8125,411.4844 C614.0313,411.4844 615.1875,411.1875 615.9375,410.6406 C616.5156,410.2344 616.8438,409.7813 616.8438,409.3906 C616.8438,408.9375 616.4531,408.5469 615.9844,408.5469 C615.7656,408.5469 615.5625,408.625 615.375,408.8125 C614.9219,409.2969 614.9219,409.2969 614.7344,409.3906 C614.3125,409.6563 613.625,409.7813 612.8594,409.7813 C610.8125,409.7813 609.5156,408.6875 609.5156,406.9844 L609.5156,405.8906 C609.5156,404.1094 610.7656,402.7969 612.5,402.7969 C613.0781,402.7969 613.6875,402.9531 614.1563,403.2031 C614.6406,403.4844 614.8125,403.7031 614.9063,404.1094 C614.9688,404.5156 615,404.6406 615.1406,404.7656 C615.2813,404.9063 615.5156,405.0156 615.7344,405.0156 C616,405.0156 616.2656,404.875 616.4375,404.6563 C616.5469,404.5 616.5781,404.3125 616.5781,403.8906 L616.5781,402.4688 C616.5781,402.0313 616.5625,401.9063 616.4688,401.75 C616.3125,401.4844 616.0313,401.3438 615.7344,401.3438 C615.4375,401.3438 615.2344,401.4375 615.0156,401.75 L614.8438,401.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="626.5" y="410.8467">GestureRecognizer</text><line style="stroke:#181818;stroke-width:0.5;" x1="598.5" x2="766.5" y1="422" y2="422"/><line style="stroke:#181818;stroke-width:0.5;" x1="598.5" x2="766.5" y1="430" y2="430"/></g><!--class OneSequenceGestureRecognizer--><g id="elem_OneSequenceGestureRecognizer"><rect fill="#F1F1F1" height="48" id="OneSequenceGestureRecognizer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="269" x="548" y="515"/><ellipse cx="563" cy="531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M565.3438,526.6719 C564.4063,526.2344 563.8125,526.0938 562.9375,526.0938 C560.3125,526.0938 558.3125,528.1719 558.3125,530.8906 L558.3125,532.0156 C558.3125,534.5938 560.4219,536.4844 563.3125,536.4844 C564.5313,536.4844 565.6875,536.1875 566.4375,535.6406 C567.0156,535.2344 567.3438,534.7813 567.3438,534.3906 C567.3438,533.9375 566.9531,533.5469 566.4844,533.5469 C566.2656,533.5469 566.0625,533.625 565.875,533.8125 C565.4219,534.2969 565.4219,534.2969 565.2344,534.3906 C564.8125,534.6563 564.125,534.7813 563.3594,534.7813 C561.3125,534.7813 560.0156,533.6875 560.0156,531.9844 L560.0156,530.8906 C560.0156,529.1094 561.2656,527.7969 563,527.7969 C563.5781,527.7969 564.1875,527.9531 564.6563,528.2031 C565.1406,528.4844 565.3125,528.7031 565.4063,529.1094 C565.4688,529.5156 565.5,529.6406 565.6406,529.7656 C565.7813,529.9063 566.0156,530.0156 566.2344,530.0156 C566.5,530.0156 566.7656,529.875 566.9375,529.6563 C567.0469,529.5 567.0781,529.3125 567.0781,528.8906 L567.0781,527.4688 C567.0781,527.0313 567.0625,526.9063 566.9688,526.75 C566.8125,526.4844 566.5313,526.3438 566.2344,526.3438 C565.9375,526.3438 565.7344,526.4375 565.5156,526.75 L565.3438,526.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="237" x="577" y="535.8467">OneSequenceGestureRecognizer</text><line style="stroke:#181818;stroke-width:0.5;" x1="549" x2="816" y1="547" y2="547"/><line style="stroke:#181818;stroke-width:0.5;" x1="549" x2="816" y1="555" y2="555"/></g><!--class PrimaryPointerGestureRecognizer--><g id="elem_PrimaryPointerGestureRecognizer"><rect fill="#F1F1F1" height="48" id="PrimaryPointerGestureRecognizer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="278" x="528.5" y="632"/><ellipse cx="543.5" cy="648" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M545.8438,643.6719 C544.9063,643.2344 544.3125,643.0938 543.4375,643.0938 C540.8125,643.0938 538.8125,645.1719 538.8125,647.8906 L538.8125,649.0156 C538.8125,651.5938 540.9219,653.4844 543.8125,653.4844 C545.0313,653.4844 546.1875,653.1875 546.9375,652.6406 C547.5156,652.2344 547.8438,651.7813 547.8438,651.3906 C547.8438,650.9375 547.4531,650.5469 546.9844,650.5469 C546.7656,650.5469 546.5625,650.625 546.375,650.8125 C545.9219,651.2969 545.9219,651.2969 545.7344,651.3906 C545.3125,651.6563 544.625,651.7813 543.8594,651.7813 C541.8125,651.7813 540.5156,650.6875 540.5156,648.9844 L540.5156,647.8906 C540.5156,646.1094 541.7656,644.7969 543.5,644.7969 C544.0781,644.7969 544.6875,644.9531 545.1563,645.2031 C545.6406,645.4844 545.8125,645.7031 545.9063,646.1094 C545.9688,646.5156 546,646.6406 546.1406,646.7656 C546.2813,646.9063 546.5156,647.0156 546.7344,647.0156 C547,647.0156 547.2656,646.875 547.4375,646.6563 C547.5469,646.5 547.5781,646.3125 547.5781,645.8906 L547.5781,644.4688 C547.5781,644.0313 547.5625,643.9063 547.4688,643.75 C547.3125,643.4844 547.0313,643.3438 546.7344,643.3438 C546.4375,643.3438 546.2344,643.4375 546.0156,643.75 L545.8438,643.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="246" x="557.5" y="652.8467">PrimaryPointerGestureRecognizer</text><line style="stroke:#181818;stroke-width:0.5;" x1="529.5" x2="805.5" y1="664" y2="664"/><line style="stroke:#181818;stroke-width:0.5;" x1="529.5" x2="805.5" y1="672" y2="672"/></g><!--class BaseTapGestureRecognizer--><g id="elem_BaseTapGestureRecognizer"><rect codeLine="9" fill="#F1F1F1" height="80.5938" id="BaseTapGestureRecognizer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="231" x="348" y="741"/><ellipse cx="363" cy="757" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M365.3438,752.6719 C364.4063,752.2344 363.8125,752.0938 362.9375,752.0938 C360.3125,752.0938 358.3125,754.1719 358.3125,756.8906 L358.3125,758.0156 C358.3125,760.5938 360.4219,762.4844 363.3125,762.4844 C364.5313,762.4844 365.6875,762.1875 366.4375,761.6406 C367.0156,761.2344 367.3438,760.7813 367.3438,760.3906 C367.3438,759.9375 366.9531,759.5469 366.4844,759.5469 C366.2656,759.5469 366.0625,759.625 365.875,759.8125 C365.4219,760.2969 365.4219,760.2969 365.2344,760.3906 C364.8125,760.6563 364.125,760.7813 363.3594,760.7813 C361.3125,760.7813 360.0156,759.6875 360.0156,757.9844 L360.0156,756.8906 C360.0156,755.1094 361.2656,753.7969 363,753.7969 C363.5781,753.7969 364.1875,753.9531 364.6563,754.2031 C365.1406,754.4844 365.3125,754.7031 365.4063,755.1094 C365.4688,755.5156 365.5,755.6406 365.6406,755.7656 C365.7813,755.9063 366.0156,756.0156 366.2344,756.0156 C366.5,756.0156 366.7656,755.875 366.9375,755.6563 C367.0469,755.5 367.0781,755.3125 367.0781,754.8906 L367.0781,753.4688 C367.0781,753.0313 367.0625,752.9063 366.9688,752.75 C366.8125,752.4844 366.5313,752.3438 366.2344,752.3438 C365.9375,752.3438 365.7344,752.4375 365.5156,752.75 L365.3438,752.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="377" y="761.8467">BaseTapGestureRecognizer</text><line style="stroke:#181818;stroke-width:0.5;" x1="349" x2="578" y1="773" y2="773"/><line style="stroke:#181818;stroke-width:0.5;" x1="349" x2="578" y1="781" y2="781"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="354" y="797.9951">acceptGesture(int pointer)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="354" y="814.292">rejectGesture(int pointer)</text></g><!--class TapGestureRecognizer--><g id="elem_TapGestureRecognizer"><rect fill="#F1F1F1" height="48" id="TapGestureRecognizer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="197" x="365" y="883"/><ellipse cx="380" cy="899" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M382.3438,894.6719 C381.4063,894.2344 380.8125,894.0938 379.9375,894.0938 C377.3125,894.0938 375.3125,896.1719 375.3125,898.8906 L375.3125,900.0156 C375.3125,902.5938 377.4219,904.4844 380.3125,904.4844 C381.5313,904.4844 382.6875,904.1875 383.4375,903.6406 C384.0156,903.2344 384.3438,902.7813 384.3438,902.3906 C384.3438,901.9375 383.9531,901.5469 383.4844,901.5469 C383.2656,901.5469 383.0625,901.625 382.875,901.8125 C382.4219,902.2969 382.4219,902.2969 382.2344,902.3906 C381.8125,902.6563 381.125,902.7813 380.3594,902.7813 C378.3125,902.7813 377.0156,901.6875 377.0156,899.9844 L377.0156,898.8906 C377.0156,897.1094 378.2656,895.7969 380,895.7969 C380.5781,895.7969 381.1875,895.9531 381.6563,896.2031 C382.1406,896.4844 382.3125,896.7031 382.4063,897.1094 C382.4688,897.5156 382.5,897.6406 382.6406,897.7656 C382.7813,897.9063 383.0156,898.0156 383.2344,898.0156 C383.5,898.0156 383.7656,897.875 383.9375,897.6563 C384.0469,897.5 384.0781,897.3125 384.0781,896.8906 L384.0781,895.4688 C384.0781,895.0313 384.0625,894.9063 383.9688,894.75 C383.8125,894.4844 383.5313,894.3438 383.2344,894.3438 C382.9375,894.3438 382.7344,894.4375 382.5156,894.75 L382.3438,894.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="394" y="903.8467">TapGestureRecognizer</text><line style="stroke:#181818;stroke-width:0.5;" x1="366" x2="561" y1="915" y2="915"/><line style="stroke:#181818;stroke-width:0.5;" x1="366" x2="561" y1="923" y2="923"/></g><!--class LongPressGestureRecognizer--><g id="elem_LongPressGestureRecognizer"><rect fill="#F1F1F1" height="48" id="LongPressGestureRecognizer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="243" x="614" y="757.5"/><ellipse cx="629" cy="773.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M631.3438,769.1719 C630.4063,768.7344 629.8125,768.5938 628.9375,768.5938 C626.3125,768.5938 624.3125,770.6719 624.3125,773.3906 L624.3125,774.5156 C624.3125,777.0938 626.4219,778.9844 629.3125,778.9844 C630.5313,778.9844 631.6875,778.6875 632.4375,778.1406 C633.0156,777.7344 633.3438,777.2813 633.3438,776.8906 C633.3438,776.4375 632.9531,776.0469 632.4844,776.0469 C632.2656,776.0469 632.0625,776.125 631.875,776.3125 C631.4219,776.7969 631.4219,776.7969 631.2344,776.8906 C630.8125,777.1563 630.125,777.2813 629.3594,777.2813 C627.3125,777.2813 626.0156,776.1875 626.0156,774.4844 L626.0156,773.3906 C626.0156,771.6094 627.2656,770.2969 629,770.2969 C629.5781,770.2969 630.1875,770.4531 630.6563,770.7031 C631.1406,770.9844 631.3125,771.2031 631.4063,771.6094 C631.4688,772.0156 631.5,772.1406 631.6406,772.2656 C631.7813,772.4063 632.0156,772.5156 632.2344,772.5156 C632.5,772.5156 632.7656,772.375 632.9375,772.1563 C633.0469,772 633.0781,771.8125 633.0781,771.3906 L633.0781,769.9688 C633.0781,769.5313 633.0625,769.4063 632.9688,769.25 C632.8125,768.9844 632.5313,768.8438 632.2344,768.8438 C631.9375,768.8438 631.7344,768.9375 631.5156,769.25 L631.3438,769.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="643" y="778.3467">LongPressGestureRecognizer</text><line style="stroke:#181818;stroke-width:0.5;" x1="615" x2="856" y1="789.5" y2="789.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="615" x2="856" y1="797.5" y2="797.5"/></g><!--class Listener--><g id="elem_Listener"><rect codeLine="18" fill="#F1F1F1" height="64.2969" id="Listener" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="123" x="343" y="382"/><ellipse cx="372.4" cy="398" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M374.7438,393.6719 C373.8063,393.2344 373.2125,393.0938 372.3375,393.0938 C369.7125,393.0938 367.7125,395.1719 367.7125,397.8906 L367.7125,399.0156 C367.7125,401.5938 369.8219,403.4844 372.7125,403.4844 C373.9313,403.4844 375.0875,403.1875 375.8375,402.6406 C376.4156,402.2344 376.7438,401.7813 376.7438,401.3906 C376.7438,400.9375 376.3531,400.5469 375.8844,400.5469 C375.6656,400.5469 375.4625,400.625 375.275,400.8125 C374.8219,401.2969 374.8219,401.2969 374.6344,401.3906 C374.2125,401.6563 373.525,401.7813 372.7594,401.7813 C370.7125,401.7813 369.4156,400.6875 369.4156,398.9844 L369.4156,397.8906 C369.4156,396.1094 370.6656,394.7969 372.4,394.7969 C372.9781,394.7969 373.5875,394.9531 374.0563,395.2031 C374.5406,395.4844 374.7125,395.7031 374.8063,396.1094 C374.8688,396.5156 374.9,396.6406 375.0406,396.7656 C375.1813,396.9063 375.4156,397.0156 375.6344,397.0156 C375.9,397.0156 376.1656,396.875 376.3375,396.6563 C376.4469,396.5 376.4781,396.3125 376.4781,395.8906 L376.4781,394.4688 C376.4781,394.0313 376.4625,393.9063 376.3688,393.75 C376.2125,393.4844 375.9313,393.3438 375.6344,393.3438 C375.3375,393.3438 375.1344,393.4375 374.9156,393.75 L374.7438,393.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="389.6" y="402.8467">Listener</text><line style="stroke:#181818;stroke-width:0.5;" x1="344" x2="465" y1="414" y2="414"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="349" y="430.9951">onPointerDown</text><line style="stroke:#181818;stroke-width:0.5;" x1="344" x2="465" y1="438.2969" y2="438.2969"/></g><!--class SingleChildRenderObjectWidget--><g id="elem_SingleChildRenderObjectWidget"><rect fill="#F1F1F1" height="48" id="SingleChildRenderObjectWidget" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="265" x="270" y="265"/><ellipse cx="285" cy="281" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M287.3438,276.6719 C286.4063,276.2344 285.8125,276.0938 284.9375,276.0938 C282.3125,276.0938 280.3125,278.1719 280.3125,280.8906 L280.3125,282.0156 C280.3125,284.5938 282.4219,286.4844 285.3125,286.4844 C286.5313,286.4844 287.6875,286.1875 288.4375,285.6406 C289.0156,285.2344 289.3438,284.7813 289.3438,284.3906 C289.3438,283.9375 288.9531,283.5469 288.4844,283.5469 C288.2656,283.5469 288.0625,283.625 287.875,283.8125 C287.4219,284.2969 287.4219,284.2969 287.2344,284.3906 C286.8125,284.6563 286.125,284.7813 285.3594,284.7813 C283.3125,284.7813 282.0156,283.6875 282.0156,281.9844 L282.0156,280.8906 C282.0156,279.1094 283.2656,277.7969 285,277.7969 C285.5781,277.7969 286.1875,277.9531 286.6563,278.2031 C287.1406,278.4844 287.3125,278.7031 287.4063,279.1094 C287.4688,279.5156 287.5,279.6406 287.6406,279.7656 C287.7813,279.9063 288.0156,280.0156 288.2344,280.0156 C288.5,280.0156 288.7656,279.875 288.9375,279.6563 C289.0469,279.5 289.0781,279.3125 289.0781,278.8906 L289.0781,277.4688 C289.0781,277.0313 289.0625,276.9063 288.9688,276.75 C288.8125,276.4844 288.5313,276.3438 288.2344,276.3438 C287.9375,276.3438 287.7344,276.4375 287.5156,276.75 L287.3438,276.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="233" x="299" y="285.8467">SingleChildRenderObjectWidget</text><line style="stroke:#181818;stroke-width:0.5;" x1="271" x2="534" y1="297" y2="297"/><line style="stroke:#181818;stroke-width:0.5;" x1="271" x2="534" y1="305" y2="305"/></g><!--class RenderPointerListener--><g id="elem_RenderPointerListener"><rect codeLine="23" fill="#F1F1F1" height="64.2969" id="RenderPointerListener" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="201" x="165" y="507"/><ellipse cx="182.25" cy="523" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M184.5938,518.6719 C183.6563,518.2344 183.0625,518.0938 182.1875,518.0938 C179.5625,518.0938 177.5625,520.1719 177.5625,522.8906 L177.5625,524.0156 C177.5625,526.5938 179.6719,528.4844 182.5625,528.4844 C183.7813,528.4844 184.9375,528.1875 185.6875,527.6406 C186.2656,527.2344 186.5938,526.7813 186.5938,526.3906 C186.5938,525.9375 186.2031,525.5469 185.7344,525.5469 C185.5156,525.5469 185.3125,525.625 185.125,525.8125 C184.6719,526.2969 184.6719,526.2969 184.4844,526.3906 C184.0625,526.6563 183.375,526.7813 182.6094,526.7813 C180.5625,526.7813 179.2656,525.6875 179.2656,523.9844 L179.2656,522.8906 C179.2656,521.1094 180.5156,519.7969 182.25,519.7969 C182.8281,519.7969 183.4375,519.9531 183.9063,520.2031 C184.3906,520.4844 184.5625,520.7031 184.6563,521.1094 C184.7188,521.5156 184.75,521.6406 184.8906,521.7656 C185.0313,521.9063 185.2656,522.0156 185.4844,522.0156 C185.75,522.0156 186.0156,521.875 186.1875,521.6563 C186.2969,521.5 186.3281,521.3125 186.3281,520.8906 L186.3281,519.4688 C186.3281,519.0313 186.3125,518.9063 186.2188,518.75 C186.0625,518.4844 185.7813,518.3438 185.4844,518.3438 C185.1875,518.3438 184.9844,518.4375 184.7656,518.75 L184.5938,518.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="196.75" y="527.8467">RenderPointerListener</text><line style="stroke:#181818;stroke-width:0.5;" x1="166" x2="365" y1="539" y2="539"/><line style="stroke:#181818;stroke-width:0.5;" x1="166" x2="365" y1="547" y2="547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="171" y="563.9951">handleEvent(event, entry)</text></g><!--class RenderProxyBoxWithHitTestBehavior--><g id="elem_RenderProxyBoxWithHitTestBehavior"><rect codeLine="27" fill="#F1F1F1" height="64.2969" id="RenderProxyBoxWithHitTestBehavior" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="301" x="7" y="382"/><ellipse cx="22" cy="398" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,393.6719 C23.4063,393.2344 22.8125,393.0938 21.9375,393.0938 C19.3125,393.0938 17.3125,395.1719 17.3125,397.8906 L17.3125,399.0156 C17.3125,401.5938 19.4219,403.4844 22.3125,403.4844 C23.5313,403.4844 24.6875,403.1875 25.4375,402.6406 C26.0156,402.2344 26.3438,401.7813 26.3438,401.3906 C26.3438,400.9375 25.9531,400.5469 25.4844,400.5469 C25.2656,400.5469 25.0625,400.625 24.875,400.8125 C24.4219,401.2969 24.4219,401.2969 24.2344,401.3906 C23.8125,401.6563 23.125,401.7813 22.3594,401.7813 C20.3125,401.7813 19.0156,400.6875 19.0156,398.9844 L19.0156,397.8906 C19.0156,396.1094 20.2656,394.7969 22,394.7969 C22.5781,394.7969 23.1875,394.9531 23.6563,395.2031 C24.1406,395.4844 24.3125,395.7031 24.4063,396.1094 C24.4688,396.5156 24.5,396.6406 24.6406,396.7656 C24.7813,396.9063 25.0156,397.0156 25.2344,397.0156 C25.5,397.0156 25.7656,396.875 25.9375,396.6563 C26.0469,396.5 26.0781,396.3125 26.0781,395.8906 L26.0781,394.4688 C26.0781,394.0313 26.0625,393.9063 25.9688,393.75 C25.8125,393.4844 25.5313,393.3438 25.2344,393.3438 C24.9375,393.3438 24.7344,393.4375 24.5156,393.75 L24.3438,393.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="269" x="36" y="402.8467">RenderProxyBoxWithHitTestBehavior</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="307" y1="414" y2="414"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="307" y1="422" y2="422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="13" y="438.9951">bool hitTest(...)</text></g><!--class RenderProxyBoxMixin--><g id="elem_RenderProxyBoxMixin"><rect codeLine="31" fill="#F1F1F1" height="64.2969" id="RenderProxyBoxMixin" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="188" x="63.5" y="116"/><ellipse cx="78.5" cy="132" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M80.8438,127.6719 C79.9063,127.2344 79.3125,127.0938 78.4375,127.0938 C75.8125,127.0938 73.8125,129.1719 73.8125,131.8906 L73.8125,133.0156 C73.8125,135.5938 75.9219,137.4844 78.8125,137.4844 C80.0313,137.4844 81.1875,137.1875 81.9375,136.6406 C82.5156,136.2344 82.8438,135.7813 82.8438,135.3906 C82.8438,134.9375 82.4531,134.5469 81.9844,134.5469 C81.7656,134.5469 81.5625,134.625 81.375,134.8125 C80.9219,135.2969 80.9219,135.2969 80.7344,135.3906 C80.3125,135.6563 79.625,135.7813 78.8594,135.7813 C76.8125,135.7813 75.5156,134.6875 75.5156,132.9844 L75.5156,131.8906 C75.5156,130.1094 76.7656,128.7969 78.5,128.7969 C79.0781,128.7969 79.6875,128.9531 80.1563,129.2031 C80.6406,129.4844 80.8125,129.7031 80.9063,130.1094 C80.9688,130.5156 81,130.6406 81.1406,130.7656 C81.2813,130.9063 81.5156,131.0156 81.7344,131.0156 C82,131.0156 82.2656,130.875 82.4375,130.6563 C82.5469,130.5 82.5781,130.3125 82.5781,129.8906 L82.5781,128.4688 C82.5781,128.0313 82.5625,127.9063 82.4688,127.75 C82.3125,127.4844 82.0313,127.3438 81.7344,127.3438 C81.4375,127.3438 81.2344,127.4375 81.0156,127.75 L80.8438,127.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="92.5" y="136.8467">RenderProxyBoxMixin</text><line style="stroke:#181818;stroke-width:0.5;" x1="64.5" x2="250.5" y1="148" y2="148"/><line style="stroke:#181818;stroke-width:0.5;" x1="64.5" x2="250.5" y1="156" y2="156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="69.5" y="172.9951">bool hitTestChildren(...)</text></g><!--class RenderProxyBox--><g id="elem_RenderProxyBox"><rect fill="#F1F1F1" height="48" id="RenderProxyBox" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="151" x="82" y="265"/><ellipse cx="97" cy="281" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M99.3438,276.6719 C98.4063,276.2344 97.8125,276.0938 96.9375,276.0938 C94.3125,276.0938 92.3125,278.1719 92.3125,280.8906 L92.3125,282.0156 C92.3125,284.5938 94.4219,286.4844 97.3125,286.4844 C98.5313,286.4844 99.6875,286.1875 100.4375,285.6406 C101.0156,285.2344 101.3438,284.7813 101.3438,284.3906 C101.3438,283.9375 100.9531,283.5469 100.4844,283.5469 C100.2656,283.5469 100.0625,283.625 99.875,283.8125 C99.4219,284.2969 99.4219,284.2969 99.2344,284.3906 C98.8125,284.6563 98.125,284.7813 97.3594,284.7813 C95.3125,284.7813 94.0156,283.6875 94.0156,281.9844 L94.0156,280.8906 C94.0156,279.1094 95.2656,277.7969 97,277.7969 C97.5781,277.7969 98.1875,277.9531 98.6563,278.2031 C99.1406,278.4844 99.3125,278.7031 99.4063,279.1094 C99.4688,279.5156 99.5,279.6406 99.6406,279.7656 C99.7813,279.9063 100.0156,280.0156 100.2344,280.0156 C100.5,280.0156 100.7656,279.875 100.9375,279.6563 C101.0469,279.5 101.0781,279.3125 101.0781,278.8906 L101.0781,277.4688 C101.0781,277.0313 101.0625,276.9063 100.9688,276.75 C100.8125,276.4844 100.5313,276.3438 100.2344,276.3438 C99.9375,276.3438 99.7344,276.4375 99.5156,276.75 L99.3438,276.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="111" y="285.8467">RenderProxyBox</text><line style="stroke:#181818;stroke-width:0.5;" x1="83" x2="232" y1="297" y2="297"/><line style="stroke:#181818;stroke-width:0.5;" x1="83" x2="232" y1="305" y2="305"/></g><!--class GestureBinding--><g id="elem_GestureBinding"><rect fill="#F1F1F1" height="48" id="GestureBinding" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="143" x="866" y="515"/><ellipse cx="881" cy="531" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M883.3438,526.6719 C882.4063,526.2344 881.8125,526.0938 880.9375,526.0938 C878.3125,526.0938 876.3125,528.1719 876.3125,530.8906 L876.3125,532.0156 C876.3125,534.5938 878.4219,536.4844 881.3125,536.4844 C882.5313,536.4844 883.6875,536.1875 884.4375,535.6406 C885.0156,535.2344 885.3438,534.7813 885.3438,534.3906 C885.3438,533.9375 884.9531,533.5469 884.4844,533.5469 C884.2656,533.5469 884.0625,533.625 883.875,533.8125 C883.4219,534.2969 883.4219,534.2969 883.2344,534.3906 C882.8125,534.6563 882.125,534.7813 881.3594,534.7813 C879.3125,534.7813 878.0156,533.6875 878.0156,531.9844 L878.0156,530.8906 C878.0156,529.1094 879.2656,527.7969 881,527.7969 C881.5781,527.7969 882.1875,527.9531 882.6563,528.2031 C883.1406,528.4844 883.3125,528.7031 883.4063,529.1094 C883.4688,529.5156 883.5,529.6406 883.6406,529.7656 C883.7813,529.9063 884.0156,530.0156 884.2344,530.0156 C884.5,530.0156 884.7656,529.875 884.9375,529.6563 C885.0469,529.5 885.0781,529.3125 885.0781,528.8906 L885.0781,527.4688 C885.0781,527.0313 885.0625,526.9063 884.9688,526.75 C884.8125,526.4844 884.5313,526.3438 884.2344,526.3438 C883.9375,526.3438 883.7344,526.4375 883.5156,526.75 L883.3438,526.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="895" y="535.8467">GestureBinding</text><line style="stroke:#181818;stroke-width:0.5;" x1="867" x2="1008" y1="547" y2="547"/><line style="stroke:#181818;stroke-width:0.5;" x1="867" x2="1008" y1="555" y2="555"/></g><!--class GestureArenaManager--><g id="elem_GestureArenaManager"><rect fill="#F1F1F1" height="48" id="GestureArenaManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="192" x="841.5" y="632"/><ellipse cx="856.5" cy="648" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M858.8438,643.6719 C857.9063,643.2344 857.3125,643.0938 856.4375,643.0938 C853.8125,643.0938 851.8125,645.1719 851.8125,647.8906 L851.8125,649.0156 C851.8125,651.5938 853.9219,653.4844 856.8125,653.4844 C858.0313,653.4844 859.1875,653.1875 859.9375,652.6406 C860.5156,652.2344 860.8438,651.7813 860.8438,651.3906 C860.8438,650.9375 860.4531,650.5469 859.9844,650.5469 C859.7656,650.5469 859.5625,650.625 859.375,650.8125 C858.9219,651.2969 858.9219,651.2969 858.7344,651.3906 C858.3125,651.6563 857.625,651.7813 856.8594,651.7813 C854.8125,651.7813 853.5156,650.6875 853.5156,648.9844 L853.5156,647.8906 C853.5156,646.1094 854.7656,644.7969 856.5,644.7969 C857.0781,644.7969 857.6875,644.9531 858.1563,645.2031 C858.6406,645.4844 858.8125,645.7031 858.9063,646.1094 C858.9688,646.5156 859,646.6406 859.1406,646.7656 C859.2813,646.9063 859.5156,647.0156 859.7344,647.0156 C860,647.0156 860.2656,646.875 860.4375,646.6563 C860.5469,646.5 860.5781,646.3125 860.5781,645.8906 L860.5781,644.4688 C860.5781,644.0313 860.5625,643.9063 860.4688,643.75 C860.3125,643.4844 860.0313,643.3438 859.7344,643.3438 C859.4375,643.3438 859.2344,643.4375 859.0156,643.75 L858.8438,643.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="870.5" y="652.8467">GestureArenaManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="842.5" x2="1032.5" y1="664" y2="664"/><line style="stroke:#181818;stroke-width:0.5;" x1="842.5" x2="1032.5" y1="672" y2="672"/></g><!--class PointerRouter--><g id="elem_PointerRouter"><rect fill="#F1F1F1" height="48" id="PointerRouter" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="134" x="1068.5" y="632"/><ellipse cx="1083.5" cy="648" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1085.8438,643.6719 C1084.9063,643.2344 1084.3125,643.0938 1083.4375,643.0938 C1080.8125,643.0938 1078.8125,645.1719 1078.8125,647.8906 L1078.8125,649.0156 C1078.8125,651.5938 1080.9219,653.4844 1083.8125,653.4844 C1085.0313,653.4844 1086.1875,653.1875 1086.9375,652.6406 C1087.5156,652.2344 1087.8438,651.7813 1087.8438,651.3906 C1087.8438,650.9375 1087.4531,650.5469 1086.9844,650.5469 C1086.7656,650.5469 1086.5625,650.625 1086.375,650.8125 C1085.9219,651.2969 1085.9219,651.2969 1085.7344,651.3906 C1085.3125,651.6563 1084.625,651.7813 1083.8594,651.7813 C1081.8125,651.7813 1080.5156,650.6875 1080.5156,648.9844 L1080.5156,647.8906 C1080.5156,646.1094 1081.7656,644.7969 1083.5,644.7969 C1084.0781,644.7969 1084.6875,644.9531 1085.1563,645.2031 C1085.6406,645.4844 1085.8125,645.7031 1085.9063,646.1094 C1085.9688,646.5156 1086,646.6406 1086.1406,646.7656 C1086.2813,646.9063 1086.5156,647.0156 1086.7344,647.0156 C1087,647.0156 1087.2656,646.875 1087.4375,646.6563 C1087.5469,646.5 1087.5781,646.3125 1087.5781,645.8906 L1087.5781,644.4688 C1087.5781,644.0313 1087.5625,643.9063 1087.4688,643.75 C1087.3125,643.4844 1087.0313,643.3438 1086.7344,643.3438 C1086.4375,643.3438 1086.2344,643.4375 1086.0156,643.75 L1085.8438,643.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="1097.5" y="652.8467">PointerRouter</text><line style="stroke:#181818;stroke-width:0.5;" x1="1069.5" x2="1201.5" y1="664" y2="664"/><line style="stroke:#181818;stroke-width:0.5;" x1="1069.5" x2="1201.5" y1="672" y2="672"/></g><!--reverse link GestureDetector to RawGestureDetector--><g id="link_GestureDetector_RawGestureDetector"><path codeLine="1" d="M682.5,67.272 C682.5,87.224 682.5,103.821 682.5,123.763 " fill="none" id="GestureDetector-backto-RawGestureDetector" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="682.5,55.272,678.5,61.272,682.5,67.272,686.5,61.272,682.5,55.272" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RawGestureDetector to RawGestureDetectorState--><g id="link_RawGestureDetector_RawGestureDetectorState"><path codeLine="2" d="M682.5,184.265 C682.5,207.451 682.5,231.2 682.5,256.83 " fill="none" id="RawGestureDetector-backto-RawGestureDetectorState" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="682.5,172.265,678.5,178.265,682.5,184.265,686.5,178.265,682.5,172.265" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RawGestureDetectorState to GestureRecognizer--><g id="link_RawGestureDetectorState_GestureRecognizer"><path codeLine="3" d="M682.5,333.038 C682.5,354.388 682.5,370.291 682.5,389.738 " fill="none" id="RawGestureDetectorState-backto-GestureRecognizer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="682.5,321.038,678.5,327.038,682.5,333.038,686.5,327.038,682.5,321.038" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="673.675" y="341.2427">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="673.525" y="379.0791">n</text></g><!--reverse link GestureRecognizer to OneSequenceGestureRecognizer--><g id="link_GestureRecognizer_OneSequenceGestureRecognizer"><path codeLine="4" d="M682.5,456.135 C682.5,478.126 682.5,493.012 682.5,514.968 " fill="none" id="GestureRecognizer-backto-OneSequenceGestureRecognizer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="682.5,438.135,676.5,456.135,688.5,456.135,682.5,438.135" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link OneSequenceGestureRecognizer to PrimaryPointerGestureRecognizer--><g id="link_OneSequenceGestureRecognizer_PrimaryPointerGestureRecognizer"><path codeLine="5" d="M677.1364,581.1207 C674.5334,601.0727 673.132,611.821 670.531,631.763 " fill="none" id="OneSequenceGestureRecognizer-backto-PrimaryPointerGestureRecognizer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="679.465,563.272,671.1868,580.3445,683.086,581.8969,679.465,563.272" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link PrimaryPointerGestureRecognizer to BaseTapGestureRecognizer--><g id="link_PrimaryPointerGestureRecognizer_BaseTapGestureRecognizer"><path codeLine="13" d="M613.7309,689.5509 C585.5689,706.5999 562.031,720.85 528.985,740.856 " fill="none" id="PrimaryPointerGestureRecognizer-backto-BaseTapGestureRecognizer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="629.129,680.229,610.6236,684.4182,616.8382,694.6836,629.129,680.229" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BaseTapGestureRecognizer to TapGestureRecognizer--><g id="link_BaseTapGestureRecognizer_TapGestureRecognizer"><path codeLine="14" d="M463.5,840.256 C463.5,860.2818 463.5,865.8577 463.5,882.8838 " fill="none" id="BaseTapGestureRecognizer-backto-TapGestureRecognizer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="463.5,822.256,457.5,840.256,469.5,840.256,463.5,822.256" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link PrimaryPointerGestureRecognizer to LongPressGestureRecognizer--><g id="link_PrimaryPointerGestureRecognizer_LongPressGestureRecognizer"><path codeLine="15" d="M688.9722,695.9967 C701.1302,718.0767 710.629,735.329 722.767,757.375 " fill="none" id="PrimaryPointerGestureRecognizer-backto-LongPressGestureRecognizer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="680.29,680.229,683.7163,698.8907,694.2281,693.1026,680.29,680.229" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RawGestureDetectorState to Listener--><g id="link_RawGestureDetectorState_Listener"><path codeLine="17" d="M601.3751,325.8934 C556.3371,345.8204 509.371,366.6 466.111,385.74 " fill="none" id="RawGestureDetectorState-backto-Listener" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="612.349,321.038,605.2436,319.8077,601.3751,325.8934,608.4805,327.1236,612.349,321.038" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link SingleChildRenderObjectWidget to Listener--><g id="link_SingleChildRenderObjectWidget_Listener"><path codeLine="22" d="M403.169,331.1326 C403.484,350.4786 403.642,360.26 403.99,381.611 " fill="none" id="SingleChildRenderObjectWidget-backto-Listener" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="402.876,313.135,397.1698,331.2303,409.1682,331.0349,402.876,313.135" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Listener to RenderPointerListener--><g id="link_Listener_RenderPointerListener"><path codeLine="26" d="M360.4374,453.9904 C339.3664,472.6364 321.634,488.328 300.564,506.972 " fill="none" id="Listener-backto-RenderPointerListener" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="369.424,446.038,362.2799,447.0186,360.4374,453.9904,367.5815,453.0097,369.424,446.038" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RenderProxyBoxMixin to RenderProxyBox--><g id="link_RenderProxyBoxMixin_RenderProxyBox"><path codeLine="30" d="M157.5,198.194 C157.5,223.808 157.5,241.516 157.5,264.695 " fill="none" id="RenderProxyBoxMixin-backto-RenderProxyBox" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="157.5,180.194,151.5,198.194,163.5,198.194,157.5,180.194" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="158.5" y="223.0669">with</text></g><!--reverse link RenderProxyBox to RenderProxyBoxWithHitTestBehavior--><g id="link_RenderProxyBox_RenderProxyBoxWithHitTestBehavior"><path codeLine="34" d="M157.5,331.135 C157.5,350.481 157.5,360.26 157.5,381.611 " fill="none" id="RenderProxyBox-backto-RenderProxyBoxWithHitTestBehavior" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="157.5,313.135,151.5,331.135,163.5,331.135,157.5,313.135" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RenderProxyBoxWithHitTestBehavior to RenderPointerListener--><g id="link_RenderProxyBoxWithHitTestBehavior_RenderPointerListener"><path codeLine="35" d="M196.6294,459.564 C213.0014,478.21 221.885,488.328 238.256,506.972 " fill="none" id="RenderProxyBoxWithHitTestBehavior-backto-RenderPointerListener" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="184.753,446.038,192.1207,463.5228,201.138,455.6052,184.753,446.038" style="stroke:#181818;stroke-width:1.0;"/></g><!--link OneSequenceGestureRecognizer to GestureBinding--><g id="link_OneSequenceGestureRecognizer_GestureBinding"><path codeLine="36" d="M817.471,539 C833.568,539 843.666,539 859.764,539 " fill="none" id="OneSequenceGestureRecognizer-to-GestureBinding" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="865.764,539,856.764,535,860.764,539,856.764,543,865.764,539" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link GestureBinding to GestureArenaManager--><g id="link_GestureBinding_GestureArenaManager"><path codeLine="37" d="M937.5,575.272 C937.5,595.224 937.5,611.821 937.5,631.763 " fill="none" id="GestureBinding-backto-GestureArenaManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="937.5,563.272,933.5,569.272,937.5,575.272,941.5,569.272,937.5,563.272" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link GestureBinding to PointerRouter--><g id="link_GestureBinding_PointerRouter"><path codeLine="38" d="M987.9444,569.2994 C1022.4064,589.3174 1061.48,612.009 1095.83,631.959 " fill="none" id="GestureBinding-backto-PointerRouter" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="977.568,563.272,980.7471,569.7445,987.9444,569.2994,984.7654,562.8269,977.568,563.272" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[ZLHDRy8m3BtdLqGzmJIGTfscIUkOs044AaWSfz1QRQREOMdusiP_Nze4rj0KTeaKs-yz-xdf40grbZ001R4IajxqUZHYsw4R9irGI-LCCGMa9Kw3kw321HXGMn11B5BaNo198q8VVdJn1646dsl069gOIqa3dqh-mUH-AZWga4s6E6T5qJO9_IQKlcKCanmimq1iiGCRGDKb1uiEMG5pjcfsKC9P7CDAsLn7Sz2LOUhgf8HthUPD7iYLriryRTgajQaAveNyIt0aC9rAA8ecldNnvT97l5209yUFryeZWJLtzUHanZ7DuJdZUH819Y0dozAe1KzIKBOFby-KMHg7tAplfLoPMTmjrOVSbnQV2glFsKVXqaknsuTYj-0gU-LghcSD8MCRBepKKeYSPYRHwVVxfOIB7FCTHpE0cw3tTAjPlN86T2vGkIC1_K8-3K_RvFfWTQ8pRou-lzxZyP6771EzKE9UAyzjw4dFmSOCMVht8wYNMU58hFNv2m00]--></g></svg>

<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://book.flutterchina.club/chapter8/hittest.html#_8-3-1-flutter-%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B">《Flutter实战·第二版》 8.3 Flutter事件机制</a><br><a href="https://cloud.tencent.com/developer/news/767886">深入理解Flutter手势系统</a></p>
]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>HashMap源码分析</title>
    <url>/posts/ca4438af.html</url>
    <content><![CDATA[<p>HashMap存储结构采用数组+链表<small>（java8以后当链表长度超过8后采用红黑树来存储）</small>，当存储数据时会先计算key的哈希值，然后使用哈希值计算数组指针，如果数组指针位置已经存在数据，且key不相同，就会采用链表形式存储数据。存储结构如下图：</p>
<p><img src="/images/HashMap%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84.drawio.svg" alt="HashMap存储结构"></p>
<p>在jdk1.8中HashMap引入了红黑树，当链表中的元素达到阈值后，并且数组长度大于64，就会将链表转换为红黑树。引入红黑树的主要目的是解决哈希冲突导致的链化严重的问题。</p>
<h2 id="哈希值与数组指针"><a href="#哈希值与数组指针" class="headerlink" title="哈希值与数组指针"></a>哈希值与数组指针</h2><p>哈希值计算方法：获取key的hashCode，然后hashCode右移16位，最后将两者进行异或运算。源码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">hash</span><span class="params">(Object key)</span> &#123;</span><br><span class="line">    <span class="type">int</span> h;</span><br><span class="line">    <span class="keyword">return</span> (key == <span class="literal">null</span>) ? <span class="number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="number">16</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>为什么没有直接使用key.hashCode()的值呢？这是因为数组长度都是2的幕，比如默认数组长度16=$2^4$，即<code>1&lt;&lt;4</code>，长度掩码就是<code>15=16-1</code>，二进制掩码就是<code>1111</code>。hash与掩码进行按位与运算后得到数组指针，相当于只取了hash的低4位，高位没有用到，增加了指针冲突的概率。因此将hashCode进行右移16位，再进行异或运算，这样做就是在运算中同时使用了高位和低位。</p>
<p>HashMap是通过数组来存储元素。当通过key来后去元素值的时候，首先计算出key的哈希值，然后通过哈希值来计算得到数组坐标，看下put操作中如何计算数组坐标：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> V <span class="title function_">putVal</span><span class="params">(<span class="type">int</span> hash, K key, V value, <span class="type">boolean</span> onlyIfAbsent,</span></span><br><span class="line"><span class="params">               <span class="type">boolean</span> evict)</span> &#123;</span><br><span class="line">    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; <span class="type">int</span> n, i;</span><br><span class="line">    <span class="keyword">if</span> ((tab = table) == <span class="literal">null</span> || (n = tab.length) == <span class="number">0</span>)</span><br><span class="line">        n = (tab = resize()).length;</span><br><span class="line">    <span class="keyword">if</span> ((p = tab[i = (n - <span class="number">1</span>) &amp; hash]) == <span class="literal">null</span>)  <span class="comment">//从数组中取出node赋值给p</span></span><br><span class="line">        tab[i] = newNode(hash, key, value, <span class="literal">null</span>);</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>从代码中可以看出，计算数组坐标的算法是：<code>(n - 1) &amp; hash</code>，其中<code>n</code>表示数组长度。所以坐标指针是hash和长度掩码进行与运算。</p>
<p>下图以<code>key=&quot;Hello&quot;</code>为例来说明计算过程：</p>
<p><img src="/images/HashMap_hashCode%E8%AE%A1%E7%AE%97.drawio.svg" alt="哈希值与数组指针计算"></p>
<h2 id="put插入数据"><a href="#put插入数据" class="headerlink" title="put插入数据"></a>put插入数据</h2><p><img src="/images/HashMap_put.drawio.svg" alt="HashMap插入数据"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> V <span class="title function_">putVal</span><span class="params">(<span class="type">int</span> hash, K key, V value, <span class="type">boolean</span> onlyIfAbsent,</span></span><br><span class="line"><span class="params">               <span class="type">boolean</span> evict)</span> &#123;</span><br><span class="line">    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; <span class="type">int</span> n, i;</span><br><span class="line">    <span class="keyword">if</span> ((tab = table) == <span class="literal">null</span> || (n = tab.length) == <span class="number">0</span>)</span><br><span class="line">        n = (tab = resize()).length; <span class="comment">//初始状态table为空，进行resize扩容</span></span><br><span class="line">    <span class="keyword">if</span> ((p = tab[i = (n - <span class="number">1</span>) &amp; hash]) == <span class="literal">null</span>)</span><br><span class="line">        tab[i] = newNode(hash, key, value, <span class="literal">null</span>); <span class="comment">//没有发生hash碰撞，数据存放到数组</span></span><br><span class="line">    <span class="keyword">else</span> &#123; <span class="comment">//发生了hash碰撞，或者存在相同的key</span></span><br><span class="line">        Node&lt;K,V&gt; e; K k;</span><br><span class="line">        <span class="keyword">if</span> (p.hash == hash &amp;&amp;</span><br><span class="line">            ((k = p.key) == key || (key != <span class="literal">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">            e = p; <span class="comment">//存在相同的key，覆盖原值</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p <span class="keyword">instanceof</span> TreeNode) <span class="comment">//红黑树</span></span><br><span class="line">            e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(<span class="built_in">this</span>, tab, hash, key, value);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">binCount</span> <span class="operator">=</span> <span class="number">0</span>; ; ++binCount) &#123;</span><br><span class="line">                <span class="keyword">if</span> ((e = p.next) == <span class="literal">null</span>) &#123;</span><br><span class="line">                    p.next = newNode(hash, key, value, <span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">if</span> (binCount &gt;= TREEIFY_THRESHOLD - <span class="number">1</span>) <span class="comment">// -1 for 1st</span></span><br><span class="line">                        treeifyBin(tab, hash); <span class="comment">//链表长度大于8尝试转换为红黑树</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (e.hash == hash &amp;&amp;</span><br><span class="line">                    ((k = e.key) == key || (key != <span class="literal">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                p = e;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (e != <span class="literal">null</span>) &#123; <span class="comment">// existing mapping for key</span></span><br><span class="line">            <span class="type">V</span> <span class="variable">oldValue</span> <span class="operator">=</span> e.value;</span><br><span class="line">            <span class="keyword">if</span> (!onlyIfAbsent || oldValue == <span class="literal">null</span>)</span><br><span class="line">                e.value = value;</span><br><span class="line">            afterNodeAccess(e);</span><br><span class="line">            <span class="keyword">return</span> oldValue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ++modCount;</span><br><span class="line">    <span class="keyword">if</span> (++size &gt; threshold)</span><br><span class="line">        resize();</span><br><span class="line">    afterNodeInsertion(evict);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="扩容"><a href="#扩容" class="headerlink" title="扩容"></a>扩容</h2><p>HashMap采用数组和链表的形式存储数据，即使不扩容理论上可以存储无限多的数据元素。那么为什么要进行扩容呢？HashMap的扩容实际上指得是数组的扩容，默认的数组长度是16，如果不进行扩容，后续数据都依赖链表存储，那么随着数据的增多，查找效率会越来越低，即复杂度是O(n)，而不是O(1)。扩容的依据是总数据量，包括所有数组、链表、红黑树中的元素。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//默认容量是16</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_INITIAL_CAPACITY</span> <span class="operator">=</span> <span class="number">1</span> &lt;&lt; <span class="number">4</span>; <span class="comment">// aka 16</span></span><br><span class="line"><span class="comment">//负载因子，默认0.75，即75%</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="type">float</span> <span class="variable">DEFAULT_LOAD_FACTOR</span> <span class="operator">=</span> <span class="number">0.75f</span>;</span><br><span class="line"><span class="comment">//扩容阈值 = 负载因子 * 容量</span></span><br><span class="line"><span class="type">int</span> threshold;</span><br><span class="line"><span class="keyword">final</span> <span class="type">float</span> loadFactor;</span><br><span class="line"><span class="keyword">transient</span> Node&lt;K,V&gt;[] table; <span class="comment">//元素存放在数组中，初始值为null</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">HashMap</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.loadFactor = DEFAULT_LOAD_FACTOR; <span class="comment">// all other fields defaulted</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>HashMap的无参构造函数中将负载因子<code>loadFactor</code>变量设置为0.75。但是并没有设置扩容阈值或者容量，table数组初始值也是null。既然默认都是空的，那么看一下put方法的实现：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> V <span class="title function_">put</span><span class="params">(K key, V value)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> putVal(hash(key), key, value, <span class="literal">false</span>, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">final</span> V <span class="title function_">putVal</span><span class="params">(<span class="type">int</span> hash, K key, V value, <span class="type">boolean</span> onlyIfAbsent,</span></span><br><span class="line"><span class="params">               <span class="type">boolean</span> evict)</span> &#123;</span><br><span class="line">    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; <span class="type">int</span> n, i;</span><br><span class="line">    <span class="keyword">if</span> ((tab = table) == <span class="literal">null</span> || (n = tab.length) == <span class="number">0</span>)</span><br><span class="line">        n = (tab = resize()).length; <span class="comment">//因为table初始值是null，所以肯定会走到resize()方法</span></span><br><span class="line">    <span class="keyword">if</span> ((p = tab[i = (n - <span class="number">1</span>) &amp; hash]) == <span class="literal">null</span>)</span><br><span class="line">        tab[i] = newNode(hash, key, value, <span class="literal">null</span>);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        ....</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>看样子会在resize方法中设置容量。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> Node&lt;K,V&gt;[] resize() &#123;</span><br><span class="line">    Node&lt;K,V&gt;[] oldTab = table;</span><br><span class="line">    <span class="type">int</span> <span class="variable">oldCap</span> <span class="operator">=</span> (oldTab == <span class="literal">null</span>) ? <span class="number">0</span> : oldTab.length;</span><br><span class="line">    <span class="type">int</span> <span class="variable">oldThr</span> <span class="operator">=</span> threshold;</span><br><span class="line">    <span class="type">int</span> newCap, newThr = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (oldCap &gt; <span class="number">0</span>) &#123; <span class="comment">//初始状态，oldCap==0</span></span><br><span class="line">        ......</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (oldThr &gt; <span class="number">0</span>) <span class="comment">// initial capacity was placed in threshold</span></span><br><span class="line">        newCap = oldThr;</span><br><span class="line">    <span class="keyword">else</span> &#123;               <span class="comment">// zero initial threshold signifies using defaults</span></span><br><span class="line">        newCap = DEFAULT_INITIAL_CAPACITY;  <span class="comment">//终于用到默认容量了</span></span><br><span class="line">        newThr = (<span class="type">int</span>)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY);  <span class="comment">//计算扩容阈值</span></span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">    threshold = newThr;  <span class="comment">//将计算得到的扩容阈值赋值给threshold成员变量</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;rawtypes&quot;,&quot;unchecked&quot;&#125;)</span></span><br><span class="line">        Node&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])<span class="keyword">new</span> <span class="title class_">Node</span>[newCap]; <span class="comment">//创建元素数组然后赋值给table</span></span><br><span class="line">    table = newTab;</span><br><span class="line">    <span class="keyword">if</span> (oldTab != <span class="literal">null</span>) &#123;</span><br><span class="line">        ......</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newTab;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="自定义初始容量"><a href="#自定义初始容量" class="headerlink" title="自定义初始容量"></a>自定义初始容量</h2><p>通过下面的构造函数用户可以自定义初始容量：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">HashMap</span><span class="params">(<span class="type">int</span> initialCapacity)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>(initialCapacity, DEFAULT_LOAD_FACTOR);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但是，HashMap不会完全按照用户指定容量来扩容，因为HashMap的容量必须是2的幕。所以，会通过<code>tableSizeFor</code>方法进行换算：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">tableSizeFor</span><span class="params">(<span class="type">int</span> cap)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> cap - <span class="number">1</span>;</span><br><span class="line">    n |= n &gt;&gt;&gt; <span class="number">1</span>;</span><br><span class="line">    n |= n &gt;&gt;&gt; <span class="number">2</span>;</span><br><span class="line">    n |= n &gt;&gt;&gt; <span class="number">4</span>;</span><br><span class="line">    n |= n &gt;&gt;&gt; <span class="number">8</span>;</span><br><span class="line">    n |= n &gt;&gt;&gt; <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">return</span> (n &lt; <span class="number">0</span>) ? <span class="number">1</span> : (n &gt;= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>比如用户传入的是18，计算过程如下：</p>
<table>
<thead>
<tr>
<th>运算公式</th>
<th>二进制运算</th>
</tr>
</thead>
<tbody><tr>
<td>$n=18-1=17$</td>
<td></td>
</tr>
<tr>
<td>$n=17|(17&gt;&gt;&gt;1)=25$</td>
<td>$n=0b10001|0b01000=0b11001$</td>
</tr>
<tr>
<td>$n=25|(25&gt;&gt;&gt;2)=31$</td>
<td>$n=0b11001|0b00110=0b11111$</td>
</tr>
<tr>
<td>$n=31|(31&gt;&gt;&gt;3)=31$</td>
<td>$n=0b11111|0b00011=0b11111$</td>
</tr>
<tr>
<td>$n=31|(31&gt;&gt;&gt;4)=31$</td>
<td>$n=0b11111|0b00001=0b11111$</td>
</tr>
<tr>
<td>$n=31|(31&gt;&gt;&gt;5)=31$</td>
<td>$n=0b11111|0b00000=0b11111$</td>
</tr>
<tr>
<td>$n=31|(31&gt;&gt;&gt;6)=31$</td>
<td>$n=0b11111|0b00000=0b11111$</td>
</tr>
<tr>
<td>return $31+1$; //$32=2^5$</td>
<td></td>
</tr>
</tbody></table>
<p>相当于把18二进制的bit位全部赋值位1，然后再加一。$0b10010$ &rArr; $0b11111$ &rArr; $0b100000$。</p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://blog.csdn.net/sihai12345/article/details/119156631">盘点 HashMap 源码中的那些优雅的设计！</a><br><a href="https://zhuanlan.zhihu.com/p/351298116">HashMap底层实现原理详解</a></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java CAS详解</title>
    <url>/posts/fd3db9c4.html</url>
    <content><![CDATA[<h2 id="CAS介绍"><a href="#CAS介绍" class="headerlink" title="CAS介绍"></a>CAS介绍</h2><p>CAS(Compare and swap)是并发编程中经常用到的一项技术。大体上讲，CAS算法会先使用期望值比较变量的实际值，如果相同，就使用目标值替换变量的值。如果不相同，就会重新读取期望值再次进行对比和替换。</p>
<p>CAS主要是为了解决共享资源被加锁后，线程从阻塞状态切换回运行态比较耗时的问题，CAS是在不阻塞线程的情况下达到资源互斥的目的。但是如果共享资源竞争比较激烈就不适合使用CAS了，CAS会导致很多线程一直在重试访问共享资源，造成CPU资源的浪费。另外，如果共享资源的操作比较耗时，也就不适合使用CAS，这种场景使用阻塞的资源锁会更合适。</p>
<h2 id="CAS源码分析"><a href="#CAS源码分析" class="headerlink" title="CAS源码分析"></a>CAS源码分析</h2><p>以AtomicInteger.getAndIncrement为例进行源码分析，下面代码来自<a href="https://hg.openjdk.org/jdk8/jdk8/jdk/">openJdk8源码</a>:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AtomicInteger</span> <span class="keyword">extends</span> <span class="title class_">Number</span> <span class="keyword">implements</span> <span class="title class_">java</span>.io.Serializable &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Unsafe</span> <span class="variable">unsafe</span> <span class="operator">=</span> Unsafe.getUnsafe();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> valueOffset;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//获取value变量地址</span></span><br><span class="line">            valueOffset = unsafe.objectFieldOffset</span><br><span class="line">                (AtomicInteger.class.getDeclaredField(<span class="string">&quot;value&quot;</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123; <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(ex); &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="type">int</span> value; <span class="comment">//volatile类型的变量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">getAndIncrement</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> unsafe.getAndAddInt(<span class="built_in">this</span>, valueOffset, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>AtomicInteger.getAndIncrement</code>通过<code>Unsafe.getAndAddInt</code>方法实现：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** Unsafe.java **/</span></span><br><span class="line">    <span class="comment">//native方法，通过jni来调用</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">native</span> <span class="type">boolean</span> <span class="title function_">compareAndSwapInt</span><span class="params">(Object o, <span class="type">long</span> offset,<span class="type">int</span> expected, <span class="type">int</span> x)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">getAndAddInt</span><span class="params">(Object o, <span class="type">long</span> offset, <span class="type">int</span> delta)</span> &#123;</span><br><span class="line">        <span class="type">int</span> v;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            v = getIntVolatile(o, offset);</span><br><span class="line">        &#125; <span class="keyword">while</span> (!compareAndSwapInt(o, offset, v, v + delta));</span><br><span class="line">        <span class="keyword">return</span> v;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><code>getAndAddInt</code>函数中，首先获取到期望值<code>v</code>，<code>v + delta</code>是目标值。然后进入compareAndSwapInt函数，compareAndSwapInt会首先对比实际值与期望值是否相同，如果相同就替换并返回true，while循环退出。如果不相同，compareAndSwapInt就返回false，继续执行while循环读取期望值，然后再次进行对比替换的步骤。</p>
<p><code>compareAndSwapInt</code>是native函数，源码在hotspot的<code>unsafe.cpp</code>文件中，在现在的系统中对比替换操作都是通过硬件机制来实现。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">UNSAFE_ENTRY</span>(jboolean, <span class="built_in">Unsafe_CompareAndSwapInt</span>(JNIEnv *env, jobject unsafe, jobject obj, jlong offset, jint e, jint x))</span><br><span class="line">  <span class="built_in">UnsafeWrapper</span>(<span class="string">&quot;Unsafe_CompareAndSwapInt&quot;</span>);</span><br><span class="line">  oop p = JNIHandles::<span class="built_in">resolve</span>(obj);</span><br><span class="line">  jint* addr = (jint *) <span class="built_in">index_oop_from_field_offset_long</span>(p, offset);</span><br><span class="line">  <span class="keyword">return</span> (jint)(Atomic::<span class="built_in">cmpxchg</span>(x, addr, e)) == e;</span><br><span class="line">UNSAFE_END</span><br></pre></td></tr></table></figure>

<p><code>Atomic::cmpxchg</code>通过内嵌汇编语言来实现，在不同的硬件上有不同的实现。下面代码是windows x86平台的汇编代码：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** [hotspot]\src\os_cpu\windows_x86\vm\atomic_windows_x86.inline.hpp **/</span></span><br><span class="line"><span class="keyword">inline</span> jint     <span class="title function_">Atomic::cmpxchg</span>    <span class="params">(jint     exchange_value, <span class="keyword">volatile</span> jint*     dest, jint     compare_value)</span> &#123;</span><br><span class="line">  <span class="comment">// alternative for InterlockedCompareExchange</span></span><br><span class="line">  <span class="type">int</span> mp = os::is_MP();</span><br><span class="line">  __asm &#123;</span><br><span class="line">    mov edx, dest   <span class="comment">//变量地址放入数据寄存器</span></span><br><span class="line">    mov ecx, exchange_value  <span class="comment">//目标值放入计数寄存器</span></span><br><span class="line">    mov eax, compare_value  <span class="comment">//期望值放入累加器寄存器</span></span><br><span class="line">    LOCK_IF_MP(mp)   <span class="comment">//根据当前cpu是否是多核进行加锁</span></span><br><span class="line">    cmpxchg dword ptr [edx], ecx</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>代码中<code>cmpxchg</code>汇编指令的含义是对比累加器(al/ax/eax/rax)和[edx]中的值（<small><em>[edx]表示变量地址，本质上就是一个指针</em></small>），如果值相同就把ecx寄存器的值放入[edx]中，否则就会把[edx]指向的变量值加载到累加器中。</p>
<p><em>备注：AtomicInteger和Unsafe代码来之openJdk8：<a href="https://hg.openjdk.org/jdk8/jdk8/jdk">https://hg.openjdk.org/jdk8/jdk8/jdk</a>。unsafe.cpp代码在openjdk8 hotspot源码中：<a href="https://hg.openjdk.org/jdk8/jdk8/hotspot">https://hg.openjdk.org/jdk8/jdk8/hotspot</a></em></p>
<h2 id="ABA问题"><a href="#ABA问题" class="headerlink" title="ABA问题"></a>ABA问题</h2><p>CAS会有ABA的问题，AtomicInteger对于<code>getAndIncrement</code>这种只进行加运算的操作不会存在ABA问题。但如果还有减运算就会存在ABA问题。java也提供了<code>AtomicStampedReference</code>类来解决ABA问题。</p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://jenkov.com/tutorials/java-concurrency/compare-and-swap.html">Compare and Swap</a><br><a href="https://www.felixcloutier.com/x86/cmpxchg">CMPXCHG — Compare and Exchange</a><br><a href="https://zhuanlan.zhihu.com/p/635463928">从汇编底层全面解析 CAS 的来龙去脉</a><br><a href="https://zhuanlan.zhihu.com/p/60106083">LongAdder解析</a><br><a href="https://blog.csdn.net/mulinsen77/article/details/84583716">AQS详解（面试）</a><br><a href="https://zhuanlan.zhihu.com/p/101430930">并发编程的灵魂：CAS机制详解</a><br><a href="https://zhuanlan.zhihu.com/p/29227508">SynchronousQueue实现原理</a></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java动态代理</title>
    <url>/posts/abd111cb.html</url>
    <content><![CDATA[<h2 id="JDK动态代理"><a href="#JDK动态代理" class="headerlink" title="JDK动态代理"></a>JDK动态代理</h2><p>通过<code>java.lang.reflect.Proxy</code>可以实现动态代理，但是这种方式只能作用于接口，如果一个类没有接口则无法实现动态代理。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Interface是一个接口，InterfaceImpl是接口的实现类</span></span><br><span class="line"><span class="keyword">val</span> delegate = InterfaceImpl()</span><br><span class="line"><span class="keyword">val</span> proxy = Proxy.newProxyInstance(Interface::<span class="keyword">class</span>.java.classLoader, arrayOf(Interface::<span class="keyword">class</span>.java)</span><br><span class="line">) &#123; proxy, method, args -&gt;</span><br><span class="line">    <span class="keyword">if</span> (method.name == <span class="string">&quot;testMethod&quot;</span>) &#123;</span><br><span class="line">        <span class="comment">//可以打印日志等</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (args != <span class="literal">null</span>) &#123;</span><br><span class="line">        method.invoke(delegate, *args)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        method.invoke(delegate)</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">as</span> Interface</span><br></pre></td></tr></table></figure>

<h2 id="CGLIB实现动态代理"><a href="#CGLIB实现动态代理" class="headerlink" title="CGLIB实现动态代理"></a>CGLIB实现动态代理</h2><p><a href="https://github.com/cglib/cglib">CGLIB</a>通过动态生成一个代理类的子类来提供代理。但是对于final方法，是无法实现代理的。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.runoob.com/w3cnote/cglibcode-generation-library-intro.html">CGLIB(Code Generation Library) 介绍与原理</a><br><a href="https://www.jianshu.com/p/9bcac608c714">动态代理底层实现</a></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java注解原理</title>
    <url>/posts/f45b8d80.html</url>
    <content><![CDATA[<p>注解的使用场景可以分为两种：一）编译期间通过注解解析器处理；2）运行期间反射使用；</p>
<h2 id="注解保留策略"><a href="#注解保留策略" class="headerlink" title="注解保留策略"></a>注解保留策略</h2><ul>
<li><code>RetentionPolicy.SOURCE</code> : 编译期可见，但不会写入到.class文件；</li>
<li><code>RetentionPolicy#CLASS</code> : 会写入到.class文件中，但是会被JVM忽略（这是默认策略）；</li>
<li><code>RetentionPolicy#RUNTIME</code> ：注解会被写入到.class文件中，并且JVM运行期间也可见，可以通过反射放射获取到；</li>
</ul>
<h3 id="注解的定义"><a href="#注解的定义" class="headerlink" title="注解的定义"></a>注解的定义</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE, ElementType.METHOD, ElementType.FIELD, ElementType.CONSTRUCTOR, ElementType.PARAMETER&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.CLASS)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyClass &#123;</span><br><span class="line">    String <span class="title function_">name</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE, ElementType.METHOD, ElementType.FIELD, ElementType.CONSTRUCTOR&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyRuntime1 &#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">id</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE, ElementType.METHOD, ElementType.FIELD, ElementType.CONSTRUCTOR&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyRuntime2 &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE, ElementType.METHOD, ElementType.FIELD, ElementType.CONSTRUCTOR&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.SOURCE)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MySource &#123;&#125;</span><br></pre></td></tr></table></figure>

<p>编译完成后，每个注解都会生成自己的.class文件，看一下MyClass这个注解的.class文件的内容：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">$ javap -p -v me/demo/MyClass.class</span><br><span class="line">Picked up JAVA_TOOL_OPTIONS: -Duser.language=en -Dfile.encoding=UTF-8</span><br><span class="line">Classfile /F:/demo/JavaDemo/out/production/JavaDemo/me/demo/MyClass.class</span><br><span class="line">  Last modified Sep 21, 2023; size 472 bytes</span><br><span class="line">  MD5 checksum cb49d6b6a5ed7ab9c2b85d731996fb5f</span><br><span class="line">  Compiled from &quot;MyClass.java&quot;</span><br><span class="line">public interface me.demo.MyClass extends java.lang.annotation.Annotation</span><br><span class="line">  minor version: 0</span><br><span class="line">  major version: 61</span><br><span class="line">  flags: (0x2601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT, ACC_ANNOTATION</span><br><span class="line">  this_class: #1                          // me/demo/MyClass</span><br><span class="line">  super_class: #3                         // java/lang/Object</span><br><span class="line">  interfaces: 1, fields: 0, methods: 1, attributes: 2</span><br><span class="line">Constant pool:</span><br><span class="line">   #1 = Class              #2             // me/demo/MyClass</span><br><span class="line">   #2 = Utf8               me/demo/MyClass</span><br><span class="line">   #3 = Class              #4             // java/lang/Object</span><br><span class="line">   #4 = Utf8               java/lang/Object</span><br><span class="line">   #5 = Class              #6             // java/lang/annotation/Annotation</span><br><span class="line">   #6 = Utf8               java/lang/annotation/Annotation</span><br><span class="line">   #7 = Utf8               name</span><br><span class="line">   #8 = Utf8               ()Ljava/lang/String;</span><br><span class="line">   #9 = Utf8               SourceFile</span><br><span class="line">  #10 = Utf8               MyClass.java</span><br><span class="line">  #11 = Utf8               RuntimeVisibleAnnotations</span><br><span class="line">  #12 = Utf8               Ljava/lang/annotation/Target;</span><br><span class="line">  #13 = Utf8               value</span><br><span class="line">  #14 = Utf8               Ljava/lang/annotation/ElementType;</span><br><span class="line">  #15 = Utf8               TYPE</span><br><span class="line">  #16 = Utf8               METHOD</span><br><span class="line">  #17 = Utf8               FIELD</span><br><span class="line">  #18 = Utf8               CONSTRUCTOR</span><br><span class="line">  #19 = Utf8               PARAMETER</span><br><span class="line">  #20 = Utf8               Ljava/lang/annotation/Retention;</span><br><span class="line">  #21 = Utf8               Ljava/lang/annotation/RetentionPolicy;</span><br><span class="line">  #22 = Utf8               CLASS</span><br><span class="line">&#123;</span><br><span class="line">  public abstract java.lang.String name();</span><br><span class="line">    descriptor: ()Ljava/lang/String;</span><br><span class="line">    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT</span><br><span class="line">&#125;</span><br><span class="line">SourceFile: &quot;MyClass.java&quot;</span><br><span class="line">RuntimeVisibleAnnotations:</span><br><span class="line">  0: #12(#13=[e#14.#15,e#14.#16,e#14.#17,e#14.#18,e#14.#19])</span><br><span class="line">    java.lang.annotation.Target(</span><br><span class="line">      value=[Ljava/lang/annotation/ElementType;.TYPE,Ljava/lang/annotation/ElementType;.METHOD,Ljava/lang/annotation/ElementType;.FIELD,Ljava/lang/annotation/ElementType;.CONSTRUCTOR,Ljava/lang/annotation/ElementType;.PARAMETER]</span><br><span class="line">    )</span><br><span class="line">  1: #20(#13=e#21.#22)</span><br><span class="line">    java.lang.annotation.Retention(</span><br><span class="line">      value=Ljava/lang/annotation/RetentionPolicy;.CLASS</span><br><span class="line">    )</span><br></pre></td></tr></table></figure>

<p>从MyClass.class文件第7行代码<code>public interface MyClass extends java.lang.annotation.Annotation</code>可以看出来MyClass实际上是继承自Annotation的接口类。这一点从<code>java.lang.Class#getAnnotation</code>这个方法也可以看出来：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//java/lang/Class.java</span></span><br><span class="line">    <span class="keyword">public</span> &lt;A <span class="keyword">extends</span> <span class="title class_">Annotation</span>&gt; A <span class="title function_">getAnnotation</span><span class="params">(Class&lt;A&gt; annotationClass)</span> &#123;</span><br><span class="line">        Objects.requireNonNull(annotationClass);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (A) annotationData().annotations.get(annotationClass);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="注解的使用"><a href="#注解的使用" class="headerlink" title="注解的使用"></a>注解的使用</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@MySource()</span></span><br><span class="line"><span class="meta">@MyClass(name = &quot;my_class&quot;)</span></span><br><span class="line"><span class="meta">@MyRuntime1(id = 16)</span></span><br><span class="line"><span class="meta">@MyRuntime2</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestAnnotation</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@MyClass(name = &quot;my class constructor&quot;)</span></span><br><span class="line">    <span class="meta">@MyRuntime1(id = 0)</span></span><br><span class="line">    TestAnnotation() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">mDefault</span> <span class="operator">=</span> <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@MyClass(name = &quot;my class field&quot;)</span></span><br><span class="line">    <span class="meta">@MyRuntime1(id = 1)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">mValue</span> <span class="operator">=</span> mDefault;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@MyClass(name = &quot;my class method&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@MyRuntime2</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setValue</span><span class="params">(</span></span><br><span class="line"><span class="params">            <span class="meta">@MyClass(name = &quot;my class param&quot;)</span> String value</span></span><br><span class="line"><span class="params">    )</span> &#123;</span><br><span class="line">        mValue = value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>编译完成后我们使用javap命令看一下TestAnnotation.class的格式：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">$ javap -p -v me/demo/TestAnnotation.class</span><br><span class="line">Picked up JAVA_TOOL_OPTIONS: -Duser.language=en -Dfile.encoding=UTF-8</span><br><span class="line">Classfile /F:/demo/JavaDemo/out/production/JavaDemo/me/demo/TestAnnotation.class</span><br><span class="line">  Last modified Sep 21, 2023; size 1062 bytes</span><br><span class="line">  MD5 checksum 8ae94cb155dd4d060085e7c1fef200c5</span><br><span class="line">  Compiled from &quot;TestAnnotation.java&quot;</span><br><span class="line">public class me.demo.TestAnnotation</span><br><span class="line">  minor version: 0</span><br><span class="line">  major version: 61</span><br><span class="line">  flags: (0x0021) ACC_PUBLIC, ACC_SUPER</span><br><span class="line">  this_class: #10                         // me/demo/TestAnnotation</span><br><span class="line">  super_class: #2                         // java/lang/Object</span><br><span class="line">  interfaces: 0, fields: 2, methods: 3, attributes: 3</span><br><span class="line">Constant pool:</span><br><span class="line">   #1 = Methodref          #2.#3          // java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span><br><span class="line">   #2 = Class              #4             // java/lang/Object</span><br><span class="line">   #3 = NameAndType        #5:#6          // &quot;&lt;init&gt;&quot;:()V</span><br><span class="line">   #4 = Utf8               java/lang/Object</span><br><span class="line">   #5 = Utf8               &lt;init&gt;</span><br><span class="line">   #6 = Utf8               ()V</span><br><span class="line">   #7 = String             #8             // Hello</span><br><span class="line">   #8 = Utf8               Hello</span><br><span class="line">   #9 = Fieldref           #10.#11        // me/demo/TestAnnotation.mDefault:Ljava/lang/String;</span><br><span class="line">  #10 = Class              #12            // me/demo/TestAnnotation</span><br><span class="line">  #11 = NameAndType        #13:#14        // mDefault:Ljava/lang/String;</span><br><span class="line">  #12 = Utf8               me/demo/TestAnnotation</span><br><span class="line">  #13 = Utf8               mDefault</span><br><span class="line">  #14 = Utf8               Ljava/lang/String;</span><br><span class="line">  #15 = Fieldref           #10.#16        // me/demo/TestAnnotation.mValue:Ljava/lang/String;</span><br><span class="line">  #16 = NameAndType        #17:#14        // mValue:Ljava/lang/String;</span><br><span class="line">  #17 = Utf8               mValue</span><br><span class="line">  #18 = Utf8               ConstantValue</span><br><span class="line">  #19 = Utf8               RuntimeVisibleAnnotations</span><br><span class="line">  #20 = Utf8               Lme/demo/MyRuntime1;</span><br><span class="line">  #21 = Utf8               id</span><br><span class="line">  #22 = Integer            1</span><br><span class="line">  #23 = Utf8               RuntimeInvisibleAnnotations</span><br><span class="line">  #24 = Utf8               Lme/demo/MyClass;</span><br><span class="line">  #25 = Utf8               name</span><br><span class="line">  #26 = Utf8               my class field</span><br><span class="line">  #27 = Utf8               Code</span><br><span class="line">  #28 = Utf8               LineNumberTable</span><br><span class="line">  #29 = Utf8               LocalVariableTable</span><br><span class="line">  #30 = Utf8               this</span><br><span class="line">  #31 = Utf8               Lme/demo/TestAnnotation;</span><br><span class="line">  #32 = Integer            0</span><br><span class="line">  #33 = Utf8               my class constructor</span><br><span class="line">  #34 = Utf8               getValue</span><br><span class="line">  #35 = Utf8               ()Ljava/lang/String;</span><br><span class="line">  #36 = Utf8               my class method</span><br><span class="line">  #37 = Utf8               setValue</span><br><span class="line">  #38 = Utf8               (Ljava/lang/String;)V</span><br><span class="line">  #39 = Utf8               value</span><br><span class="line">  #40 = Utf8               Lme/demo/MyRuntime2;</span><br><span class="line">  #41 = Utf8               RuntimeInvisibleParameterAnnotations</span><br><span class="line">  #42 = Utf8               my class param</span><br><span class="line">  #43 = Utf8               SourceFile</span><br><span class="line">  #44 = Utf8               TestAnnotation.java</span><br><span class="line">  #45 = Integer            16</span><br><span class="line">  #46 = Utf8               my_class</span><br><span class="line">&#123;</span><br><span class="line">  private final java.lang.String mDefault;</span><br><span class="line">    descriptor: Ljava/lang/String;</span><br><span class="line">    flags: (0x0012) ACC_PRIVATE, ACC_FINAL</span><br><span class="line">    ConstantValue: String Hello</span><br><span class="line"></span><br><span class="line">  private java.lang.String mValue;</span><br><span class="line">    descriptor: Ljava/lang/String;</span><br><span class="line">    flags: (0x0002) ACC_PRIVATE</span><br><span class="line">    RuntimeVisibleAnnotations:</span><br><span class="line">      0: #20(#21=I#22)</span><br><span class="line">        me.demo.MyRuntime1(</span><br><span class="line">          id=1</span><br><span class="line">        )</span><br><span class="line">    RuntimeInvisibleAnnotations:</span><br><span class="line">      0: #24(#25=s#26)</span><br><span class="line">        me.demo.MyClass(</span><br><span class="line">          name=&quot;my class field&quot;</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">  me.demo.TestAnnotation();</span><br><span class="line">    descriptor: ()V</span><br><span class="line">    flags: (0x0000)</span><br><span class="line">    Code:</span><br><span class="line">      stack=2, locals=1, args_size=1</span><br><span class="line">         0: aload_0</span><br><span class="line">         1: invokespecial #1                  // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span><br><span class="line">         4: aload_0</span><br><span class="line">         5: ldc           #7                  // String Hello</span><br><span class="line">         7: putfield      #9                  // Field mDefault:Ljava/lang/String;</span><br><span class="line">        10: aload_0</span><br><span class="line">        11: ldc           #7                  // String Hello</span><br><span class="line">        13: putfield      #15                 // Field mValue:Ljava/lang/String;</span><br><span class="line">        16: return</span><br><span class="line">      LineNumberTable:</span><br><span class="line">        line 11: 0</span><br><span class="line">        line 14: 4</span><br><span class="line">        line 16: 10</span><br><span class="line">        line 12: 16</span><br><span class="line">      LocalVariableTable:</span><br><span class="line">        Start  Length  Slot  Name   Signature</span><br><span class="line">            0      17     0  this   Lme/demo/TestAnnotation;</span><br><span class="line">    RuntimeVisibleAnnotations:</span><br><span class="line">      0: #20(#21=I#32)</span><br><span class="line">        me.demo.MyRuntime1(</span><br><span class="line">          id=0</span><br><span class="line">        )</span><br><span class="line">    RuntimeInvisibleAnnotations:</span><br><span class="line">      0: #24(#25=s#33)</span><br><span class="line">        me.demo.MyClass(</span><br><span class="line">          name=&quot;my class constructor&quot;</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">  public java.lang.String getValue();</span><br><span class="line">    descriptor: ()Ljava/lang/String;</span><br><span class="line">    flags: (0x0001) ACC_PUBLIC</span><br><span class="line">    Code:</span><br><span class="line">      stack=1, locals=1, args_size=1</span><br><span class="line">         0: aload_0</span><br><span class="line">         1: getfield      #15                 // Field mValue:Ljava/lang/String;</span><br><span class="line">         4: areturn</span><br><span class="line">      LineNumberTable:</span><br><span class="line">        line 22: 0</span><br><span class="line">      LocalVariableTable:</span><br><span class="line">        Start  Length  Slot  Name   Signature</span><br><span class="line">            0       5     0  this   Lme/demo/TestAnnotation;</span><br><span class="line">    RuntimeInvisibleAnnotations:</span><br><span class="line">      0: #24(#25=s#36)</span><br><span class="line">        me.demo.MyClass(</span><br><span class="line">          name=&quot;my class method&quot;</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">  public void setValue(java.lang.String);</span><br><span class="line">    descriptor: (Ljava/lang/String;)V</span><br><span class="line">    flags: (0x0001) ACC_PUBLIC</span><br><span class="line">    Code:</span><br><span class="line">      stack=2, locals=2, args_size=2</span><br><span class="line">         0: aload_0</span><br><span class="line">         1: aload_1</span><br><span class="line">         2: putfield      #15                 // Field mValue:Ljava/lang/String;</span><br><span class="line">         5: return</span><br><span class="line">      LineNumberTable:</span><br><span class="line">        line 29: 0</span><br><span class="line">        line 30: 5</span><br><span class="line">      LocalVariableTable:</span><br><span class="line">        Start  Length  Slot  Name   Signature</span><br><span class="line">            0       6     0  this   Lme/demo/TestAnnotation;</span><br><span class="line">            0       6     1 value   Ljava/lang/String;</span><br><span class="line">    RuntimeVisibleAnnotations:</span><br><span class="line">      0: #40()</span><br><span class="line">        me.demo.MyRuntime2</span><br><span class="line">    RuntimeInvisibleParameterAnnotations:</span><br><span class="line">      parameter 0:</span><br><span class="line">        0: #24(#25=s#42)</span><br><span class="line">          me.demo.MyClass(</span><br><span class="line">            name=&quot;my class param&quot;</span><br><span class="line">          )</span><br><span class="line">&#125;</span><br><span class="line">SourceFile: &quot;TestAnnotation.java&quot;</span><br><span class="line">RuntimeVisibleAnnotations:</span><br><span class="line">  0: #20(#21=I#45)</span><br><span class="line">    me.demo.MyRuntime1(</span><br><span class="line">      id=16</span><br><span class="line">    )</span><br><span class="line">  1: #40()</span><br><span class="line">    me.demo.MyRuntime2</span><br><span class="line">RuntimeInvisibleAnnotations:</span><br><span class="line">  0: #24(#25=s#46)</span><br><span class="line">    me.demo.MyClass(</span><br><span class="line">      name=&quot;my_class&quot;</span><br><span class="line">    )</span><br></pre></td></tr></table></figure>

<ul>
<li>保留策略是<code>RetentionPolicy.CLASS</code>的注解会保存在<code>RuntimeInvisibleAnnotations</code>列表中；</li>
<li>保留策略是<code>RetentionPolicy.RUNTIME</code>的注解类会被放在<code>RuntimeVisibleAnnotations</code>列表中；</li>
<li>保留策略是<code>RetentionPolicy.SOURCE</code>的注解不在TestAnnotation.class中；</li>
<li>方法参数的注解则保存在<code>RuntimeInvisibleParameterAnnotations</code>列表中；</li>
</ul>
<h2 id="Runtime时注解类真身"><a href="#Runtime时注解类真身" class="headerlink" title="Runtime时注解类真身"></a>Runtime时注解类真身</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Class&lt;TestAnnotation&gt; testCls = TestAnnotation.class;</span><br><span class="line">        System.out.println(testCls.getAnnotation(MyRuntime1.class).getClass());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>日志输出结果是：<code>class jdk.proxy2.$Proxy1</code>，而不是MyRuntime1。这是为什么呢？实际上，当我们反射获取注解时，虚拟机会通过动态代理的方式生成了一个代理类返回。通过设置虚拟机参数<code>-Djdk.proxy.ProxyGenerator.saveGeneratedFiles=true</code>，虚拟机会把生成的代理类保存为文件。</p>
<p>进入.class文件的生成目录，使用如下命令运行main函数：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">java -Djdk.proxy.ProxyGenerator.saveGeneratedFiles=true -Dfile.encoding=UTF-8 -classpath ./ Main</span><br></pre></td></tr></table></figure>

<p>执行完上述命令后，在当前目录的<code>./jdk/proxy2/</code>目录下就可以找到<code>$Proxy1.class</code>文件。</p>
<p>另外一种简单的方式就是在java main函数最前面（只要在执行反射获取注解之前就行）添加如下代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.setProperty(<span class="string">&quot;jdk.proxy.ProxyGenerator.saveGeneratedFiles&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>IDEA运行后会在工程主目录下的<code>jdk/proxy2/</code>文件夹中保存动态代理类。通过IDEA打开文件后可以看到如下代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">$Proxy1</span> <span class="keyword">extends</span> <span class="title class_">Proxy</span> <span class="keyword">implements</span> <span class="title class_">MyRuntime1</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Method m0;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Method m1;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Method m2;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Method m3;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Method m4;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> $Proxy1(InvocationHandler var1) &#123;</span><br><span class="line">        <span class="built_in">super</span>(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> (Integer)<span class="built_in">super</span>.h.invoke(<span class="built_in">this</span>, m0, (Object[])<span class="literal">null</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RuntimeException | Error var2) &#123;</span><br><span class="line">            <span class="keyword">throw</span> var2;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable var3) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UndeclaredThrowableException</span>(var3);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object var1)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> (Boolean)<span class="built_in">super</span>.h.invoke(<span class="built_in">this</span>, m1, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;var1&#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RuntimeException | Error var2) &#123;</span><br><span class="line">            <span class="keyword">throw</span> var2;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable var3) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UndeclaredThrowableException</span>(var3);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> (String)<span class="built_in">super</span>.h.invoke(<span class="built_in">this</span>, m2, (Object[])<span class="literal">null</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RuntimeException | Error var2) &#123;</span><br><span class="line">            <span class="keyword">throw</span> var2;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable var3) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UndeclaredThrowableException</span>(var3);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">id</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> (Integer)<span class="built_in">super</span>.h.invoke(<span class="built_in">this</span>, m3, (Object[])<span class="literal">null</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RuntimeException | Error var2) &#123;</span><br><span class="line">            <span class="keyword">throw</span> var2;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable var3) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UndeclaredThrowableException</span>(var3);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> Class <span class="title function_">annotationType</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> (Class)<span class="built_in">super</span>.h.invoke(<span class="built_in">this</span>, m4, (Object[])<span class="literal">null</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RuntimeException | Error var2) &#123;</span><br><span class="line">            <span class="keyword">throw</span> var2;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable var3) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UndeclaredThrowableException</span>(var3);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            m0 = Class.forName(<span class="string">&quot;java.lang.Object&quot;</span>).getMethod(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">            m1 = Class.forName(<span class="string">&quot;java.lang.Object&quot;</span>).getMethod(<span class="string">&quot;equals&quot;</span>, Class.forName(<span class="string">&quot;java.lang.Object&quot;</span>));</span><br><span class="line">            m2 = Class.forName(<span class="string">&quot;java.lang.Object&quot;</span>).getMethod(<span class="string">&quot;toString&quot;</span>);</span><br><span class="line">            m3 = Class.forName(<span class="string">&quot;me.demo.MyRuntime1&quot;</span>).getMethod(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">            m4 = Class.forName(<span class="string">&quot;me.demo.MyRuntime1&quot;</span>).getMethod(<span class="string">&quot;annotationType&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchMethodException var2) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoSuchMethodError</span>(var2.getMessage());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException var3) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoClassDefFoundError</span>(var3.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> MethodHandles.Lookup <span class="title function_">proxyClassLookup</span><span class="params">(MethodHandles.Lookup var0)</span> <span class="keyword">throws</span> IllegalAccessException &#123;</span><br><span class="line">        <span class="keyword">if</span> (var0.lookupClass() == Proxy.class &amp;&amp; var0.hasFullPrivilegeAccess()) &#123;</span><br><span class="line">            <span class="keyword">return</span> MethodHandles.lookup();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalAccessException</span>(var0.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="注解类反射源码分析"><a href="#注解类反射源码分析" class="headerlink" title="注解类反射源码分析"></a>注解类反射源码分析</h2><p>Class/Method/Field都有自己的反射获取注解的接口，如下：<code>java.lang.Class#getAnnotation</code> <code>java.lang.reflect.Method#getAnnotation</code> <code>java.lang.reflect.Field#getAnnotation</code>。注意：当通过<code>java.lang.Class#getAnnotation</code>来获取Class的注解时，只能获取Class本身的注解，而不能获取到Class中方法和成员变量的注解。反射获取注解实例代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">testCls.getAnnotation(MyRuntime1.class);</span><br><span class="line">testCls.getMethod(<span class="string">&quot;setValue&quot;</span>, String.class).getAnnotation(MyRuntime1.class);</span><br><span class="line">testCls.getField(<span class="string">&quot;mValue&quot;</span>).getAnnotation(MyRuntime1.class);</span><br></pre></td></tr></table></figure>

<p>当调用<code>java.lang.Class#getAnnotation(Class&lt;A&gt; annotationClass)</code>方法反射获取注解类时，会把这个类本身的注解全部进行解析，然后生成对应的动态代理类，注册到map列表中。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//java/lang/Class.java</span></span><br><span class="line">    <span class="keyword">public</span> &lt;A <span class="keyword">extends</span> <span class="title class_">Annotation</span>&gt; A <span class="title function_">getAnnotation</span><span class="params">(Class&lt;A&gt; annotationClass)</span> &#123;</span><br><span class="line">        Objects.requireNonNull(annotationClass);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (A) annotationData().annotations.get(annotationClass);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> AnnotationData <span class="title function_">annotationData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123; <span class="comment">// retry loop</span></span><br><span class="line">            <span class="type">AnnotationData</span> <span class="variable">annotationData</span> <span class="operator">=</span> <span class="built_in">this</span>.annotationData;</span><br><span class="line">            <span class="type">int</span> <span class="variable">classRedefinedCount</span> <span class="operator">=</span> <span class="built_in">this</span>.classRedefinedCount;</span><br><span class="line">            <span class="keyword">if</span> (annotationData != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">                annotationData.redefinedCount == classRedefinedCount) &#123;</span><br><span class="line">                <span class="keyword">return</span> annotationData;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// null or stale annotationData -&gt; optimistically create new instance</span></span><br><span class="line">            <span class="type">AnnotationData</span> <span class="variable">newAnnotationData</span> <span class="operator">=</span> createAnnotationData(classRedefinedCount);</span><br><span class="line">            <span class="comment">// try to install it</span></span><br><span class="line">            <span class="keyword">if</span> (Atomic.casAnnotationData(<span class="built_in">this</span>, annotationData, newAnnotationData)) &#123;</span><br><span class="line">                <span class="comment">// successfully installed new AnnotationData</span></span><br><span class="line">                <span class="keyword">return</span> newAnnotationData;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.cnblogs.com/yangming1996/p/9295168.html">JAVA 注解的基本原理</a></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java float和double存储结构</title>
    <url>/posts/2230f1f1.html</url>
    <content><![CDATA[<p><img src="/images/Java%E6%B5%AE%E7%82%B9%E6%95%B0%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84.drawio.svg" alt="Java浮点数存储结构"></p>
<h2 id="浮点数转换二进制"><a href="#浮点数转换二进制" class="headerlink" title="浮点数转换二进制"></a>浮点数转换二进制</h2><p>以<code>18.725</code>为例进行说明。</p>
<p><strong>整数部分转二进制</strong>：除2取余法。整数部分除以2取余数，商取整继续除以2取余数，直到商为0。</p>
<table>
<thead>
<tr>
<th>整数除法</th>
<th>商</th>
<th>余数</th>
</tr>
</thead>
<tbody><tr>
<td>$18/2$</td>
<td>9</td>
<td>0</td>
</tr>
<tr>
<td>$9/2$</td>
<td>4</td>
<td>1</td>
</tr>
<tr>
<td>$4/2$</td>
<td>2</td>
<td>0</td>
</tr>
<tr>
<td>$2/2$</td>
<td>1</td>
<td>0</td>
</tr>
<tr>
<td>$1/2$</td>
<td>0</td>
<td>1</td>
</tr>
</tbody></table>
<p>18转换为二进制就是<code>10010</code>，上面表格中余数的倒序。</p>
<p><strong>小数部分转二进制</strong>：乘2取整法。小数部分乘以2，取整数部分，剩下的小数部分继续乘以2取整数部分，直到结果为0。如果永远不为零，则到达期望的精度后终止运算。</p>
<table>
<thead>
<tr>
<th>乘法公式</th>
<th>小数部分</th>
<th>整数部分</th>
</tr>
</thead>
<tbody><tr>
<td>$0.725*2=1.45$</td>
<td>0.45</td>
<td>1</td>
</tr>
<tr>
<td>$0.45*2=0.9$</td>
<td>0.9</td>
<td>0</td>
</tr>
<tr>
<td>$0.9*2=1.8$</td>
<td>0.8</td>
<td>1</td>
</tr>
<tr>
<td>$0.8*2=1.6$</td>
<td>0.6</td>
<td>1</td>
</tr>
<tr>
<td>$0.6*2=1.2$</td>
<td>0.2</td>
<td>1</td>
</tr>
<tr>
<td>$0.2*2=0.4$</td>
<td>0.4</td>
<td>0</td>
</tr>
<tr>
<td>$0.4*2=0.8$</td>
<td>0.8</td>
<td>0</td>
</tr>
<tr>
<td>$0.8*2=1.6$</td>
<td>0.6</td>
<td>1</td>
</tr>
<tr>
<td>$0.6*2=1.2$</td>
<td>0.2</td>
<td>1</td>
</tr>
<tr>
<td>$0.2*2=0.4$</td>
<td>0.4</td>
<td>0</td>
</tr>
<tr>
<td>……</td>
<td>……</td>
<td>……</td>
</tr>
</tbody></table>
<p>0.725的二进制数是<code>0.1011100110</code>（后面还有无限长，这里忽略）。所以18.725的二级制就是<code>10010.1011100110</code>。按照规定，二进制小数点左边只能有1为且固定为1，所以需要进行右移操作，得出结果是：$1.00101011100110*2^4$</p>
<ul>
<li>符号位：正数，符号位为0；</li>
<li>指数位：实际为4，按照规定要加上127（即指数最高位赋值为1），指数位存储的是131，二级制为<code>10000011</code>，。</li>
<li>底数位：取小数部分，即 <code>0.00101011100110</code>；</li>
</ul>
<p>为什么指数位要加上127呢？这是因为float类型指数位是8位，取值范围位-126~127，为了消除负数带来的实际计算上的影响（比如比较大小，加减法等），可以在实际存储的时候，给指数做一个简单的映射，加上一个偏移量，比如float的指数偏移量为 127，这样就不会有负数出现了。另外double类型是加上1024。</p>
<p>18.725存储的float二进制数据是：<code>0 10000011 00101011100110...</code>。</p>
<p>可以通过下面代码进行验证：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(Integer.toBinaryString(Float.floatToRawIntBits(<span class="number">18.725f</span>)));</span><br><span class="line"><span class="comment">//输出结果位：0 10000011 00101011100110011001101（高位0实际上没有输出，这里手动补上了）</span></span><br><span class="line"></span><br><span class="line">System.out.println(Long.toBinaryString(Double.doubleToRawLongBits(<span class="number">18.725</span>)));</span><br><span class="line"><span class="comment">//输出结果：0 10000000011 0010101110011001100110011001100110011001100110011010</span></span><br></pre></td></tr></table></figure>

<h2 id="字符串转浮点数"><a href="#字符串转浮点数" class="headerlink" title="字符串转浮点数"></a>字符串转浮点数</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//本示例是最基础的转换，比如输入“34.5789”，输出为 34.5789</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">float</span> <span class="title function_">stringToFloat</span><span class="params">(String str)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">dotIndex</span> <span class="operator">=</span> str.indexOf(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (dotIndex &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            dotIndex = str.length();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">float</span> <span class="variable">value</span> <span class="operator">=</span> <span class="number">0f</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=dotIndex-<span class="number">1</span>, j=<span class="number">0</span>; i&gt;=<span class="number">0</span>; i--, j++) &#123;</span><br><span class="line">            value += (str.charAt(i)-<span class="string">&#x27;0&#x27;</span>) * Math.pow(<span class="number">10</span>, j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=dotIndex+<span class="number">1</span>, j=<span class="number">1</span>; i&lt;str.length(); i++, j++) &#123;</span><br><span class="line">            value += (str.charAt(i)-<span class="string">&#x27;0&#x27;</span>) * Math.pow(<span class="number">10</span>, -j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul>
<li><a href="https://www.shuxuele.com/numbers/scientific-notation.html">科学记数法</a></li>
<li><a href="https://www.sojson.com/hexconvert.html">在线进制转换</a></li>
<li><a href="https://www.cnblogs.com/Java-Script/p/11123897.html">Java语言中：float、double数据类型在内存中是如何存储的</a></li>
<li><a href="https://www.runoob.com/w3cnote/java-the-different-float-double.html">Java 浮点类型 float 和 double 的主要区别</a></li>
<li><a href="https://blog.csdn.net/weixin_47713503/article/details/108699001">IEEE754 浮点数：简读+案例=秒懂</a></li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java 公平锁和非公平锁</title>
    <url>/posts/c7038aa0.html</url>
    <content><![CDATA[<p>公平锁：指的是多个线程等待同一个锁时，等待时间最长的线程将会优先获取到锁。但是，这也会导致当线程尝试获取锁时，很大概率会进入阻塞状态，有很高的状态切换成本，因此，会降低吞吐量和执行效率。</p>
<p>非公平锁：不会保证一个特定获取到锁的顺序。当线程尝试获取锁时，会优先通过CAS尝试获取锁，如果失败了才会进入等待队列。非公平锁的执行效率更高，因为线程尝试获取锁的时候，如果能够直接获取到锁，可以节省线程的上下文切换带来的时间和性能上的开销。但是，可能会导致有的线程永远也获取不到锁。</p>
<p>Java中的<code>synchronized</code>是非公平锁，<code>ReentrantLock</code>默认也是非公平锁，并且是可重入的。<code>ReentrantLock</code>则可以通过<code>fair</code>来设置为公平锁。下面是<code>ReentrantLock</code>的类图结构：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="386px" preserveAspectRatio="none" style="width:345px;height:386px;background:#FFFFFF;" version="1.1" viewBox="0 0 345 386" width="345px" zoomAndPan="magnify"><defs/><g><!--class AbstractOwnableSynchronizer--><g id="elem_AbstractOwnableSynchronizer"><rect codeLine="1" fill="#F1F1F1" height="48" id="AbstractOwnableSynchronizer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="246" x="92" y="7"/><ellipse cx="107" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M109.0781,24.8125 L109.4688,25.7969 L109.0781,25.7969 C108.625,25.7969 108.5156,25.8125 108.3594,25.9219 C108.1094,26.0781 107.9531,26.3594 107.9531,26.6563 C107.9531,26.9219 108.0938,27.1719 108.3125,27.3281 C108.4531,27.4531 108.6563,27.5 109.0781,27.5 L111.4375,27.5 C111.7969,27.5 112.0156,27.4688 112.1563,27.375 C112.4063,27.2344 112.5625,26.9375 112.5625,26.6563 C112.5625,26.375 112.4219,26.125 112.2031,25.9688 C112.0313,25.8281 111.875,25.7969 111.4063,25.7969 L108.0156,17.5938 L104.3438,17.5938 C103.8906,17.5938 103.7656,17.6094 103.6094,17.7031 C103.3594,17.875 103.2031,18.1563 103.2031,18.4375 C103.2031,18.7188 103.3438,18.9688 103.5625,19.1406 C103.7344,19.25 103.9063,19.2813 104.3438,19.2813 L105.4219,19.2813 L102.7813,25.7969 C102.3594,25.7969 102.2031,25.8125 102.0469,25.9219 C101.7969,26.0781 101.6406,26.3594 101.6406,26.6563 C101.6406,27.2188 102.0156,27.5 102.7656,27.5 L105.0313,27.5 C105.3906,27.5 105.6094,27.4688 105.7344,27.375 C106,27.2344 106.1406,26.9375 106.1406,26.6563 C106.1406,26.375 106.0156,26.125 105.7969,25.9531 C105.625,25.8281 105.4844,25.7969 105.0313,25.7969 L104.6406,25.7969 L105.0313,24.8125 L109.0781,24.8125 Z M108.375,23.1094 L105.7031,23.1094 L107.0469,19.8438 L108.375,23.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="214" x="121" y="27.8467">AbstractOwnableSynchronizer</text><line style="stroke:#181818;stroke-width:0.5;" x1="93" x2="337" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="93" x2="337" y1="47" y2="47"/></g><!--class AbstractQueuedSynchronizer--><g id="elem_AbstractQueuedSynchronizer"><rect codeLine="2" fill="#F1F1F1" height="48" id="AbstractQueuedSynchronizer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="240" x="95" y="115"/><ellipse cx="110" cy="131" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M112.0781,132.8125 L112.4688,133.7969 L112.0781,133.7969 C111.625,133.7969 111.5156,133.8125 111.3594,133.9219 C111.1094,134.0781 110.9531,134.3594 110.9531,134.6563 C110.9531,134.9219 111.0938,135.1719 111.3125,135.3281 C111.4531,135.4531 111.6563,135.5 112.0781,135.5 L114.4375,135.5 C114.7969,135.5 115.0156,135.4688 115.1563,135.375 C115.4063,135.2344 115.5625,134.9375 115.5625,134.6563 C115.5625,134.375 115.4219,134.125 115.2031,133.9688 C115.0313,133.8281 114.875,133.7969 114.4063,133.7969 L111.0156,125.5938 L107.3438,125.5938 C106.8906,125.5938 106.7656,125.6094 106.6094,125.7031 C106.3594,125.875 106.2031,126.1563 106.2031,126.4375 C106.2031,126.7188 106.3438,126.9688 106.5625,127.1406 C106.7344,127.25 106.9063,127.2813 107.3438,127.2813 L108.4219,127.2813 L105.7813,133.7969 C105.3594,133.7969 105.2031,133.8125 105.0469,133.9219 C104.7969,134.0781 104.6406,134.3594 104.6406,134.6563 C104.6406,135.2188 105.0156,135.5 105.7656,135.5 L108.0313,135.5 C108.3906,135.5 108.6094,135.4688 108.7344,135.375 C109,135.2344 109.1406,134.9375 109.1406,134.6563 C109.1406,134.375 109.0156,134.125 108.7969,133.9531 C108.625,133.8281 108.4844,133.7969 108.0313,133.7969 L107.6406,133.7969 L108.0313,132.8125 L112.0781,132.8125 Z M111.375,131.1094 L108.7031,131.1094 L110.0469,127.8438 L111.375,131.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="208" x="124" y="135.8467">AbstractQueuedSynchronizer</text><line style="stroke:#181818;stroke-width:0.5;" x1="96" x2="334" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="96" x2="334" y1="155" y2="155"/></g><!--class Sync--><g id="elem_Sync"><rect codeLine="3" fill="#F1F1F1" height="48" id="Sync" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="66" x="182" y="223"/><ellipse cx="197" cy="239" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M199.0781,240.8125 L199.4688,241.7969 L199.0781,241.7969 C198.625,241.7969 198.5156,241.8125 198.3594,241.9219 C198.1094,242.0781 197.9531,242.3594 197.9531,242.6563 C197.9531,242.9219 198.0938,243.1719 198.3125,243.3281 C198.4531,243.4531 198.6563,243.5 199.0781,243.5 L201.4375,243.5 C201.7969,243.5 202.0156,243.4688 202.1563,243.375 C202.4063,243.2344 202.5625,242.9375 202.5625,242.6563 C202.5625,242.375 202.4219,242.125 202.2031,241.9688 C202.0313,241.8281 201.875,241.7969 201.4063,241.7969 L198.0156,233.5938 L194.3438,233.5938 C193.8906,233.5938 193.7656,233.6094 193.6094,233.7031 C193.3594,233.875 193.2031,234.1563 193.2031,234.4375 C193.2031,234.7188 193.3438,234.9688 193.5625,235.1406 C193.7344,235.25 193.9063,235.2813 194.3438,235.2813 L195.4219,235.2813 L192.7813,241.7969 C192.3594,241.7969 192.2031,241.8125 192.0469,241.9219 C191.7969,242.0781 191.6406,242.3594 191.6406,242.6563 C191.6406,243.2188 192.0156,243.5 192.7656,243.5 L195.0313,243.5 C195.3906,243.5 195.6094,243.4688 195.7344,243.375 C196,243.2344 196.1406,242.9375 196.1406,242.6563 C196.1406,242.375 196.0156,242.125 195.7969,241.9531 C195.625,241.8281 195.4844,241.7969 195.0313,241.7969 L194.6406,241.7969 L195.0313,240.8125 L199.0781,240.8125 Z M198.375,239.1094 L195.7031,239.1094 L197.0469,235.8438 L198.375,239.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="34" x="211" y="243.8467">Sync</text><line style="stroke:#181818;stroke-width:0.5;" x1="183" x2="247" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="183" x2="247" y1="263" y2="263"/></g><!--class ReentrantLock--><g id="elem_ReentrantLock"><rect codeLine="4" fill="#ADD8E6" height="48" id="ReentrantLock" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="140" x="7" y="223"/><ellipse cx="22" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,234.6719 C23.4063,234.2344 22.8125,234.0938 21.9375,234.0938 C19.3125,234.0938 17.3125,236.1719 17.3125,238.8906 L17.3125,240.0156 C17.3125,242.5938 19.4219,244.4844 22.3125,244.4844 C23.5313,244.4844 24.6875,244.1875 25.4375,243.6406 C26.0156,243.2344 26.3438,242.7813 26.3438,242.3906 C26.3438,241.9375 25.9531,241.5469 25.4844,241.5469 C25.2656,241.5469 25.0625,241.625 24.875,241.8125 C24.4219,242.2969 24.4219,242.2969 24.2344,242.3906 C23.8125,242.6563 23.125,242.7813 22.3594,242.7813 C20.3125,242.7813 19.0156,241.6875 19.0156,239.9844 L19.0156,238.8906 C19.0156,237.1094 20.2656,235.7969 22,235.7969 C22.5781,235.7969 23.1875,235.9531 23.6563,236.2031 C24.1406,236.4844 24.3125,236.7031 24.4063,237.1094 C24.4688,237.5156 24.5,237.6406 24.6406,237.7656 C24.7813,237.9063 25.0156,238.0156 25.2344,238.0156 C25.5,238.0156 25.7656,237.875 25.9375,237.6563 C26.0469,237.5 26.0781,237.3125 26.0781,236.8906 L26.0781,235.4688 C26.0781,235.0313 26.0625,234.9063 25.9688,234.75 C25.8125,234.4844 25.5313,234.3438 25.2344,234.3438 C24.9375,234.3438 24.7344,234.4375 24.5156,234.75 L24.3438,234.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="36" y="243.8467">ReentrantLock</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="146" y1="255" y2="255"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="146" y1="263" y2="263"/></g><!--class NonfairSync--><g id="elem_NonfairSync"><rect fill="#F1F1F1" height="48" id="NonfairSync" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="118" x="86" y="331"/><ellipse cx="101" cy="347" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M103.3438,342.6719 C102.4063,342.2344 101.8125,342.0938 100.9375,342.0938 C98.3125,342.0938 96.3125,344.1719 96.3125,346.8906 L96.3125,348.0156 C96.3125,350.5938 98.4219,352.4844 101.3125,352.4844 C102.5313,352.4844 103.6875,352.1875 104.4375,351.6406 C105.0156,351.2344 105.3438,350.7813 105.3438,350.3906 C105.3438,349.9375 104.9531,349.5469 104.4844,349.5469 C104.2656,349.5469 104.0625,349.625 103.875,349.8125 C103.4219,350.2969 103.4219,350.2969 103.2344,350.3906 C102.8125,350.6563 102.125,350.7813 101.3594,350.7813 C99.3125,350.7813 98.0156,349.6875 98.0156,347.9844 L98.0156,346.8906 C98.0156,345.1094 99.2656,343.7969 101,343.7969 C101.5781,343.7969 102.1875,343.9531 102.6563,344.2031 C103.1406,344.4844 103.3125,344.7031 103.4063,345.1094 C103.4688,345.5156 103.5,345.6406 103.6406,345.7656 C103.7813,345.9063 104.0156,346.0156 104.2344,346.0156 C104.5,346.0156 104.7656,345.875 104.9375,345.6563 C105.0469,345.5 105.0781,345.3125 105.0781,344.8906 L105.0781,343.4688 C105.0781,343.0313 105.0625,342.9063 104.9688,342.75 C104.8125,342.4844 104.5313,342.3438 104.2344,342.3438 C103.9375,342.3438 103.7344,342.4375 103.5156,342.75 L103.3438,342.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="115" y="351.8467">NonfairSync</text><line style="stroke:#181818;stroke-width:0.5;" x1="87" x2="203" y1="363" y2="363"/><line style="stroke:#181818;stroke-width:0.5;" x1="87" x2="203" y1="371" y2="371"/></g><!--class FairSync--><g id="elem_FairSync"><rect fill="#F1F1F1" height="48" id="FairSync" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="92" x="239" y="331"/><ellipse cx="254" cy="347" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M256.3438,342.6719 C255.4063,342.2344 254.8125,342.0938 253.9375,342.0938 C251.3125,342.0938 249.3125,344.1719 249.3125,346.8906 L249.3125,348.0156 C249.3125,350.5938 251.4219,352.4844 254.3125,352.4844 C255.5313,352.4844 256.6875,352.1875 257.4375,351.6406 C258.0156,351.2344 258.3438,350.7813 258.3438,350.3906 C258.3438,349.9375 257.9531,349.5469 257.4844,349.5469 C257.2656,349.5469 257.0625,349.625 256.875,349.8125 C256.4219,350.2969 256.4219,350.2969 256.2344,350.3906 C255.8125,350.6563 255.125,350.7813 254.3594,350.7813 C252.3125,350.7813 251.0156,349.6875 251.0156,347.9844 L251.0156,346.8906 C251.0156,345.1094 252.2656,343.7969 254,343.7969 C254.5781,343.7969 255.1875,343.9531 255.6563,344.2031 C256.1406,344.4844 256.3125,344.7031 256.4063,345.1094 C256.4688,345.5156 256.5,345.6406 256.6406,345.7656 C256.7813,345.9063 257.0156,346.0156 257.2344,346.0156 C257.5,346.0156 257.7656,345.875 257.9375,345.6563 C258.0469,345.5 258.0781,345.3125 258.0781,344.8906 L258.0781,343.4688 C258.0781,343.0313 258.0625,342.9063 257.9688,342.75 C257.8125,342.4844 257.5313,342.3438 257.2344,342.3438 C256.9375,342.3438 256.7344,342.4375 256.5156,342.75 L256.3438,342.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="268" y="351.8467">FairSync</text><line style="stroke:#181818;stroke-width:0.5;" x1="240" x2="330" y1="363" y2="363"/><line style="stroke:#181818;stroke-width:0.5;" x1="240" x2="330" y1="371" y2="371"/></g><!--reverse link ReentrantLock to Sync--><g id="link_ReentrantLock_Sync"><path codeLine="5" d="M159.078,247 C170.664,247 170.249,247 181.835,247 " fill="none" id="ReentrantLock-backto-Sync" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="147.078,247,153.078,251,159.078,247,153.078,243,147.078,247" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link AbstractOwnableSynchronizer to AbstractQueuedSynchronizer--><g id="link_AbstractOwnableSynchronizer_AbstractQueuedSynchronizer"><path codeLine="6" d="M215,73 C215,90.658 215,96.941 215,114.678 " fill="none" id="AbstractOwnableSynchronizer-backto-AbstractQueuedSynchronizer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="215,55,209,73,221,73,215,55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link AbstractQueuedSynchronizer to Sync--><g id="link_AbstractQueuedSynchronizer_Sync"><path codeLine="7" d="M215,181 C215,198.658 215,204.941 215,222.678 " fill="none" id="AbstractQueuedSynchronizer-backto-Sync" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="215,163,209,181,221,181,215,163" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Sync to NonfairSync--><g id="link_Sync_NonfairSync"><path codeLine="8" d="M189.892,286.0204 C178.231,303.6788 172.115,312.9408 160.401,330.6784 " fill="none" id="Sync-backto-NonfairSync" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="199.811,271,184.8852,282.7141,194.8988,289.3268,199.811,271" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Sync to FairSync--><g id="link_Sync_FairSync"><path codeLine="9" d="M240.108,286.0204 C251.769,303.6788 257.885,312.9408 269.599,330.6784 " fill="none" id="Sync-backto-FairSync" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="230.189,271,235.1012,289.3268,245.1148,282.7141,230.189,271" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[IqmgBYbAJ2vHS8Go_Clp4fDoKeChyv8pYlBpCgjIYxWIqHK5bgQMfgPWLmCIvKhEIImkLWXAJSq32kQL-EGdPoievsIcPvGavPIcSg5AQEb2DE4sNK6tj42tnWwl8q4ST7LOt0bMPbEZgwlWbv-NbfXP1BOQ8Ue65G80]--></g></svg>

<h2 id="公平锁加锁"><a href="#公平锁加锁" class="headerlink" title="公平锁加锁"></a>公平锁加锁</h2><p>公平锁加锁过程的方法调用：<code>ReentrantLock#lock()</code> &rarr; <code>ReentrantLock.FairSync#lock()</code> &rarr; <code>AbstractQueuedSynchronizer#acquire(1)</code>。下面看下acquire的代码实现：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 【AbstractQueuedSynchronizer.java】</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">acquire</span><span class="params">(<span class="type">int</span> arg)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!tryAcquire(arg) &amp;&amp;</span><br><span class="line">            acquireQueued(addWaiter(Node.EXCLUSIVE), arg))</span><br><span class="line">            selfInterrupt();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 【ReentrantLock.java】</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">FairSync</span> <span class="keyword">extends</span> <span class="title class_">Sync</span> &#123;</span><br><span class="line">        ......</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Fair version of tryAcquire.  Don&#x27;t grant access unless</span></span><br><span class="line"><span class="comment">         * recursive call or no waiters or is first.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">// 只有锁未被锁定、锁重入或者等待队列中没有前辈的情况才会获取成功</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="keyword">final</span> <span class="type">boolean</span> <span class="title function_">tryAcquire</span><span class="params">(<span class="type">int</span> acquires)</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Thread</span> <span class="variable">current</span> <span class="operator">=</span> Thread.currentThread();</span><br><span class="line">            <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> getState();</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="number">0</span>) &#123; <span class="comment">//state为0表示当前是未被锁定状态</span></span><br><span class="line">                <span class="keyword">if</span> (!hasQueuedPredecessors() &amp;&amp; <span class="comment">//判断等待队列是否有排在自己前面的线程</span></span><br><span class="line">                    compareAndSetState(<span class="number">0</span>, acquires)) &#123; <span class="comment">//通过CAS设置锁定状态</span></span><br><span class="line">                    setExclusiveOwnerThread(current); <span class="comment">//独占线程设置为自己</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">//加锁成功</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (current == getExclusiveOwnerThread()) &#123;</span><br><span class="line">                <span class="comment">// 锁的重入，状态加1</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">nextc</span> <span class="operator">=</span> c + acquires;</span><br><span class="line">                <span class="keyword">if</span> (nextc &lt; <span class="number">0</span>)</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;Maximum lock count exceeded&quot;</span>);</span><br><span class="line">                setState(nextc);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">//加锁成功</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">//加锁失败</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 【AbstractQueuedSynchronizer.java】</span></span><br><span class="line"><span class="comment">// addWaiter的作用就是将当前线程添加到等待队列的队尾</span></span><br><span class="line">    <span class="keyword">private</span> Node <span class="title function_">addWaiter</span><span class="params">(Node mode)</span> &#123;</span><br><span class="line">        <span class="type">Node</span> <span class="variable">node</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Node</span>(Thread.currentThread(), mode);</span><br><span class="line">        <span class="comment">// Try the fast path of enq; backup to full enq on failure</span></span><br><span class="line">        <span class="type">Node</span> <span class="variable">pred</span> <span class="operator">=</span> tail;</span><br><span class="line">        <span class="keyword">if</span> (pred != <span class="literal">null</span>) &#123;</span><br><span class="line">            node.prev = pred;</span><br><span class="line">            <span class="keyword">if</span> (compareAndSetTail(pred, node)) &#123;</span><br><span class="line">                pred.next = node;</span><br><span class="line">                <span class="keyword">return</span> node;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        enq(node);</span><br><span class="line">        <span class="keyword">return</span> node;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">boolean</span> <span class="title function_">acquireQueued</span><span class="params">(<span class="keyword">final</span> Node node, <span class="type">int</span> arg)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">failed</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">interrupted</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (;;) &#123; <span class="comment">//循环</span></span><br><span class="line">                <span class="keyword">final</span> <span class="type">Node</span> <span class="variable">p</span> <span class="operator">=</span> node.predecessor();</span><br><span class="line">                <span class="keyword">if</span> (p == head &amp;&amp; tryAcquire(arg)) &#123;</span><br><span class="line">                    <span class="comment">// 请求锁的当前线程排在了队首，且获取锁成功</span></span><br><span class="line">                    setHead(node); <span class="comment">//设置为head，所以head是持有锁的线程</span></span><br><span class="line">                    p.next = <span class="literal">null</span>; <span class="comment">// help GC</span></span><br><span class="line">                    failed = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">return</span> interrupted;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (shouldParkAfterFailedAcquire(p, node) &amp;&amp;</span><br><span class="line">                    parkAndCheckInterrupt()) <span class="comment">//进入blocked状态</span></span><br><span class="line">                    interrupted = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (failed)</span><br><span class="line">                cancelAcquire(node);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1064px" preserveAspectRatio="none" style="width:420px;height:1064px;background:#FFFFFF;" version="1.1" viewBox="0 0 420 1064" width="420px" zoomAndPan="magnify"><defs/><g><ellipse cx="217.5" cy="20" fill="#222222" rx="10" ry="10" style="stroke:#222222;stroke-width:1.0;"/><rect fill="none" height="491.2339" style="stroke:#000000;stroke-width:1.5;" width="398" x="11" y="40"/><path d="M106,40 L106,49.2969 L96,59.2969 L11,59.2969 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="14" y="53.9951">tryAcquire()</text><polygon fill="#F1F1F1" points="42.5,79.2969,161.5,79.2969,173.5,91.2969,161.5,103.2969,42.5,103.2969,30.5,91.2969,42.5,79.2969" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="106" y="113.5073">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="42.5" y="95.105">&#38145;&#26410;&#34987;&#38145;&#23450; state==0?</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="158" x="23" y="183.4097"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="138" x="33" y="204.5483">CAS&#35774;&#32622;state&#20026;&#38145;&#23450;&#29366;&#24577;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="152" x="26" y="300.7808"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="132" x="36" y="321.9194">&#24403;&#21069;&#32447;&#31243;&#35774;&#32622;&#20026;&#29420;&#21344;&#32447;&#31243;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="68" x="68" y="357.2651"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="48" x="78" y="378.4038">&#21152;&#38145;&#25104;&#21151;</text><ellipse cx="102" cy="422.2339" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="102" cy="422.2339" fill="#222222" rx="6" ry="6" style="stroke:#222222;stroke-width:1.0;"/><polygon fill="#F1F1F1" points="65,252.3784,139,252.3784,151,264.3784,139,276.3784,65,276.3784,53,264.3784,65,252.3784" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="106" y="286.5889">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="74" x="65" y="268.1865">CAS&#35774;&#32622;&#25104;&#21151;?</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="14" x="151" y="261.7842">no</text><polygon fill="#F1F1F1" points="52.5,135.0073,151.5,135.0073,163.5,147.0073,151.5,159.0073,52.5,159.0073,40.5,147.0073,52.5,135.0073" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="14" x="106" y="169.2178">no</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="52.5" y="150.8154">&#26377;&#20854;&#20182;&#32447;&#31243;&#27491;&#22312;&#25490;&#38431;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="163.5" y="144.4131">yes</text><polygon fill="#F1F1F1" points="102,475.2339,114,487.2339,102,499.2339,90,487.2339,102,475.2339" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#F1F1F1" points="268,79.2969,367,79.2969,379,91.2969,367,103.2969,268,103.2969,256,91.2969,268,79.2969" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="321.5" y="113.5073">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="268" y="95.105">&#24403;&#21069;&#32447;&#31243;&#24050;&#32463;&#25345;&#26377;&#38145;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="14" x="242" y="88.7026">no</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="69" x="283" y="135.0073"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="49" x="293" y="156.146">state&#21152;1</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="68" x="283.5" y="203.9761"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="48" x="293.5" y="225.1147">&#21152;&#38145;&#25104;&#21151;</text><ellipse cx="317.5" cy="283.9448" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="317.5" cy="283.9448" fill="#222222" rx="6" ry="6" style="stroke:#222222;stroke-width:1.0;"/><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="128" x="153.5" y="551.2339"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="108" x="163.5" y="572.3726">&#28155;&#21152;&#21040;&#31561;&#24453;&#38431;&#21015;&#38431;&#23614;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="140" x="147.5" y="697.605"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="120" x="157.5" y="718.7437">&#20877;&#27425;&#35843;&#29992;tryAcquire()</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="134" x="150.5" y="799.9761"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="114" x="160.5" y="821.1147">&#24403;&#21069;&#33410;&#28857;&#35774;&#32622;&#20026;head</text><ellipse cx="217.5" cy="877.4604" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="217.5" cy="877.4604" fill="#222222" rx="6" ry="6" style="stroke:#222222;stroke-width:1.0;"/><polygon fill="#F1F1F1" points="161,751.5737,274,751.5737,286,763.5737,274,775.5737,161,775.5737,149,763.5737,161,751.5737" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="221.5" y="785.7842">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="161" y="767.3818">tryAcquire&#21152;&#38145;&#25104;&#21151;&#65311;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="14" x="286" y="760.9795">no</text><polygon fill="#F1F1F1" points="161,649.2026,274,649.2026,286,661.2026,274,673.2026,161,673.2026,149,661.2026,161,649.2026" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="221.5" y="683.4131">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="161" y="665.0107">node.prev == head</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="14" x="286" y="658.6084">no</text><polygon fill="#F1F1F1" points="217.5,930.4604,229.5,942.4604,217.5,954.4604,205.5,942.4604,217.5,930.4604" style="stroke:#181818;stroke-width:0.5;"/><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="159.5" y="974.4604"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="96" x="169.5" y="995.5991">&#32447;&#31243;&#36827;&#20837;&#38459;&#22622;&#29366;&#24577;</text><polygon fill="#F1F1F1" points="217.5,605.2026,229.5,617.2026,217.5,629.2026,205.5,617.2026,217.5,605.2026" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#F1F1F1" points="201,1028.4292,234,1028.4292,246,1040.4292,234,1052.4292,201,1052.4292,189,1040.4292,201,1028.4292" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="33" x="201" y="1044.2373">&#27515;&#24490;&#29615;</text><line style="stroke:#181818;stroke-width:1.0;" x1="102" x2="102" y1="334.7495" y2="357.2651"/><polygon fill="#181818" points="98,347.2651,102,357.2651,106,347.2651,102,351.2651" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="102" x2="102" y1="391.2339" y2="411.2339"/><polygon fill="#181818" points="98,401.2339,102,411.2339,106,401.2339,102,405.2339" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="102" x2="102" y1="276.3784" y2="300.7808"/><polygon fill="#181818" points="98,290.7808,102,300.7808,106,290.7808,102,294.7808" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="151" x2="188" y1="264.3784" y2="264.3784"/><polygon fill="#181818" points="184,355.2651,188,365.2651,192,355.2651,188,359.2651" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="188" x2="188" y1="264.3784" y2="455.2339"/><line style="stroke:#181818;stroke-width:1.0;" x1="188" x2="102" y1="455.2339" y2="455.2339"/><line style="stroke:#181818;stroke-width:1.0;" x1="102" x2="102" y1="455.2339" y2="475.2339"/><polygon fill="#181818" points="98,465.2339,102,475.2339,106,465.2339,102,469.2339" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="102" x2="102" y1="217.3784" y2="252.3784"/><polygon fill="#181818" points="98,242.3784,102,252.3784,106,242.3784,102,246.3784" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="102" x2="102" y1="159.0073" y2="183.4097"/><polygon fill="#181818" points="98,173.4097,102,183.4097,106,173.4097,102,177.4097" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="163.5" x2="210" y1="147.0073" y2="147.0073"/><polygon fill="#181818" points="206,327.2651,210,337.2651,214,327.2651,210,331.2651" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="210" x2="210" y1="147.0073" y2="487.2339"/><line style="stroke:#181818;stroke-width:1.0;" x1="210" x2="114" y1="487.2339" y2="487.2339"/><polygon fill="#181818" points="124,483.2339,114,487.2339,124,491.2339,120,487.2339" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="317.5" x2="317.5" y1="168.9761" y2="203.9761"/><polygon fill="#181818" points="313.5,193.9761,317.5,203.9761,321.5,193.9761,317.5,197.9761" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="317.5" x2="317.5" y1="237.9448" y2="272.9448"/><polygon fill="#181818" points="313.5,262.9448,317.5,272.9448,321.5,262.9448,317.5,266.9448" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="102" x2="102" y1="103.2969" y2="135.0073"/><polygon fill="#181818" points="98,125.0073,102,135.0073,106,125.0073,102,129.0073" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="102" x2="102" y1="499.2339" y2="519.2339"/><polygon fill="#181818" points="98,509.2339,102,519.2339,106,509.2339,102,513.2339" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="317.5" x2="317.5" y1="103.2969" y2="135.0073"/><polygon fill="#181818" points="313.5,125.0073,317.5,135.0073,321.5,125.0073,317.5,129.0073" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="173.5" x2="256" y1="91.2969" y2="91.2969"/><polygon fill="#181818" points="246,87.2969,256,91.2969,246,95.2969,250,91.2969" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="30" y2="64.2969"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="102" y1="64.2969" y2="64.2969"/><line style="stroke:#181818;stroke-width:1.0;" x1="102" x2="102" y1="64.2969" y2="79.2969"/><polygon fill="#181818" points="98,69.2969,102,79.2969,106,69.2969,102,73.2969" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="379" x2="393" y1="91.2969" y2="91.2969"/><line style="stroke:#181818;stroke-width:1.0;" x1="393" x2="393" y1="91.2969" y2="519.2339"/><polygon fill="#181818" points="389,509.2339,393,519.2339,397,509.2339,393,513.2339" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="102" x2="393" y1="519.2339" y2="519.2339"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="519.2339" y2="551.2339"/><polygon fill="#181818" points="213.5,541.2339,217.5,551.2339,221.5,541.2339,217.5,545.2339" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="833.9448" y2="866.4604"/><polygon fill="#181818" points="213.5,856.4604,217.5,866.4604,221.5,856.4604,217.5,860.4604" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="775.5737" y2="799.9761"/><polygon fill="#181818" points="213.5,789.9761,217.5,799.9761,221.5,789.9761,217.5,793.9761" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="286" x2="298" y1="763.5737" y2="763.5737"/><polygon fill="#181818" points="294,832.4604,298,842.4604,302,832.4604,298,836.4604" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="298" x2="298" y1="763.5737" y2="910.4604"/><line style="stroke:#181818;stroke-width:1.0;" x1="298" x2="217.5" y1="910.4604" y2="910.4604"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="910.4604" y2="930.4604"/><polygon fill="#181818" points="213.5,920.4604,217.5,930.4604,221.5,920.4604,217.5,924.4604" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="731.5737" y2="751.5737"/><polygon fill="#181818" points="213.5,741.5737,217.5,751.5737,221.5,741.5737,217.5,745.5737" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="673.2026" y2="697.605"/><polygon fill="#181818" points="213.5,687.605,217.5,697.605,221.5,687.605,217.5,691.605" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="286" x2="316.5" y1="661.2026" y2="661.2026"/><polygon fill="#181818" points="312.5,791.9761,316.5,801.9761,320.5,791.9761,316.5,795.9761" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="316.5" x2="316.5" y1="661.2026" y2="942.4604"/><line style="stroke:#181818;stroke-width:1.0;" x1="316.5" x2="229.5" y1="942.4604" y2="942.4604"/><polygon fill="#181818" points="239.5,938.4604,229.5,942.4604,239.5,946.4604,235.5,942.4604" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="954.4604" y2="974.4604"/><polygon fill="#181818" points="213.5,964.4604,217.5,974.4604,221.5,964.4604,217.5,968.4604" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="629.2026" y2="649.2026"/><polygon fill="#181818" points="213.5,639.2026,217.5,649.2026,221.5,639.2026,217.5,643.2026" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="246" x2="340.5" y1="1040.4292" y2="1040.4292"/><polygon fill="#181818" points="336.5,846.4604,340.5,836.4604,344.5,846.4604,340.5,842.4604" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="340.5" x2="340.5" y1="617.2026" y2="1040.4292"/><line style="stroke:#181818;stroke-width:1.0;" x1="340.5" x2="229.5" y1="617.2026" y2="617.2026"/><polygon fill="#181818" points="239.5,613.2026,229.5,617.2026,239.5,621.2026,235.5,617.2026" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="1008.4292" y2="1028.4292"/><polygon fill="#181818" points="213.5,1018.4292,217.5,1028.4292,221.5,1018.4292,217.5,1022.4292" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="585.2026" y2="605.2026"/><polygon fill="#181818" points="213.5,595.2026,217.5,605.2026,221.5,595.2026,217.5,599.2026" style="stroke:#181818;stroke-width:1.0;"/><!--SRC=[bLB1Ji905BptA_RONenUInf3_0I_e955cf22xQhX9XWCBO96YH8b0XeJWe340oYLyZFiBfpy1RlRKX3ZmSlcPJAPcJTlJQGQIDWtKeTfW8nCTE_WK3EWA0bQ78ZpIfRKshF75s_0lJjW8XL1HTdSbW1AG5tCG5CI061KKhDmVZ1rRkXeGbj5qdt2jHOfNyshzO2ifnWN07adkZlhkNJSutBJzv6lJkq1ESb6E8SfXZHIkCHsVSsJA-7nDRPAlgFFzTHeiODB3H-CX4oxmPRXIWlGHAaq7s7IX23C1_MO5XSMQ63dWup3SPPlrHmFtwXpGSwzkYpFvsTKcU_f9TXYph-Yy1Y-llS2VWf19aF78-92dtOjxEQz6d7XbhrzDo8OC0rL53Ilfs9m8st08w0e807Ls7fHCZuhaKvprZ-bbTRgZPTTBz7LT5-VzJzBdzavcli8IsU-_-hLHnUO7DnmSe_pp_EgWviFY-_WxmgE4reIYgJhOBTDow_IDm00]--></g></svg>

<p>有一点需要注意，即使<code>ReentrantLock</code>构造时<code>fair</code>设置为true，使用不带超时的<code>tryLock()</code>加锁时也会使用非公平锁的策略。</p>
<h2 id="非公平锁加锁"><a href="#非公平锁加锁" class="headerlink" title="非公平锁加锁"></a>非公平锁加锁</h2><p>调用链路：<code>ReentrantLock#lock()</code> &rarr; <code>ReentrantLock.NonfairSync#lock()</code> 。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 【ReentrantLock.java】</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">NonfairSync</span> <span class="keyword">extends</span> <span class="title class_">Sync</span> &#123;</span><br><span class="line">        ......</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">lock</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (compareAndSetState(<span class="number">0</span>, <span class="number">1</span>)) <span class="comment">//直接使用CAS加锁，加锁成功后设置为独占线程</span></span><br><span class="line">                setExclusiveOwnerThread(Thread.currentThread());</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                acquire(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">protected</span> <span class="keyword">final</span> <span class="type">boolean</span> <span class="title function_">tryAcquire</span><span class="params">(<span class="type">int</span> acquires)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> nonfairTryAcquire(acquires);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 【AbstractQueuedSynchronizer.java】</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">acquire</span><span class="params">(<span class="type">int</span> arg)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!tryAcquire(arg) &amp;&amp; <span class="comment">//调用NonfairSync.tryAcquire()</span></span><br><span class="line">            acquireQueued(addWaiter(Node.EXCLUSIVE), arg)) <span class="comment">//acquireQueued与公平锁流程相同</span></span><br><span class="line">            selfInterrupt();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 【ReentrantLock.java】</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">boolean</span> <span class="title function_">nonfairTryAcquire</span><span class="params">(<span class="type">int</span> acquires)</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Thread</span> <span class="variable">current</span> <span class="operator">=</span> Thread.currentThread();</span><br><span class="line">            <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> getState();</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="number">0</span>) &#123; <span class="comment">//当前是未锁定转台</span></span><br><span class="line">                <span class="comment">//直接尝试加锁，不会判断队列中是否有其他线程排队，而公平锁会首先判断队列中是否已经有其他线程在排队</span></span><br><span class="line">                <span class="keyword">if</span> (compareAndSetState(<span class="number">0</span>, acquires)) &#123;</span><br><span class="line">                    setExclusiveOwnerThread(current);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (current == getExclusiveOwnerThread()) &#123; <span class="comment">//锁重入</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">nextc</span> <span class="operator">=</span> c + acquires;</span><br><span class="line">                <span class="keyword">if</span> (nextc &lt; <span class="number">0</span>) <span class="comment">// overflow</span></span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;Maximum lock count exceeded&quot;</span>);</span><br><span class="line">                setState(nextc);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<p>从代码可以看出，公平锁和非公平锁的加锁流程几乎相同，区别是state==0时，非公平锁会直接使用CAS尝试加锁，而公平锁会首先判断等待队列中是否有其他线程在排队，如果没人在排队才会使用CAS加锁。</p>
<h2 id="释放锁"><a href="#释放锁" class="headerlink" title="释放锁"></a>释放锁</h2><p>公平锁和非公平锁释放锁的流程是一样的。调用链路<code>ReentrantLock#unlock()</code> &rarr; <code>AbstractQueuedSynchronizer#release()</code>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 【AbstractQueuedSynchronizer.java】</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">boolean</span> <span class="title function_">release</span><span class="params">(<span class="type">int</span> arg)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (tryRelease(arg)) &#123;</span><br><span class="line">            <span class="type">Node</span> <span class="variable">h</span> <span class="operator">=</span> head;</span><br><span class="line">            <span class="keyword">if</span> (h != <span class="literal">null</span> &amp;&amp; h.waitStatus != <span class="number">0</span>)</span><br><span class="line">                unparkSuccessor(h); <span class="comment">//唤醒队列中下一个等待线程</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 【ReentrantLock.java】</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="keyword">final</span> <span class="type">boolean</span> <span class="title function_">tryRelease</span><span class="params">(<span class="type">int</span> releases)</span> &#123;</span><br><span class="line">            <span class="comment">// 获取state并减一</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> getState() - releases;</span><br><span class="line">            <span class="comment">// 加锁和解锁线程如果不同就会抛出异常</span></span><br><span class="line">            <span class="keyword">if</span> (Thread.currentThread() != getExclusiveOwnerThread())</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalMonitorStateException</span>();</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">free</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="number">0</span>) &#123; <span class="comment">//为0表示锁被释放，否则，表示锁的多次重入</span></span><br><span class="line">                free = <span class="literal">true</span>;</span><br><span class="line">                setExclusiveOwnerThread(<span class="literal">null</span>); <span class="comment">//独占线程设置为null</span></span><br><span class="line">            &#125;</span><br><span class="line">            setState(c); <span class="comment">//更新锁状态state</span></span><br><span class="line">            <span class="keyword">return</span> free;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java线程池源码详解</title>
    <url>/posts/271b6343.html</url>
    <content><![CDATA[<p>线程池具备如下两个方面的优势：</p>
<ol>
<li>当需要创建大量异步任务时会改善应用性能，因为线程池减少了任务的调用开销；</li>
<li>可以更好的管理线程，比如监控线程使用情况、系统调优等；</li>
</ol>
<p>下面是线程池类图结构：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="688px" preserveAspectRatio="none" style="width:380px;height:688px;background:#FFFFFF;" version="1.1" viewBox="0 0 380 688" width="380px" zoomAndPan="magnify"><defs/><g><!--class Executor--><g id="elem_Executor"><rect codeLine="1" fill="#F1F1F1" height="64.2969" id="Executor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="256" x="17" y="7"/><ellipse cx="109.25" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M110.2031,19.7813 L111.9219,19.7813 C112.3125,19.7813 112.5,19.75 112.625,19.6719 C112.8906,19.5156 113.0313,19.2344 113.0313,18.9375 C113.0313,18.6719 112.9219,18.4063 112.6875,18.2344 C112.5156,18.125 112.375,18.0938 111.9219,18.0938 L106.7813,18.0938 C106.3438,18.0938 106.2188,18.1094 106.0625,18.2031 C105.8125,18.3594 105.6563,18.6563 105.6563,18.9375 C105.6563,19.2188 105.7969,19.4688 106.0156,19.6406 C106.1719,19.75 106.3594,19.7813 106.7813,19.7813 L108.5,19.7813 L108.5,26.2969 L106.7813,26.2969 C106.3438,26.2969 106.2188,26.3125 106.0625,26.4219 C105.8125,26.5781 105.6563,26.8594 105.6563,27.1563 C105.6563,27.4063 105.7969,27.6719 106.0156,27.8281 C106.1719,27.9531 106.375,28 106.7813,28 L111.9219,28 C112.6719,28 113.0313,27.7188 113.0313,27.1563 C113.0313,26.875 112.9219,26.625 112.6875,26.4531 C112.5156,26.3281 112.375,26.2969 111.9219,26.2969 L110.2031,26.2969 L110.2031,19.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="63" x="129.75" y="27.8467">Executor</text><line style="stroke:#181818;stroke-width:0.5;" x1="18" x2="272" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="18" x2="272" y1="47" y2="47"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="23" y="63.9951">void execute(Runnable command)</text></g><!--class ExecutorService--><g id="elem_ExecutorService"><rect codeLine="4" fill="#F1F1F1" height="96.8906" id="ExecutorService" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="276" x="7" y="132"/><ellipse cx="82.75" cy="148" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M83.7031,144.7813 L85.4219,144.7813 C85.8125,144.7813 86,144.75 86.125,144.6719 C86.3906,144.5156 86.5313,144.2344 86.5313,143.9375 C86.5313,143.6719 86.4219,143.4063 86.1875,143.2344 C86.0156,143.125 85.875,143.0938 85.4219,143.0938 L80.2813,143.0938 C79.8438,143.0938 79.7188,143.1094 79.5625,143.2031 C79.3125,143.3594 79.1563,143.6563 79.1563,143.9375 C79.1563,144.2188 79.2969,144.4688 79.5156,144.6406 C79.6719,144.75 79.8594,144.7813 80.2813,144.7813 L82,144.7813 L82,151.2969 L80.2813,151.2969 C79.8438,151.2969 79.7188,151.3125 79.5625,151.4219 C79.3125,151.5781 79.1563,151.8594 79.1563,152.1563 C79.1563,152.4063 79.2969,152.6719 79.5156,152.8281 C79.6719,152.9531 79.875,153 80.2813,153 L85.4219,153 C86.1719,153 86.5313,152.7188 86.5313,152.1563 C86.5313,151.875 86.4219,151.625 86.1875,151.4531 C86.0156,151.3281 85.875,151.2969 85.4219,151.2969 L83.7031,151.2969 L83.7031,144.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="116" x="103.25" y="152.8467">ExecutorService</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="282" y1="164" y2="164"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="282" y1="172" y2="172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="264" x="13" y="188.9951">Future&lt;?&gt; submit(Runnable task, ...)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="13" y="205.292">void shutdown()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="228" x="13" y="221.5889">List&lt;Runnable&gt; shutdownNow()</text></g><!--class AbstractExecutorService--><g id="elem_AbstractExecutorService"><rect fill="#F1F1F1" height="48" id="AbstractExecutorService" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="212" x="39" y="290"/><ellipse cx="54" cy="306" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M56.3438,301.6719 C55.4063,301.2344 54.8125,301.0938 53.9375,301.0938 C51.3125,301.0938 49.3125,303.1719 49.3125,305.8906 L49.3125,307.0156 C49.3125,309.5938 51.4219,311.4844 54.3125,311.4844 C55.5313,311.4844 56.6875,311.1875 57.4375,310.6406 C58.0156,310.2344 58.3438,309.7813 58.3438,309.3906 C58.3438,308.9375 57.9531,308.5469 57.4844,308.5469 C57.2656,308.5469 57.0625,308.625 56.875,308.8125 C56.4219,309.2969 56.4219,309.2969 56.2344,309.3906 C55.8125,309.6563 55.125,309.7813 54.3594,309.7813 C52.3125,309.7813 51.0156,308.6875 51.0156,306.9844 L51.0156,305.8906 C51.0156,304.1094 52.2656,302.7969 54,302.7969 C54.5781,302.7969 55.1875,302.9531 55.6563,303.2031 C56.1406,303.4844 56.3125,303.7031 56.4063,304.1094 C56.4688,304.5156 56.5,304.6406 56.6406,304.7656 C56.7813,304.9063 57.0156,305.0156 57.2344,305.0156 C57.5,305.0156 57.7656,304.875 57.9375,304.6563 C58.0469,304.5 58.0781,304.3125 58.0781,303.8906 L58.0781,302.4688 C58.0781,302.0313 58.0625,301.9063 57.9688,301.75 C57.8125,301.4844 57.5313,301.3438 57.2344,301.3438 C56.9375,301.3438 56.7344,301.4375 56.5156,301.75 L56.3438,301.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="180" x="68" y="310.8467">AbstractExecutorService</text><line style="stroke:#181818;stroke-width:0.5;" x1="40" x2="250" y1="322" y2="322"/><line style="stroke:#181818;stroke-width:0.5;" x1="40" x2="250" y1="330" y2="330"/></g><!--class ThreadPoolExecutor--><g id="elem_ThreadPoolExecutor"><rect fill="#F1F1F1" height="48" id="ThreadPoolExecutor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="177" x="184.5" y="399"/><ellipse cx="199.5" cy="415" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M201.8438,410.6719 C200.9063,410.2344 200.3125,410.0938 199.4375,410.0938 C196.8125,410.0938 194.8125,412.1719 194.8125,414.8906 L194.8125,416.0156 C194.8125,418.5938 196.9219,420.4844 199.8125,420.4844 C201.0313,420.4844 202.1875,420.1875 202.9375,419.6406 C203.5156,419.2344 203.8438,418.7813 203.8438,418.3906 C203.8438,417.9375 203.4531,417.5469 202.9844,417.5469 C202.7656,417.5469 202.5625,417.625 202.375,417.8125 C201.9219,418.2969 201.9219,418.2969 201.7344,418.3906 C201.3125,418.6563 200.625,418.7813 199.8594,418.7813 C197.8125,418.7813 196.5156,417.6875 196.5156,415.9844 L196.5156,414.8906 C196.5156,413.1094 197.7656,411.7969 199.5,411.7969 C200.0781,411.7969 200.6875,411.9531 201.1563,412.2031 C201.6406,412.4844 201.8125,412.7031 201.9063,413.1094 C201.9688,413.5156 202,413.6406 202.1406,413.7656 C202.2813,413.9063 202.5156,414.0156 202.7344,414.0156 C203,414.0156 203.2656,413.875 203.4375,413.6563 C203.5469,413.5 203.5781,413.3125 203.5781,412.8906 L203.5781,411.4688 C203.5781,411.0313 203.5625,410.9063 203.4688,410.75 C203.3125,410.4844 203.0313,410.3438 202.7344,410.3438 C202.4375,410.3438 202.2344,410.4375 202.0156,410.75 L201.8438,410.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="213.5" y="419.8467">ThreadPoolExecutor</text><line style="stroke:#181818;stroke-width:0.5;" x1="185.5" x2="360.5" y1="431" y2="431"/><line style="stroke:#181818;stroke-width:0.5;" x1="185.5" x2="360.5" y1="439" y2="439"/></g><!--class Executors--><g id="elem_Executors"><rect fill="#F1F1F1" height="48" id="Executors" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="103" x="78.5" y="524"/><ellipse cx="93.5" cy="540" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M95.8438,535.6719 C94.9063,535.2344 94.3125,535.0938 93.4375,535.0938 C90.8125,535.0938 88.8125,537.1719 88.8125,539.8906 L88.8125,541.0156 C88.8125,543.5938 90.9219,545.4844 93.8125,545.4844 C95.0313,545.4844 96.1875,545.1875 96.9375,544.6406 C97.5156,544.2344 97.8438,543.7813 97.8438,543.3906 C97.8438,542.9375 97.4531,542.5469 96.9844,542.5469 C96.7656,542.5469 96.5625,542.625 96.375,542.8125 C95.9219,543.2969 95.9219,543.2969 95.7344,543.3906 C95.3125,543.6563 94.625,543.7813 93.8594,543.7813 C91.8125,543.7813 90.5156,542.6875 90.5156,540.9844 L90.5156,539.8906 C90.5156,538.1094 91.7656,536.7969 93.5,536.7969 C94.0781,536.7969 94.6875,536.9531 95.1563,537.2031 C95.6406,537.4844 95.8125,537.7031 95.9063,538.1094 C95.9688,538.5156 96,538.6406 96.1406,538.7656 C96.2813,538.9063 96.5156,539.0156 96.7344,539.0156 C97,539.0156 97.2656,538.875 97.4375,538.6563 C97.5469,538.5 97.5781,538.3125 97.5781,537.8906 L97.5781,536.4688 C97.5781,536.0313 97.5625,535.9063 97.4688,535.75 C97.3125,535.4844 97.0313,535.3438 96.7344,535.3438 C96.4375,535.3438 96.2344,535.4375 96.0156,535.75 L95.8438,535.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="107.5" y="544.8467">Executors</text><line style="stroke:#181818;stroke-width:0.5;" x1="79.5" x2="180.5" y1="556" y2="556"/><line style="stroke:#181818;stroke-width:0.5;" x1="79.5" x2="180.5" y1="564" y2="564"/></g><!--class ForkJoinPool--><g id="elem_ForkJoinPool"><rect fill="#F1F1F1" height="48" id="ForkJoinPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="121" x="28.5" y="399"/><ellipse cx="43.5" cy="415" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M45.8438,410.6719 C44.9063,410.2344 44.3125,410.0938 43.4375,410.0938 C40.8125,410.0938 38.8125,412.1719 38.8125,414.8906 L38.8125,416.0156 C38.8125,418.5938 40.9219,420.4844 43.8125,420.4844 C45.0313,420.4844 46.1875,420.1875 46.9375,419.6406 C47.5156,419.2344 47.8438,418.7813 47.8438,418.3906 C47.8438,417.9375 47.4531,417.5469 46.9844,417.5469 C46.7656,417.5469 46.5625,417.625 46.375,417.8125 C45.9219,418.2969 45.9219,418.2969 45.7344,418.3906 C45.3125,418.6563 44.625,418.7813 43.8594,418.7813 C41.8125,418.7813 40.5156,417.6875 40.5156,415.9844 L40.5156,414.8906 C40.5156,413.1094 41.7656,411.7969 43.5,411.7969 C44.0781,411.7969 44.6875,411.9531 45.1563,412.2031 C45.6406,412.4844 45.8125,412.7031 45.9063,413.1094 C45.9688,413.5156 46,413.6406 46.1406,413.7656 C46.2813,413.9063 46.5156,414.0156 46.7344,414.0156 C47,414.0156 47.2656,413.875 47.4375,413.6563 C47.5469,413.5 47.5781,413.3125 47.5781,412.8906 L47.5781,411.4688 C47.5781,411.0313 47.5625,410.9063 47.4688,410.75 C47.3125,410.4844 47.0313,410.3438 46.7344,410.3438 C46.4375,410.3438 46.2344,410.4375 46.0156,410.75 L45.8438,410.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="57.5" y="419.8467">ForkJoinPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="29.5" x2="148.5" y1="431" y2="431"/><line style="stroke:#181818;stroke-width:0.5;" x1="29.5" x2="148.5" y1="439" y2="439"/></g><!--class Worker--><g id="elem_Worker"><rect fill="#F1F1F1" height="48" id="Worker" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="85" x="230.5" y="524"/><ellipse cx="245.5" cy="540" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M247.8438,535.6719 C246.9063,535.2344 246.3125,535.0938 245.4375,535.0938 C242.8125,535.0938 240.8125,537.1719 240.8125,539.8906 L240.8125,541.0156 C240.8125,543.5938 242.9219,545.4844 245.8125,545.4844 C247.0313,545.4844 248.1875,545.1875 248.9375,544.6406 C249.5156,544.2344 249.8438,543.7813 249.8438,543.3906 C249.8438,542.9375 249.4531,542.5469 248.9844,542.5469 C248.7656,542.5469 248.5625,542.625 248.375,542.8125 C247.9219,543.2969 247.9219,543.2969 247.7344,543.3906 C247.3125,543.6563 246.625,543.7813 245.8594,543.7813 C243.8125,543.7813 242.5156,542.6875 242.5156,540.9844 L242.5156,539.8906 C242.5156,538.1094 243.7656,536.7969 245.5,536.7969 C246.0781,536.7969 246.6875,536.9531 247.1563,537.2031 C247.6406,537.4844 247.8125,537.7031 247.9063,538.1094 C247.9688,538.5156 248,538.6406 248.1406,538.7656 C248.2813,538.9063 248.5156,539.0156 248.7344,539.0156 C249,539.0156 249.2656,538.875 249.4375,538.6563 C249.5469,538.5 249.5781,538.3125 249.5781,537.8906 L249.5781,536.4688 C249.5781,536.0313 249.5625,535.9063 249.4688,535.75 C249.3125,535.4844 249.0313,535.3438 248.7344,535.3438 C248.4375,535.3438 248.2344,535.4375 248.0156,535.75 L247.8438,535.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="259.5" y="544.8467">Worker</text><line style="stroke:#181818;stroke-width:0.5;" x1="231.5" x2="314.5" y1="556" y2="556"/><line style="stroke:#181818;stroke-width:0.5;" x1="231.5" x2="314.5" y1="564" y2="564"/></g><!--class Thread--><g id="elem_Thread"><rect fill="#F1F1F1" height="48" id="Thread" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="82" x="291" y="633"/><ellipse cx="306" cy="649" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M308.3438,644.6719 C307.4063,644.2344 306.8125,644.0938 305.9375,644.0938 C303.3125,644.0938 301.3125,646.1719 301.3125,648.8906 L301.3125,650.0156 C301.3125,652.5938 303.4219,654.4844 306.3125,654.4844 C307.5313,654.4844 308.6875,654.1875 309.4375,653.6406 C310.0156,653.2344 310.3438,652.7813 310.3438,652.3906 C310.3438,651.9375 309.9531,651.5469 309.4844,651.5469 C309.2656,651.5469 309.0625,651.625 308.875,651.8125 C308.4219,652.2969 308.4219,652.2969 308.2344,652.3906 C307.8125,652.6563 307.125,652.7813 306.3594,652.7813 C304.3125,652.7813 303.0156,651.6875 303.0156,649.9844 L303.0156,648.8906 C303.0156,647.1094 304.2656,645.7969 306,645.7969 C306.5781,645.7969 307.1875,645.9531 307.6563,646.2031 C308.1406,646.4844 308.3125,646.7031 308.4063,647.1094 C308.4688,647.5156 308.5,647.6406 308.6406,647.7656 C308.7813,647.9063 309.0156,648.0156 309.2344,648.0156 C309.5,648.0156 309.7656,647.875 309.9375,647.6563 C310.0469,647.5 310.0781,647.3125 310.0781,646.8906 L310.0781,645.4688 C310.0781,645.0313 310.0625,644.9063 309.9688,644.75 C309.8125,644.4844 309.5313,644.3438 309.2344,644.3438 C308.9375,644.3438 308.7344,644.4375 308.5156,644.75 L308.3438,644.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="320" y="653.8467">Thread</text><line style="stroke:#181818;stroke-width:0.5;" x1="292" x2="372" y1="665" y2="665"/><line style="stroke:#181818;stroke-width:0.5;" x1="292" x2="372" y1="673" y2="673"/></g><!--class Runnable--><g id="elem_Runnable"><rect fill="#F1F1F1" height="48" id="Runnable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="99" x="48.5" y="633"/><ellipse cx="63.5" cy="649" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M65.8438,644.6719 C64.9063,644.2344 64.3125,644.0938 63.4375,644.0938 C60.8125,644.0938 58.8125,646.1719 58.8125,648.8906 L58.8125,650.0156 C58.8125,652.5938 60.9219,654.4844 63.8125,654.4844 C65.0313,654.4844 66.1875,654.1875 66.9375,653.6406 C67.5156,653.2344 67.8438,652.7813 67.8438,652.3906 C67.8438,651.9375 67.4531,651.5469 66.9844,651.5469 C66.7656,651.5469 66.5625,651.625 66.375,651.8125 C65.9219,652.2969 65.9219,652.2969 65.7344,652.3906 C65.3125,652.6563 64.625,652.7813 63.8594,652.7813 C61.8125,652.7813 60.5156,651.6875 60.5156,649.9844 L60.5156,648.8906 C60.5156,647.1094 61.7656,645.7969 63.5,645.7969 C64.0781,645.7969 64.6875,645.9531 65.1563,646.2031 C65.6406,646.4844 65.8125,646.7031 65.9063,647.1094 C65.9688,647.5156 66,647.6406 66.1406,647.7656 C66.2813,647.9063 66.5156,648.0156 66.7344,648.0156 C67,648.0156 67.2656,647.875 67.4375,647.6563 C67.5469,647.5 67.5781,647.3125 67.5781,646.8906 L67.5781,645.4688 C67.5781,645.0313 67.5625,644.9063 67.4688,644.75 C67.3125,644.4844 67.0313,644.3438 66.7344,644.3438 C66.4375,644.3438 66.2344,644.4375 66.0156,644.75 L65.8438,644.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="77.5" y="653.8467">Runnable</text><line style="stroke:#181818;stroke-width:0.5;" x1="49.5" x2="146.5" y1="665" y2="665"/><line style="stroke:#181818;stroke-width:0.5;" x1="49.5" x2="146.5" y1="673" y2="673"/></g><g id="elem_GMN21"><path d="M182.5,644.5 L182.5,653 L147.629,657 L182.5,661 L182.5,669.6328 A0,0 0 0 0 182.5,669.6328 L255.5,669.6328 A0,0 0 0 0 255.5,669.6328 L255.5,654.5 L245.5,644.5 L182.5,644.5 A0,0 0 0 0 182.5,644.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M245.5,644.5 L245.5,654.5 L255.5,654.5 L245.5,644.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="188.5" y="661.5669">&#29992;&#25143;&#20219;&#21153;</text></g><!--reverse link Executor to ExecutorService--><g id="link_Executor_ExecutorService"><path codeLine="9" d="M145,89.307 C145,107.14 145,111.849 145,131.853 " fill="none" id="Executor-backto-ExecutorService" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="145,71.307,139,89.307,151,89.307,145,71.307" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ExecutorService to AbstractExecutorService--><g id="link_ExecutorService_AbstractExecutorService"><path codeLine="10" d="M145,247.347 C145,267.909 145,272.999 145,289.703 " fill="none" id="ExecutorService-backto-AbstractExecutorService" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="145,229.347,139,247.347,151,247.347,145,229.347" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link AbstractExecutorService to ThreadPoolExecutor--><g id="link_AbstractExecutorService_ThreadPoolExecutor"><path codeLine="11" d="M186.5841,349.7617 C208.0541,367.7097 223.824,380.892 245.28,398.828 " fill="none" id="AbstractExecutorService-backto-ThreadPoolExecutor" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="172.774,338.217,182.7359,354.3651,190.4324,345.1583,172.774,338.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ThreadPoolExecutor to Executors--><g id="link_ThreadPoolExecutor_Executors"><path codeLine="12" d="M241.5543,451.0477 C215.9883,473.0387 182.303,502.012 156.777,523.968 " fill="none" id="ThreadPoolExecutor-backto-Executors" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="246.103,447.135,236.6714,449.9715,242.3124,450.3956,241.8883,456.0365,246.103,447.135" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="212" y="490.0669">new</text></g><!--reverse link ForkJoinPool to Executors--><g id="link_ForkJoinPool_Executors"><path codeLine="13" d="M98.6091,452.8271 C105.9392,474.8181 115.004,502.012 122.323,523.968 " fill="none" id="ForkJoinPool-backto-Executors" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="96.7118,447.135,95.763,456.9381,98.2929,451.8784,103.3525,454.4083,96.7118,447.135" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="113" y="490.0669">new</text></g><!--reverse link AbstractExecutorService to ForkJoinPool--><g id="link_AbstractExecutorService_ForkJoinPool"><path codeLine="14" d="M124.5027,354.165 C115.1097,372.113 110.515,380.892 101.1275,398.828 " fill="none" id="AbstractExecutorService-backto-ForkJoinPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="132.849,338.217,119.1867,351.3829,129.8187,356.9471,132.849,338.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Worker to Thread--><g id="link_Worker_Thread"><path codeLine="15" d="M291.5961,582.7255 C301.4921,600.6734 309.333,614.8918 319.223,632.8279 " fill="none" id="Worker-backto-Thread" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="285.802,572.217,285.1962,579.4026,291.5961,582.7255,292.2019,575.5399,285.802,572.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Worker to Runnable--><g id="link_Worker_Runnable"><path codeLine="16" d="M224.7901,578.4768 C195.4361,596.4247 165.233,614.8918 135.898,632.8279 " fill="none" id="Worker-backto-Runnable" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="235.028,572.217,227.8224,571.9342,224.7901,578.4768,231.9956,578.7595,235.028,572.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ThreadPoolExecutor to Worker--><g id="link_ThreadPoolExecutor_Worker"><path codeLine="18" d="M273,459.135 C273,481.126 273,502.012 273,523.968 " fill="none" id="ThreadPoolExecutor-backto-Worker" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="273,447.135,269,453.135,273,459.135,277,453.135,273,447.135" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="264.025" y="466.9291">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="26" x="243.6688" y="512.9718">0~n</text></g><!--SRC=[VP0zJiD048NxFSN8bOEm1IsoZ2X8WH12W4IzjYTubNW7xSx6IFpKY9eBq743Ybo7dsl4iR4JEJ_RpPjltdjQfHdDIAO8fm-OEYO3ZmAgDoML0TOQ-bTEQvbC458g2gcpWNWMQkto6irKLNDZC7Ji34R7CLYN58gN9YpjU1_2C1miaspkEADI-urshYn7xK7SRI-ez1VPNTVeAGZw-QBVfuPE4ij6fjo7j-ZDqKrkK6QNH9DstPbR2Dnz46z0u0WqbclWaCpuZ9HUeF_8pknLNjnM0nhOwpgjAkq_2KsCODHTpa2ZJgx2_ju_Vr-_lcUpdxSFiQ6nT-ZLJjx1Y_QWiPu3]--></g></svg>

<p>线程池分了两个大类：ThreadPoolExecutor是普通线程池，ForkJoinPool可用理解为是一个轻量级任务的线程池。</p>
<h2 id="线程池线程数量管理"><a href="#线程池线程数量管理" class="headerlink" title="线程池线程数量管理"></a>线程池线程数量管理</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">ThreadPoolExecutor</span><span class="params">(<span class="type">int</span> corePoolSize,</span></span><br><span class="line"><span class="params">                          <span class="type">int</span> maximumPoolSize,</span></span><br><span class="line"><span class="params">                          <span class="type">long</span> keepAliveTime,</span></span><br><span class="line"><span class="params">                          TimeUnit unit,</span></span><br><span class="line"><span class="params">                          BlockingQueue&lt;Runnable&gt; workQueue,</span></span><br><span class="line"><span class="params">                          ThreadFactory threadFactory,</span></span><br><span class="line"><span class="params">                          RejectedExecutionHandler handler)</span></span><br></pre></td></tr></table></figure>

<ol>
<li>corePoolSize核心线程数: 当线程池的线程数小于corePoolSize时，会创建一个新的线程来执行新任务，即使有线程处于闲置状态。</li>
<li>maximumPoolSize最大线程数：当线程数已经大于corePoolSize，新任务会被优先添加到队列中等待执行。如果任务队列满了导致添加失败，并且线程数小于maximumPoolSize，就会创建新的线程来执行新任务。大于核心线程数的这些线程算是“借”来的，当借来的这些线程的idle时间超过keepAliveTime，就会被回收。回收逻辑在runWorker函数中。</li>
<li>如果线程队列满了，线程数也已经大于maximumPoolSize，就会回调<code>RejectedExecutionHandler.rejectedExecution</code>让调用中来处理任务。</li>
</ol>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="228px" preserveAspectRatio="none" style="width:580px;height:228px;background:#FFFFFF;" version="1.1" viewBox="0 0 580 228" width="580px" zoomAndPan="magnify"><defs/><g><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="80" x="237" y="11"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="60" x="247" y="32.1387">&#28155;&#21152;&#26032;&#20219;&#21153;</text><polygon fill="#F1F1F1" points="48,64.9688,114,64.9688,126,76.9688,114,88.9688,48,88.9688,36,76.9688,48,64.9688" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="14" x="85" y="99.1792">no</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="48" y="80.7769">&#26680;&#24515;&#32447;&#31243;&#24050;&#28385;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="140" x="11" y="121.7734"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="120" x="21" y="142.9121">&#21019;&#24314;&#26680;&#24515;&#32447;&#31243;&#25191;&#34892;&#20219;&#21153;</text><polygon fill="#F1F1F1" points="194,64.9688,260,64.9688,272,76.9688,260,88.9688,194,88.9688,182,76.9688,194,64.9688" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="14" x="231" y="99.1792">no</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="194" y="80.7769">&#20219;&#21153;&#38431;&#21015;&#24050;&#28385;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="161" y="74.3745">yes</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="128" x="163" y="121.7734"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="108" x="173" y="142.9121">&#28155;&#21152;&#21040;&#38431;&#21015;&#31561;&#24453;&#25191;&#34892;</text><polygon fill="#F1F1F1" points="357.5,64.9688,434.5,64.9688,446.5,76.9688,434.5,88.9688,357.5,88.9688,345.5,76.9688,357.5,64.9688" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="14" x="400" y="99.1792">no</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="357.5" y="80.7769">&#36798;&#21040;&#26368;&#22823;&#32447;&#31243;&#25968;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="324.5" y="74.3745">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="446.5" y="74.3745">yes</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="128" x="332" y="121.7734"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="108" x="342" y="142.9121">&#21019;&#26032;&#26032;&#32447;&#31243;&#25191;&#34892;&#20219;&#21153;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="92" x="477.5" y="118.3711"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="72" x="487.5" y="139.5098">&#25191;&#34892;&#25298;&#32477;&#31574;&#30053;</text><ellipse cx="277" cy="206.7422" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="277" cy="206.7422" fill="#222222" rx="6" ry="6" style="stroke:#222222;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="81" x2="81" y1="88.9688" y2="121.7734"/><polygon fill="#181818" points="77,111.7734,81,121.7734,85,111.7734,81,115.7734" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="81" x2="81" y1="155.7422" y2="175.7422"/><polygon fill="#181818" points="77,165.7422,81,175.7422,85,165.7422,81,169.7422" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="227" x2="227" y1="88.9688" y2="121.7734"/><polygon fill="#181818" points="223,111.7734,227,121.7734,231,111.7734,227,115.7734" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="227" x2="227" y1="155.7422" y2="175.7422"/><polygon fill="#181818" points="223,165.7422,227,175.7422,231,165.7422,227,169.7422" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="396" x2="396" y1="88.9688" y2="121.7734"/><polygon fill="#181818" points="392,111.7734,396,121.7734,400,111.7734,396,115.7734" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="396" x2="396" y1="155.7422" y2="175.7422"/><polygon fill="#181818" points="392,165.7422,396,175.7422,400,165.7422,396,169.7422" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="126" x2="182" y1="76.9688" y2="76.9688"/><polygon fill="#181818" points="172,72.9688,182,76.9688,172,80.9688,176,76.9688" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="272" x2="345.5" y1="76.9688" y2="76.9688"/><polygon fill="#181818" points="335.5,72.9688,345.5,76.9688,335.5,80.9688,339.5,76.9688" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="277" x2="277" y1="44.9688" y2="49.9688"/><line style="stroke:#181818;stroke-width:1.0;" x1="277" x2="81" y1="49.9688" y2="49.9688"/><line style="stroke:#181818;stroke-width:1.0;" x1="81" x2="81" y1="49.9688" y2="64.9688"/><polygon fill="#181818" points="77,54.9688,81,64.9688,85,54.9688,81,58.9688" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="446.5" x2="523.5" y1="76.9688" y2="76.9688"/><line style="stroke:#181818;stroke-width:1.0;" x1="523.5" x2="523.5" y1="76.9688" y2="118.3711"/><polygon fill="#181818" points="519.5,108.3711,523.5,118.3711,527.5,108.3711,523.5,112.3711" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="523.5" x2="523.5" y1="152.3398" y2="175.7422"/><polygon fill="#181818" points="519.5,165.7422,523.5,175.7422,527.5,165.7422,523.5,169.7422" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="81" x2="523.5" y1="175.7422" y2="175.7422"/><line style="stroke:#181818;stroke-width:1.0;" x1="277" x2="277" y1="175.7422" y2="195.7422"/><polygon fill="#181818" points="273,185.7422,277,195.7422,281,185.7422,277,189.7422" style="stroke:#181818;stroke-width:1.0;"/><!--SRC=[itgsVVVJhWNFfcruiXl8M6ZDbPcceF5imOwd-vkVxzh_V4Ntq-sRdkrUgAbGaf6Qfw2Hbw_9fQ1WzRHZzjFTkv2LFUjS_c9X3ymGZShKOas5r9pYL91n4D6NC-O_xPYER1pCD8WRddPiW2XvlhRpwRvMY87eHhtOjm-exjcSXgTBbaCjdhe1rJIWsu3U0I9i3WEPem0s4cmnMEvPzwJdk-S-Nplj-TIbG1LvAPbfNCKb-GK0]--></g></svg>

<p><strong>通过一段代码测试一下上述线程数量的限制：</strong></p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> server: ExecutorService = ThreadPoolExecutor(</span><br><span class="line">    <span class="number">2</span>, <span class="comment">//corePoolSize</span></span><br><span class="line">    <span class="number">10</span>, <span class="comment">//maximumPoolSize</span></span><br><span class="line">    <span class="number">5</span>, TimeUnit.MINUTES,  <span class="comment">//keepAliveTime</span></span><br><span class="line">    LinkedBlockingDeque(<span class="number">5</span>)) <span class="comment">//任务队列，最大容量是5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">0.</span><span class="number">.20</span>) &#123;</span><br><span class="line">    server.execute &#123; </span><br><span class="line">        println(<span class="string">&quot;task <span class="variable">$i</span> run&quot;</span>)</span><br><span class="line">        Thread.sleep(<span class="built_in">Long</span>.MAX_VALUE)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上面这段代码的输出为：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">task 0 run</span><br><span class="line">task 1 run</span><br><span class="line">task 7 run</span><br><span class="line">task 8 run</span><br><span class="line">task 9 run</span><br><span class="line">task 10 run</span><br><span class="line">task 11 run</span><br><span class="line">task 12 run</span><br><span class="line">task 13 run</span><br><span class="line">task 14 run</span><br><span class="line">Exception in thread &quot;main&quot; java.util.concurrent.RejectedExecutionException: Task MainKt$$Lambda$16/0x0000017ddf003400@70177ecd rejected from java.util.concurrent.ThreadPoolExecutor@1e80bfe8[Running, pool size = 10, active threads = 10, queued tasks = 5, completed tasks = 0]</span><br><span class="line">	at java.base/java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2065)</span><br><span class="line">	at java.base/java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:833)</span><br><span class="line">	at java.base/java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1365)</span><br><span class="line">	at MainKt.main(Main.kt:20)</span><br></pre></td></tr></table></figure>

<p>从程序的输出可以看出，0、1是通过核心线程来执行，2&#126;5号任务被添加到了队列中等待执行。因为任务队列满了，所以7~14是通过新建线程来执行（线程数没有超过maximumPoolSize）。0、1、7&#126;14共计10个任务，达到了maximumPoolSize设置的最大线程数，所以当添加15号线程时报出了异常。</p>
<h2 id="提交新任务"><a href="#提交新任务" class="headerlink" title="提交新任务"></a>提交新任务</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ThreadPoolExecutor.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">execute</span><span class="params">(Runnable command)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (command == <span class="literal">null</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NullPointerException</span>();</span><br><span class="line">    <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> ctl.get();</span><br><span class="line">    <span class="comment">// 1. 如果当前线程池线程数小于corePoolSize，就创建一个新的线程来执行任务</span></span><br><span class="line">    <span class="keyword">if</span> (workerCountOf(c) &lt; corePoolSize) &#123;</span><br><span class="line">        <span class="keyword">if</span> (addWorker(command, <span class="literal">true</span>))</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        c = ctl.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 线程数已经大于corePoolSize，并且线程池当前是running状态，就把任务添加到队列中等待执行</span></span><br><span class="line">    <span class="keyword">if</span> (isRunning(c) &amp;&amp; workQueue.offer(command)) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">recheck</span> <span class="operator">=</span> ctl.get();</span><br><span class="line">        <span class="keyword">if</span> (! isRunning(recheck) &amp;&amp; remove(command))</span><br><span class="line">            reject(command);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (workerCountOf(recheck) == <span class="number">0</span>)</span><br><span class="line">            addWorker(<span class="literal">null</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 3. 任务队列已满，并且线程数小于maximumPoolSize，则创建新的线程来执行</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (!addWorker(command, <span class="literal">false</span>))</span><br><span class="line">        reject(command);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">addWorker</span><span class="params">(Runnable firstTask, <span class="type">boolean</span> core)</span> &#123;</span><br><span class="line">    retry:</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> ctl.get();;) &#123;</span><br><span class="line">        <span class="comment">// Check if queue empty only if necessary.</span></span><br><span class="line">        <span class="keyword">if</span> (runStateAtLeast(c, SHUTDOWN) &amp;&amp; </span><br><span class="line">            (runStateAtLeast(c, STOP) || firstTask != <span class="literal">null</span> || workQueue.isEmpty()))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            <span class="comment">//a) 添加核心线程：如果线程数量&gt;=corePoolSize返回失败;</span></span><br><span class="line">            <span class="comment">//b) 队列已满，添加非核心新线程，如果线程数量&gt;=maximumPoolSize返回失败</span></span><br><span class="line">            <span class="keyword">if</span> (workerCountOf(c) &gt;= ((core ? corePoolSize : maximumPoolSize) &amp; COUNT_MASK))</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//线程数+1并返回外层的for循环</span></span><br><span class="line">            <span class="keyword">if</span> (compareAndIncrementWorkerCount(c))</span><br><span class="line">                <span class="keyword">break</span> retry;</span><br><span class="line">            c = ctl.get();  <span class="comment">// Re-read ctl</span></span><br><span class="line">            <span class="keyword">if</span> (runStateAtLeast(c, SHUTDOWN))</span><br><span class="line">                <span class="keyword">continue</span> retry;</span><br><span class="line">            <span class="comment">// else CAS failed due to workerCount change; retry inner loop</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">workerStarted</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">workerAdded</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="type">Worker</span> <span class="variable">w</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 创建新线程，Worker构造函数中会创新新的Thread</span></span><br><span class="line">        w = <span class="keyword">new</span> <span class="title class_">Worker</span>(firstTask);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Thread</span> <span class="variable">t</span> <span class="operator">=</span> w.thread;</span><br><span class="line">        <span class="keyword">if</span> (t != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">ReentrantLock</span> <span class="variable">mainLock</span> <span class="operator">=</span> <span class="built_in">this</span>.mainLock;</span><br><span class="line">            mainLock.lock();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// Recheck while holding lock.</span></span><br><span class="line">                <span class="comment">// Back out on ThreadFactory failure or if</span></span><br><span class="line">                <span class="comment">// shut down before lock acquired.</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> ctl.get();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (isRunning(c) ||</span><br><span class="line">                    (runStateLessThan(c, STOP) &amp;&amp; firstTask == <span class="literal">null</span>)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (t.getState() != Thread.State.NEW)</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalThreadStateException</span>();</span><br><span class="line">                    workers.add(w);</span><br><span class="line">                    workerAdded = <span class="literal">true</span>;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">s</span> <span class="operator">=</span> workers.size();</span><br><span class="line">                    <span class="keyword">if</span> (s &gt; largestPoolSize)</span><br><span class="line">                        largestPoolSize = s;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                mainLock.unlock();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (workerAdded) &#123;</span><br><span class="line">                t.start();</span><br><span class="line">                workerStarted = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (! workerStarted)</span><br><span class="line">            addWorkerFailed(w);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> workerStarted;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="执行任务"><a href="#执行任务" class="headerlink" title="执行任务"></a>执行任务</h2><p>线程池中的每个线程对应一个Worker，Worker的首次任务执行完成后，不会立马退出，而是通过getTask()在任务队列中阻塞获取任务，当获取到任务队列中的任务后，就继续执行。如果线程池没有被退出，并且线程数已经超过核心线程数，getTask()中就会以超时的方式阻塞获取任务，超时时间为keepAliveTime，如果发生timeout（keepAliveTime时间后，任务队列中也没有新任务），就会返回null，此时runWorker函数就会走到<code>processWorkerExit</code>的逻辑来回收“借”来的线程，<code>processWorkerExit</code>执行完成后线程就退出了。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">Worker</span></span><br><span class="line">    <span class="keyword">extends</span> <span class="title class_">AbstractQueuedSynchronizer</span></span><br><span class="line">    <span class="keyword">implements</span> <span class="title class_">Runnable</span></span><br><span class="line">&#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        runWorker(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">    <span class="comment">//反复从队列中获取任务并执行</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">runWorker</span><span class="params">(Worker w)</span> &#123;</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">wt</span> <span class="operator">=</span> Thread.currentThread();</span><br><span class="line">        <span class="type">Runnable</span> <span class="variable">task</span> <span class="operator">=</span> w.firstTask;</span><br><span class="line">        w.firstTask = <span class="literal">null</span>;</span><br><span class="line">        w.unlock(); <span class="comment">// allow interrupts</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">completedAbruptly</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 优先执行firstTask，firstTask执行完成后会调用getTask()从队列获取任务来执行</span></span><br><span class="line">            <span class="comment">// 如果getTask()返回null，线程会退出，系统就会回收这个线程</span></span><br><span class="line">            <span class="keyword">while</span> (task != <span class="literal">null</span> || (task = getTask()) != <span class="literal">null</span>) &#123;</span><br><span class="line">                w.lock();</span><br><span class="line">                <span class="comment">// If pool is stopping, ensure thread is interrupted;</span></span><br><span class="line">                <span class="comment">// if not, ensure thread is not interrupted.  This</span></span><br><span class="line">                <span class="comment">// requires a recheck in second case to deal with</span></span><br><span class="line">                <span class="comment">// shutdownNow race while clearing interrupt</span></span><br><span class="line">                <span class="keyword">if</span> ((runStateAtLeast(ctl.get(), STOP) ||</span><br><span class="line">                     (Thread.interrupted() &amp;&amp;</span><br><span class="line">                      runStateAtLeast(ctl.get(), STOP))) &amp;&amp;</span><br><span class="line">                    !wt.isInterrupted())</span><br><span class="line">                    wt.interrupt();</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    beforeExecute(wt, task);</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        task.run(); <span class="comment">//执行任务</span></span><br><span class="line">                        afterExecute(task, <span class="literal">null</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Throwable ex) &#123;</span><br><span class="line">                        afterExecute(task, ex);</span><br><span class="line">                        <span class="keyword">throw</span> ex;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    task = <span class="literal">null</span>;</span><br><span class="line">                    w.completedTasks++;</span><br><span class="line">                    w.unlock();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            completedAbruptly = <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            processWorkerExit(w, completedAbruptly);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Runnable <span class="title function_">getTask</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">timedOut</span> <span class="operator">=</span> <span class="literal">false</span>; <span class="comment">// Did the last poll() time out?</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> ctl.get();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Check if queue empty only if necessary.</span></span><br><span class="line">            <span class="keyword">if</span> (runStateAtLeast(c, SHUTDOWN)</span><br><span class="line">                &amp;&amp; (runStateAtLeast(c, STOP) || workQueue.isEmpty())) &#123;</span><br><span class="line">                decrementWorkerCount();</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">wc</span> <span class="operator">=</span> workerCountOf(c);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Are workers subject to culling?</span></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">timed</span> <span class="operator">=</span> allowCoreThreadTimeOut || wc &gt; corePoolSize;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//线程数大于maximumPoolSize或者线程的闲置时间超过了keepAliveTime就返回null退出线程</span></span><br><span class="line">            <span class="keyword">if</span> ((wc &gt; maximumPoolSize || (timed &amp;&amp; timedOut))</span><br><span class="line">                &amp;&amp; (wc &gt; <span class="number">1</span> || workQueue.isEmpty())) &#123;</span><br><span class="line">                <span class="keyword">if</span> (compareAndDecrementWorkerCount(c))</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//从队列中获取任务</span></span><br><span class="line">                <span class="type">Runnable</span> <span class="variable">r</span> <span class="operator">=</span> timed ?</span><br><span class="line">                    workQueue.poll(keepAliveTime, TimeUnit.NANOSECONDS) :</span><br><span class="line">                    workQueue.take();</span><br><span class="line">                <span class="keyword">if</span> (r != <span class="literal">null</span>)</span><br><span class="line">                    <span class="keyword">return</span> r;</span><br><span class="line">                timedOut = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException retry) &#123;</span><br><span class="line">                timedOut = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="线程池状态"><a href="#线程池状态" class="headerlink" title="线程池状态"></a>线程池状态</h2><ul>
<li>RUNNING: 接收新任务，并且处理队列中的任务；</li>
<li>SHUTDOWN: 不接受新任务，但会继续处理队列中的任务；</li>
<li>STOP: 不接受新任务，不处理队列中的任务，并且会终端正在执行的任务；</li>
<li>TIDYING: 所有任务都已经终止，线程数是0，线程转换到TIDYING状态会运行terminated()方法；</li>
<li>TERMINATED: terminated()运行结束；</li>
</ul>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: %0 Pages: 1 -->
<svg width="234pt" height="385pt"
 viewBox="0.00 0.00 233.59 384.80" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 380.8)">
<title>%0</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-380.8 229.5947,-380.8 229.5947,4 -4,4"/>
<!-- RUNNING -->
<g id="node1" class="node">
<title>RUNNING</title>
<polygon fill="none" stroke="#000000" points="146.5831,-376.8 84.3969,-376.8 84.3969,-340.8 146.5831,-340.8 146.5831,-376.8"/>
<text text-anchor="middle" x="115.49" y="-355.8" font-family="Times,serif" font-size="10.00" fill="#000000">RUNNING</text>
</g>
<!-- SHUTDOWN -->
<g id="node2" class="node">
<title>SHUTDOWN</title>
<polygon fill="none" stroke="#000000" points="112.1923,-291.6 38.7877,-291.6 38.7877,-255.6 112.1923,-255.6 112.1923,-291.6"/>
<text text-anchor="middle" x="75.49" y="-270.6" font-family="Times,serif" font-size="10.00" fill="#000000">SHUTDOWN</text>
</g>
<!-- RUNNING&#45;&gt;SHUTDOWN -->
<g id="edge1" class="edge">
<title>RUNNING&#45;&gt;SHUTDOWN</title>
<path fill="none" stroke="#000000" d="M106.3249,-340.5449C103.5206,-334.878 100.4542,-328.5979 97.7143,-322.8 94.4105,-315.8089 90.928,-308.2141 87.7251,-301.1307"/>
<polygon fill="#000000" stroke="#000000" points="90.8654,-299.58 83.5738,-291.8934 84.4805,-302.4494 90.8654,-299.58"/>
<text text-anchor="middle" x="119.8778" y="-312.9" font-family="Times,serif" font-size="11.00" fill="#000000">shutdown</text>
</g>
<!-- STOP -->
<g id="node3" class="node">
<title>STOP</title>
<polygon fill="none" stroke="#000000" points="181.49,-206.4 127.49,-206.4 127.49,-170.4 181.49,-170.4 181.49,-206.4"/>
<text text-anchor="middle" x="154.49" y="-185.4" font-family="Times,serif" font-size="10.00" fill="#000000">STOP</text>
</g>
<!-- RUNNING&#45;&gt;STOP -->
<g id="edge2" class="edge">
<title>RUNNING&#45;&gt;STOP</title>
<path fill="none" stroke="#000000" d="M130.6484,-340.7479C134.4778,-335.2934 138.16,-329.0777 140.49,-322.8 153.4614,-287.8508 155.7236,-244.5048 155.5737,-216.6522"/>
<polygon fill="#000000" stroke="#000000" points="159.0697,-216.3766 155.4059,-206.4354 152.0707,-216.4916 159.0697,-216.3766"/>
<text text-anchor="middle" x="186.5687" y="-270.3" font-family="Times,serif" font-size="11.00" fill="#000000">shutdownNow</text>
</g>
<!-- SHUTDOWN&#45;&gt;STOP -->
<g id="edge3" class="edge">
<title>SHUTDOWN&#45;&gt;STOP</title>
<path fill="none" stroke="#000000" d="M71.3705,-255.3975C70.1543,-245.4742 70.4503,-233.4147 76.3325,-224.4 77.0064,-223.3672 97.7904,-213.8169 117.7537,-204.8132"/>
<polygon fill="#000000" stroke="#000000" points="119.4092,-207.9064 127.0936,-200.6126 116.5379,-201.5224 119.4092,-207.9064"/>
<text text-anchor="middle" x="108.5687" y="-227.7" font-family="Times,serif" font-size="11.00" fill="#000000">shutdownNow</text>
</g>
<!-- TIDYING -->
<g id="node4" class="node">
<title>TIDYING</title>
<polygon fill="none" stroke="#000000" points="69.1341,-121.2 11.8459,-121.2 11.8459,-85.2 69.1341,-85.2 69.1341,-121.2"/>
<text text-anchor="middle" x="40.49" y="-100.2" font-family="Times,serif" font-size="10.00" fill="#000000">TIDYING</text>
</g>
<!-- SHUTDOWN&#45;&gt;TIDYING -->
<g id="edge4" class="edge">
<title>SHUTDOWN&#45;&gt;TIDYING</title>
<path fill="none" stroke="#000000" d="M60.4198,-255.5389C50.7464,-242.7186 39.0587,-224.614 33.8758,-206.4 26.8559,-181.7305 29.7309,-152.4555 33.6431,-131.3981"/>
<polygon fill="#000000" stroke="#000000" points="37.0946,-131.9896 35.6722,-121.4907 30.2369,-130.5851 37.0946,-131.9896"/>
<text text-anchor="middle" x="76.7971" y="-191.7" font-family="Times,serif" font-size="11.00" fill="#000000">When both queue </text>
<text text-anchor="middle" x="76.7971" y="-178.5" font-family="Times,serif" font-size="11.00" fill="#000000">and pool are empty</text>
</g>
<!-- STOP&#45;&gt;TIDYING -->
<g id="edge5" class="edge">
<title>STOP&#45;&gt;TIDYING</title>
<path fill="none" stroke="#000000" d="M130.3135,-170.3313C113.5368,-157.7928 91.0052,-140.9534 72.7058,-127.277"/>
<polygon fill="#000000" stroke="#000000" points="74.737,-124.4257 64.6316,-121.2427 70.5465,-130.0328 74.737,-124.4257"/>
<text text-anchor="middle" x="148.9421" y="-142.5" font-family="Times,serif" font-size="11.00" fill="#000000">When pool is empty</text>
</g>
<!-- TERMINATED -->
<g id="node5" class="node">
<title>TERMINATED</title>
<polygon fill="none" stroke="#000000" points="80.97,-36 .01,-36 .01,0 80.97,0 80.97,-36"/>
<text text-anchor="middle" x="40.49" y="-15" font-family="Times,serif" font-size="10.00" fill="#000000">TERMINATED</text>
</g>
<!-- TIDYING&#45;&gt;TERMINATED -->
<g id="edge6" class="edge">
<title>TIDYING&#45;&gt;TERMINATED</title>
<path fill="none" stroke="#000000" d="M40.49,-85.1313C40.49,-73.8354 40.49,-59.0487 40.49,-46.2289"/>
<polygon fill="#000000" stroke="#000000" points="43.9901,-46.0426 40.49,-36.0427 36.9901,-46.0427 43.9901,-46.0426"/>
<text text-anchor="middle" x="133.0424" y="-57.3" font-family="Times,serif" font-size="11.00" fill="#000000">When terminated() method has completed</text>
</g>
</g>
</svg>


<p>线程池状态和线程数使用同一个int变量来保存，一个int变量包含32个bit，高3为用于存放状态。RUNNING=111，SHUTDOWN=000，STOP=001，TIDYING=010，TERMINATED=011。</p>
<h2 id="线程池排队策略"><a href="#线程池排队策略" class="headerlink" title="线程池排队策略"></a>线程池排队策略</h2><p>线程池任务的排队常用的有3中策略。</p>
<p><strong>直接传递</strong>：采用同步队列<code>SynchronousQueue</code>来执行任务排队策略。每次任务入队都要等待另一个线程拿走该任务。当任务要入队时，如果没有线程立马来消费，入队就会失败<small><em>(SynchronousQueue.offer默认超时时间为0)</em></small>，就会新建一个线程来执行任务。直接传递策略通常要求maximumPoolSize设置为无限大来避免任务被拒绝。否则，当线程数达到上限时，新任务将会被拒绝。</p>
<ul>
<li><code>Executors#newCachedThreadPool()</code>就是使用这种策略，核心线程数为0，最大线程数是Integer.MAX_VALUE，线程keepAliveTime是1分钟。</li>
</ul>
<p><strong>无界队列</strong>：比如使用不设置最大容量的<code>LinkedBlockingQueue</code>。当核心线程已满时，新任务会在队列中等待。因此创建的线程数不会超过corePoolSize<small>（任务队列是无限大，maximumPoolSize不会起作用）</small>。如果任务经常会被阻塞，比如IO任务，将会导致耗尽系统内存。</p>
<ul>
<li><code>Executors#newFixedThreadPool(int nThreads)</code>就是使用的这种策略，最大线程数和核心线程数使用相同的值nThreads；</li>
<li><code>Executors#newSingleThreadExecutor()</code>也是这种策略，相当于nThreads=1；</li>
</ul>
<p><strong>有界队列</strong>：比如<code>ArrayBlockingQueue</code>。配合有限制的maximumPoolSize，有界队列可以防止资源耗尽的情况发生。但是队列的容量和maximumPoolSize两者必须做权衡：使用大容量队列和一个小的maximumPoolSize，可以减少对cpu、系统资源、上下文切换等资源的消耗，但是会明显降低吞吐量；使用小队列和大容量线程池，时刻保持cpu的忙碌状态，但是可能会遇到比较大的调度压力，也会降低吞吐量。</p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://www.cnblogs.com/zxporz/p/10940251.html">ThreadPoolExecutor线程池的keepAliveTime</a><br><a href="https://www.cnblogs.com/qingquanzi/p/9018627.html">如何优雅的关闭Java线程池</a><br><a href="https://blog.csdn.net/qq_26881739/article/details/80983495">线程池的三种队列区别：SynchronousQueue、LinkedBlockingQueue 和ArrayBlockingQueue</a><br><a href="https://zhuanlan.zhihu.com/p/350067478">太完整了！这是我见过最详细的线程池讲解了</a><br><a href="https://www.gangofcoders.net/solution/why-is-creating-a-thread-said-to-be-expensive/">Why is creating a Thread said to be expensive?</a></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell 变量全解</title>
    <url>/posts/36017.html</url>
    <content><![CDATA[<h2 id="变量介绍"><a href="#变量介绍" class="headerlink" title="变量介绍"></a>变量介绍</h2><p>shell变量是一种很“弱”的变量，默认情况下，一个变量保存一个串，shell不关心这个串是什么含义。所以若要进行数学运算，必须使用一些命令例如let、declare、expr、双括号等。</p>
<p>shell变量可分为两类：局部变量和环境变量。局部变量只在创建它们的shell中可用。而环境变量则可以在创建它们的shell及其派生出来的任意子进程中使用。有些变量是用户创建的，其他的则是专用shell变量。</p>
<p>变量名必须以字母或下划线字符开头。其余的字符可以是字母、数字(0~9)或下划线字符。任何其他的字符都标志着变量名的终止。名字是大小写敏感的。</p>
<p>给变量赋值时，等号周围不能有任何空白符。为了给变量赋空值，可以在等号后跟一个换行符。</p>
<p>用set命令可以查看所有的变量，unset var命令可以清除变量var，var相当于没有定义过。readonly var可以把var变为只读变量，定义之后不能对var进行任何更改。</p>
<p>shell变量常见引用方式如下：</p>
<!-- <style>
.tablelines table, .tablelines td, .tablelines th {
        border: 1px solid #C0C0C0;
        padding: 0.25em;
        }
</style> -->

<table>
<thead>
<tr>
<th>引用格式</th>
<th>含义介绍</th>
</tr>
</thead>
<tbody><tr>
<td>${var}</td>
<td>变量值。也可以写成$var，但是不推荐。</td>
</tr>
<tr>
<td>${&#35;var}</td>
<td>变量长度。例如var=&quot;HelloWorld&quot;，则${&#35;var}返回值为10。 注意，引号””是界定符号，而不是变量中的字符。</td>
</tr>
<tr>
<td>${var:start_index}</td>
<td>返回从start_index开始一直到字符串结尾。<br/>start_index为0表示从第一个字符开始，<br/>start_index为0-x表示从倒数第x个字符开始。<br/>例如var=&quot;0123456789&quot;。则${var:0}返回&quot;0123456789&quot;，${var:6}返回&quot;6789&quot;，${var:0-3}返回”789”。</td>
</tr>
<tr>
<td>${var:start_index:length}</td>
<td>返回从start_index开始的length个字符，length可以为负数。var=&quot;0123456789&quot;，${var:2:5}返回&quot;23456&quot;，${var:5:-2}返回&quot;567&quot;（-2表示剩余2个字符不要），${var:0-3:-1}返回&quot;78&quot;。</td>
</tr>
<tr>
<td>${var&#35;string}</td>
<td>返回从左边删除string后的字符串，尽量短的去匹配。例如var=&quot;https&#xfeff;://127.0.0.1/index.php&quot;， ${var&#35;*/}返回&quot;/127.0.0.1/index.php&quot;</td>
</tr>
<tr>
<td>${var&#35;&#35;string}</td>
<td>返回从左边删除string后的字符串，尽量长的去匹配。例如var=&quot;https&#xfeff;://127.0.0.1/index.php&quot;，${var&#35;&#35;*/}返回&quot;index.php&quot;</td>
</tr>
<tr>
<td>${var%string}</td>
<td>返回从右边删除string后的字符串，尽量短的去匹配。例如var=&quot;https&#xfeff;://127.0.0.1/index.php&quot;，${var%/*}返回&quot;https&#xfeff;://127.0.0.1&quot;</td>
</tr>
<tr>
<td>${var%string}</td>
<td>返回从右边删除string后的字符串，尽量长的去匹配。例如var=&quot;https&#xfeff;://127.0.0.1/index.php&quot;，${var%/*}返回&quot;https:&quot;</td>
</tr>
<tr>
<td>${var:-newstring}</td>
<td>如果var为空，或者未定义，则返回newstring；否则返回原值。</td>
</tr>
<tr>
<td>${var:=newstring}</td>
<td>如果var为空，或者未定义，则返回newstring，并把newstring赋值给var；否则返回原值。</td>
</tr>
<tr>
<td>${var:+newstring}</td>
<td>如果var不为空，则返回newstring；如果var为空，则返回空值。</td>
</tr>
<tr>
<td>${var:?newstring}</td>
<td>如果var为空或者未定义，则将newstring写入标准错误流，本语句失败；如果var不为空，则返回原值。</td>
</tr>
<tr>
<td>${var/substring/newstring}</td>
<td>返回var中第一个substring被替换成newstring的字符串。例如var=&quot;2345432&quot;, ${var/3/Hello}返回&quot;2Hello45432&quot;</td>
</tr>
<tr>
<td>${var//substring/newstring}</td>
<td>返回var中所有substring被替换成newstring的字符串。例如var=&quot;2345432&quot;, ${var//3/Hello}返回&quot;2Hello454Hello2&quot;</td>
</tr>
<tr>
<td>$(command)</td>
<td>返回command命令执行后的所输出的结果。例如$(date)，返回date命令执行后的输出，同<code>date</code>命令</td>
</tr>
<tr>
<td>$((算数表达式))</td>
<td>返回双括号中算数运算的结果。例如$((20+5*6))，返回50</td>
</tr>
</tbody></table>
<h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><p>环境变量的定义方法如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export var=value</span><br></pre></td></tr></table></figure>

<p>shell在初始化的时候会在执行profile等初始化脚本，脚本中定义了一些环境变量，这些变量会在创建子进程时传递给子进程。<br>用env命令可以查看当前的环境变量。常用的系统环境变量如下：</p>
<table>
<thead>
<tr>
<th>环境变量</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>_</td>
<td>上一条命令的最后一个参数 <code>$_</code></td>
</tr>
<tr>
<td>BASH</td>
<td>展开为调用bash实例时使用的全路径名</td>
</tr>
<tr>
<td>CDPATH</td>
<td>cd命令的搜索路径。它是以冒号分隔的目录列表，shell通过它来搜索cd命令指定的目标目录。例如.:~:/usr</td>
</tr>
<tr>
<td>EDITOR</td>
<td>内置编辑器emacs、gmacs或vi的路径名</td>
</tr>
<tr>
<td>ENV</td>
<td>每一个新的bash shell(包括脚本)启动时执行的环境文件。通常赋予这个变量的文件名是.bashrc。</td>
</tr>
<tr>
<td>EUID</td>
<td>展开为在shell启动时被初始化的当前用户的有效ID</td>
</tr>
<tr>
<td>GROUPS</td>
<td>当前用户所属的组</td>
</tr>
<tr>
<td>HISTFILE</td>
<td>指定保存命令行历史的文件。默认值是~/.bash_history。如果被复位，交互式shell退出时将不保存命令行历史</td>
</tr>
<tr>
<td>HISTSIZE</td>
<td>记录在命令行历史文件中的命令数。默认是500</td>
</tr>
<tr>
<td>HOME</td>
<td>主目录。未指定目录时，cd命令将转向该目录</td>
</tr>
<tr>
<td>IFS</td>
<td>内部字段分隔符，一般是空格符、制表符和换行符，用于由命令替换，循环结构中的表和读取的输入产生的词的字段划分</td>
</tr>
<tr>
<td>LANG</td>
<td>用来为没有以LC_开头的变量明确选取的种类确定locale类</td>
</tr>
<tr>
<td>OLDPWD</td>
<td>前一个工作目录</td>
</tr>
<tr>
<td>PATH</td>
<td>命令搜索路径。一个由冒号分隔的目录列表，shell用它来搜索命令，一个普通值为 /usr/gnu/bin:/usr/local/bin:/usr/ucb:/usr/bin</td>
</tr>
<tr>
<td>PPID</td>
<td>父进程的进程ID</td>
</tr>
<tr>
<td>PS1</td>
<td>主提示符串，默认值是$</td>
</tr>
<tr>
<td>PS2</td>
<td>次提示符串，默认值是&gt;</td>
</tr>
<tr>
<td>PS3</td>
<td>与select命令一起使用的选择提示符串，默认值是&#35;?</td>
</tr>
<tr>
<td>PS4</td>
<td>当开启追踪时使用的调试提示符串，默认值是+。追踪可以用set –x开启</td>
</tr>
<tr>
<td>PWD</td>
<td>当前工作目录。由cd设置</td>
</tr>
<tr>
<td>RANDOM</td>
<td>每次引用该变量，就产生一个随机整数。随机数序列可以通过给RANDOM赋值来初始化。如果RANDOM被复位，即使随后再设置，它也将失去特定的属性</td>
</tr>
<tr>
<td>REPLY</td>
<td>当没有给read提供参数时设置</td>
</tr>
<tr>
<td>SHELL</td>
<td>当调用shell时，它扫描环境变量以寻找该名字。shell给PATH、PS1、PS2、MAILCHECK和IFS设置默认值。HOME和MAIL由login(1)设置</td>
</tr>
<tr>
<td>SHELLOPTS</td>
<td>包含一列开启的shell选项，比如braceexpand、hashall、monitor等</td>
</tr>
<tr>
<td>UID</td>
<td>展开为当前用户的用户ID，在shell启动时初始化</td>
</tr>
</tbody></table>
<p>可以为某个命令单独设置环境变量，而不会影响后续的命令执行，比如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">LD_LIBRARY_PATH=./lib:$LD_LIBRARY_PATH ./make_ext4fs</span><br></pre></td></tr></table></figure>

<h2 id="数值变量"><a href="#数值变量" class="headerlink" title="数值变量"></a>数值变量</h2><p>shell中默认把变量值当作字符串，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">age=22</span><br><span class="line">age=<span class="variable">$&#123;age&#125;</span>+1</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;age&#125;</span> </span><br></pre></td></tr></table></figure>

<p>输出结果为22+1，而不是23，因为shell将其解释为字符串，而不是数学运算。</p>
<p>可以用let命令使其进行数学运算，例如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">let age=$&#123;age&#125;+1</span><br></pre></td></tr></table></figure>

<p>也可以用typeset或者declare把变量定义为整型。例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">typeset</span> -i age=22     </span><br><span class="line">age=<span class="variable">$&#123;age&#125;</span>+1</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;age&#125;</span></span><br></pre></td></tr></table></figure>

<p>typeset的 -i 选项把age定义为整型的了。此后每次运算，都把age的右值识别为算术表达式或数字。最终的输出结果是23</p>
<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>在shell中可以使用数组，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">array[0]=0</span><br><span class="line">array[1]=1</span><br><span class="line">array[2]=2</span><br></pre></td></tr></table></figure>

<p>则array就是一个数组，也可以这样给数组初始化：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">array=(0 1 2) // 元素之间以空格分隔</span><br></pre></td></tr></table></figure>

<h3 id="数组变量操作"><a href="#数组变量操作" class="headerlink" title="数组变量操作"></a>数组变量操作</h3><table>
<thead>
<tr>
<th>操作</th>
<th>介绍</th>
</tr>
</thead>
<tbody><tr>
<td>&#36;{array[$*]}</td>
<td>访问array中某个元素</td>
</tr>
<tr>
<td>&#36;{&#35;array[*]}</td>
<td>返回数组元素个数</td>
</tr>
<tr>
<td>&#36;{array[*]} <br> &#36;{array[@]}</td>
<td>的返回值即数组的所有元素组成的串</td>
</tr>
<tr>
<td>&#36;{array[*]:0:2}</td>
<td>返回第一个和第二个元素组成的串。0表示开始的位置，2表示要返回的元素个数，开始位置可以为0-2(0减去2)之类的，表示从倒数第二个元素开始。</td>
</tr>
<tr>
<td>&#36;array[&#36;{&#35;array[*]}]=value</td>
<td>追加数组元素</td>
</tr>
<tr>
<td>unset array[$i]</td>
<td>删除某个数组元素</td>
</tr>
<tr>
<td>unset array</td>
<td>删除整个数据</td>
</tr>
</tbody></table>
<p>下面写个稍微复杂点的例子：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ((i=<span class="number">0</span>; i&lt;<span class="number">100</span>; i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    array[<span class="variable">$i</span>]=<span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">0</span>; i&lt;<span class="number">100</span>; i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;array[$i]&#125;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h3 id="字符串转化为数组"><a href="#字符串转化为数组" class="headerlink" title="字符串转化为数组"></a>字符串转化为数组</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">str=<span class="string">&quot;one two three four&quot;</span></span><br><span class="line">arr=(<span class="variable">$str</span>)</span><br></pre></td></tr></table></figure>

<p><strong>如果字符串分隔符不是空格，则采用下面方法分割成数组：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">str=<span class="string">&quot;one,two,three,four&quot;</span></span><br><span class="line">OLD_IFS=<span class="string">&quot;<span class="variable">$IFS</span>&quot;</span></span><br><span class="line">IFS=<span class="string">&quot;,&quot;</span></span><br><span class="line">arr=(<span class="variable">$str</span>)</span><br><span class="line">IFS=<span class="string">&quot;<span class="variable">$OLD_IFS</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> <span class="variable">$&#123;arr[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$var</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>OLD_IFS用于保存原分隔符，用于后续恢复。</p>
<h2 id="特殊变量"><a href="#特殊变量" class="headerlink" title="特殊变量"></a>特殊变量</h2><table>
<thead>
<tr>
<th>变量</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>$0</td>
<td>当前脚本的文件名</td>
</tr>
<tr>
<td>$n</td>
<td><strong>n</strong>是正整数。<code>$0</code>当前脚本名称，<code>$1</code>是第一个参数，<code>$2</code>是第二个参数，等等</td>
</tr>
<tr>
<td>$#</td>
<td>传入脚本的参数的个数</td>
</tr>
<tr>
<td>$*</td>
<td>所有的位置参数(作为单个字符串)</td>
</tr>
<tr>
<td>$@</td>
<td>所有的位置参数(每个都作为独立的字符串)。</td>
</tr>
<tr>
<td>$?</td>
<td>当前shell进程中，上一个命令的返回值，如果上一个命令成功执行则$?的值为0，否则为其他非零值，常用做if语句条件</td>
</tr>
<tr>
<td>$$</td>
<td>当前shell进程的pid</td>
</tr>
<tr>
<td>$!</td>
<td>后台运行的最后一个进程的pid</td>
</tr>
<tr>
<td>$-</td>
<td>显示shell使用的当前选项</td>
</tr>
<tr>
<td>$_</td>
<td>之前命令的最后一个参数</td>
</tr>
</tbody></table>
<p><code>$*</code>和<code>$@</code>都表示传给脚本或者函数的参数列表，当使用双引号包裹时，<code>&quot;$*&quot;</code>是一个字符串，而<code>&quot;$@&quot;</code>则像一个数组：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">for var in &quot;$*&quot;;do</span><br><span class="line">    echo $var</span><br><span class="line">done</span><br><span class="line">echo &quot;-------------&quot;</span><br><span class="line">for var in &quot;$@&quot;;do</span><br><span class="line">    echo $var</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<p>上述代码输入结果为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ./test.sh xxx yyy zzz</span><br><span class="line">xxx yyy zzz</span><br><span class="line">-------------</span><br><span class="line">xxx</span><br><span class="line">yyy</span><br><span class="line">zzz</span><br></pre></td></tr></table></figure>

<h2 id="指定变量类型：typeset-与-declare"><a href="#指定变量类型：typeset-与-declare" class="headerlink" title="指定变量类型：typeset 与 declare"></a>指定变量类型：typeset 与 declare</h2><p>declare和typeset是bash的内建命令，它们是完全相同的，可以用来限定变量的属性，如整型、大小写、宽度、左右对齐等。这是在某些编程语言中使用的定义类型不严格的方式。<br>当用typeset或declare改变一个变量的属性时,这种改变是永久的。<br>命令declare是bash版本2之后才有的，命令typeset也可以在ksh脚本中运行。</p>
<p>常用命令参数：</p>
<ul>
<li>-r 设置变量为只读</li>
<li>-i 设置变量为整数</li>
<li>-a 设置变量为数组array</li>
<li>-f 如果后面没有参数的话会列出之前脚本定义的所有函数，如果有参数的话列出以参数命名的函数</li>
<li>-x 设置变量在脚本外也可以访问到</li>
<li>-u 将一个变量的字符变成大写</li>
<li>-l 将一个变量的字符变成小写</li>
</ul>
<h2 id="变量应用举例"><a href="#变量应用举例" class="headerlink" title="变量应用举例"></a>变量应用举例</h2><h3 id="遍历字符串"><a href="#遍历字符串" class="headerlink" title="遍历字符串"></a>遍历字符串</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">local</span> var=<span class="variable">$1</span></span><br><span class="line"><span class="built_in">local</span> len=<span class="variable">$&#123;&amp;#35;var&#125;</span></span><br><span class="line"><span class="built_in">local</span> i=0</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -lt <span class="variable">$len</span> ];<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;var:$i:1&#125;</span></span><br><span class="line">    <span class="built_in">typeset</span> i=$((i+<span class="number">1</span>))</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="http://mywiki.wooledge.org/BashFAQ/054">How can I tell whether a variable contains a valid number?</a></li>
</ul>
]]></content>
      <categories>
        <category>Shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell判断文件是否存在</title>
    <url>/posts/25730.html</url>
    <content><![CDATA[<p>Conditional Logic on Files</p>
<ul>
<li>‘-a’ file exists.</li>
<li>‘-b’ file exists and is a block special file.</li>
<li>‘-c’ file exists and is a character special file.</li>
<li>‘-d’ file exists and is a directory.</li>
<li>‘-e’ file exists (just the same as -a).</li>
<li>‘-f’ file exists and is a regular file.</li>
<li>‘-g’ file exists and has its setgid(2) bit set.</li>
<li>‘-G’ file exists and has the same group ID as this process.</li>
<li>‘-k’ file exists and has its sticky bit set.</li>
<li>‘-L’ file exists and is a symbolic link.</li>
<li>‘-n’ string length is not zero.</li>
<li>‘-o’ Named option is set on.</li>
<li>‘-O’ file exists and is owned by the user ID of this process.</li>
<li>‘-p’ file exists and is a first in, first out (FIFO) special file or named pipe.</li>
<li>‘-r’ file exists and is readable by the current process.</li>
<li>‘-s’ file exists and has a size greater than zero.</li>
<li>‘-S’ file exists and is a socket.</li>
<li>‘-t’ file descriptor number fildes is open and associated with a terminal device.</li>
<li>‘-u’ file exists and has its setuid(2) bit set.</li>
<li>‘-w’ file exists and is writable by the current process.</li>
<li>‘-x’ file exists and is executable by the current process.</li>
<li>‘-z’ string length is zero.</li>
</ul>
<p>示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if [ -f $&#123;mypath&#125; ];then</span><br><span class="line">    echo &quot;file exist&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ &quot;$&#123;mypath&#125;&quot; != &quot;&quot; ] &amp;&amp; [ -f $&#123;mypath&#125; ];then</span><br><span class="line">    echo &quot;mypath is not empty and file exist&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<p>参考网站：</p>
<ul>
<li><a href="http://codewiki.wikidot.com/shell-script:if-else">If / Else Statements (Shell Scripting)</a></li>
</ul>
]]></content>
      <categories>
        <category>Shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell管道</title>
    <url>/posts/669.html</url>
    <content><![CDATA[<h2 id="通过管道执行命令，获取各个命令的返回值"><a href="#通过管道执行命令，获取各个命令的返回值" class="headerlink" title="通过管道执行命令，获取各个命令的返回值"></a>通过管道执行命令，获取各个命令的返回值</h2><p>比如执行命令：cmd1 | cmd2 | cmd3  。 如果命令执行完后，通过”$?”获取的是cmd3的返回值。如何获取cmd1和cmd2的返回值呢？</p>
<p>在bash环境下，命令的返回值保存在”PIPESTATUS”数组中:</p>
<ul>
<li>${PIPESTATUS[0]} 是cmd1的返回值；</li>
<li>${PIPESTATUS[1]} 是cmd2的返回值；</li>
<li>${PIPESTATUS[2]} 是cmd3的返回值；</li>
<li>$? 始终等于 ${PIPESTATUS:-1}。</li>
</ul>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul>
<li><a href="http://unix.derkeiler.com/Newsgroups/comp.unix.shell/2003-09/0909.html">comp.unix.shell FAQ - Answers to Frequently Asked Questions</a></li>
</ul>
]]></content>
      <categories>
        <category>Shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>sed命令使用说明</title>
    <url>/posts/63761.html</url>
    <content><![CDATA[<h2 id="内容替换"><a href="#内容替换" class="headerlink" title="内容替换"></a>内容替换</h2><h3 id="普通字符替换"><a href="#普通字符替换" class="headerlink" title="普通字符替换"></a>普通字符替换</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">param_name=ro.build.id</span><br><span class="line">sed -i &quot;s/$&#123;param_name&#125;=.*/$&#123;param_name&#125;=new_value/g&quot; build.prop</span><br></pre></td></tr></table></figure>
<p>本例用于修改build.prop文件中的ro.build.id参数的值</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sed -i &quot;s/oldstring/newstring/g&quot; `grep oldstring -rl yourdir`</span><br></pre></td></tr></table></figure>
<p>批量替换</p>
<h3 id="二进制内容替换"><a href="#二进制内容替换" class="headerlink" title="二进制内容替换"></a>二进制内容替换</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;s/\x00/\x0a/g&#x27; %s      #本例是把&#x27;\0&#x27;替换为&#x27;\n&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="行操作"><a href="#行操作" class="headerlink" title="行操作"></a>行操作</h2><h3 id="删除文件中的某一行"><a href="#删除文件中的某一行" class="headerlink" title="删除文件中的某一行"></a>删除文件中的某一行</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sed -i \&#x27;1d\&#x27; %s   #删除第一行的文字</span><br></pre></td></tr></table></figure>

<h3 id="按行截取文本文件内容"><a href="#按行截取文本文件内容" class="headerlink" title="按行截取文本文件内容"></a>按行截取文本文件内容</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sed -n &#x27;起始行号,结束行号p&#x27; 原始文件 &gt; 另存为的文件</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>awk命令使用说明</title>
    <url>/posts/61132.html</url>
    <content><![CDATA[<p><strong>查找</strong><br>查找以<code>ro.build.id=</code>开头的行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;/^ro.build.id=/ &#123;print $1&#125;&#x27;</span> build.prop   <span class="comment">#在build.prop文件中查找</span></span><br></pre></td></tr></table></figure>
<p>下面的例子实现了同样的效果，但是采用了变量的形式，用起来会更加灵活</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">prop_name=ro.build.id</span><br><span class="line">awk -v identifier=<span class="string">&quot;<span class="variable">$&#123;prop_name&#125;</span>=&quot;</span> <span class="string">&#x27;$0 ~ &quot;^&quot; identifier &#123;print $1&#125;&#x27;</span> build.prop</span><br></pre></td></tr></table></figure>

<p><strong>分割字符</strong><br>默认以空格为分隔符，比如：<code>input | awk &#39;&#123;print \$1&#125;&#39;</code><br>可以通过-F参数指定分隔符，比如： <code>input | awk -F &quot;-&gt;&quot; &#39;&#123;print $2&#125;&#39;</code></p>
<p><strong>字符串替换</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN &#123; FS=&quot;SYSTEM/&quot; &#125; sub(/SYSTEM/,&quot;system&quot;) &#123;print $$2&#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>实例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">zipinfo -1 target-V100R001C02B013SP06.zip | awk <span class="string">&#x27;BEGIN &#123; FS=&quot;SYSTEM/&quot; &#125; sub(/SYSTEM/,&quot;system&quot;) &#123;print $$2&#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>查找SYSTEM/开头的字符串，并把SYSTEM替换为system后输出<br>或者：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">zipinfo -1 /target-V100R001C02B013SP06.zip | awk <span class="string">&#x27;/^SYSTEM\// &#123;print&#125;&#x27;</span> | awk <span class="string">&#x27;sub(/SYSTEM/,&quot;system&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>
<p>也能实现相同的效果</p>
<p><strong>只输出最后一行</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span> --pretty=format:<span class="string">&quot;%H\ | awk &#x27;NF&#123;a=<span class="variable">$0</span>&#125; END&#123;print a&#125;&#x27;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>okhttp详解系列六：服务请求拦截器 CallServerInterceptor</title>
    <url>/posts/73cf04e1.html</url>
    <content><![CDATA[<ul>
<li><a href="/posts/78efaca4.html" title="okhttp详解系列一：开篇">okhttp详解系列一：开篇</a></li>
<li><a href="/posts/8e83ed63.html" title="okhttp详解系列二：重试重定向拦截器">okhttp详解系列二：重试重定向拦截器</a></li>
<li><a href="/posts/6e2b1d41.html" title="okhttp详解系列三：桥拦截器 BridgeInterceptor">okhttp详解系列三：桥拦截器 BridgeInterceptor</a></li>
<li><a href="/posts/37107c2e.html" title="okhttp详解系列四：缓存拦截器">okhttp详解系列四：缓存拦截器</a></li>
<li><a href="/posts/ee27d764.html" title="okhttp详解系列五：连接拦截器 ConnectInterceptor">okhttp详解系列五：连接拦截器 ConnectInterceptor</a></li>
<li><a href="/posts/73cf04e1.html" title="okhttp详解系列六：服务请求拦截器 CallServerInterceptor">okhttp详解系列六：服务请求拦截器 CallServerInterceptor</a>

</li>
</ul>
<p>服务请求拦截器会把消息请求头、请求体发送给服务端。并把服务端返回信息转换为Response。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CallServerInterceptor</span>(<span class="keyword">private</span> <span class="keyword">val</span> forWebSocket: <span class="built_in">Boolean</span>) : Interceptor &#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Throws(IOException::class)</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">intercept</span><span class="params">(chain: <span class="type">Interceptor</span>.<span class="type">Chain</span>)</span></span>: Response &#123;</span><br><span class="line">    <span class="keyword">val</span> realChain = chain <span class="keyword">as</span> RealInterceptorChain</span><br><span class="line">    <span class="keyword">val</span> exchange = realChain.exchange!!</span><br><span class="line">    <span class="keyword">val</span> request = realChain.request</span><br><span class="line">    <span class="keyword">val</span> requestBody = request.body</span><br><span class="line">    <span class="keyword">val</span> sentRequestMillis = System.currentTimeMillis()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 向socket中写入请求头</span></span><br><span class="line">    exchange.writeRequestHeaders(request)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> invokeStartEvent = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">var</span> responseBuilder: Response.Builder? = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">if</span> (HttpMethod.permitsRequestBody(request.method) &amp;&amp; requestBody != <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="comment">// If there&#x27;s a &quot;Expect: 100-continue&quot; header on the request, wait for a &quot;HTTP/1.1 100</span></span><br><span class="line">      <span class="comment">// Continue&quot; response before transmitting the request body. If we don&#x27;t get that, return</span></span><br><span class="line">      <span class="comment">// what we did get (such as a 4xx response) without ever transmitting the request body.</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="string">&quot;100-continue&quot;</span>.equals(request.header(<span class="string">&quot;Expect&quot;</span>), ignoreCase = <span class="literal">true</span>)) &#123;</span><br><span class="line">        exchange.flushRequest()</span><br><span class="line">        responseBuilder = exchange.readResponseHeaders(expectContinue = <span class="literal">true</span>)</span><br><span class="line">        exchange.responseHeadersStart()</span><br><span class="line">        invokeStartEvent = <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (responseBuilder == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (requestBody.isDuplex()) &#123; <span class="comment">// 双工传输，HTTP/2才支持</span></span><br><span class="line">          <span class="comment">// Prepare a duplex body so that the application can send a request body later.</span></span><br><span class="line">          exchange.flushRequest()</span><br><span class="line">          <span class="keyword">val</span> bufferedRequestBody = exchange.createRequestBody(request, <span class="literal">true</span>).buffer()</span><br><span class="line">          requestBody.writeTo(bufferedRequestBody)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// Write the request body if the &quot;Expect: 100-continue&quot; expectation was met.</span></span><br><span class="line">          <span class="keyword">val</span> bufferedRequestBody = exchange.createRequestBody(request, <span class="literal">false</span>).buffer()</span><br><span class="line">          <span class="comment">// 消息体写入到socket</span></span><br><span class="line">          requestBody.writeTo(bufferedRequestBody)</span><br><span class="line">          bufferedRequestBody.close()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        exchange.noRequestBody()</span><br><span class="line">        <span class="keyword">if</span> (!exchange.connection.isMultiplexed) &#123;</span><br><span class="line">          <span class="comment">// If the &quot;Expect: 100-continue&quot; expectation wasn&#x27;t met, prevent the HTTP/1 connection</span></span><br><span class="line">          <span class="comment">// from being reused. Otherwise we&#x27;re still obligated to transmit the request body to</span></span><br><span class="line">          <span class="comment">// leave the connection in a consistent state.</span></span><br><span class="line">          exchange.noNewExchangesOnConnection()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      exchange.noRequestBody()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (requestBody == <span class="literal">null</span> || !requestBody.isDuplex()) &#123;</span><br><span class="line">      <span class="comment">// 刷新输出流，会调用socket的flush</span></span><br><span class="line">      exchange.finishRequest()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (responseBuilder == <span class="literal">null</span>) &#123;</span><br><span class="line">      responseBuilder = exchange.readResponseHeaders(expectContinue = <span class="literal">false</span>)!!</span><br><span class="line">      <span class="keyword">if</span> (invokeStartEvent) &#123;</span><br><span class="line">        exchange.responseHeadersStart()</span><br><span class="line">        invokeStartEvent = <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> response = responseBuilder</span><br><span class="line">        .request(request)</span><br><span class="line">        .handshake(exchange.connection.handshake())</span><br><span class="line">        .sentRequestAtMillis(sentRequestMillis)</span><br><span class="line">        .receivedResponseAtMillis(System.currentTimeMillis())</span><br><span class="line">        .build()</span><br><span class="line">    <span class="keyword">var</span> code = response.code</span><br><span class="line">    <span class="keyword">if</span> (code == <span class="number">100</span>) &#123;</span><br><span class="line">      <span class="comment">// Server sent a 100-continue even though we did not request one. Try again to read the actual</span></span><br><span class="line">      <span class="comment">// response status.</span></span><br><span class="line">      responseBuilder = exchange.readResponseHeaders(expectContinue = <span class="literal">false</span>)!!</span><br><span class="line">      <span class="keyword">if</span> (invokeStartEvent) &#123;</span><br><span class="line">        exchange.responseHeadersStart()</span><br><span class="line">      &#125;</span><br><span class="line">      response = responseBuilder</span><br><span class="line">          .request(request)</span><br><span class="line">          .handshake(exchange.connection.handshake())</span><br><span class="line">          .sentRequestAtMillis(sentRequestMillis)</span><br><span class="line">          .receivedResponseAtMillis(System.currentTimeMillis())</span><br><span class="line">          .build()</span><br><span class="line">      code = response.code</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    exchange.responseHeadersEnd(response)</span><br><span class="line"></span><br><span class="line">    response = <span class="keyword">if</span> (forWebSocket &amp;&amp; code == <span class="number">101</span>) &#123;</span><br><span class="line">      <span class="comment">// Connection is upgrading, but we need to ensure interceptors see a non-null response body.</span></span><br><span class="line">      response.newBuilder()</span><br><span class="line">          .body(EMPTY_RESPONSE)</span><br><span class="line">          .build()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      response.newBuilder()</span><br><span class="line">          .body(exchange.openResponseBody(response))</span><br><span class="line">          .build()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&quot;close&quot;</span>.equals(response.request.header(<span class="string">&quot;Connection&quot;</span>), ignoreCase = <span class="literal">true</span>) ||</span><br><span class="line">        <span class="string">&quot;close&quot;</span>.equals(response.header(<span class="string">&quot;Connection&quot;</span>), ignoreCase = <span class="literal">true</span>)) &#123;</span><br><span class="line">      exchange.noNewExchangesOnConnection()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((code == <span class="number">204</span> || code == <span class="number">205</span>) &amp;&amp; response.body?.contentLength() ?: -<span class="number">1L</span> &gt; <span class="number">0L</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> ProtocolException(</span><br><span class="line">          <span class="string">&quot;HTTP <span class="variable">$code</span> had non-zero Content-Length: <span class="subst">$&#123;response.body?.contentLength()&#125;</span>&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个是最后一个拦截器，从代码可以看到没有调用chain.process。但是服务请求拦截器返回的response并不是最终的response，前置的拦截器还没有完全处理完成。比如服务返回了redirect，在重试和重定向拦截器中会发起重定向，拦截器会被再次执行。</p>
]]></content>
      <categories>
        <category>okhttp</category>
      </categories>
      <tags>
        <tag>okhttp</tag>
      </tags>
  </entry>
  <entry>
    <title>okhttp详解系列五：连接拦截器 ConnectInterceptor</title>
    <url>/posts/ee27d764.html</url>
    <content><![CDATA[<ul>
<li><a href="/posts/78efaca4.html" title="okhttp详解系列一：开篇">okhttp详解系列一：开篇</a></li>
<li><a href="/posts/8e83ed63.html" title="okhttp详解系列二：重试重定向拦截器">okhttp详解系列二：重试重定向拦截器</a></li>
<li><a href="/posts/6e2b1d41.html" title="okhttp详解系列三：桥拦截器 BridgeInterceptor">okhttp详解系列三：桥拦截器 BridgeInterceptor</a></li>
<li><a href="/posts/37107c2e.html" title="okhttp详解系列四：缓存拦截器">okhttp详解系列四：缓存拦截器</a></li>
<li><a href="/posts/ee27d764.html" title="okhttp详解系列五：连接拦截器 ConnectInterceptor">okhttp详解系列五：连接拦截器 ConnectInterceptor</a></li>
<li><a href="/posts/73cf04e1.html" title="okhttp详解系列六：服务请求拦截器 CallServerInterceptor">okhttp详解系列六：服务请求拦截器 CallServerInterceptor</a>

</li>
</ul>
<p>连接拦截器（ConnectInterceptor）负责与服务器建立网络连接，连接缓存池、dns解析、https证书校验等都在连接拦截器阶段来执行。连接拦截器类中的代码非常少，主要逻辑都在Exchange的初始化中：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">object</span> ConnectInterceptor : Interceptor &#123;</span><br><span class="line">  <span class="meta">@Throws(IOException::class)</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">intercept</span><span class="params">(chain: <span class="type">Interceptor</span>.<span class="type">Chain</span>)</span></span>: Response &#123;</span><br><span class="line">    <span class="keyword">val</span> realChain = chain <span class="keyword">as</span> RealInterceptorChain</span><br><span class="line">    <span class="comment">// 1. 初始化Exchange</span></span><br><span class="line">    <span class="keyword">val</span> exchange = realChain.call.initExchange(chain)</span><br><span class="line">    <span class="keyword">val</span> connectedChain = realChain.copy(exchange = exchange)</span><br><span class="line">    <span class="comment">// 2. 交给下一个拦截器进行处理，如果用户注册了网络拦截器，</span></span><br><span class="line">    <span class="comment">//  下一个拦截器就是用户注册的网络拦截器</span></span><br><span class="line">    <span class="keyword">val</span> result = connectedChain.proceed(realChain.request)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>连接拦截器的主要时序：</p>
<pre class="mermaid">

zenuml
ConnectInterceptor.intercept {
    RealCall.initExchange {
        ExchangeCodec &#x3D; ExchangeFinder.find {
            RealConnection &#x3D; findHealthyConnection {
                findConnection
            }
            ExchangeCodec &#x3D; RealConnection.newCodec {
                if (http2) {
                    &quot;new Http2ExchangeCodec()&quot;
                } else {
                    &quot;new Http1ExchangeCodec()&quot;
                }
            }
        }
        new Exchange
    }
    RealInterceptorChain.&quot;copy(传入Exchange)&quot;
    RealInterceptorChain.&quot;proceed(把网络请求交给下一个拦截器)&quot;
}
</pre>

<h2 id="连接池查找可用连接"><a href="#连接池查找可用连接" class="headerlink" title="连接池查找可用连接"></a>连接池查找可用连接</h2><p>下面流程图是从<code>okhttp3.internal.connection.ExchangeFinder#findConnection</code>开始进行分析：</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1274px" preserveAspectRatio="none" style="width:437px;height:1274px;background:#FFFFFF;" version="1.1" viewBox="0 0 437 1274" width="437px" zoomAndPan="magnify"><defs/><g><ellipse cx="217.5" cy="20" fill="#222222" rx="10" ry="10" style="stroke:#222222;stroke-width:1.0;"/><polygon fill="#F1F1F1" points="156,100.0117,279,100.0117,291,112.8164,279,125.6211,156,125.6211,144,112.8164,156,100.0117" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="156" y="110.2222">&#26032;&#30340;&#35831;&#27714;&#19982;connection</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="156" y="123.0269">&#26159;&#21542;&#26159;&#30456;&#21516;&#30340;host&#21644;port</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="22" x="122" y="110.2222">&#19981;&#21516;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="22" x="291" y="110.2222">&#30456;&#21516;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="214" x="11" y="135.6211"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="194" x="21" y="156.7598">&#21024;&#38500;&#35813;connection&#19982;call&#20043;&#38388;&#30340;&#20851;&#32852;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="180" x="28" y="237.9922"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="160" x="38" y="259.1309">&#23558;connection&#26631;&#35760;&#34987;idle&#29366;&#24577;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="85" x="75.5" y="306.9609"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="65" x="85.5" y="328.0996">&#20851;&#38381;socket</text><polygon fill="#F1F1F1" points="36,189.5898,200,189.5898,212,201.5898,200,213.5898,36,213.5898,24,201.5898,36,189.5898" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="22" x="122" y="223.8003">&#20026;&#31354;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="36" y="205.3979">connection&#20851;&#32852;&#30340;calls&#21015;&#34920;&#20026;&#31354;</text><polygon fill="#F1F1F1" points="118,360.9297,130,372.9297,118,384.9297,106,372.9297,118,360.9297" style="stroke:#181818;stroke-width:0.5;"/><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="134" x="250" y="135.6211"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="114" x="260" y="156.7598">&#22797;&#29992;&#24403;&#21069;connection</text><ellipse cx="317" cy="200.5898" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="317" cy="200.5898" fill="#222222" rx="6" ry="6" style="stroke:#222222;stroke-width:1.0;"/><polygon fill="#F1F1F1" points="129.5,50,305.5,50,317.5,62.8047,305.5,75.6094,129.5,75.6094,117.5,62.8047,129.5,50" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="33" x="221.5" y="85.8198">&#19981;&#20026;&#31354;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="129.5" y="60.2104">&#24403;&#21069;connection&#26159;&#21542;&#20026;&#31354;&#65311;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="176" x="129.5" y="73.0151">(RealCall&#25345;&#26377;&#30340;RealConnection)</text><polygon fill="#F1F1F1" points="217.5,404.9297,229.5,416.9297,217.5,428.9297,205.5,416.9297,217.5,404.9297" style="stroke:#181818;stroke-width:0.5;"/><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="80" x="177.5" y="448.9297"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="60" x="187.5" y="470.0684">&#26597;&#25214;&#36830;&#25509;&#27744;</text><polygon fill="#F1F1F1" points="162.5,502.8984,272.5,502.8984,284.5,514.8984,272.5,526.8984,162.5,526.8984,150.5,514.8984,162.5,502.8984" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="162.5" y="518.7065">&#36830;&#25509;&#27744;&#20013;&#23384;&#22312;&#21487;&#29992;&#36830;&#25509;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="22" x="128.5" y="512.3042">&#23384;&#22312;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="33" x="284.5" y="512.3042">&#19981;&#23384;&#22312;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="142" x="49.75" y="536.8984"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="122" x="59.75" y="558.0371">&#20851;&#32852;call&#19982;connection</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="152" x="44.75" y="605.8672"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="132" x="54.75" y="627.0059">&#36820;&#22238;&#36830;&#25509;&#27744;&#20013;&#25214;&#30340;&#30340;&#36830;&#25509;</text><ellipse cx="120.75" cy="685.8359" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="120.75" cy="685.8359" fill="#222222" rx="6" ry="6" style="stroke:#222222;stroke-width:1.0;"/><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="175" x="226.75" y="586.9102"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="155" x="236.75" y="608.0488">&#21019;&#24314;&#36335;&#30001;&#35299;&#26512;&#22120;&#24182;&#35299;&#26512;ip&#22320;&#22336;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="161" x="233.75" y="655.8789"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="141" x="243.75" y="677.0176">&#22522;&#20110;IP&#22320;&#22336;&#20877;&#27425;&#26597;&#25214;&#36830;&#25509;&#27744;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="92" x="268.25" y="765.2383"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="72" x="278.25" y="786.377">&#36820;&#22238;&#21487;&#29992;&#36830;&#25509;</text><ellipse cx="314.25" cy="838.7227" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="314.25" cy="838.7227" fill="#222222" rx="6" ry="6" style="stroke:#222222;stroke-width:1.0;"/><polygon fill="#F1F1F1" points="281.25,716.8359,347.25,716.8359,359.25,728.8359,347.25,740.8359,281.25,740.8359,269.25,728.8359,281.25,716.8359" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="318.25" y="751.0464">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="281.25" y="732.644">&#23384;&#22312;&#21487;&#29992;&#36830;&#25509;</text><polygon fill="#F1F1F1" points="242.75,536.8984,385.75,536.8984,397.75,549.7031,385.75,562.5078,242.75,562.5078,230.75,549.7031,242.75,536.8984" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="33" x="318.25" y="572.7183">&#19981;&#20351;&#29992;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="242.75" y="547.1089">&#20351;&#29992;&#21512;&#24182;&#36830;&#25509;&#30340;&#36335;&#30001;&#65292;&#25110;&#32773;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="242.75" y="559.9136">&#20351;&#29992;&#24050;&#23384;&#22312;&#36335;&#30001;&#36873;&#25321;&#22120;&#30340;&#36335;&#30001;</text><polygon fill="#F1F1F1" points="314.25,891.7227,326.25,903.7227,314.25,915.7227,302.25,903.7227,314.25,891.7227" style="stroke:#181818;stroke-width:0.5;"/><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="135" x="150" y="935.7227"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="115" x="160" y="956.8613">&#21019;&#24314;&#26032;&#30340;Connection</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="80" x="177.5" y="989.6914"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="60" x="187.5" y="1010.8301">&#36830;&#25509;&#26381;&#21153;&#22120;</text><polygon fill="#F1F1F1" points="135.5,1043.6602,299.5,1043.6602,311.5,1056.4648,299.5,1069.2695,135.5,1069.2695,123.5,1056.4648,135.5,1043.6602" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="135.5" y="1053.8706">&#26597;&#25214;&#36830;&#25509;&#27744;&#26159;&#21542;&#23384;&#22312;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="135.5" y="1066.6753">&#22810;&#36335;&#22797;&#29992;&#30340;connection(HTTP/2)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="22" x="101.5" y="1053.8706">&#23384;&#22312;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="33" x="311.5" y="1053.8706">&#19981;&#23384;&#22312;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="187" x="20" y="1079.2695"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="167" x="30" y="1100.4082">&#20851;&#38381;&#26032;&#24314;connection&#30340;socket</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="170" x="28.5" y="1133.2383"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="150" x="38.5" y="1154.377">&#36820;&#22238;&#22810;&#36335;&#22797;&#29992;&#30340;connection</text><ellipse cx="113.5" cy="1198.207" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="113.5" cy="1198.207" fill="#222222" rx="6" ry="6" style="stroke:#222222;stroke-width:1.0;"/><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="128" x="257.5" y="1079.2695"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="108" x="267.5" y="1100.4082">&#26032;&#36830;&#25509;&#25918;&#21040;&#36830;&#25509;&#27744;&#20013;</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="142" x="250.5" y="1133.2383"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="122" x="260.5" y="1154.377">&#20851;&#32852;call&#19982;connection</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="92" x="275.5" y="1187.207"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="72" x="285.5" y="1208.3457">&#36820;&#22238;&#26032;&#24314;&#36830;&#25509;</text><ellipse cx="321.5" cy="1252.1758" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="321.5" cy="1252.1758" fill="#222222" rx="6" ry="6" style="stroke:#222222;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="118" x2="118" y1="271.9609" y2="306.9609"/><polygon fill="#181818" points="114,296.9609,118,306.9609,122,296.9609,118,300.9609" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="118" x2="118" y1="213.5898" y2="237.9922"/><polygon fill="#181818" points="114,227.9922,118,237.9922,122,227.9922,118,231.9922" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="212" x2="224" y1="201.5898" y2="201.5898"/><polygon fill="#181818" points="220,279.4609,224,289.4609,228,279.4609,224,283.4609" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="224" x2="224" y1="201.5898" y2="372.9297"/><line style="stroke:#181818;stroke-width:1.0;" x1="224" x2="130" y1="372.9297" y2="372.9297"/><polygon fill="#181818" points="140,368.9297,130,372.9297,140,376.9297,136,372.9297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="118" x2="118" y1="340.9297" y2="360.9297"/><polygon fill="#181818" points="114,350.9297,118,360.9297,122,350.9297,118,354.9297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="118" x2="118" y1="169.5898" y2="189.5898"/><polygon fill="#181818" points="114,179.5898,118,189.5898,122,179.5898,118,183.5898" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="317" x2="317" y1="169.5898" y2="189.5898"/><polygon fill="#181818" points="313,179.5898,317,189.5898,321,179.5898,317,183.5898" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="144" x2="118" y1="112.8164" y2="112.8164"/><line style="stroke:#181818;stroke-width:1.0;" x1="118" x2="118" y1="112.8164" y2="135.6211"/><polygon fill="#181818" points="114,125.6211,118,135.6211,122,125.6211,118,129.6211" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="291" x2="317" y1="112.8164" y2="112.8164"/><line style="stroke:#181818;stroke-width:1.0;" x1="317" x2="317" y1="112.8164" y2="135.6211"/><polygon fill="#181818" points="313,125.6211,317,135.6211,321,125.6211,317,129.6211" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="118" x2="118" y1="384.9297" y2="389.9297"/><line style="stroke:#181818;stroke-width:1.0;" x1="118" x2="217.5" y1="389.9297" y2="389.9297"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="389.9297" y2="404.9297"/><polygon fill="#181818" points="213.5,394.9297,217.5,404.9297,221.5,394.9297,217.5,398.9297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="75.6094" y2="100.0117"/><polygon fill="#181818" points="213.5,90.0117,217.5,100.0117,221.5,90.0117,217.5,94.0117" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="317.5" x2="404" y1="62.8047" y2="62.8047"/><polygon fill="#181818" points="400,229.7695,404,239.7695,408,229.7695,404,233.7695" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="404" x2="404" y1="62.8047" y2="416.9297"/><line style="stroke:#181818;stroke-width:1.0;" x1="404" x2="229.5" y1="416.9297" y2="416.9297"/><polygon fill="#181818" points="239.5,412.9297,229.5,416.9297,239.5,420.9297,235.5,416.9297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="30" y2="50"/><polygon fill="#181818" points="213.5,40,217.5,50,221.5,40,217.5,44" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="428.9297" y2="448.9297"/><polygon fill="#181818" points="213.5,438.9297,217.5,448.9297,221.5,438.9297,217.5,442.9297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="120.75" x2="120.75" y1="570.8672" y2="605.8672"/><polygon fill="#181818" points="116.75,595.8672,120.75,605.8672,124.75,595.8672,120.75,599.8672" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="120.75" x2="120.75" y1="639.8359" y2="674.8359"/><polygon fill="#181818" points="116.75,664.8359,120.75,674.8359,124.75,664.8359,120.75,668.8359" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="314.25" x2="314.25" y1="620.8789" y2="655.8789"/><polygon fill="#181818" points="310.25,645.8789,314.25,655.8789,318.25,645.8789,314.25,649.8789" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="314.25" x2="314.25" y1="799.207" y2="827.7227"/><polygon fill="#181818" points="310.25,817.7227,314.25,827.7227,318.25,817.7227,314.25,821.7227" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="314.25" x2="314.25" y1="740.8359" y2="765.2383"/><polygon fill="#181818" points="310.25,755.2383,314.25,765.2383,318.25,755.2383,314.25,759.2383" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="359.25" x2="371.25" y1="728.8359" y2="728.8359"/><polygon fill="#181818" points="367.25,797.7227,371.25,807.7227,375.25,797.7227,371.25,801.7227" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="371.25" x2="371.25" y1="728.8359" y2="871.7227"/><line style="stroke:#181818;stroke-width:1.0;" x1="371.25" x2="314.25" y1="871.7227" y2="871.7227"/><line style="stroke:#181818;stroke-width:1.0;" x1="314.25" x2="314.25" y1="871.7227" y2="891.7227"/><polygon fill="#181818" points="310.25,881.7227,314.25,891.7227,318.25,881.7227,314.25,885.7227" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="314.25" x2="314.25" y1="689.8477" y2="716.8359"/><polygon fill="#181818" points="310.25,706.8359,314.25,716.8359,318.25,706.8359,314.25,710.8359" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="314.25" x2="314.25" y1="562.5078" y2="586.9102"/><polygon fill="#181818" points="310.25,576.9102,314.25,586.9102,318.25,576.9102,314.25,580.9102" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="397.75" x2="411.75" y1="549.7031" y2="549.7031"/><polygon fill="#181818" points="407.75,722.3516,411.75,732.3516,415.75,722.3516,411.75,726.3516" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="411.75" x2="411.75" y1="549.7031" y2="903.7227"/><line style="stroke:#181818;stroke-width:1.0;" x1="411.75" x2="326.25" y1="903.7227" y2="903.7227"/><polygon fill="#181818" points="336.25,899.7227,326.25,903.7227,336.25,907.7227,332.25,903.7227" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="150.5" x2="120.75" y1="514.8984" y2="514.8984"/><line style="stroke:#181818;stroke-width:1.0;" x1="120.75" x2="120.75" y1="514.8984" y2="536.8984"/><polygon fill="#181818" points="116.75,526.8984,120.75,536.8984,124.75,526.8984,120.75,530.8984" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="284.5" x2="314.25" y1="514.8984" y2="514.8984"/><line style="stroke:#181818;stroke-width:1.0;" x1="314.25" x2="314.25" y1="514.8984" y2="536.8984"/><polygon fill="#181818" points="310.25,526.8984,314.25,536.8984,318.25,526.8984,314.25,530.8984" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="314.25" x2="314.25" y1="915.7227" y2="920.7227"/><line style="stroke:#181818;stroke-width:1.0;" x1="314.25" x2="217.5" y1="920.7227" y2="920.7227"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="920.7227" y2="935.7227"/><polygon fill="#181818" points="213.5,925.7227,217.5,935.7227,221.5,925.7227,217.5,929.7227" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="482.8984" y2="502.8984"/><polygon fill="#181818" points="213.5,492.8984,217.5,502.8984,221.5,492.8984,217.5,496.8984" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="969.6914" y2="989.6914"/><polygon fill="#181818" points="213.5,979.6914,217.5,989.6914,221.5,979.6914,217.5,983.6914" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="113.5" x2="113.5" y1="1113.2383" y2="1133.2383"/><polygon fill="#181818" points="109.5,1123.2383,113.5,1133.2383,117.5,1123.2383,113.5,1127.2383" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="113.5" x2="113.5" y1="1167.207" y2="1187.207"/><polygon fill="#181818" points="109.5,1177.207,113.5,1187.207,117.5,1177.207,113.5,1181.207" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="321.5" x2="321.5" y1="1113.2383" y2="1133.2383"/><polygon fill="#181818" points="317.5,1123.2383,321.5,1133.2383,325.5,1123.2383,321.5,1127.2383" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="321.5" x2="321.5" y1="1167.207" y2="1187.207"/><polygon fill="#181818" points="317.5,1177.207,321.5,1187.207,325.5,1177.207,321.5,1181.207" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="321.5" x2="321.5" y1="1221.1758" y2="1241.1758"/><polygon fill="#181818" points="317.5,1231.1758,321.5,1241.1758,325.5,1231.1758,321.5,1235.1758" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="123.5" x2="113.5" y1="1056.4648" y2="1056.4648"/><line style="stroke:#181818;stroke-width:1.0;" x1="113.5" x2="113.5" y1="1056.4648" y2="1079.2695"/><polygon fill="#181818" points="109.5,1069.2695,113.5,1079.2695,117.5,1069.2695,113.5,1073.2695" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="311.5" x2="321.5" y1="1056.4648" y2="1056.4648"/><line style="stroke:#181818;stroke-width:1.0;" x1="321.5" x2="321.5" y1="1056.4648" y2="1079.2695"/><polygon fill="#181818" points="317.5,1069.2695,321.5,1079.2695,325.5,1069.2695,321.5,1073.2695" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="217.5" x2="217.5" y1="1023.6602" y2="1043.6602"/><polygon fill="#181818" points="213.5,1033.6602,217.5,1043.6602,221.5,1033.6602,217.5,1037.6602" style="stroke:#181818;stroke-width:1.0;"/><!--SRC=[ZLCzRzfG5Dtv5HvXgjJHZ5dQBQeoiY3YAAYMZM8ltQ0AgKamHIqAIQ1yjD0IfHHega3S9FmPtuUPyXTwd-_pXwXIbS4oxvrpxhdtN1jczi1CvFUa9Dn_X8gTqpLDoPbvNMDd4wX_THVEwj9vlEjcjEGh9QjkPLMLLKkiNLbT7Fe78I6LainzHKkw2vjOgOGaSMLsEaMmDvcpsLjtKOjAP4GHVAvQ2wXN4RQl6oPyg1Rq0pFImoik9aaoMBtr-S2R32CLBecktDkJTVCNAa3vsYirqZwUbu-GT8CGZZV0QdhzaR0Qb0fyqq-6wL5i8hrtte-fz_aglwigg-CRLYobOz3ozRevDlJSQyMaOqNRpU_Xcw8QYfIa3eCs1lQgCTeSET4CKoya0ZOzPTOTiig3j-omsf3DUca_iV2lknZ3-0pQ8tW_GLaw5otH1IyhK_l-hE8fyAgojsn0gnDNn7euAHwSVyXHlZFgXeSIAdCpxlsITrItuFQ669mwHp-pnxigiqwzOZcZ2TJy9v7fVbsii9DBE1-5ZDWc-OGm_1RyTWZYVVl2EdKayNh-Uxu0xIbyAgO5kEkuJktbDXt2aSs-z_yQOx0ZJuxlZM84wo1c50S5yOl8Of77mai8t_GPRCNcBWidRHkE-zWAnRfXaZuHCfZHO721_TFwy4KErP8lTdQsdpqN7w6qaJjk9fP74n41sT6o1hqzfVwlz6LK5cuR3s1DuqkK_h-z8s-RYyQdzmS0]--></g></svg>

<h2 id="连接拦截器类图结构"><a href="#连接拦截器类图结构" class="headerlink" title="连接拦截器类图结构"></a>连接拦截器类图结构</h2><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="623px" preserveAspectRatio="none" style="width:936px;height:623px;background:#FFFFFF;" version="1.1" viewBox="0 0 936 623" width="936px" zoomAndPan="magnify"><defs/><g><!--class ConnectInterceptor--><g id="elem_ConnectInterceptor"><rect fill="#F1F1F1" height="48" id="ConnectInterceptor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="177" x="294" y="7"/><ellipse cx="309" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M311.3438,18.6719 C310.4063,18.2344 309.8125,18.0938 308.9375,18.0938 C306.3125,18.0938 304.3125,20.1719 304.3125,22.8906 L304.3125,24.0156 C304.3125,26.5938 306.4219,28.4844 309.3125,28.4844 C310.5313,28.4844 311.6875,28.1875 312.4375,27.6406 C313.0156,27.2344 313.3438,26.7813 313.3438,26.3906 C313.3438,25.9375 312.9531,25.5469 312.4844,25.5469 C312.2656,25.5469 312.0625,25.625 311.875,25.8125 C311.4219,26.2969 311.4219,26.2969 311.2344,26.3906 C310.8125,26.6563 310.125,26.7813 309.3594,26.7813 C307.3125,26.7813 306.0156,25.6875 306.0156,23.9844 L306.0156,22.8906 C306.0156,21.1094 307.2656,19.7969 309,19.7969 C309.5781,19.7969 310.1875,19.9531 310.6563,20.2031 C311.1406,20.4844 311.3125,20.7031 311.4063,21.1094 C311.4688,21.5156 311.5,21.6406 311.6406,21.7656 C311.7813,21.9063 312.0156,22.0156 312.2344,22.0156 C312.5,22.0156 312.7656,21.875 312.9375,21.6563 C313.0469,21.5 313.0781,21.3125 313.0781,20.8906 L313.0781,19.4688 C313.0781,19.0313 313.0625,18.9063 312.9688,18.75 C312.8125,18.4844 312.5313,18.3438 312.2344,18.3438 C311.9375,18.3438 311.7344,18.4375 311.5156,18.75 L311.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="323" y="27.8467">ConnectInterceptor</text><line style="stroke:#181818;stroke-width:0.5;" x1="295" x2="470" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="295" x2="470" y1="47" y2="47"/></g><!--class RealInterceptorChain--><g id="elem_RealInterceptorChain"><rect fill="#F1F1F1" height="48" id="RealInterceptorChain" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="187" x="234" y="116"/><ellipse cx="249" cy="132" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M251.3438,127.6719 C250.4063,127.2344 249.8125,127.0938 248.9375,127.0938 C246.3125,127.0938 244.3125,129.1719 244.3125,131.8906 L244.3125,133.0156 C244.3125,135.5938 246.4219,137.4844 249.3125,137.4844 C250.5313,137.4844 251.6875,137.1875 252.4375,136.6406 C253.0156,136.2344 253.3438,135.7813 253.3438,135.3906 C253.3438,134.9375 252.9531,134.5469 252.4844,134.5469 C252.2656,134.5469 252.0625,134.625 251.875,134.8125 C251.4219,135.2969 251.4219,135.2969 251.2344,135.3906 C250.8125,135.6563 250.125,135.7813 249.3594,135.7813 C247.3125,135.7813 246.0156,134.6875 246.0156,132.9844 L246.0156,131.8906 C246.0156,130.1094 247.2656,128.7969 249,128.7969 C249.5781,128.7969 250.1875,128.9531 250.6563,129.2031 C251.1406,129.4844 251.3125,129.7031 251.4063,130.1094 C251.4688,130.5156 251.5,130.6406 251.6406,130.7656 C251.7813,130.9063 252.0156,131.0156 252.2344,131.0156 C252.5,131.0156 252.7656,130.875 252.9375,130.6563 C253.0469,130.5 253.0781,130.3125 253.0781,129.8906 L253.0781,128.4688 C253.0781,128.0313 253.0625,127.9063 252.9688,127.75 C252.8125,127.4844 252.5313,127.3438 252.2344,127.3438 C251.9375,127.3438 251.7344,127.4375 251.5156,127.75 L251.3438,127.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="263" y="136.8467">RealInterceptorChain</text><line style="stroke:#181818;stroke-width:0.5;" x1="235" x2="420" y1="148" y2="148"/><line style="stroke:#181818;stroke-width:0.5;" x1="235" x2="420" y1="156" y2="156"/></g><!--class Exchange--><g id="elem_Exchange"><rect fill="#F1F1F1" height="48" id="Exchange" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="101" x="456" y="116"/><ellipse cx="471" cy="132" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M473.3438,127.6719 C472.4063,127.2344 471.8125,127.0938 470.9375,127.0938 C468.3125,127.0938 466.3125,129.1719 466.3125,131.8906 L466.3125,133.0156 C466.3125,135.5938 468.4219,137.4844 471.3125,137.4844 C472.5313,137.4844 473.6875,137.1875 474.4375,136.6406 C475.0156,136.2344 475.3438,135.7813 475.3438,135.3906 C475.3438,134.9375 474.9531,134.5469 474.4844,134.5469 C474.2656,134.5469 474.0625,134.625 473.875,134.8125 C473.4219,135.2969 473.4219,135.2969 473.2344,135.3906 C472.8125,135.6563 472.125,135.7813 471.3594,135.7813 C469.3125,135.7813 468.0156,134.6875 468.0156,132.9844 L468.0156,131.8906 C468.0156,130.1094 469.2656,128.7969 471,128.7969 C471.5781,128.7969 472.1875,128.9531 472.6563,129.2031 C473.1406,129.4844 473.3125,129.7031 473.4063,130.1094 C473.4688,130.5156 473.5,130.6406 473.6406,130.7656 C473.7813,130.9063 474.0156,131.0156 474.2344,131.0156 C474.5,131.0156 474.7656,130.875 474.9375,130.6563 C475.0469,130.5 475.0781,130.3125 475.0781,129.8906 L475.0781,128.4688 C475.0781,128.0313 475.0625,127.9063 474.9688,127.75 C474.8125,127.4844 474.5313,127.3438 474.2344,127.3438 C473.9375,127.3438 473.7344,127.4375 473.5156,127.75 L473.3438,127.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="485" y="136.8467">Exchange</text><line style="stroke:#181818;stroke-width:0.5;" x1="457" x2="556" y1="148" y2="148"/><line style="stroke:#181818;stroke-width:0.5;" x1="457" x2="556" y1="156" y2="156"/></g><!--class ExchangeFinder--><g id="elem_ExchangeFinder"><rect fill="#F1F1F1" height="48" id="ExchangeFinder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="104.5" y="225"/><ellipse cx="119.5" cy="241" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M121.8438,236.6719 C120.9063,236.2344 120.3125,236.0938 119.4375,236.0938 C116.8125,236.0938 114.8125,238.1719 114.8125,240.8906 L114.8125,242.0156 C114.8125,244.5938 116.9219,246.4844 119.8125,246.4844 C121.0313,246.4844 122.1875,246.1875 122.9375,245.6406 C123.5156,245.2344 123.8438,244.7813 123.8438,244.3906 C123.8438,243.9375 123.4531,243.5469 122.9844,243.5469 C122.7656,243.5469 122.5625,243.625 122.375,243.8125 C121.9219,244.2969 121.9219,244.2969 121.7344,244.3906 C121.3125,244.6563 120.625,244.7813 119.8594,244.7813 C117.8125,244.7813 116.5156,243.6875 116.5156,241.9844 L116.5156,240.8906 C116.5156,239.1094 117.7656,237.7969 119.5,237.7969 C120.0781,237.7969 120.6875,237.9531 121.1563,238.2031 C121.6406,238.4844 121.8125,238.7031 121.9063,239.1094 C121.9688,239.5156 122,239.6406 122.1406,239.7656 C122.2813,239.9063 122.5156,240.0156 122.7344,240.0156 C123,240.0156 123.2656,239.875 123.4375,239.6563 C123.5469,239.5 123.5781,239.3125 123.5781,238.8906 L123.5781,237.4688 C123.5781,237.0313 123.5625,236.9063 123.4688,236.75 C123.3125,236.4844 123.0313,236.3438 122.7344,236.3438 C122.4375,236.3438 122.2344,236.4375 122.0156,236.75 L121.8438,236.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="133.5" y="245.8467">ExchangeFinder</text><line style="stroke:#181818;stroke-width:0.5;" x1="105.5" x2="249.5" y1="257" y2="257"/><line style="stroke:#181818;stroke-width:0.5;" x1="105.5" x2="249.5" y1="265" y2="265"/></g><!--class ExchangeCodec--><g id="elem_ExchangeCodec"><rect codeLine="10" fill="#F1F1F1" height="48" id="ExchangeCodec" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="147" x="433" y="225"/><ellipse cx="448" cy="241" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M448.9531,237.7813 L450.6719,237.7813 C451.0625,237.7813 451.25,237.75 451.375,237.6719 C451.6406,237.5156 451.7813,237.2344 451.7813,236.9375 C451.7813,236.6719 451.6719,236.4063 451.4375,236.2344 C451.2656,236.125 451.125,236.0938 450.6719,236.0938 L445.5313,236.0938 C445.0938,236.0938 444.9688,236.1094 444.8125,236.2031 C444.5625,236.3594 444.4063,236.6563 444.4063,236.9375 C444.4063,237.2188 444.5469,237.4688 444.7656,237.6406 C444.9219,237.75 445.1094,237.7813 445.5313,237.7813 L447.25,237.7813 L447.25,244.2969 L445.5313,244.2969 C445.0938,244.2969 444.9688,244.3125 444.8125,244.4219 C444.5625,244.5781 444.4063,244.8594 444.4063,245.1563 C444.4063,245.4063 444.5469,245.6719 444.7656,245.8281 C444.9219,245.9531 445.125,246 445.5313,246 L450.6719,246 C451.4219,246 451.7813,245.7188 451.7813,245.1563 C451.7813,244.875 451.6719,244.625 451.4375,244.4531 C451.2656,244.3281 451.125,244.2969 450.6719,244.2969 L448.9531,244.2969 L448.9531,237.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="115" x="462" y="245.8467">ExchangeCodec</text><line style="stroke:#181818;stroke-width:0.5;" x1="434" x2="579" y1="257" y2="257"/><line style="stroke:#181818;stroke-width:0.5;" x1="434" x2="579" y1="265" y2="265"/></g><!--class RealCall--><g id="elem_RealCall"><rect fill="#F1F1F1" height="48" id="RealCall" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="89" x="458" y="459"/><ellipse cx="473" cy="475" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M475.3438,470.6719 C474.4063,470.2344 473.8125,470.0938 472.9375,470.0938 C470.3125,470.0938 468.3125,472.1719 468.3125,474.8906 L468.3125,476.0156 C468.3125,478.5938 470.4219,480.4844 473.3125,480.4844 C474.5313,480.4844 475.6875,480.1875 476.4375,479.6406 C477.0156,479.2344 477.3438,478.7813 477.3438,478.3906 C477.3438,477.9375 476.9531,477.5469 476.4844,477.5469 C476.2656,477.5469 476.0625,477.625 475.875,477.8125 C475.4219,478.2969 475.4219,478.2969 475.2344,478.3906 C474.8125,478.6563 474.125,478.7813 473.3594,478.7813 C471.3125,478.7813 470.0156,477.6875 470.0156,475.9844 L470.0156,474.8906 C470.0156,473.1094 471.2656,471.7969 473,471.7969 C473.5781,471.7969 474.1875,471.9531 474.6563,472.2031 C475.1406,472.4844 475.3125,472.7031 475.4063,473.1094 C475.4688,473.5156 475.5,473.6406 475.6406,473.7656 C475.7813,473.9063 476.0156,474.0156 476.2344,474.0156 C476.5,474.0156 476.7656,473.875 476.9375,473.6563 C477.0469,473.5 477.0781,473.3125 477.0781,472.8906 L477.0781,471.4688 C477.0781,471.0313 477.0625,470.9063 476.9688,470.75 C476.8125,470.4844 476.5313,470.3438 476.2344,470.3438 C475.9375,470.3438 475.7344,470.4375 475.5156,470.75 L475.3438,470.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="487" y="479.8467">RealCall</text><line style="stroke:#181818;stroke-width:0.5;" x1="459" x2="546" y1="491" y2="491"/><line style="stroke:#181818;stroke-width:0.5;" x1="459" x2="546" y1="499" y2="499"/></g><!--class OkHttpClient--><g id="elem_OkHttpClient"><rect fill="#F1F1F1" height="48" id="OkHttpClient" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="129" x="438" y="568"/><ellipse cx="453" cy="584" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M455.3438,579.6719 C454.4063,579.2344 453.8125,579.0938 452.9375,579.0938 C450.3125,579.0938 448.3125,581.1719 448.3125,583.8906 L448.3125,585.0156 C448.3125,587.5938 450.4219,589.4844 453.3125,589.4844 C454.5313,589.4844 455.6875,589.1875 456.4375,588.6406 C457.0156,588.2344 457.3438,587.7813 457.3438,587.3906 C457.3438,586.9375 456.9531,586.5469 456.4844,586.5469 C456.2656,586.5469 456.0625,586.625 455.875,586.8125 C455.4219,587.2969 455.4219,587.2969 455.2344,587.3906 C454.8125,587.6563 454.125,587.7813 453.3594,587.7813 C451.3125,587.7813 450.0156,586.6875 450.0156,584.9844 L450.0156,583.8906 C450.0156,582.1094 451.2656,580.7969 453,580.7969 C453.5781,580.7969 454.1875,580.9531 454.6563,581.2031 C455.1406,581.4844 455.3125,581.7031 455.4063,582.1094 C455.4688,582.5156 455.5,582.6406 455.6406,582.7656 C455.7813,582.9063 456.0156,583.0156 456.2344,583.0156 C456.5,583.0156 456.7656,582.875 456.9375,582.6563 C457.0469,582.5 457.0781,582.3125 457.0781,581.8906 L457.0781,580.4688 C457.0781,580.0313 457.0625,579.9063 456.9688,579.75 C456.8125,579.4844 456.5313,579.3438 456.2344,579.3438 C455.9375,579.3438 455.7344,579.4375 455.5156,579.75 L455.3438,579.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="467" y="588.8467">OkHttpClient</text><line style="stroke:#181818;stroke-width:0.5;" x1="439" x2="566" y1="600" y2="600"/><line style="stroke:#181818;stroke-width:0.5;" x1="439" x2="566" y1="608" y2="608"/></g><!--class RealConnection--><g id="elem_RealConnection"><rect fill="#F1F1F1" height="48" id="RealConnection" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="230.5" y="334"/><ellipse cx="245.5" cy="350" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M247.8438,345.6719 C246.9063,345.2344 246.3125,345.0938 245.4375,345.0938 C242.8125,345.0938 240.8125,347.1719 240.8125,349.8906 L240.8125,351.0156 C240.8125,353.5938 242.9219,355.4844 245.8125,355.4844 C247.0313,355.4844 248.1875,355.1875 248.9375,354.6406 C249.5156,354.2344 249.8438,353.7813 249.8438,353.3906 C249.8438,352.9375 249.4531,352.5469 248.9844,352.5469 C248.7656,352.5469 248.5625,352.625 248.375,352.8125 C247.9219,353.2969 247.9219,353.2969 247.7344,353.3906 C247.3125,353.6563 246.625,353.7813 245.8594,353.7813 C243.8125,353.7813 242.5156,352.6875 242.5156,350.9844 L242.5156,349.8906 C242.5156,348.1094 243.7656,346.7969 245.5,346.7969 C246.0781,346.7969 246.6875,346.9531 247.1563,347.2031 C247.6406,347.4844 247.8125,347.7031 247.9063,348.1094 C247.9688,348.5156 248,348.6406 248.1406,348.7656 C248.2813,348.9063 248.5156,349.0156 248.7344,349.0156 C249,349.0156 249.2656,348.875 249.4375,348.6563 C249.5469,348.5 249.5781,348.3125 249.5781,347.8906 L249.5781,346.4688 C249.5781,346.0313 249.5625,345.9063 249.4688,345.75 C249.3125,345.4844 249.0313,345.3438 248.7344,345.3438 C248.4375,345.3438 248.2344,345.4375 248.0156,345.75 L247.8438,345.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="259.5" y="354.8467">RealConnection</text><line style="stroke:#181818;stroke-width:0.5;" x1="231.5" x2="375.5" y1="366" y2="366"/><line style="stroke:#181818;stroke-width:0.5;" x1="231.5" x2="375.5" y1="374" y2="374"/></g><!--class Http1ExchangeCodec--><g id="elem_Http1ExchangeCodec"><rect fill="#F1F1F1" height="48" id="Http1ExchangeCodec" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="189" x="412" y="334"/><ellipse cx="427" cy="350" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M429.3438,345.6719 C428.4063,345.2344 427.8125,345.0938 426.9375,345.0938 C424.3125,345.0938 422.3125,347.1719 422.3125,349.8906 L422.3125,351.0156 C422.3125,353.5938 424.4219,355.4844 427.3125,355.4844 C428.5313,355.4844 429.6875,355.1875 430.4375,354.6406 C431.0156,354.2344 431.3438,353.7813 431.3438,353.3906 C431.3438,352.9375 430.9531,352.5469 430.4844,352.5469 C430.2656,352.5469 430.0625,352.625 429.875,352.8125 C429.4219,353.2969 429.4219,353.2969 429.2344,353.3906 C428.8125,353.6563 428.125,353.7813 427.3594,353.7813 C425.3125,353.7813 424.0156,352.6875 424.0156,350.9844 L424.0156,349.8906 C424.0156,348.1094 425.2656,346.7969 427,346.7969 C427.5781,346.7969 428.1875,346.9531 428.6563,347.2031 C429.1406,347.4844 429.3125,347.7031 429.4063,348.1094 C429.4688,348.5156 429.5,348.6406 429.6406,348.7656 C429.7813,348.9063 430.0156,349.0156 430.2344,349.0156 C430.5,349.0156 430.7656,348.875 430.9375,348.6563 C431.0469,348.5 431.0781,348.3125 431.0781,347.8906 L431.0781,346.4688 C431.0781,346.0313 431.0625,345.9063 430.9688,345.75 C430.8125,345.4844 430.5313,345.3438 430.2344,345.3438 C429.9375,345.3438 429.7344,345.4375 429.5156,345.75 L429.3438,345.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="441" y="354.8467">Http1ExchangeCodec</text><line style="stroke:#181818;stroke-width:0.5;" x1="413" x2="600" y1="366" y2="366"/><line style="stroke:#181818;stroke-width:0.5;" x1="413" x2="600" y1="374" y2="374"/></g><!--class Http2ExchangeCodec--><g id="elem_Http2ExchangeCodec"><rect fill="#F1F1F1" height="48" id="Http2ExchangeCodec" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="188" x="636.5" y="334"/><ellipse cx="651.5" cy="350" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M653.8438,345.6719 C652.9063,345.2344 652.3125,345.0938 651.4375,345.0938 C648.8125,345.0938 646.8125,347.1719 646.8125,349.8906 L646.8125,351.0156 C646.8125,353.5938 648.9219,355.4844 651.8125,355.4844 C653.0313,355.4844 654.1875,355.1875 654.9375,354.6406 C655.5156,354.2344 655.8438,353.7813 655.8438,353.3906 C655.8438,352.9375 655.4531,352.5469 654.9844,352.5469 C654.7656,352.5469 654.5625,352.625 654.375,352.8125 C653.9219,353.2969 653.9219,353.2969 653.7344,353.3906 C653.3125,353.6563 652.625,353.7813 651.8594,353.7813 C649.8125,353.7813 648.5156,352.6875 648.5156,350.9844 L648.5156,349.8906 C648.5156,348.1094 649.7656,346.7969 651.5,346.7969 C652.0781,346.7969 652.6875,346.9531 653.1563,347.2031 C653.6406,347.4844 653.8125,347.7031 653.9063,348.1094 C653.9688,348.5156 654,348.6406 654.1406,348.7656 C654.2813,348.9063 654.5156,349.0156 654.7344,349.0156 C655,349.0156 655.2656,348.875 655.4375,348.6563 C655.5469,348.5 655.5781,348.3125 655.5781,347.8906 L655.5781,346.4688 C655.5781,346.0313 655.5625,345.9063 655.4688,345.75 C655.3125,345.4844 655.0313,345.3438 654.7344,345.3438 C654.4375,345.3438 654.2344,345.4375 654.0156,345.75 L653.8438,345.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="665.5" y="354.8467">Http2ExchangeCodec</text><line style="stroke:#181818;stroke-width:0.5;" x1="637.5" x2="823.5" y1="366" y2="366"/><line style="stroke:#181818;stroke-width:0.5;" x1="637.5" x2="823.5" y1="374" y2="374"/></g><!--class Socket--><g id="elem_Socket"><rect fill="#F1F1F1" height="48" id="Socket" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="83" x="340" y="459"/><ellipse cx="355" cy="475" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M357.3438,470.6719 C356.4063,470.2344 355.8125,470.0938 354.9375,470.0938 C352.3125,470.0938 350.3125,472.1719 350.3125,474.8906 L350.3125,476.0156 C350.3125,478.5938 352.4219,480.4844 355.3125,480.4844 C356.5313,480.4844 357.6875,480.1875 358.4375,479.6406 C359.0156,479.2344 359.3438,478.7813 359.3438,478.3906 C359.3438,477.9375 358.9531,477.5469 358.4844,477.5469 C358.2656,477.5469 358.0625,477.625 357.875,477.8125 C357.4219,478.2969 357.4219,478.2969 357.2344,478.3906 C356.8125,478.6563 356.125,478.7813 355.3594,478.7813 C353.3125,478.7813 352.0156,477.6875 352.0156,475.9844 L352.0156,474.8906 C352.0156,473.1094 353.2656,471.7969 355,471.7969 C355.5781,471.7969 356.1875,471.9531 356.6563,472.2031 C357.1406,472.4844 357.3125,472.7031 357.4063,473.1094 C357.4688,473.5156 357.5,473.6406 357.6406,473.7656 C357.7813,473.9063 358.0156,474.0156 358.2344,474.0156 C358.5,474.0156 358.7656,473.875 358.9375,473.6563 C359.0469,473.5 359.0781,473.3125 359.0781,472.8906 L359.0781,471.4688 C359.0781,471.0313 359.0625,470.9063 358.9688,470.75 C358.8125,470.4844 358.5313,470.3438 358.2344,470.3438 C357.9375,470.3438 357.7344,470.4375 357.5156,470.75 L357.3438,470.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="51" x="369" y="479.8467">Socket</text><line style="stroke:#181818;stroke-width:0.5;" x1="341" x2="422" y1="491" y2="491"/><line style="stroke:#181818;stroke-width:0.5;" x1="341" x2="422" y1="499" y2="499"/></g><!--class RealConnectionPool--><g id="elem_RealConnectionPool"><rect fill="#F1F1F1" height="48" id="RealConnectionPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="177" x="128" y="459"/><ellipse cx="143" cy="475" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M145.3438,470.6719 C144.4063,470.2344 143.8125,470.0938 142.9375,470.0938 C140.3125,470.0938 138.3125,472.1719 138.3125,474.8906 L138.3125,476.0156 C138.3125,478.5938 140.4219,480.4844 143.3125,480.4844 C144.5313,480.4844 145.6875,480.1875 146.4375,479.6406 C147.0156,479.2344 147.3438,478.7813 147.3438,478.3906 C147.3438,477.9375 146.9531,477.5469 146.4844,477.5469 C146.2656,477.5469 146.0625,477.625 145.875,477.8125 C145.4219,478.2969 145.4219,478.2969 145.2344,478.3906 C144.8125,478.6563 144.125,478.7813 143.3594,478.7813 C141.3125,478.7813 140.0156,477.6875 140.0156,475.9844 L140.0156,474.8906 C140.0156,473.1094 141.2656,471.7969 143,471.7969 C143.5781,471.7969 144.1875,471.9531 144.6563,472.2031 C145.1406,472.4844 145.3125,472.7031 145.4063,473.1094 C145.4688,473.5156 145.5,473.6406 145.6406,473.7656 C145.7813,473.9063 146.0156,474.0156 146.2344,474.0156 C146.5,474.0156 146.7656,473.875 146.9375,473.6563 C147.0469,473.5 147.0781,473.3125 147.0781,472.8906 L147.0781,471.4688 C147.0781,471.0313 147.0625,470.9063 146.9688,470.75 C146.8125,470.4844 146.5313,470.3438 146.2344,470.3438 C145.9375,470.3438 145.7344,470.4375 145.5156,470.75 L145.3438,470.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="157" y="479.8467">RealConnectionPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="129" x2="304" y1="491" y2="491"/><line style="stroke:#181818;stroke-width:0.5;" x1="129" x2="304" y1="499" y2="499"/></g><!--class Address--><g id="elem_Address"><rect fill="#F1F1F1" height="48" id="Address" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="89" x="32" y="334"/><ellipse cx="47" cy="350" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M49.3438,345.6719 C48.4063,345.2344 47.8125,345.0938 46.9375,345.0938 C44.3125,345.0938 42.3125,347.1719 42.3125,349.8906 L42.3125,351.0156 C42.3125,353.5938 44.4219,355.4844 47.3125,355.4844 C48.5313,355.4844 49.6875,355.1875 50.4375,354.6406 C51.0156,354.2344 51.3438,353.7813 51.3438,353.3906 C51.3438,352.9375 50.9531,352.5469 50.4844,352.5469 C50.2656,352.5469 50.0625,352.625 49.875,352.8125 C49.4219,353.2969 49.4219,353.2969 49.2344,353.3906 C48.8125,353.6563 48.125,353.7813 47.3594,353.7813 C45.3125,353.7813 44.0156,352.6875 44.0156,350.9844 L44.0156,349.8906 C44.0156,348.1094 45.2656,346.7969 47,346.7969 C47.5781,346.7969 48.1875,346.9531 48.6563,347.2031 C49.1406,347.4844 49.3125,347.7031 49.4063,348.1094 C49.4688,348.5156 49.5,348.6406 49.6406,348.7656 C49.7813,348.9063 50.0156,349.0156 50.2344,349.0156 C50.5,349.0156 50.7656,348.875 50.9375,348.6563 C51.0469,348.5 51.0781,348.3125 51.0781,347.8906 L51.0781,346.4688 C51.0781,346.0313 51.0625,345.9063 50.9688,345.75 C50.8125,345.4844 50.5313,345.3438 50.2344,345.3438 C49.9375,345.3438 49.7344,345.4375 49.5156,345.75 L49.3438,345.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="61" y="354.8467">Address</text><line style="stroke:#181818;stroke-width:0.5;" x1="33" x2="120" y1="366" y2="366"/><line style="stroke:#181818;stroke-width:0.5;" x1="33" x2="120" y1="374" y2="374"/></g><!--class Dns--><g id="elem_Dns"><rect fill="#F1F1F1" height="48" id="Dns" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="59" x="34" y="459"/><ellipse cx="49" cy="475" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M51.3438,470.6719 C50.4063,470.2344 49.8125,470.0938 48.9375,470.0938 C46.3125,470.0938 44.3125,472.1719 44.3125,474.8906 L44.3125,476.0156 C44.3125,478.5938 46.4219,480.4844 49.3125,480.4844 C50.5313,480.4844 51.6875,480.1875 52.4375,479.6406 C53.0156,479.2344 53.3438,478.7813 53.3438,478.3906 C53.3438,477.9375 52.9531,477.5469 52.4844,477.5469 C52.2656,477.5469 52.0625,477.625 51.875,477.8125 C51.4219,478.2969 51.4219,478.2969 51.2344,478.3906 C50.8125,478.6563 50.125,478.7813 49.3594,478.7813 C47.3125,478.7813 46.0156,477.6875 46.0156,475.9844 L46.0156,474.8906 C46.0156,473.1094 47.2656,471.7969 49,471.7969 C49.5781,471.7969 50.1875,471.9531 50.6563,472.2031 C51.1406,472.4844 51.3125,472.7031 51.4063,473.1094 C51.4688,473.5156 51.5,473.6406 51.6406,473.7656 C51.7813,473.9063 52.0156,474.0156 52.2344,474.0156 C52.5,474.0156 52.7656,473.875 52.9375,473.6563 C53.0469,473.5 53.0781,473.3125 53.0781,472.8906 L53.0781,471.4688 C53.0781,471.0313 53.0625,470.9063 52.9688,470.75 C52.8125,470.4844 52.5313,470.3438 52.2344,470.3438 C51.9375,470.3438 51.7344,470.4375 51.5156,470.75 L51.3438,470.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="27" x="63" y="479.8467">Dns</text><line style="stroke:#181818;stroke-width:0.5;" x1="35" x2="92" y1="491" y2="491"/><line style="stroke:#181818;stroke-width:0.5;" x1="35" x2="92" y1="499" y2="499"/></g><!--class DnsSystem--><g id="elem_DnsSystem"><rect fill="#F1F1F1" height="48" id="DnsSystem" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="113" x="7" y="568"/><ellipse cx="22" cy="584" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,579.6719 C23.4063,579.2344 22.8125,579.0938 21.9375,579.0938 C19.3125,579.0938 17.3125,581.1719 17.3125,583.8906 L17.3125,585.0156 C17.3125,587.5938 19.4219,589.4844 22.3125,589.4844 C23.5313,589.4844 24.6875,589.1875 25.4375,588.6406 C26.0156,588.2344 26.3438,587.7813 26.3438,587.3906 C26.3438,586.9375 25.9531,586.5469 25.4844,586.5469 C25.2656,586.5469 25.0625,586.625 24.875,586.8125 C24.4219,587.2969 24.4219,587.2969 24.2344,587.3906 C23.8125,587.6563 23.125,587.7813 22.3594,587.7813 C20.3125,587.7813 19.0156,586.6875 19.0156,584.9844 L19.0156,583.8906 C19.0156,582.1094 20.2656,580.7969 22,580.7969 C22.5781,580.7969 23.1875,580.9531 23.6563,581.2031 C24.1406,581.4844 24.3125,581.7031 24.4063,582.1094 C24.4688,582.5156 24.5,582.6406 24.6406,582.7656 C24.7813,582.9063 25.0156,583.0156 25.2344,583.0156 C25.5,583.0156 25.7656,582.875 25.9375,582.6563 C26.0469,582.5 26.0781,582.3125 26.0781,581.8906 L26.0781,580.4688 C26.0781,580.0313 26.0625,579.9063 25.9688,579.75 C25.8125,579.4844 25.5313,579.3438 25.2344,579.3438 C24.9375,579.3438 24.7344,579.4375 24.5156,579.75 L24.3438,579.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="36" y="588.8467">DnsSystem</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="119" y1="600" y2="600"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="119" y1="608" y2="608"/></g><!--link ConnectInterceptor to RealInterceptorChain--><g id="link_ConnectInterceptor_RealInterceptorChain"><path codeLine="1" d="M370.566,55.217 C361.34,73.165 351.3729,92.5556 342.1539,110.4916 " fill="none" id="ConnectInterceptor-to-RealInterceptorChain" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="339.411,115.828,347.0829,109.652,341.6967,111.381,339.9677,105.9949,339.411,115.828" style="stroke:#181818;stroke-width:1.0;"/></g><!--link ConnectInterceptor to Exchange--><g id="link_ConnectInterceptor_Exchange"><path codeLine="2" d="M409.406,55.217 C430.205,73.165 454.3185,93.9721 475.1035,111.9081 " fill="none" id="ConnectInterceptor-to-Exchange" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="479.646,115.828,475.4455,106.9198,475.8606,112.5614,470.219,112.9765,479.646,115.828" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Exchange to ExchangeFinder--><g id="link_Exchange_ExchangeFinder"><path codeLine="3" d="M444.2795,162.1028 C438.4965,164.0418 444.062,162.164 438.5,164 C374.989,184.96 302.575,208.215 250.161,224.932 " fill="none" id="Exchange-backto-ExchangeFinder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="455.657,158.288,448.6967,156.4029,444.2795,162.1028,451.2399,163.9879,455.657,158.288" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Exchange to ExchangeCodec--><g id="link_Exchange_ExchangeCodec"><path codeLine="4" d="M506.5,176.217 C506.5,194.165 506.5,206.892 506.5,224.828 " fill="none" id="Exchange-backto-ExchangeCodec" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="506.5,164.217,502.5,170.217,506.5,176.217,510.5,170.217,506.5,164.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Exchange to RealCall--><g id="link_Exchange_RealCall"><path codeLine="5" d="M568.665,156.3155 C682.196,186.2295 929.267,266.038 842.5,382 C806.837,429.663 630.836,462.405 547.024,475.552 " fill="none" id="Exchange-backto-RealCall" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="557.061,153.258,561.8438,158.6547,568.665,156.3155,563.8821,150.9188,557.061,153.258" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RealCall to OkHttpClient--><g id="link_RealCall_OkHttpClient"><path codeLine="7" d="M502.5,519.217 C502.5,537.1649 502.5,549.8918 502.5,567.8279 " fill="none" id="RealCall-backto-OkHttpClient" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="502.5,507.217,498.5,513.217,502.5,519.217,506.5,513.217,502.5,507.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RealConnection to RealCall--><g id="link_RealConnection_RealCall"><path codeLine="8" d="M359.4021,387.0085 C377.7161,395.3165 387.589,400.547 405.5,412 C426.49,425.422 447.589,444.154 465.339,458.864 " fill="none" id="RealConnection-backto-RealCall" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="348.474,382.051,352.2856,388.1724,359.4021,387.0085,355.5905,380.887,348.474,382.051" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="350.9736" y="402.2199">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="24" x="428.7415" y="447.8412">0..n</text></g><!--reverse link RealCall to RealConnection--><g id="link_RealCall_RealConnection"><path codeLine="9" d="M487.3935,449.7555 C474.7765,435.0455 461.49,425.422 440.5,412 C421.065,399.573 398.226,388.634 376.642,379.972 " fill="none" id="RealCall-backto-RealConnection" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="495.206,458.864,494.3359,451.7056,487.3935,449.7555,488.2636,456.9139,495.206,458.864" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ExchangeCodec to RealConnection--><g id="link_ExchangeCodec_RealConnection"><path codeLine="11" d="M451.8364,278.8125 C417.7864,296.7605 381.49,315.892 347.462,333.828 " fill="none" id="ExchangeCodec-backto-RealConnection" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="462.452,273.217,455.279,272.4762,451.8364,278.8125,459.0094,279.5533,462.452,273.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ExchangeCodec to Http1ExchangeCodec--><g id="link_ExchangeCodec_Http1ExchangeCodec"><path codeLine="12" d="M506.5,291.217 C506.5,309.165 506.5,315.892 506.5,333.828 " fill="none" id="ExchangeCodec-backto-Http1ExchangeCodec" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="506.5,273.217,500.5,291.217,512.5,291.217,506.5,273.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ExchangeCodec to Http2ExchangeCodec--><g id="link_ExchangeCodec_Http2ExchangeCodec"><path codeLine="13" d="M571.0712,280.8444 C608.7542,298.8444 644.596,315.966 682.258,333.956 " fill="none" id="ExchangeCodec-backto-Http2ExchangeCodec" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="554.829,273.086,568.485,286.2584,573.6573,275.4303,554.829,273.086" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RealConnection to Socket--><g id="link_RealConnection_Socket"><path codeLine="14" d="M287.3589,393.2645 C281.7879,407.5945 282.307,414.747 290.5,429 C296.286,439.065 318.727,452.188 339.874,462.857 " fill="none" id="RealConnection-backto-Socket" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="291.707,382.08,285.8048,386.2229,287.3589,393.2645,293.2611,389.1216,291.707,382.08" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="291.5" y="425.0669">rawSocket</text></g><!--reverse link RealConnection to Socket--><g id="link_RealConnection_Socket"><path codeLine="15" d="M345.8229,389.911 C355.7249,398.289 356.604,400.74 363.5,412 C372.216,426.232 376.734,444.57 379.063,458.906 " fill="none" id="RealConnection-backto-Socket-1" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="336.662,382.16,338.6588,389.0891,345.8229,389.911,343.8261,382.9818,336.662,382.16" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="42" x="371.5" y="425.0669">socket</text></g><!--reverse link ExchangeFinder to RealConnectionPool--><g id="link_ExchangeFinder_RealConnectionPool"><path codeLine="17" d="M183.3713,284.927 C190.8273,329.282 205.087,414.104 212.576,458.656 " fill="none" id="ExchangeFinder-backto-RealConnectionPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="181.382,273.093,178.432,279.6731,183.3713,284.927,186.3213,278.3469,181.382,273.093" style="stroke:#181818;stroke-width:1.0;"/></g><!--link RealConnection to RealConnectionPool--><g id="link_RealConnection_RealConnectionPool"><path codeLine="18" d="M287.136,382.135 C271.582,404.126 255.2506,427.215 239.7206,449.171 " fill="none" id="RealConnection-to-RealConnectionPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="232.791,458.968,239.5215,456.3794,239.7206,449.171,232.9902,451.7596,232.791,458.968" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="24" x="256.2223" y="401.9291">0..n</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="227.9406" y="447.9718">1</text></g><!--reverse link ExchangeFinder to Address--><g id="link_ExchangeFinder_Address"><path codeLine="19" d="M147.3478,281.9433 C130.4058,299.8913 115.303,315.892 98.3727,333.828 " fill="none" id="ExchangeFinder-backto-Address" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="155.585,273.217,148.5576,274.8344,147.3478,281.9433,154.3752,280.3259,155.585,273.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Address to Dns--><g id="link_Address_Dns"><path codeLine="20" d="M72.7936,394.0685 C70.4694,416.0595 68.2548,437.012 65.9342,458.968 " fill="none" id="Address-backto-Dns" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="74.0548,382.135,69.4463,387.6814,72.7936,394.0685,77.402,388.5222,74.0548,382.135" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Dns to DnsSystem--><g id="link_Dns_DnsSystem"><path codeLine="21" d="M63.5,525.217 C63.5,543.1649 63.5,549.8918 63.5,567.8279 " fill="none" id="Dns-backto-DnsSystem" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="63.5,507.217,57.5,525.217,69.5,525.217,63.5,507.217" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[VL3H2W8X47ptA-GU0wDwZ0Z2YdegkYyGRol9rb2XWZw-E-qgoteGnzdPTNQuGGJfb-Z1IZXvOobZOxe1eTyulXSA2SzhPnUv5xW3qWBQOUp9pXLMOFCrRYgGQQdvc0kj2MbHe5U7XVSdhXMWZvNeHHcaHRy8cgBNxMBncf0CI7k8QdRO2Wa_l8HNhZ4LZ6wred7M_pVcgHgageyzcjzA8m_WwP1QSOxuhyf52Kd3plXU6wE_SejvCTO94MOQCcCdLMN1EVAu0pT5H-eJzwn1UNKUZdS0]--></g></svg>

<h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>https证书校验在<code>okhttp3.internal.tls.OkHostnameVerifier#verify(java.lang.String, javax.net.ssl.SSLSession)</code></p>
]]></content>
      <categories>
        <category>okhttp</category>
      </categories>
      <tags>
        <tag>okhttp</tag>
      </tags>
  </entry>
  <entry>
    <title>okhttp详解系列二：重试重定向拦截器</title>
    <url>/posts/8e83ed63.html</url>
    <content><![CDATA[<ul>
<li><a href="/posts/78efaca4.html" title="okhttp详解系列一：开篇">okhttp详解系列一：开篇</a></li>
<li><a href="/posts/8e83ed63.html" title="okhttp详解系列二：重试重定向拦截器">okhttp详解系列二：重试重定向拦截器</a></li>
<li><a href="/posts/6e2b1d41.html" title="okhttp详解系列三：桥拦截器 BridgeInterceptor">okhttp详解系列三：桥拦截器 BridgeInterceptor</a></li>
<li><a href="/posts/37107c2e.html" title="okhttp详解系列四：缓存拦截器">okhttp详解系列四：缓存拦截器</a></li>
<li><a href="/posts/ee27d764.html" title="okhttp详解系列五：连接拦截器 ConnectInterceptor">okhttp详解系列五：连接拦截器 ConnectInterceptor</a></li>
<li><a href="/posts/73cf04e1.html" title="okhttp详解系列六：服务请求拦截器 CallServerInterceptor">okhttp详解系列六：服务请求拦截器 CallServerInterceptor</a>

</li>
</ul>
<p>重试和重定向拦截器主要负责三件事：1) 出错后判断是否重试；2) 处理重定向；3) 处理用户认证（401和407响应码）；</p>
<p>来看下源码：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">intercept</span><span class="params">(chain: <span class="type">Interceptor</span>.<span class="type">Chain</span>)</span></span>: Response &#123;</span><br><span class="line">  <span class="keyword">val</span> realChain = chain <span class="keyword">as</span> RealInterceptorChain</span><br><span class="line">  <span class="keyword">var</span> request = chain.request</span><br><span class="line">  <span class="keyword">val</span> call = realChain.call</span><br><span class="line">  <span class="keyword">var</span> followUpCount = <span class="number">0</span></span><br><span class="line">  <span class="keyword">var</span> priorResponse: Response? = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">var</span> newExchangeFinder = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">var</span> recoveredFailures = listOf&lt;IOException&gt;()</span><br><span class="line">  <span class="comment">// 1、重试和重定向的场景依然是在while循环中，不会退出该拦截器</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="comment">// 2、根据需要创建 ExchangeFinder</span></span><br><span class="line">    call.enterNetworkInterceptorExchange(request, newExchangeFinder)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> response: Response</span><br><span class="line">    <span class="keyword">var</span> closeActiveExchange = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (call.isCanceled()) &#123;</span><br><span class="line">        <span class="keyword">throw</span> IOException(<span class="string">&quot;Canceled&quot;</span>)</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 3、realChain指向下一个拦截器，发生重试或者重定向后，</span></span><br><span class="line">        <span class="comment">// 会从下一个拦截器开始执行，前面的应用拦截器和此拦截器都不会被执行了</span></span><br><span class="line">        response = realChain.proceed(request)</span><br><span class="line">        newExchangeFinder = <span class="literal">true</span></span><br><span class="line">      &#125; <span class="keyword">catch</span> (e: RouteException) &#123;</span><br><span class="line">        <span class="comment">// The attempt to connect via a route failed. The request will not have been sent.</span></span><br><span class="line">        <span class="keyword">if</span> (!recover(e.lastConnectException, call, request, requestSendStarted = <span class="literal">false</span>)) &#123;</span><br><span class="line">          <span class="keyword">throw</span> e.firstConnectException.withSuppressed(recoveredFailures)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          recoveredFailures += e.firstConnectException</span><br><span class="line">        &#125;</span><br><span class="line">        newExchangeFinder = <span class="literal">false</span></span><br><span class="line">        <span class="comment">// 4、错误可以恢复，继续while循环</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">      &#125; <span class="keyword">catch</span> (e: IOException) &#123;</span><br><span class="line">        <span class="comment">// An attempt to communicate with a server failed. The request may have been sent.</span></span><br><span class="line">        <span class="keyword">if</span> (!recover(e, call, request, requestSendStarted = e !<span class="keyword">is</span> ConnectionShutdownException)) &#123;</span><br><span class="line">          <span class="keyword">throw</span> e.withSuppressed(recoveredFailures)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          recoveredFailures += e</span><br><span class="line">        &#125;</span><br><span class="line">        newExchangeFinder = <span class="literal">false</span></span><br><span class="line">        <span class="comment">// 5、错误可以恢复，继续while循环</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      ......</span><br><span class="line"></span><br><span class="line">      <span class="keyword">val</span> exchange = call.interceptorScopedExchange</span><br><span class="line">      <span class="comment">// 6、followUpRequest是判断是否重试的主要逻辑，包括重定向、超时重试、用户认证等场景</span></span><br><span class="line">      <span class="keyword">val</span> followUp = followUpRequest(response, exchange)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (followUp == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (exchange != <span class="literal">null</span> &amp;&amp; exchange.isDuplex) &#123;</span><br><span class="line">          call.timeoutEarlyExit()</span><br><span class="line">        &#125;</span><br><span class="line">        closeActiveExchange = <span class="literal">false</span></span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">val</span> followUpBody = followUp.body</span><br><span class="line">      <span class="keyword">if</span> (followUpBody != <span class="literal">null</span> &amp;&amp; followUpBody.isOneShot()) &#123;</span><br><span class="line">        closeActiveExchange = <span class="literal">false</span></span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      response.body?.closeQuietly()</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (++followUpCount &gt; MAX_FOLLOW_UPS) &#123;</span><br><span class="line">        <span class="keyword">throw</span> ProtocolException(<span class="string">&quot;Too many follow-up requests: <span class="variable">$followUpCount</span>&quot;</span>)</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      request = followUp</span><br><span class="line">      priorResponse = response</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      call.exitNetworkInterceptorExchange(closeActiveExchange)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="应用拦截器只会被执行一次的原因"><a href="#应用拦截器只会被执行一次的原因" class="headerlink" title="应用拦截器只会被执行一次的原因"></a>应用拦截器只会被执行一次的原因</h2><p>我们都知道okhttp支持两种类型的用户层拦截器：应用拦截器(Application Interceptors)和网络拦截器(Network Interceptors)。应用拦截器每次发起请求都会被保证执行一次，即使发生了重试和重定向也是被执行一次。而网络拦截器在重试和重定向的场景都会被执行多次，而且缓存的场景可能不会被执行。这种差异是什么原因导致的呢？</p>
<p>RetryAndFollowUpInterceptor拦截器使用了一个while循环，当需要重试或者重定向时，不会退出循环，继续执行<code>chain.proceed()</code>，这个chain就是RealInterceptorChain。在分析RealInterceptorChain的proceed()方法时，我们知道每次执行下一个拦截器时，都会把RealInterceptorChain拷贝一份，chain的index就指向下一个拦截器。所以重试和重定向的情况都会从下一个拦截器开始，而用户注册的程序拦截器在RetryAndFollowUpInterceptor前面，这就是即使发生了重试和重定向程序拦截器也会只被执行一次的根本原因。而网络拦截器排在RetryAndFollowUpInterceptor后面，所以会被执行多次。</p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ol>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Authentication">HTTP 身份验证</a></li>
</ol>
]]></content>
      <categories>
        <category>okhttp</category>
      </categories>
      <tags>
        <tag>okhttp</tag>
      </tags>
  </entry>
  <entry>
    <title>okhttp详解系列一：开篇</title>
    <url>/posts/78efaca4.html</url>
    <content><![CDATA[<ul>
<li><a href="/posts/78efaca4.html" title="okhttp详解系列一：开篇">okhttp详解系列一：开篇</a></li>
<li><a href="/posts/8e83ed63.html" title="okhttp详解系列二：重试重定向拦截器">okhttp详解系列二：重试重定向拦截器</a></li>
<li><a href="/posts/6e2b1d41.html" title="okhttp详解系列三：桥拦截器 BridgeInterceptor">okhttp详解系列三：桥拦截器 BridgeInterceptor</a></li>
<li><a href="/posts/37107c2e.html" title="okhttp详解系列四：缓存拦截器">okhttp详解系列四：缓存拦截器</a></li>
<li><a href="/posts/ee27d764.html" title="okhttp详解系列五：连接拦截器 ConnectInterceptor">okhttp详解系列五：连接拦截器 ConnectInterceptor</a></li>
<li><a href="/posts/73cf04e1.html" title="okhttp详解系列六：服务请求拦截器 CallServerInterceptor">okhttp详解系列六：服务请求拦截器 CallServerInterceptor</a>

</li>
</ul>
<h2 id="okhttp-整体架构"><a href="#okhttp-整体架构" class="headerlink" title="okhttp 整体架构"></a>okhttp 整体架构</h2><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="435px" preserveAspectRatio="none" style="width:839px;height:435px;background:#FFFFFF;" version="1.1" viewBox="0 0 839 435" width="839px" zoomAndPan="magnify"><defs/><g><!--class RealCall--><g id="elem_RealCall"><rect fill="#F1F1F1" height="48" id="RealCall" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="89" x="407" y="7"/><ellipse cx="422" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M424.3438,18.6719 C423.4063,18.2344 422.8125,18.0938 421.9375,18.0938 C419.3125,18.0938 417.3125,20.1719 417.3125,22.8906 L417.3125,24.0156 C417.3125,26.5938 419.4219,28.4844 422.3125,28.4844 C423.5313,28.4844 424.6875,28.1875 425.4375,27.6406 C426.0156,27.2344 426.3438,26.7813 426.3438,26.3906 C426.3438,25.9375 425.9531,25.5469 425.4844,25.5469 C425.2656,25.5469 425.0625,25.625 424.875,25.8125 C424.4219,26.2969 424.4219,26.2969 424.2344,26.3906 C423.8125,26.6563 423.125,26.7813 422.3594,26.7813 C420.3125,26.7813 419.0156,25.6875 419.0156,23.9844 L419.0156,22.8906 C419.0156,21.1094 420.2656,19.7969 422,19.7969 C422.5781,19.7969 423.1875,19.9531 423.6563,20.2031 C424.1406,20.4844 424.3125,20.7031 424.4063,21.1094 C424.4688,21.5156 424.5,21.6406 424.6406,21.7656 C424.7813,21.9063 425.0156,22.0156 425.2344,22.0156 C425.5,22.0156 425.7656,21.875 425.9375,21.6563 C426.0469,21.5 426.0781,21.3125 426.0781,20.8906 L426.0781,19.4688 C426.0781,19.0313 426.0625,18.9063 425.9688,18.75 C425.8125,18.4844 425.5313,18.3438 425.2344,18.3438 C424.9375,18.3438 424.7344,18.4375 424.5156,18.75 L424.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="436" y="27.8467">RealCall</text><line style="stroke:#181818;stroke-width:0.5;" x1="408" x2="495" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="408" x2="495" y1="47" y2="47"/></g><!--class OkHttpClient--><g id="elem_OkHttpClient"><rect fill="#F1F1F1" height="48" id="OkHttpClient" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="129" x="531" y="7"/><ellipse cx="546" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M548.3438,18.6719 C547.4063,18.2344 546.8125,18.0938 545.9375,18.0938 C543.3125,18.0938 541.3125,20.1719 541.3125,22.8906 L541.3125,24.0156 C541.3125,26.5938 543.4219,28.4844 546.3125,28.4844 C547.5313,28.4844 548.6875,28.1875 549.4375,27.6406 C550.0156,27.2344 550.3438,26.7813 550.3438,26.3906 C550.3438,25.9375 549.9531,25.5469 549.4844,25.5469 C549.2656,25.5469 549.0625,25.625 548.875,25.8125 C548.4219,26.2969 548.4219,26.2969 548.2344,26.3906 C547.8125,26.6563 547.125,26.7813 546.3594,26.7813 C544.3125,26.7813 543.0156,25.6875 543.0156,23.9844 L543.0156,22.8906 C543.0156,21.1094 544.2656,19.7969 546,19.7969 C546.5781,19.7969 547.1875,19.9531 547.6563,20.2031 C548.1406,20.4844 548.3125,20.7031 548.4063,21.1094 C548.4688,21.5156 548.5,21.6406 548.6406,21.7656 C548.7813,21.9063 549.0156,22.0156 549.2344,22.0156 C549.5,22.0156 549.7656,21.875 549.9375,21.6563 C550.0469,21.5 550.0781,21.3125 550.0781,20.8906 L550.0781,19.4688 C550.0781,19.0313 550.0625,18.9063 549.9688,18.75 C549.8125,18.4844 549.5313,18.3438 549.2344,18.3438 C548.9375,18.3438 548.7344,18.4375 548.5156,18.75 L548.3438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="560" y="27.8467">OkHttpClient</text><line style="stroke:#181818;stroke-width:0.5;" x1="532" x2="659" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="532" x2="659" y1="47" y2="47"/></g><!--class RealInterceptorChain--><g id="elem_RealInterceptorChain"><rect codeLine="10" fill="#F1F1F1" height="96.8906" id="RealInterceptorChain" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="244" x="329.5" y="115"/><ellipse cx="370.15" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M372.4938,126.6719 C371.5563,126.2344 370.9625,126.0938 370.0875,126.0938 C367.4625,126.0938 365.4625,128.1719 365.4625,130.8906 L365.4625,132.0156 C365.4625,134.5938 367.5719,136.4844 370.4625,136.4844 C371.6813,136.4844 372.8375,136.1875 373.5875,135.6406 C374.1656,135.2344 374.4938,134.7813 374.4938,134.3906 C374.4938,133.9375 374.1031,133.5469 373.6344,133.5469 C373.4156,133.5469 373.2125,133.625 373.025,133.8125 C372.5719,134.2969 372.5719,134.2969 372.3844,134.3906 C371.9625,134.6563 371.275,134.7813 370.5094,134.7813 C368.4625,134.7813 367.1656,133.6875 367.1656,131.9844 L367.1656,130.8906 C367.1656,129.1094 368.4156,127.7969 370.15,127.7969 C370.7281,127.7969 371.3375,127.9531 371.8063,128.2031 C372.2906,128.4844 372.4625,128.7031 372.5563,129.1094 C372.6188,129.5156 372.65,129.6406 372.7906,129.7656 C372.9313,129.9063 373.1656,130.0156 373.3844,130.0156 C373.65,130.0156 373.9156,129.875 374.0875,129.6563 C374.1969,129.5 374.2281,129.3125 374.2281,128.8906 L374.2281,127.4688 C374.2281,127.0313 374.2125,126.9063 374.1188,126.75 C373.9625,126.4844 373.6813,126.3438 373.3844,126.3438 C373.0875,126.3438 372.8844,126.4375 372.6656,126.75 L372.4938,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="389.85" y="135.8467">RealInterceptorChain</text><line style="stroke:#181818;stroke-width:0.5;" x1="330.5" x2="572.5" y1="147" y2="147"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="335.5" y="163.9951">index: Int</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="232" x="335.5" y="180.292">interceptors: List&lt;Interceptor&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="330.5" x2="572.5" y1="187.5938" y2="187.5938"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="335.5" y="204.5889">Response proceed(Request r)</text></g><!--class Interceptor--><g id="elem_Interceptor"><rect codeLine="9" fill="#F1F1F1" height="48" id="Interceptor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="111" x="231" y="272"/><ellipse cx="246" cy="288" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M246.9531,284.7813 L248.6719,284.7813 C249.0625,284.7813 249.25,284.75 249.375,284.6719 C249.6406,284.5156 249.7813,284.2344 249.7813,283.9375 C249.7813,283.6719 249.6719,283.4063 249.4375,283.2344 C249.2656,283.125 249.125,283.0938 248.6719,283.0938 L243.5313,283.0938 C243.0938,283.0938 242.9688,283.1094 242.8125,283.2031 C242.5625,283.3594 242.4063,283.6563 242.4063,283.9375 C242.4063,284.2188 242.5469,284.4688 242.7656,284.6406 C242.9219,284.75 243.1094,284.7813 243.5313,284.7813 L245.25,284.7813 L245.25,291.2969 L243.5313,291.2969 C243.0938,291.2969 242.9688,291.3125 242.8125,291.4219 C242.5625,291.5781 242.4063,291.8594 242.4063,292.1563 C242.4063,292.4063 242.5469,292.6719 242.7656,292.8281 C242.9219,292.9531 243.125,293 243.5313,293 L248.6719,293 C249.4219,293 249.7813,292.7188 249.7813,292.1563 C249.7813,291.875 249.6719,291.625 249.4375,291.4531 C249.2656,291.3281 249.125,291.2969 248.6719,291.2969 L246.9531,291.2969 L246.9531,284.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="79" x="260" y="292.8467">Interceptor</text><line style="stroke:#181818;stroke-width:0.5;" x1="232" x2="341" y1="304" y2="304"/><line style="stroke:#181818;stroke-width:0.5;" x1="232" x2="341" y1="312" y2="312"/></g><!--class ExchangeFinder--><g id="elem_ExchangeFinder"><rect fill="#F1F1F1" height="48" id="ExchangeFinder" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="146" x="670.5" y="272"/><ellipse cx="685.5" cy="288" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M687.8438,283.6719 C686.9063,283.2344 686.3125,283.0938 685.4375,283.0938 C682.8125,283.0938 680.8125,285.1719 680.8125,287.8906 L680.8125,289.0156 C680.8125,291.5938 682.9219,293.4844 685.8125,293.4844 C687.0313,293.4844 688.1875,293.1875 688.9375,292.6406 C689.5156,292.2344 689.8438,291.7813 689.8438,291.3906 C689.8438,290.9375 689.4531,290.5469 688.9844,290.5469 C688.7656,290.5469 688.5625,290.625 688.375,290.8125 C687.9219,291.2969 687.9219,291.2969 687.7344,291.3906 C687.3125,291.6563 686.625,291.7813 685.8594,291.7813 C683.8125,291.7813 682.5156,290.6875 682.5156,288.9844 L682.5156,287.8906 C682.5156,286.1094 683.7656,284.7969 685.5,284.7969 C686.0781,284.7969 686.6875,284.9531 687.1563,285.2031 C687.6406,285.4844 687.8125,285.7031 687.9063,286.1094 C687.9688,286.5156 688,286.6406 688.1406,286.7656 C688.2813,286.9063 688.5156,287.0156 688.7344,287.0156 C689,287.0156 689.2656,286.875 689.4375,286.6563 C689.5469,286.5 689.5781,286.3125 689.5781,285.8906 L689.5781,284.4688 C689.5781,284.0313 689.5625,283.9063 689.4688,283.75 C689.3125,283.4844 689.0313,283.3438 688.7344,283.3438 C688.4375,283.3438 688.2344,283.4375 688.0156,283.75 L687.8438,283.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="699.5" y="292.8467">ExchangeFinder</text><line style="stroke:#181818;stroke-width:0.5;" x1="671.5" x2="815.5" y1="304" y2="304"/><line style="stroke:#181818;stroke-width:0.5;" x1="671.5" x2="815.5" y1="312" y2="312"/></g><!--class RealConnectionPool--><g id="elem_RealConnectionPool"><rect fill="#F1F1F1" height="48" id="RealConnectionPool" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="177" x="655" y="380"/><ellipse cx="670" cy="396" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M672.3438,391.6719 C671.4063,391.2344 670.8125,391.0938 669.9375,391.0938 C667.3125,391.0938 665.3125,393.1719 665.3125,395.8906 L665.3125,397.0156 C665.3125,399.5938 667.4219,401.4844 670.3125,401.4844 C671.5313,401.4844 672.6875,401.1875 673.4375,400.6406 C674.0156,400.2344 674.3438,399.7813 674.3438,399.3906 C674.3438,398.9375 673.9531,398.5469 673.4844,398.5469 C673.2656,398.5469 673.0625,398.625 672.875,398.8125 C672.4219,399.2969 672.4219,399.2969 672.2344,399.3906 C671.8125,399.6563 671.125,399.7813 670.3594,399.7813 C668.3125,399.7813 667.0156,398.6875 667.0156,396.9844 L667.0156,395.8906 C667.0156,394.1094 668.2656,392.7969 670,392.7969 C670.5781,392.7969 671.1875,392.9531 671.6563,393.2031 C672.1406,393.4844 672.3125,393.7031 672.4063,394.1094 C672.4688,394.5156 672.5,394.6406 672.6406,394.7656 C672.7813,394.9063 673.0156,395.0156 673.2344,395.0156 C673.5,395.0156 673.7656,394.875 673.9375,394.6563 C674.0469,394.5 674.0781,394.3125 674.0781,393.8906 L674.0781,392.4688 C674.0781,392.0313 674.0625,391.9063 673.9688,391.75 C673.8125,391.4844 673.5313,391.3438 673.2344,391.3438 C672.9375,391.3438 672.7344,391.4375 672.5156,391.75 L672.3438,391.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="684" y="400.8467">RealConnectionPool</text><line style="stroke:#181818;stroke-width:0.5;" x1="656" x2="831" y1="412" y2="412"/><line style="stroke:#181818;stroke-width:0.5;" x1="656" x2="831" y1="420" y2="420"/></g><!--class Exchange--><g id="elem_Exchange"><rect fill="#F1F1F1" height="48" id="Exchange" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="101" x="609" y="139.5"/><ellipse cx="624" cy="155.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M626.3438,151.1719 C625.4063,150.7344 624.8125,150.5938 623.9375,150.5938 C621.3125,150.5938 619.3125,152.6719 619.3125,155.3906 L619.3125,156.5156 C619.3125,159.0938 621.4219,160.9844 624.3125,160.9844 C625.5313,160.9844 626.6875,160.6875 627.4375,160.1406 C628.0156,159.7344 628.3438,159.2813 628.3438,158.8906 C628.3438,158.4375 627.9531,158.0469 627.4844,158.0469 C627.2656,158.0469 627.0625,158.125 626.875,158.3125 C626.4219,158.7969 626.4219,158.7969 626.2344,158.8906 C625.8125,159.1563 625.125,159.2813 624.3594,159.2813 C622.3125,159.2813 621.0156,158.1875 621.0156,156.4844 L621.0156,155.3906 C621.0156,153.6094 622.2656,152.2969 624,152.2969 C624.5781,152.2969 625.1875,152.4531 625.6563,152.7031 C626.1406,152.9844 626.3125,153.2031 626.4063,153.6094 C626.4688,154.0156 626.5,154.1406 626.6406,154.2656 C626.7813,154.4063 627.0156,154.5156 627.2344,154.5156 C627.5,154.5156 627.7656,154.375 627.9375,154.1563 C628.0469,154 628.0781,153.8125 628.0781,153.3906 L628.0781,151.9688 C628.0781,151.5313 628.0625,151.4063 627.9688,151.25 C627.8125,150.9844 627.5313,150.8438 627.2344,150.8438 C626.9375,150.8438 626.7344,150.9375 626.5156,151.25 L626.3438,151.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="638" y="160.3467">Exchange</text><line style="stroke:#181818;stroke-width:0.5;" x1="610" x2="709" y1="171.5" y2="171.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="610" x2="709" y1="179.5" y2="179.5"/></g><!--class RetryAndFollowUpInterceptor--><g id="elem_RetryAndFollowUpInterceptor"><rect fill="#F1F1F1" height="48" id="RetryAndFollowUpInterceptor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="248" x="377.5" y="272"/><ellipse cx="392.5" cy="288" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M394.8438,283.6719 C393.9063,283.2344 393.3125,283.0938 392.4375,283.0938 C389.8125,283.0938 387.8125,285.1719 387.8125,287.8906 L387.8125,289.0156 C387.8125,291.5938 389.9219,293.4844 392.8125,293.4844 C394.0313,293.4844 395.1875,293.1875 395.9375,292.6406 C396.5156,292.2344 396.8438,291.7813 396.8438,291.3906 C396.8438,290.9375 396.4531,290.5469 395.9844,290.5469 C395.7656,290.5469 395.5625,290.625 395.375,290.8125 C394.9219,291.2969 394.9219,291.2969 394.7344,291.3906 C394.3125,291.6563 393.625,291.7813 392.8594,291.7813 C390.8125,291.7813 389.5156,290.6875 389.5156,288.9844 L389.5156,287.8906 C389.5156,286.1094 390.7656,284.7969 392.5,284.7969 C393.0781,284.7969 393.6875,284.9531 394.1563,285.2031 C394.6406,285.4844 394.8125,285.7031 394.9063,286.1094 C394.9688,286.5156 395,286.6406 395.1406,286.7656 C395.2813,286.9063 395.5156,287.0156 395.7344,287.0156 C396,287.0156 396.2656,286.875 396.4375,286.6563 C396.5469,286.5 396.5781,286.3125 396.5781,285.8906 L396.5781,284.4688 C396.5781,284.0313 396.5625,283.9063 396.4688,283.75 C396.3125,283.4844 396.0313,283.3438 395.7344,283.3438 C395.4375,283.3438 395.2344,283.4375 395.0156,283.75 L394.8438,283.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="406.5" y="292.8467">RetryAndFollowUpInterceptor</text><line style="stroke:#181818;stroke-width:0.5;" x1="378.5" x2="624.5" y1="304" y2="304"/><line style="stroke:#181818;stroke-width:0.5;" x1="378.5" x2="624.5" y1="312" y2="312"/></g><!--class BridgeInterceptor--><g id="elem_BridgeInterceptor"><rect fill="#F1F1F1" height="48" id="BridgeInterceptor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="163" x="8" y="380"/><ellipse cx="23" cy="396" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M25.3438,391.6719 C24.4063,391.2344 23.8125,391.0938 22.9375,391.0938 C20.3125,391.0938 18.3125,393.1719 18.3125,395.8906 L18.3125,397.0156 C18.3125,399.5938 20.4219,401.4844 23.3125,401.4844 C24.5313,401.4844 25.6875,401.1875 26.4375,400.6406 C27.0156,400.2344 27.3438,399.7813 27.3438,399.3906 C27.3438,398.9375 26.9531,398.5469 26.4844,398.5469 C26.2656,398.5469 26.0625,398.625 25.875,398.8125 C25.4219,399.2969 25.4219,399.2969 25.2344,399.3906 C24.8125,399.6563 24.125,399.7813 23.3594,399.7813 C21.3125,399.7813 20.0156,398.6875 20.0156,396.9844 L20.0156,395.8906 C20.0156,394.1094 21.2656,392.7969 23,392.7969 C23.5781,392.7969 24.1875,392.9531 24.6563,393.2031 C25.1406,393.4844 25.3125,393.7031 25.4063,394.1094 C25.4688,394.5156 25.5,394.6406 25.6406,394.7656 C25.7813,394.9063 26.0156,395.0156 26.2344,395.0156 C26.5,395.0156 26.7656,394.875 26.9375,394.6563 C27.0469,394.5 27.0781,394.3125 27.0781,393.8906 L27.0781,392.4688 C27.0781,392.0313 27.0625,391.9063 26.9688,391.75 C26.8125,391.4844 26.5313,391.3438 26.2344,391.3438 C25.9375,391.3438 25.7344,391.4375 25.5156,391.75 L25.3438,391.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="37" y="400.8467">BridgeInterceptor</text><line style="stroke:#181818;stroke-width:0.5;" x1="9" x2="170" y1="412" y2="412"/><line style="stroke:#181818;stroke-width:0.5;" x1="9" x2="170" y1="420" y2="420"/></g><!--class CacheInterceptor--><g id="elem_CacheInterceptor"><rect fill="#F1F1F1" height="48" id="CacheInterceptor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="160" x="206.5" y="380"/><ellipse cx="221.5" cy="396" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M223.8438,391.6719 C222.9063,391.2344 222.3125,391.0938 221.4375,391.0938 C218.8125,391.0938 216.8125,393.1719 216.8125,395.8906 L216.8125,397.0156 C216.8125,399.5938 218.9219,401.4844 221.8125,401.4844 C223.0313,401.4844 224.1875,401.1875 224.9375,400.6406 C225.5156,400.2344 225.8438,399.7813 225.8438,399.3906 C225.8438,398.9375 225.4531,398.5469 224.9844,398.5469 C224.7656,398.5469 224.5625,398.625 224.375,398.8125 C223.9219,399.2969 223.9219,399.2969 223.7344,399.3906 C223.3125,399.6563 222.625,399.7813 221.8594,399.7813 C219.8125,399.7813 218.5156,398.6875 218.5156,396.9844 L218.5156,395.8906 C218.5156,394.1094 219.7656,392.7969 221.5,392.7969 C222.0781,392.7969 222.6875,392.9531 223.1563,393.2031 C223.6406,393.4844 223.8125,393.7031 223.9063,394.1094 C223.9688,394.5156 224,394.6406 224.1406,394.7656 C224.2813,394.9063 224.5156,395.0156 224.7344,395.0156 C225,395.0156 225.2656,394.875 225.4375,394.6563 C225.5469,394.5 225.5781,394.3125 225.5781,393.8906 L225.5781,392.4688 C225.5781,392.0313 225.5625,391.9063 225.4688,391.75 C225.3125,391.4844 225.0313,391.3438 224.7344,391.3438 C224.4375,391.3438 224.2344,391.4375 224.0156,391.75 L223.8438,391.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="235.5" y="400.8467">CacheInterceptor</text><line style="stroke:#181818;stroke-width:0.5;" x1="207.5" x2="365.5" y1="412" y2="412"/><line style="stroke:#181818;stroke-width:0.5;" x1="207.5" x2="365.5" y1="420" y2="420"/></g><!--class ConnectInterceptor--><g id="elem_ConnectInterceptor"><rect fill="#F1F1F1" height="48" id="ConnectInterceptor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="177" x="402" y="380"/><ellipse cx="417" cy="396" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M419.3438,391.6719 C418.4063,391.2344 417.8125,391.0938 416.9375,391.0938 C414.3125,391.0938 412.3125,393.1719 412.3125,395.8906 L412.3125,397.0156 C412.3125,399.5938 414.4219,401.4844 417.3125,401.4844 C418.5313,401.4844 419.6875,401.1875 420.4375,400.6406 C421.0156,400.2344 421.3438,399.7813 421.3438,399.3906 C421.3438,398.9375 420.9531,398.5469 420.4844,398.5469 C420.2656,398.5469 420.0625,398.625 419.875,398.8125 C419.4219,399.2969 419.4219,399.2969 419.2344,399.3906 C418.8125,399.6563 418.125,399.7813 417.3594,399.7813 C415.3125,399.7813 414.0156,398.6875 414.0156,396.9844 L414.0156,395.8906 C414.0156,394.1094 415.2656,392.7969 417,392.7969 C417.5781,392.7969 418.1875,392.9531 418.6563,393.2031 C419.1406,393.4844 419.3125,393.7031 419.4063,394.1094 C419.4688,394.5156 419.5,394.6406 419.6406,394.7656 C419.7813,394.9063 420.0156,395.0156 420.2344,395.0156 C420.5,395.0156 420.7656,394.875 420.9375,394.6563 C421.0469,394.5 421.0781,394.3125 421.0781,393.8906 L421.0781,392.4688 C421.0781,392.0313 421.0625,391.9063 420.9688,391.75 C420.8125,391.4844 420.5313,391.3438 420.2344,391.3438 C419.9375,391.3438 419.7344,391.4375 419.5156,391.75 L419.3438,391.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="431" y="400.8467">ConnectInterceptor</text><line style="stroke:#181818;stroke-width:0.5;" x1="403" x2="578" y1="412" y2="412"/><line style="stroke:#181818;stroke-width:0.5;" x1="403" x2="578" y1="420" y2="420"/></g><!--class CallServerInterceptor--><g id="elem_CallServerInterceptor"><rect fill="#F1F1F1" height="48" id="CallServerInterceptor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="189" x="7" y="272"/><ellipse cx="22" cy="288" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M24.3438,283.6719 C23.4063,283.2344 22.8125,283.0938 21.9375,283.0938 C19.3125,283.0938 17.3125,285.1719 17.3125,287.8906 L17.3125,289.0156 C17.3125,291.5938 19.4219,293.4844 22.3125,293.4844 C23.5313,293.4844 24.6875,293.1875 25.4375,292.6406 C26.0156,292.2344 26.3438,291.7813 26.3438,291.3906 C26.3438,290.9375 25.9531,290.5469 25.4844,290.5469 C25.2656,290.5469 25.0625,290.625 24.875,290.8125 C24.4219,291.2969 24.4219,291.2969 24.2344,291.3906 C23.8125,291.6563 23.125,291.7813 22.3594,291.7813 C20.3125,291.7813 19.0156,290.6875 19.0156,288.9844 L19.0156,287.8906 C19.0156,286.1094 20.2656,284.7969 22,284.7969 C22.5781,284.7969 23.1875,284.9531 23.6563,285.2031 C24.1406,285.4844 24.3125,285.7031 24.4063,286.1094 C24.4688,286.5156 24.5,286.6406 24.6406,286.7656 C24.7813,286.9063 25.0156,287.0156 25.2344,287.0156 C25.5,287.0156 25.7656,286.875 25.9375,286.6563 C26.0469,286.5 26.0781,286.3125 26.0781,285.8906 L26.0781,284.4688 C26.0781,284.0313 26.0625,283.9063 25.9688,283.75 C25.8125,283.4844 25.5313,283.3438 25.2344,283.3438 C24.9375,283.3438 24.7344,283.4375 24.5156,283.75 L24.3438,283.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="36" y="292.8467">CallServerInterceptor</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="195" y1="304" y2="304"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="195" y1="312" y2="312"/></g><!--reverse link RealCall to OkHttpClient--><g id="link_RealCall_OkHttpClient"><path codeLine="1" d="M508.219,31 C519.724,31 519.229,31 530.734,31 " fill="none" id="RealCall-backto-OkHttpClient" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="496.219,31,502.219,35,508.219,31,502.219,27,496.219,31" style="stroke:#181818;stroke-width:1.0;"/></g><!--link RealCall to RealInterceptorChain--><g id="link_RealCall_RealInterceptorChain"><path codeLine="2" d="M451.5,55.03 C451.5,71.567 451.5,88.444 451.5,108.843 " fill="none" id="RealCall-to-RealInterceptorChain" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="451.5,114.843,455.5,105.843,451.5,109.843,447.5,105.843,451.5,114.843" style="stroke:#181818;stroke-width:1.0;"/></g><!--link RealCall to Interceptor--><g id="link_RealCall_Interceptor"><path codeLine="3" d="M406.826,46.572 C374.936,59.398 333.874,81.354 311.5,115 C279.355,163.34 279.9831,229.2027 283.1711,265.7877 " fill="none" id="RealCall-to-Interceptor" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="283.692,271.765,286.8956,262.4517,283.2579,266.7839,278.9258,263.1462,283.692,271.765" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RealCall to ExchangeFinder--><g id="link_RealCall_ExchangeFinder"><path codeLine="4" d="M507.35,53.0588 C513.194,55.1458 507.822,53.154 513.5,55 C607.44,85.537 664.392,39.009 727.5,115 C764.681,159.771 756.38,234.17 748.988,271.752 " fill="none" id="RealCall-backto-ExchangeFinder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="496.049,49.023,500.3542,54.8079,507.35,53.0588,503.0448,47.2739,496.049,49.023" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ExchangeFinder to RealConnectionPool--><g id="link_ExchangeFinder_RealConnectionPool"><path codeLine="5" d="M743.5,332 C743.5,349.6584 743.5,361.9408 743.5,379.6784 " fill="none" id="ExchangeFinder-backto-RealConnectionPool" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="743.5,320,739.5,326,743.5,332,747.5,326,743.5,320" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Exchange to ExchangeFinder--><g id="link_Exchange_ExchangeFinder"><path codeLine="6" d="M680.8189,197.6204 C696.0789,221.3284 713.232,247.977 728.541,271.761 " fill="none" id="Exchange-backto-ExchangeFinder" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="674.324,187.53,674.2079,194.7402,680.8189,197.6204,680.9349,190.4103,674.324,187.53" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RealInterceptorChain to Exchange--><g id="link_RealInterceptorChain_Exchange"><path codeLine="7" d="M585.781,163.5 C597.501,163.5 597.22,163.5 608.939,163.5 " fill="none" id="RealInterceptorChain-backto-Exchange" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="573.781,163.5,579.781,167.5,585.781,163.5,579.781,159.5,573.781,163.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link RealInterceptorChain to Interceptor--><g id="link_RealInterceptorChain_Interceptor"><path codeLine="15" d="M381.585,219.7961 C356.016,240.0191 336.818,255.203 316.008,271.662 " fill="none" id="RealInterceptorChain-backto-Interceptor" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="390.997,212.352,383.8096,212.9367,381.585,219.7961,388.7724,219.2114,390.997,212.352" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="374.3294" y="232.0075">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="314.2256" y="260.9846">n</text></g><!--reverse link Interceptor to RetryAndFollowUpInterceptor--><g id="link_Interceptor_RetryAndFollowUpInterceptor"><path codeLine="17" d="M360.35,296 C372.058,296 365.766,296 377.475,296 " fill="none" id="Interceptor-backto-RetryAndFollowUpInterceptor" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="342.35,296,360.35,302,360.35,290,342.35,296" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Interceptor to BridgeInterceptor--><g id="link_Interceptor_BridgeInterceptor"><path codeLine="18" d="M227.9031,328.5292 C194.9731,346.2485 165.497,362.1083 132.502,379.8617 " fill="none" id="Interceptor-backto-BridgeInterceptor" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="243.754,320,225.06,323.2456,230.7461,333.8129,243.754,320" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Interceptor to CacheInterceptor--><g id="link_Interceptor_CacheInterceptor"><path codeLine="19" d="M286.5,338 C286.5,355.6584 286.5,361.9408 286.5,379.6784 " fill="none" id="Interceptor-backto-CacheInterceptor" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="286.5,320,280.5,338,292.5,338,286.5,320" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Interceptor to ConnectInterceptor--><g id="link_Interceptor_ConnectInterceptor"><path codeLine="20" d="M346.7373,328.2997 C380.8373,346.019 411.803,362.1083 445.97,379.8617 " fill="none" id="Interceptor-backto-ConnectInterceptor" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="330.765,320,343.9708,333.6238,349.5039,322.9756,330.765,320" style="stroke:#181818;stroke-width:1.0;"/></g><!--link CallServerInterceptor to Interceptor--><g id="link_CallServerInterceptor_Interceptor"><path codeLine="21" d="M196.168,296 C207.695,296 201.221,296 212.748,296 " fill="none" id="CallServerInterceptor-to-Interceptor" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="230.748,296,212.748,290,212.748,302,230.748,296" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[XP51ImCn48Nl-HN3dbJ8mMif1Lqi2WLbnHyGijDkS9YaoQWLzR-xMRLcozBczdZVlBn96ZHK6oAuq73_V2iIQdB8efe_G-i5P777Wj5Y41_hpZWU4uNxR_IPDplR6TxWqd6BKOrb3-WXk_RCQCLvVl2UzjJW7oHCLIalKifbTsqiZafPCYbDBW8V2lgJutUpFFChzrIQmSebcHU3Yu5fC0NF2I54Rn7RimQtBvW4uhdwccvQNLR3LXLNetgg433_pCyYyVsAswKdyczFeOGFM0tNqRKRF8hKndOdY9zFEC8GhYKd4JrYVCLOsDy0]--></g></svg>

<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="389px" preserveAspectRatio="none" style="width:570px;height:389px;background:#FFFFFF;" version="1.1" viewBox="0 0 570 389" width="570px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="241.0938" style="stroke:#181818;stroke-width:1.0;" width="10" x="79" y="104.5625"/><rect fill="#FFFFFF" height="123.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="312" y="222.125"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="83.5" x2="83.5" y1="36.2969" y2="354.6563"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="316.5" x2="316.5" y1="190.3438" y2="354.6563"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="71" x="48.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="55.5" y="24.9951">RealCall</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="71" x="48.5" y="353.6563"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="55.5" y="373.6514">RealCall</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="169" x="232.5" y="353.6563"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="239.5" y="373.6514">RealInterceptorChain</text><rect fill="#FFFFFF" height="241.0938" style="stroke:#181818;stroke-width:1.0;" width="10" x="79" y="104.5625"/><rect fill="#FFFFFF" height="123.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="312" y="222.125"/><ellipse cx="7.5" cy="66.6797" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="72,63.4297,82,67.4297,72,71.4297,76,67.4297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="78" y1="67.4297" y2="67.4297"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="15" y="62.3638">execute</text><line style="stroke:#181818;stroke-width:1.0;" x1="84" x2="131" y1="91.5625" y2="91.5625"/><line style="stroke:#181818;stroke-width:1.0;" x1="131" x2="131" y1="91.5625" y2="104.5625"/><line style="stroke:#181818;stroke-width:1.0;" x1="90" x2="131" y1="104.5625" y2="104.5625"/><polygon fill="#181818" points="100,100.5625,90,104.5625,100,108.5625,96,104.5625" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="219" x="96" y="86.4966">getResponseWithInterceptorChain</text><line style="stroke:#181818;stroke-width:1.0;" x1="89" x2="131" y1="138.6953" y2="138.6953"/><line style="stroke:#181818;stroke-width:1.0;" x1="131" x2="131" y1="138.6953" y2="151.6953"/><line style="stroke:#181818;stroke-width:1.0;" x1="90" x2="131" y1="151.6953" y2="151.6953"/><polygon fill="#181818" points="100,147.6953,90,151.6953,100,155.6953,96,151.6953" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="122" x="96" y="133.6294">&#21019;&#24314;Interceptor List</text><polygon fill="#181818" points="220.5,176.8281,230.5,180.8281,220.5,184.8281,224.5,180.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="89" x2="226.5" y1="180.8281" y2="180.8281"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="96" y="175.7622">new</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="169" x="232.5" y="159.6953"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="239.5" y="179.6904">RealInterceptorChain</text><polygon fill="#181818" points="300,218.125,310,222.125,300,226.125,304,222.125" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="89" x2="306" y1="222.125" y2="222.125"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="96" y="217.0591">proceed</text><line style="stroke:#181818;stroke-width:1.0;" x1="322" x2="364" y1="266.3906" y2="266.3906"/><line style="stroke:#181818;stroke-width:1.0;" x1="364" x2="364" y1="266.3906" y2="279.3906"/><line style="stroke:#181818;stroke-width:1.0;" x1="323" x2="364" y1="279.3906" y2="279.3906"/><polygon fill="#181818" points="333,275.3906,323,279.3906,333,283.3906,329,279.3906" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="141" x="329" y="246.1919">next = copy(index+1)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="234" x="329" y="261.3247">&#22797;&#21046;&#24403;&#21069;&#36131;&#20219;&#38142;&#65292;&#25351;&#38024;&#25351;&#21521;&#19979;&#19968;&#20010;&#25318;&#25130;&#22120;</text><line style="stroke:#181818;stroke-width:1.0;" x1="322" x2="364" y1="323.6563" y2="323.6563"/><line style="stroke:#181818;stroke-width:1.0;" x1="364" x2="364" y1="323.6563" y2="336.6563"/><line style="stroke:#181818;stroke-width:1.0;" x1="323" x2="364" y1="336.6563" y2="336.6563"/><polygon fill="#181818" points="333,332.6563,323,336.6563,333,340.6563,329,336.6563" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="96" x="329" y="303.4575">intercept(next)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="65" x="329" y="318.5903">&#25191;&#34892;&#25318;&#25130;&#22120;</text><!--SRC=[YyxNjLC8IatCSKxCoL6mKaYjI4qkBKdbWWiXIsjhMocafvO4fHONvESLfuPdbcHuvfMa5YMd5fJa5pbd96RcOTTefV2qO_RJtRkGL2luP1QNSAaheAelAQfqp4jnoy_9oIyFBK1MhgK5D2KljHnDYrDHPafwAX4AdHEJCuXIbv-NbvfSGfI9EJd1gKLbgKLO5QC717f8aQ0I5Eu5HVd9gQafN5WLuD88Ch-YHC5M8Jc_e58ZCoybjKBRK3Ccx-cItgSTsvxkdVoqi_V5biLFTkz-ENdV-pqzpthQNqxg099F9qnyigFxoOw69pjMFUjUzgnZrTEPAqYrEnCcf05o1T3QPvtBNopiWPi70000]--></g></svg>

<p>okhttp的拦截器分为<strong>应用拦截器</strong>和<strong>网络拦截器</strong>，拦截器按照顺序执行，看下RealCall.getResponseWithInterceptorChain中拦截器的顺序定义：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">internal</span> <span class="function"><span class="keyword">fun</span> <span class="title">getResponseWithInterceptorChain</span><span class="params">()</span></span>: Response &#123;</span><br><span class="line">  <span class="comment">// Build a full stack of interceptors.</span></span><br><span class="line">  <span class="keyword">val</span> interceptors = mutableListOf&lt;Interceptor&gt;()</span><br><span class="line">  <span class="comment">//1.添加用户注册的应用拦截器</span></span><br><span class="line">  interceptors += client.interceptors </span><br><span class="line">  <span class="comment">//2.添加重试重定向拦截器</span></span><br><span class="line">  interceptors += RetryAndFollowUpInterceptor(client)</span><br><span class="line">  <span class="comment">//3.添加桥接拦截器，用于用户数据和网络数据之间的相互转换</span></span><br><span class="line">  interceptors += BridgeInterceptor(client.cookieJar)</span><br><span class="line">  <span class="comment">//4.添加缓存拦截器</span></span><br><span class="line">  interceptors += CacheInterceptor(client.cache)</span><br><span class="line">  <span class="comment">//5.连接拦截器，负责跟服务器建立连接</span></span><br><span class="line">  interceptors += ConnectInterceptor</span><br><span class="line">  <span class="keyword">if</span> (!forWebSocket) &#123;</span><br><span class="line">    <span class="comment">//6.添加用户自定义网络拦截器</span></span><br><span class="line">    interceptors += client.networkInterceptors</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//7.服务请求连接器</span></span><br><span class="line">  interceptors += CallServerInterceptor(forWebSocket)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">val</span> chain = RealInterceptorChain(</span><br><span class="line">    call = <span class="keyword">this</span>,</span><br><span class="line">    interceptors = interceptors,</span><br><span class="line">    index = <span class="number">0</span>,</span><br><span class="line">    exchange = <span class="literal">null</span>,</span><br><span class="line">    request = originalRequest,</span><br><span class="line">    connectTimeoutMillis = client.connectTimeoutMillis,</span><br><span class="line">    readTimeoutMillis = client.readTimeoutMillis,</span><br><span class="line">    writeTimeoutMillis = client.writeTimeoutMillis</span><br><span class="line">  )</span><br><span class="line">  <span class="comment">//后面代码省略</span></span><br></pre></td></tr></table></figure>

<h2 id="拦截器的处理时序"><a href="#拦截器的处理时序" class="headerlink" title="拦截器的处理时序"></a>拦截器的处理时序</h2><p>这个是简化版的连接器处理时序，连接器调用到下一个都是要经过<code>RealInterceptorChain.proceed</code>，这里面逻辑比较简单，就是找到下一个连接器并执行，这个细节时序图中没有体现。</p>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="822px" preserveAspectRatio="none" style="width:867px;height:822px;background:#FFFFFF;" version="1.1" viewBox="0 0 867 822" width="867px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="14" style="stroke:#181818;stroke-width:1.0;" width="10" x="84" y="67.4297"/><rect fill="#FFFFFF" height="23" style="stroke:#181818;stroke-width:1.0;" width="10" x="84" y="754.9531"/><rect fill="#FFFFFF" height="95.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="199" y="81.4297"/><rect fill="#FFFFFF" height="101.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="199" y="653.4219"/><rect fill="#FFFFFF" height="71.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="325" y="176.8281"/><rect fill="#FFFFFF" height="78.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="325" y="575.1563"/><rect fill="#FFFFFF" height="56.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="442" y="248.0938"/><rect fill="#FFFFFF" height="56.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="442" y="519.0234"/><rect fill="#FFFFFF" height="101.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="544" y="304.2266"/><rect fill="#FFFFFF" height="14" style="stroke:#181818;stroke-width:1.0;" width="10" x="544" y="505.0234"/><rect fill="#FFFFFF" height="14" style="stroke:#181818;stroke-width:1.0;" width="10" x="672" y="405.7578"/><rect fill="#FFFFFF" height="14" style="stroke:#181818;stroke-width:1.0;" width="10" x="672" y="491.0234"/><rect fill="#FFFFFF" height="71.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="780" y="419.7578"/><rect fill="none" height="486.7266" style="stroke:#000000;stroke-width:1.5;" width="730" x="131" y="153.6953"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="89" x2="89" y1="36.2969" y2="786.9531"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="204" x2="204" y1="36.2969" y2="786.9531"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="330" x2="330" y1="36.2969" y2="786.9531"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="447" x2="447" y1="36.2969" y2="786.9531"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="549" x2="549" y1="36.2969" y2="786.9531"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="677" x2="677" y1="36.2969" y2="786.9531"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="785" x2="785" y1="36.2969" y2="786.9531"/><rect fill="#FFFFFF" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="84" x="47" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="54" y="24.9951">&#24212;&#29992;&#25318;&#25130;&#22120;</text><rect fill="#FFFFFF" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="84" x="47" y="785.9531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="54" y="805.9482">&#24212;&#29992;&#25318;&#25130;&#22120;</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="126" x="141" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="148" y="24.9951">&#37325;&#35797;&#37325;&#23450;&#21521;&#25318;&#25130;&#22120;</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="126" x="141" y="785.9531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="148" y="805.9482">&#37325;&#35797;&#37325;&#23450;&#21521;&#25318;&#25130;&#22120;</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="84" x="288" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="295" y="24.9951">&#26725;&#25509;&#25318;&#25130;&#22120;</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="84" x="288" y="785.9531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="295" y="805.9482">&#26725;&#25509;&#25318;&#25130;&#22120;</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="84" x="405" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="412" y="24.9951">&#32531;&#23384;&#25318;&#25130;&#22120;</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="84" x="405" y="785.9531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="412" y="805.9482">&#32531;&#23384;&#25318;&#25130;&#22120;</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="84" x="507" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="514" y="24.9951">&#36830;&#25509;&#25318;&#25130;&#22120;</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="84" x="507" y="785.9531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="514" y="805.9482">&#36830;&#25509;&#25318;&#25130;&#22120;</text><rect fill="#FFFFFF" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="84" x="635" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="642" y="24.9951">&#32593;&#32476;&#25318;&#25130;&#22120;</text><rect fill="#FFFFFF" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="84" x="635" y="785.9531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="642" y="805.9482">&#32593;&#32476;&#25318;&#25130;&#22120;</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="112" x="729" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="736" y="24.9951">&#26381;&#21153;&#35831;&#27714;&#25318;&#25130;&#22120;</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="112" x="729" y="785.9531"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="736" y="805.9482">&#26381;&#21153;&#35831;&#27714;&#25318;&#25130;&#22120;</text><rect fill="#FFFFFF" height="14" style="stroke:#181818;stroke-width:1.0;" width="10" x="84" y="67.4297"/><rect fill="#FFFFFF" height="23" style="stroke:#181818;stroke-width:1.0;" width="10" x="84" y="754.9531"/><rect fill="#FFFFFF" height="95.3984" style="stroke:#181818;stroke-width:1.0;" width="10" x="199" y="81.4297"/><rect fill="#FFFFFF" height="101.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="199" y="653.4219"/><rect fill="#FFFFFF" height="71.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="325" y="176.8281"/><rect fill="#FFFFFF" height="78.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="325" y="575.1563"/><rect fill="#FFFFFF" height="56.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="442" y="248.0938"/><rect fill="#FFFFFF" height="56.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="442" y="519.0234"/><rect fill="#FFFFFF" height="101.5313" style="stroke:#181818;stroke-width:1.0;" width="10" x="544" y="304.2266"/><rect fill="#FFFFFF" height="14" style="stroke:#181818;stroke-width:1.0;" width="10" x="544" y="505.0234"/><rect fill="#FFFFFF" height="14" style="stroke:#181818;stroke-width:1.0;" width="10" x="672" y="405.7578"/><rect fill="#FFFFFF" height="14" style="stroke:#181818;stroke-width:1.0;" width="10" x="672" y="491.0234"/><rect fill="#FFFFFF" height="71.2656" style="stroke:#181818;stroke-width:1.0;" width="10" x="780" y="419.7578"/><ellipse cx="7.5" cy="66.6797" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="72,63.4297,82,67.4297,72,71.4297,76,67.4297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="78" y1="67.4297" y2="67.4297"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="57" x="15" y="62.3638">intercept</text><polygon fill="#181818" points="187,77.4297,197,81.4297,187,85.4297,191,81.4297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="89" x2="193" y1="81.4297" y2="81.4297"/><line style="stroke:#181818;stroke-width:1.0;" x1="209" x2="251" y1="125.6953" y2="125.6953"/><line style="stroke:#181818;stroke-width:1.0;" x1="251" x2="251" y1="125.6953" y2="138.6953"/><line style="stroke:#181818;stroke-width:1.0;" x1="210" x2="251" y1="138.6953" y2="138.6953"/><polygon fill="#181818" points="220,134.6953,210,138.6953,220,142.6953,216,138.6953" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="39" x="216" y="105.4966">&#21021;&#22987;&#21270;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="102" x="216" y="120.6294">ExchangeFinder</text><path d="M131,153.6953 L344,153.6953 L344,160.8281 L334,170.8281 L131,170.8281 L131,153.6953 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.5;"/><rect fill="none" height="486.7266" style="stroke:#000000;stroke-width:1.5;" width="730" x="131" y="153.6953"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="168" x="146" y="166.7622">&#37325;&#35797;&#21644;&#37325;&#23450;&#21521;&#22330;&#26223;&#36816;&#34892;&#22810;&#27425;</text><polygon fill="#181818" points="313,172.8281,323,176.8281,313,180.8281,317,176.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="204" x2="319" y1="176.8281" y2="176.8281"/><line style="stroke:#181818;stroke-width:1.0;" x1="335" x2="377" y1="221.0938" y2="221.0938"/><line style="stroke:#181818;stroke-width:1.0;" x1="377" x2="377" y1="221.0938" y2="234.0938"/><line style="stroke:#181818;stroke-width:1.0;" x1="336" x2="377" y1="234.0938" y2="234.0938"/><polygon fill="#181818" points="346,230.0938,336,234.0938,346,238.0938,342,234.0938" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="342" y="200.895">&#22788;&#29702;&#35831;&#27714;&#22836;&#65292;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="93" x="342" y="216.0278">&#21253;&#25324;&#21152;&#36733;cookie</text><polygon fill="#181818" points="430,244.0938,440,248.0938,430,252.0938,434,248.0938" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="330" x2="436" y1="248.0938" y2="248.0938"/><line style="stroke:#181818;stroke-width:1.0;" x1="452" x2="494" y1="277.2266" y2="277.2266"/><line style="stroke:#181818;stroke-width:1.0;" x1="494" x2="494" y1="277.2266" y2="290.2266"/><line style="stroke:#181818;stroke-width:1.0;" x1="453" x2="494" y1="290.2266" y2="290.2266"/><polygon fill="#181818" points="463,286.2266,453,290.2266,463,294.2266,459,290.2266" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="459" y="272.1606">&#21152;&#36733;&#26412;&#22320;&#32531;&#23384;</text><polygon fill="#181818" points="532,300.2266,542,304.2266,532,308.2266,536,304.2266" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="447" x2="538" y1="304.2266" y2="304.2266"/><line style="stroke:#181818;stroke-width:1.0;" x1="554" x2="596" y1="378.7578" y2="378.7578"/><line style="stroke:#181818;stroke-width:1.0;" x1="596" x2="596" y1="378.7578" y2="391.7578"/><line style="stroke:#181818;stroke-width:1.0;" x1="555" x2="596" y1="391.7578" y2="391.7578"/><polygon fill="#181818" points="565,387.7578,555,391.7578,565,395.7578,561,391.7578" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="104" x="561" y="328.2935">&#32531;&#23384;&#27744;&#33719;&#21462;&#21487;&#29992;&#36830;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="91" x="561" y="343.4263">&#25509;&#25110;&#26032;&#24314;&#36830;&#25509;&#65292;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="102" x="561" y="358.5591">&#21019;&#24314;Exchange&#21644;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="72" x="561" y="373.6919">HTTP&#35299;&#30721;&#22120;</text><polygon fill="#181818" points="660,401.7578,670,405.7578,660,409.7578,664,405.7578" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="549" x2="666" y1="405.7578" y2="405.7578"/><polygon fill="#181818" points="768,415.7578,778,419.7578,768,423.7578,772,419.7578" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="677" x2="774" y1="419.7578" y2="419.7578"/><line style="stroke:#181818;stroke-width:1.0;" x1="790" x2="832" y1="464.0234" y2="464.0234"/><line style="stroke:#181818;stroke-width:1.0;" x1="832" x2="832" y1="464.0234" y2="477.0234"/><line style="stroke:#181818;stroke-width:1.0;" x1="791" x2="832" y1="477.0234" y2="477.0234"/><polygon fill="#181818" points="801,473.0234,791,477.0234,801,481.0234,797,477.0234" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="797" y="443.8247">&#21457;&#36865;&#35831;&#27714;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="797" y="458.9575">&#35299;&#26512;&#21709;&#24212;</text><polygon fill="#181818" points="693,487.0234,683,491.0234,693,495.0234,689,491.0234" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="687" x2="784" y1="491.0234" y2="491.0234"/><polygon fill="#181818" points="565,501.0234,555,505.0234,565,509.0234,561,505.0234" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="559" x2="676" y1="505.0234" y2="505.0234"/><polygon fill="#181818" points="463,515.0234,453,519.0234,463,523.0234,459,519.0234" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="457" x2="548" y1="519.0234" y2="519.0234"/><line style="stroke:#181818;stroke-width:1.0;" x1="452" x2="494" y1="548.1563" y2="548.1563"/><line style="stroke:#181818;stroke-width:1.0;" x1="494" x2="494" y1="548.1563" y2="561.1563"/><line style="stroke:#181818;stroke-width:1.0;" x1="453" x2="494" y1="561.1563" y2="561.1563"/><polygon fill="#181818" points="463,557.1563,453,561.1563,463,565.1563,459,561.1563" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="459" y="543.0903">&#20445;&#23384;&#32531;&#23384;</text><polygon fill="#181818" points="346,571.1563,336,575.1563,346,579.1563,342,575.1563" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="340" x2="446" y1="575.1563" y2="575.1563"/><line style="stroke:#181818;stroke-width:1.0;" x1="335" x2="377" y1="619.4219" y2="619.4219"/><line style="stroke:#181818;stroke-width:1.0;" x1="377" x2="377" y1="619.4219" y2="632.4219"/><line style="stroke:#181818;stroke-width:1.0;" x1="336" x2="377" y1="632.4219" y2="632.4219"/><polygon fill="#181818" points="346,628.4219,336,632.4219,346,636.4219,342,632.4219" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="342" y="599.2231">&#20445;&#23384;cookie</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="52" x="342" y="614.356">gzip&#35299;&#21387;</text><polygon fill="#181818" points="220,649.4219,210,653.4219,220,657.4219,216,653.4219" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="214" x2="329" y1="653.4219" y2="653.4219"/><line style="stroke:#181818;stroke-width:1.0;" x1="209" x2="251" y1="727.9531" y2="727.9531"/><line style="stroke:#181818;stroke-width:1.0;" x1="251" x2="251" y1="727.9531" y2="740.9531"/><line style="stroke:#181818;stroke-width:1.0;" x1="210" x2="251" y1="740.9531" y2="740.9531"/><polygon fill="#181818" points="220,736.9531,210,740.9531,220,744.9531,216,740.9531" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="65" x="216" y="677.4888">&#22788;&#29702;&#24322;&#24120;&#21644;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="65" x="216" y="692.6216">&#36820;&#22238;&#30721;&#20915;&#23450;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="65" x="216" y="707.7544">&#26159;&#21542;&#37325;&#35797;&#12289;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="39" x="216" y="722.8872">&#37325;&#23450;&#21521;</text><polygon fill="#181818" points="105,750.9531,95,754.9531,105,758.9531,101,754.9531" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="99" x2="203" y1="754.9531" y2="754.9531"/><ellipse cx="7.5" cy="768.2031" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="24.5,764.9531,14.5,768.9531,24.5,772.9531,20.5,768.9531" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="22.5" x2="83" y1="768.9531" y2="768.9531"/><!--SRC=[jLHDIm9H5DtFhn1QYdz0ebtHiaMxPYCsw12y6MIYQ9LI9ZhgM2PzJABaHuGrHe7Y1_wOkczUg_v2Drz5p1ibY3QpEFUSS-zxzypJ8mb3ZQfwX1W169JTyWtDjMZc5ivl0WixSTLGf0qjj2JKWi5mG2M6aeWgkY5vgoXuFSepvnI_S7y1Lkb7BHGCIhEhSvJX06Ike9q3ioAJvTreF49YoefADfM454jes_gd58xDRpNO0thki8d5wYOqBcYdFhSthJTfeUaPLW157exME72jD7Dwz245ZQUtaIaJC0zfhWFP6XkFevgsfIf-Nkxe1ExEF3q5KEHXpwapjJjWTtdLJyScLV5C0YZombyT7sgiq8DY1OeERXbfClaWPYgqqeNXWEluWJEN27oj1lSWazNrzJNMldPhIVIKz1znSySbTsWBSVEPpClaD-G5SIjs7h9rlWFl3lrBipHujyNIwtwIupB14z2g1ITvJFeihryF-kkT_2aSBvChH6R5uazPvzOyqJA9xQawtWyKSf92DaM7VtiCfdySZ5BGxq-ZnYPbkAn-92tzY7HCwPa3LejRFEydPVBjCwUdpsCtdN93MmnvA-y0]--></g></svg>

<h2 id="同步和异步请求源码解析"><a href="#同步和异步请求源码解析" class="headerlink" title="同步和异步请求源码解析"></a>同步和异步请求源码解析</h2><h3 id="okhttp异步请求调用"><a href="#okhttp异步请求调用" class="headerlink" title="okhttp异步请求调用"></a>okhttp异步请求调用</h3><p>异步请求需要调用enqueue，如下：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">val</span> client = OkHttpClient()</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">run</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">val</span> request = Request.Builder()</span><br><span class="line">      .url(<span class="string">&quot;http://publicobject.com/helloworld.txt&quot;</span>)</span><br><span class="line">      .build()</span><br><span class="line"></span><br><span class="line">  client.newCall(request).enqueue(<span class="keyword">object</span> : Callback &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onFailure</span><span class="params">(call: <span class="type">Call</span>, e: <span class="type">IOException</span>)</span></span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResponse</span><span class="params">(call: <span class="type">Call</span>, response: <span class="type">Response</span>)</span></span> &#123;&#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>异步请求源码解析：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 准备被执行的请求队列</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">val</span> readyAsyncCalls = ArrayDeque&lt;AsyncCall&gt;()</span><br><span class="line"><span class="comment">// 正在执行的请求队列</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">val</span> runningAsyncCalls = ArrayDeque&lt;AsyncCall&gt;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">internal</span> <span class="function"><span class="keyword">fun</span> <span class="title">enqueue</span><span class="params">(call: <span class="type">AsyncCall</span>)</span></span> &#123;</span><br><span class="line">  synchronized(<span class="keyword">this</span>) &#123;</span><br><span class="line">    <span class="comment">// 添加到准备执行队列中</span></span><br><span class="line">    readyAsyncCalls.add(call)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 每个AsyncCall都维护了一个计数器，这段代码的作用是找到相同host的请求，相同host的请求使用同一个计数器</span></span><br><span class="line">    <span class="comment">// 相同host的请求默认最大是5个，超过5个后，新的请求会等待前面的请求执行完成</span></span><br><span class="line">    <span class="keyword">if</span> (!call.call.forWebSocket) &#123;</span><br><span class="line">      <span class="keyword">val</span> existingCall = findExistingCallWithHost(call.host)</span><br><span class="line">      <span class="keyword">if</span> (existingCall != <span class="literal">null</span>) call.reuseCallsPerHostFrom(existingCall)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  promoteAndExecute()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">promoteAndExecute</span><span class="params">()</span></span>: <span class="built_in">Boolean</span> &#123;</span><br><span class="line">  <span class="keyword">this</span>.assertThreadDoesntHoldLock()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">val</span> executableCalls = mutableListOf&lt;AsyncCall&gt;()</span><br><span class="line">  <span class="keyword">val</span> isRunning: <span class="built_in">Boolean</span></span><br><span class="line">  synchronized(<span class="keyword">this</span>) &#123;</span><br><span class="line">    <span class="comment">// 遍历准备执行的队列</span></span><br><span class="line">    <span class="keyword">val</span> i = readyAsyncCalls.iterator()</span><br><span class="line">    <span class="keyword">while</span> (i.hasNext()) &#123;</span><br><span class="line">      <span class="keyword">val</span> asyncCall = i.next()</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 默认最大是64个并行请求</span></span><br><span class="line">      <span class="keyword">if</span> (runningAsyncCalls.size &gt;= <span class="keyword">this</span>.maxRequests) <span class="keyword">break</span></span><br><span class="line">      <span class="comment">// 同一个host默认最多5个并行请求</span></span><br><span class="line">      <span class="keyword">if</span> (asyncCall.callsPerHost.<span class="keyword">get</span>() &gt;= <span class="keyword">this</span>.maxRequestsPerHost) <span class="keyword">continue</span></span><br><span class="line">      <span class="comment">// 从准备执行队列中删除该任务</span></span><br><span class="line">      i.remove()</span><br><span class="line">      <span class="comment">// 任务计数器加一，用于限制相同host的最大并行请求个数</span></span><br><span class="line">      asyncCall.callsPerHost.incrementAndGet()</span><br><span class="line">      executableCalls.add(asyncCall)</span><br><span class="line">      <span class="comment">//添加到正在执行队列中</span></span><br><span class="line">      runningAsyncCalls.add(asyncCall)</span><br><span class="line">    &#125;</span><br><span class="line">    isRunning = runningCallsCount() &gt; <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 把任务添加到线程池中，启动网络请求</span></span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">0</span> until executableCalls.size) &#123;</span><br><span class="line">    <span class="keyword">val</span> asyncCall = executableCalls[i]</span><br><span class="line">    asyncCall.executeOn(executorService)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> isRunning</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求结束时会执行该函数</span></span><br><span class="line"><span class="keyword">internal</span> <span class="function"><span class="keyword">fun</span> <span class="title">finished</span><span class="params">(call: <span class="type">AsyncCall</span>)</span></span> &#123;</span><br><span class="line">  call.callsPerHost.decrementAndGet()</span><br><span class="line">  finished(runningAsyncCalls, call)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> <span class="title">finished</span><span class="params">(calls: <span class="type">Deque</span>&lt;<span class="type">T</span>&gt;, call: <span class="type">T</span>)</span></span> &#123;</span><br><span class="line">  <span class="keyword">val</span> idleCallback: Runnable?</span><br><span class="line">  synchronized(<span class="keyword">this</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!calls.remove(call)) <span class="keyword">throw</span> AssertionError(<span class="string">&quot;Call wasn&#x27;t in-flight!&quot;</span>)</span><br><span class="line">    idleCallback = <span class="keyword">this</span>.idleCallback</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 再次执行promoteAndExecute，遍历队列任务并执行新的任务，因为超过最大并行任务限制后，</span></span><br><span class="line">  <span class="comment">// 有些任务正在排队，所以任务结束后需要再次检查执行队列运行新的任务</span></span><br><span class="line">  <span class="keyword">val</span> isRunning = promoteAndExecute()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!isRunning &amp;&amp; idleCallback != <span class="literal">null</span>) &#123;</span><br><span class="line">    idleCallback.run()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="同步请求源码解析"><a href="#同步请求源码解析" class="headerlink" title="同步请求源码解析"></a>同步请求源码解析</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">RealCall</span> &#123;</span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">execute</span><span class="params">()</span></span>: Response &#123;</span><br><span class="line">    check(executed.compareAndSet(<span class="literal">false</span>, <span class="literal">true</span>)) &#123; <span class="string">&quot;Already Executed&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line">    timeout.enter()</span><br><span class="line">    callStart()</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      client.dispatcher.executed(<span class="keyword">this</span>)</span><br><span class="line">      <span class="comment">// 直接在当前线程执行网络请求</span></span><br><span class="line">      <span class="keyword">return</span> getResponseWithInterceptorChain()</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      client.dispatcher.finished(<span class="keyword">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dispacher</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> runningSyncCalls = ArrayDeque&lt;RealCall&gt;()</span><br><span class="line">  <span class="meta">@Synchronized</span> <span class="keyword">internal</span> <span class="function"><span class="keyword">fun</span> <span class="title">executed</span><span class="params">(call: <span class="type">RealCall</span>)</span></span> &#123;</span><br><span class="line">    runningSyncCalls.add(call)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">internal</span> <span class="function"><span class="keyword">fun</span> <span class="title">finished</span><span class="params">(call: <span class="type">RealCall</span>)</span></span> &#123;</span><br><span class="line">    finished(runningSyncCalls, call)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>从Dispatcher可以看出，同步请求单独放在runningSyncCalls队列中（和异步请求独立），因此同步请求的数量是没有限制的。</p>
<h2 id="使用指南"><a href="#使用指南" class="headerlink" title="使用指南"></a>使用指南</h2><p><strong>OkHttpClient</strong>在整个app中最好采用单例模式，所有的网路请求都使用一个<strong>OkHttpClient</strong>实例。这是因为每个<strong>OkHttpClient</strong>都会创建自己的<em>连接池</em>和<em>线程池</em>。如果每次请求都创建一个OkHttpClient就会浪费系统资源。</p>
<p>当所有请求都使用了同一个OkHttpClient后，如果某次网络请求需要特殊配置可以使用<code>OkHttpClient::newBuilder()</code>，这种方式创建的client会共享连接池、线程池以及全局配置。</p>
<p>参考<a href="https://square.github.io/okhttp/4.x/okhttp/okhttp3/-ok-http-client/">OkHttpClients Should Be Shared</a></p>
<h2 id="编译okhttp-4-x"><a href="#编译okhttp-4-x" class="headerlink" title="编译okhttp 4.x"></a>编译okhttp 4.x</h2><ul>
<li>下载<a href="https://github.com/square/okhttp/tree/okhttp_4.10.x">okhttp-4.10.x源码</a>、<a href="https://www.oracle.com/cn/java/technologies/downloads/#java17">Java jdk17</a>、<a href="https://www.jetbrains.com/idea/">IntelliJ IDEA</a></li>
<li>使用<strong>IntelliJ IDEA</strong>打开okhttp项目根目录。</li>
<li>Gradle JVM需要设置为jdk17，位置在<strong>IntelliJ IDEA</strong>【File】-&gt;【Settings】-&gt;【Build,Execution,Deployment】-&gt;【Build Tools-&gt;Gradle】。</li>
<li>在IDEA中打开<code>AsynchronousGet.kt</code>文件，然后点击运行main函数即可。</li>
</ul>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://square.github.io/okhttp/">OkHttp</a><br><a href="https://cloud.tencent.com/developer/article/1834390">Android 网络优化-DNS优化</a> <a href="https://blog.csdn.net/makenothing/article/details/53292335">SNI</a><br><strong><a href="https://square.github.io/okhttp/features/interceptors/">Interceptors</a></strong>: 重要<br><a href="https://juejin.cn/post/7043336794099679268">“深入交流“系列：Okhttp（二）拦截器的实现</a><br><a href="https://www.jianshu.com/p/3b8cf45a5be7">OkHttp3 Cache</a><br><a href="https://blog.csdn.net/huwei2003/article/details/70139062">HTTP 304状态码的详细讲解</a><br><a href="https://blog.csdn.net/rui0838/article/details/52727343">Cache-Control no-cache与max-age=0的区别</a><br><a href="https://blog.csdn.net/u012375924/article/details/82806617">浅谈http中的Cache-Control</a><br><a href="https://www.jianshu.com/p/7cb9300c6d71">谈谈OKHttp的几道面试题</a><br>okhttp如何实现dns拦截？<br><a href="https://help.aliyun.com/document_detail/435264.html?spm=a2c4g.435263.0.0.2b8414a9tDQUVe">Android端HTTPDNS+OkHttp接入指南</a></p>
]]></content>
      <categories>
        <category>okhttp</category>
      </categories>
      <tags>
        <tag>okhttp</tag>
      </tags>
  </entry>
  <entry>
    <title>okhttp详解系列三：桥拦截器 BridgeInterceptor</title>
    <url>/posts/6e2b1d41.html</url>
    <content><![CDATA[<ul>
<li><a href="/posts/78efaca4.html" title="okhttp详解系列一：开篇">okhttp详解系列一：开篇</a></li>
<li><a href="/posts/8e83ed63.html" title="okhttp详解系列二：重试重定向拦截器">okhttp详解系列二：重试重定向拦截器</a></li>
<li><a href="/posts/6e2b1d41.html" title="okhttp详解系列三：桥拦截器 BridgeInterceptor">okhttp详解系列三：桥拦截器 BridgeInterceptor</a></li>
<li><a href="/posts/37107c2e.html" title="okhttp详解系列四：缓存拦截器">okhttp详解系列四：缓存拦截器</a></li>
<li><a href="/posts/ee27d764.html" title="okhttp详解系列五：连接拦截器 ConnectInterceptor">okhttp详解系列五：连接拦截器 ConnectInterceptor</a></li>
<li><a href="/posts/73cf04e1.html" title="okhttp详解系列六：服务请求拦截器 CallServerInterceptor">okhttp详解系列六：服务请求拦截器 CallServerInterceptor</a>

</li>
</ul>
<p>BridgeInterceptor拦截器简要描述一下就是做了如下三件事：</p>
<ol>
<li>首先会把用户的Request进行进一步的处理（处理request header），转换成真正请求网络的Request；</li>
<li>然后继续调用其他拦截器进行网络请求；</li>
<li>最后收到响应结果后保存cookie，并解压缩gzip，最终转换为用户的Response。</li>
</ol>
<h2 id="BridgeInterceptor处理时序"><a href="#BridgeInterceptor处理时序" class="headerlink" title="BridgeInterceptor处理时序"></a>BridgeInterceptor处理时序</h2><?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="642px" preserveAspectRatio="none" style="width:948px;height:642px;background:#FFFFFF;" version="1.1" viewBox="0 0 948 642" width="948px" zoomAndPan="magnify"><defs/><g><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="116.5" x2="116.5" y1="36.2969" y2="606.9844"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="436.5" x2="436.5" y1="36.2969" y2="606.9844"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="607" x2="607" y1="150.3438" y2="606.9844"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="722" x2="722" y1="36.2969" y2="606.9844"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="857" x2="857" y1="36.2969" y2="606.9844"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="145" x="44.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="51.5" y="24.9951">BridgeInterceptor</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="145" x="44.5" y="605.9844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="51.5" y="625.9795">BridgeInterceptor</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="73" x="400.5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="407.5" y="24.9951">Request</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="73" x="400.5" y="605.9844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="59" x="407.5" y="625.9795">Request</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="128" x="543" y="605.9844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="550" y="625.9795">Request.Builder</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="82" x="681" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="688" y="24.9951">CookieJar</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="82" x="681" y="605.9844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="688" y="625.9795">CookieJar</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="169" x="773" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="780" y="24.9951">RealInterceptorChain</text><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="169" x="773" y="605.9844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="780" y="625.9795">RealInterceptorChain</text><ellipse cx="7.5" cy="66.6797" fill="none" rx="4" ry="4" style="stroke:#181818;stroke-width:1.5;"/><polygon fill="#181818" points="105,63.4297,115,67.4297,105,71.4297,109,67.4297" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="12" x2="111" y1="67.4297" y2="67.4297"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="57" x="15" y="62.3638">intercept</text><polygon fill="#181818" points="425,107.6953,435,111.6953,425,115.6953,429,111.6953" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="117" x2="431" y1="111.6953" y2="111.6953"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="80" x="124" y="91.4966">newBuilder()</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="296" x="124" y="106.6294">&#22522;&#20110;&#29992;&#25143;&#20256;&#20837;&#30340;Request&#29983;&#25104;&#26032;&#30340;Request.Builder</text><polygon fill="#181818" points="531,121.6953,541,125.6953,531,129.6953,535,125.6953" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="437" x2="537" y1="125.6953" y2="125.6953"/><rect fill="#E2E2F0" height="30.2969" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="128" x="543" y="119.6953"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="550" y="139.6904">Request.Builder</text><polygon fill="#181818" points="595,193.2578,605,197.2578,595,201.2578,599,197.2578" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="117" x2="601" y1="197.2578" y2="197.2578"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="262" x="124" y="177.0591">&#22914;&#26524;body&#19981;&#20026;null&#65292;&#21017;&#26681;&#25454;&#38656;&#35201;&#28155;&#21152;&#35831;&#27714;&#22836;&#65306;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="331" x="124" y="192.1919">Content-Type&#12289;Content-Length&#12289;Transfer-Encoding</text><polygon fill="#181818" points="595,222.3906,605,226.3906,595,230.3906,599,226.3906" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="117" x2="601" y1="226.3906" y2="226.3906"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="146" x="124" y="221.3247">&#22914;&#26524;Host&#19981;&#23384;&#22312;&#65292;&#21017;&#28155;&#21152;</text><polygon fill="#181818" points="595,251.5234,605,255.5234,595,259.5234,599,255.5234" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="117" x2="601" y1="255.5234" y2="255.5234"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="300" x="124" y="250.4575">&#22914;&#26524;Connection&#65292;&#21017;&#28155;&#21152;Connection=Keep-Alive</text><polygon fill="#181818" points="595,280.6563,605,284.6563,595,288.6563,599,284.6563" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="117" x2="601" y1="284.6563" y2="284.6563"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="369" x="124" y="279.5903">&#22914;&#26524;&#29992;&#25143;&#27809;&#26377;&#25351;&#23450;Accept-Encoding&#21644;Range&#22836;&#65292;&#21017;&#35774;&#32622;&#20026;gzip</text><polygon fill="#181818" points="710,309.7891,720,313.7891,710,317.7891,714,313.7891" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="117" x2="716" y1="313.7891" y2="313.7891"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="186" x="124" y="308.7231">loadForRequest(): &#21152;&#36733;cookie</text><polygon fill="#181818" points="595,338.9219,605,342.9219,595,346.9219,599,342.9219" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="117" x2="601" y1="342.9219" y2="342.9219"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="69" x="124" y="337.856">&#28155;&#21152;Cookie</text><polygon fill="#181818" points="595,368.0547,605,372.0547,595,376.0547,599,372.0547" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="117" x2="601" y1="372.0547" y2="372.0547"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="98" x="124" y="366.9888">&#28155;&#21152;User-Agent</text><polygon fill="#181818" points="595,397.1875,605,401.1875,595,405.1875,599,401.1875" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="117" x2="601" y1="401.1875" y2="401.1875"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="40" x="124" y="396.1216">build()</text><polygon fill="#181818" points="448,426.3203,438,430.3203,448,434.3203,444,430.3203" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="442" x2="606" y1="430.3203" y2="430.3203"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="146" x="454" y="425.2544">new() &#29983;&#25104;&#26032;&#30340;Request</text><polygon fill="#181818" points="845.5,455.4531,855.5,459.4531,845.5,463.4531,849.5,459.4531" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="117" x2="851.5" y1="459.4531" y2="459.4531"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="275" x="124" y="454.3872">proceed(Request) &#32487;&#32493;&#20854;&#20182;&#25318;&#25130;&#22120;&#30340;&#22788;&#29702;&#27969;&#31243;</text><polygon fill="#181818" points="128,484.5859,118,488.5859,128,492.5859,124,488.5859" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="122" x2="856.5" y1="488.5859" y2="488.5859"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="117" x="134" y="483.52">&#20854;&#20182;&#25318;&#25130;&#22120;&#22788;&#29702;&#23436;&#25104;</text><polygon fill="#181818" points="710,513.7188,720,517.7188,710,521.7188,714,517.7188" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="117" x2="716" y1="517.7188" y2="517.7188"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="365" x="124" y="512.6528">receiveHeaders(): &#20445;&#23384;cookie&#65292;header&#20013;&#30340;Set-Cookie&#23383;&#27573;</text><line style="stroke:#181818;stroke-width:1.0;" x1="117" x2="159" y1="546.8516" y2="546.8516"/><line style="stroke:#181818;stroke-width:1.0;" x1="159" x2="159" y1="546.8516" y2="559.8516"/><line style="stroke:#181818;stroke-width:1.0;" x1="118" x2="159" y1="559.8516" y2="559.8516"/><polygon fill="#181818" points="128,555.8516,118,559.8516,128,563.8516,124,559.8516" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="247" x="124" y="541.7856">&#22914;&#26524;&#21709;&#24212;&#20869;&#23481;&#26159;gzip&#26684;&#24335;&#65292;&#21017;&#36827;&#34892;&#35299;&#21387;&#22788;&#29702;</text><polygon fill="#181818" points="11,584.9844,1,588.9844,11,592.9844,7,588.9844" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="5" x2="116" y1="588.9844" y2="588.9844"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="93" x="17" y="583.9185">&#36820;&#22238; Response</text><!--SRC=[bLJBRjD05DtxAxnCAfaFY00fZK3biIfbrMvS- -9OM3Dcx83AggcQ4aXIAeXAcuOs5IMDaE82eYJDWtmCdh5PzHUOn0w9sW3DpdCVvvnxxv4NiNHJd2Mwgi4TP0DHmBGnYOdwy25SIegyOnwUfC2oOoA2PxCftL21HA9BY1wqtDQcLwonRCFjL6ZcerTQ3skzuW7BRh7jpwFGjR1L2DzZoCEKE3FpJmN3kfX8gsjilxoCrHMtMN2RBPGoZFDEdcPtMUMC5PnVvLM_ccQDDdrLyKyQxCiQFVfstYajeGJcqCYM5bPC-BcQ7Zxl0zBi90yi41bPZu18jv22LHrfKocQmvRD5T7w3YtNGa434LEXS54855l7Q1nY5Brn3y2KueR-5AR23Mx5lXwoyakMVq6TKbpfD_sPbRx9pyj8Wy6o-io-yyFhEdp1sdFTdCoLmFYn3dTbpc9WMRsDISWUYN9UllvkLncKN57gSDYfMnvQ_6fnZL_pYctB_Oz8LBZemb6jEF1y92fEyBFmDnRP60ibahAEOg99i0AWHi9U3jW-zjfrcldkjhTPhigod-XkZOFJetLlQuETfhrQJY1WfmWIBrG59TJ9SqN_FGa11RXDva3cardzaxYzzzoUmKduaPE3ZDkiS_87O4j1Bws_OyxfPFG9Fv30NlHjWRQAT2D3dJEsSzAt3AjqQETrwANUdd-Ozuy_qCrSC8EmU5sw3CUNxlUAT6-Vxz8oCRBWDm00]--></g></svg>

<p>从上述流程可以看出BridgeInterceptor拦截器的处理逻辑比较简单。</p>
]]></content>
      <categories>
        <category>okhttp</category>
      </categories>
      <tags>
        <tag>okhttp</tag>
      </tags>
  </entry>
  <entry>
    <title>okhttp详解系列四：缓存拦截器</title>
    <url>/posts/37107c2e.html</url>
    <content><![CDATA[<ul>
<li><a href="/posts/78efaca4.html" title="okhttp详解系列一：开篇">okhttp详解系列一：开篇</a></li>
<li><a href="/posts/8e83ed63.html" title="okhttp详解系列二：重试重定向拦截器">okhttp详解系列二：重试重定向拦截器</a></li>
<li><a href="/posts/6e2b1d41.html" title="okhttp详解系列三：桥拦截器 BridgeInterceptor">okhttp详解系列三：桥拦截器 BridgeInterceptor</a></li>
<li><a href="/posts/37107c2e.html" title="okhttp详解系列四：缓存拦截器">okhttp详解系列四：缓存拦截器</a></li>
<li><a href="/posts/ee27d764.html" title="okhttp详解系列五：连接拦截器 ConnectInterceptor">okhttp详解系列五：连接拦截器 ConnectInterceptor</a></li>
<li><a href="/posts/73cf04e1.html" title="okhttp详解系列六：服务请求拦截器 CallServerInterceptor">okhttp详解系列六：服务请求拦截器 CallServerInterceptor</a>

</li>
</ul>
<h2 id="缓存使用方法"><a href="#缓存使用方法" class="headerlink" title="缓存使用方法"></a>缓存使用方法</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">val</span> client: OkHttpClient = OkHttpClient.Builder()</span><br><span class="line">    .cache(Cache(</span><br><span class="line">        directory = File(<span class="string">&quot;/dir/http_cache&quot;</span>),</span><br><span class="line">        maxSize = <span class="number">5L</span> * <span class="number">1024L</span> * <span class="number">1024L</span> <span class="comment">// 5MiB</span></span><br><span class="line">    ))</span><br><span class="line">    .build()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>缓存机制只实现了get请求的缓存，不支持其他的请求类型，比如POST。下面的官方的说明：</p>
<blockquote>
<p>Don’t cache non-GET responses. We’re technically allowed to cache HEAD requests and some POST requests, but the complexity of doing so is high and the benefit is low.</p>
</blockquote>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="311px" preserveAspectRatio="none" style="width:499px;height:311px;background:#FFFFFF;" version="1.1" viewBox="0 0 499 311" width="499px" zoomAndPan="magnify"><defs/><g><!--class Cache--><g id="elem_Cache"><rect codeLine="1" fill="#F1F1F1" height="80.5938" id="Cache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="311" x="7" y="115"/><ellipse cx="136.25" cy="131" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M138.5938,126.6719 C137.6563,126.2344 137.0625,126.0938 136.1875,126.0938 C133.5625,126.0938 131.5625,128.1719 131.5625,130.8906 L131.5625,132.0156 C131.5625,134.5938 133.6719,136.4844 136.5625,136.4844 C137.7813,136.4844 138.9375,136.1875 139.6875,135.6406 C140.2656,135.2344 140.5938,134.7813 140.5938,134.3906 C140.5938,133.9375 140.2031,133.5469 139.7344,133.5469 C139.5156,133.5469 139.3125,133.625 139.125,133.8125 C138.6719,134.2969 138.6719,134.2969 138.4844,134.3906 C138.0625,134.6563 137.375,134.7813 136.6094,134.7813 C134.5625,134.7813 133.2656,133.6875 133.2656,131.9844 L133.2656,130.8906 C133.2656,129.1094 134.5156,127.7969 136.25,127.7969 C136.8281,127.7969 137.4375,127.9531 137.9063,128.2031 C138.3906,128.4844 138.5625,128.7031 138.6563,129.1094 C138.7188,129.5156 138.75,129.6406 138.8906,129.7656 C139.0313,129.9063 139.2656,130.0156 139.4844,130.0156 C139.75,130.0156 140.0156,129.875 140.1875,129.6563 C140.2969,129.5 140.3281,129.3125 140.3281,128.8906 L140.3281,127.4688 C140.3281,127.0313 140.3125,126.9063 140.2188,126.75 C140.0625,126.4844 139.7813,126.3438 139.4844,126.3438 C139.1875,126.3438 138.9844,126.4375 138.7656,126.75 L138.5938,126.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="44" x="156.75" y="135.8467">Cache</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="317" y1="147" y2="147"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="317" y1="155" y2="155"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="13" y="171.9951">get(request: Request): Response?</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="299" x="13" y="188.292">put(response: Response): CacheRequest?</text></g><!--class CacheInterceptor--><g id="elem_CacheInterceptor"><rect fill="#F1F1F1" height="48" id="CacheInterceptor" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="160" x="212.5" y="7"/><ellipse cx="227.5" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M229.8438,18.6719 C228.9063,18.2344 228.3125,18.0938 227.4375,18.0938 C224.8125,18.0938 222.8125,20.1719 222.8125,22.8906 L222.8125,24.0156 C222.8125,26.5938 224.9219,28.4844 227.8125,28.4844 C229.0313,28.4844 230.1875,28.1875 230.9375,27.6406 C231.5156,27.2344 231.8438,26.7813 231.8438,26.3906 C231.8438,25.9375 231.4531,25.5469 230.9844,25.5469 C230.7656,25.5469 230.5625,25.625 230.375,25.8125 C229.9219,26.2969 229.9219,26.2969 229.7344,26.3906 C229.3125,26.6563 228.625,26.7813 227.8594,26.7813 C225.8125,26.7813 224.5156,25.6875 224.5156,23.9844 L224.5156,22.8906 C224.5156,21.1094 225.7656,19.7969 227.5,19.7969 C228.0781,19.7969 228.6875,19.9531 229.1563,20.2031 C229.6406,20.4844 229.8125,20.7031 229.9063,21.1094 C229.9688,21.5156 230,21.6406 230.1406,21.7656 C230.2813,21.9063 230.5156,22.0156 230.7344,22.0156 C231,22.0156 231.2656,21.875 231.4375,21.6563 C231.5469,21.5 231.5781,21.3125 231.5781,20.8906 L231.5781,19.4688 C231.5781,19.0313 231.5625,18.9063 231.4688,18.75 C231.3125,18.4844 231.0313,18.3438 230.7344,18.3438 C230.4375,18.3438 230.2344,18.4375 230.0156,18.75 L229.8438,18.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="241.5" y="27.8467">CacheInterceptor</text><line style="stroke:#181818;stroke-width:0.5;" x1="213.5" x2="371.5" y1="39" y2="39"/><line style="stroke:#181818;stroke-width:0.5;" x1="213.5" x2="371.5" y1="47" y2="47"/></g><!--class DiskLruCache--><g id="elem_DiskLruCache"><rect fill="#F1F1F1" height="48" id="DiskLruCache" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="129" x="98" y="256"/><ellipse cx="113" cy="272" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M115.3438,267.6719 C114.4063,267.2344 113.8125,267.0938 112.9375,267.0938 C110.3125,267.0938 108.3125,269.1719 108.3125,271.8906 L108.3125,273.0156 C108.3125,275.5938 110.4219,277.4844 113.3125,277.4844 C114.5313,277.4844 115.6875,277.1875 116.4375,276.6406 C117.0156,276.2344 117.3438,275.7813 117.3438,275.3906 C117.3438,274.9375 116.9531,274.5469 116.4844,274.5469 C116.2656,274.5469 116.0625,274.625 115.875,274.8125 C115.4219,275.2969 115.4219,275.2969 115.2344,275.3906 C114.8125,275.6563 114.125,275.7813 113.3594,275.7813 C111.3125,275.7813 110.0156,274.6875 110.0156,272.9844 L110.0156,271.8906 C110.0156,270.1094 111.2656,268.7969 113,268.7969 C113.5781,268.7969 114.1875,268.9531 114.6563,269.2031 C115.1406,269.4844 115.3125,269.7031 115.4063,270.1094 C115.4688,270.5156 115.5,270.6406 115.6406,270.7656 C115.7813,270.9063 116.0156,271.0156 116.2344,271.0156 C116.5,271.0156 116.7656,270.875 116.9375,270.6563 C117.0469,270.5 117.0781,270.3125 117.0781,269.8906 L117.0781,268.4688 C117.0781,268.0313 117.0625,267.9063 116.9688,267.75 C116.8125,267.4844 116.5313,267.3438 116.2344,267.3438 C115.9375,267.3438 115.7344,267.4375 115.5156,267.75 L115.3438,267.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="127" y="276.8467">DiskLruCache</text><line style="stroke:#181818;stroke-width:0.5;" x1="99" x2="226" y1="288" y2="288"/><line style="stroke:#181818;stroke-width:0.5;" x1="99" x2="226" y1="296" y2="296"/></g><!--class CacheStrategy--><g id="elem_CacheStrategy"><rect fill="#F1F1F1" height="48" id="CacheStrategy" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="139" x="353" y="131.5"/><ellipse cx="368" cy="147.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M370.3438,143.1719 C369.4063,142.7344 368.8125,142.5938 367.9375,142.5938 C365.3125,142.5938 363.3125,144.6719 363.3125,147.3906 L363.3125,148.5156 C363.3125,151.0938 365.4219,152.9844 368.3125,152.9844 C369.5313,152.9844 370.6875,152.6875 371.4375,152.1406 C372.0156,151.7344 372.3438,151.2813 372.3438,150.8906 C372.3438,150.4375 371.9531,150.0469 371.4844,150.0469 C371.2656,150.0469 371.0625,150.125 370.875,150.3125 C370.4219,150.7969 370.4219,150.7969 370.2344,150.8906 C369.8125,151.1563 369.125,151.2813 368.3594,151.2813 C366.3125,151.2813 365.0156,150.1875 365.0156,148.4844 L365.0156,147.3906 C365.0156,145.6094 366.2656,144.2969 368,144.2969 C368.5781,144.2969 369.1875,144.4531 369.6563,144.7031 C370.1406,144.9844 370.3125,145.2031 370.4063,145.6094 C370.4688,146.0156 370.5,146.1406 370.6406,146.2656 C370.7813,146.4063 371.0156,146.5156 371.2344,146.5156 C371.5,146.5156 371.7656,146.375 371.9375,146.1563 C372.0469,146 372.0781,145.8125 372.0781,145.3906 L372.0781,143.9688 C372.0781,143.5313 372.0625,143.4063 371.9688,143.25 C371.8125,142.9844 371.5313,142.8438 371.2344,142.8438 C370.9375,142.8438 370.7344,142.9375 370.5156,143.25 L370.3438,143.1719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="382" y="152.3467">CacheStrategy</text><line style="stroke:#181818;stroke-width:0.5;" x1="354" x2="491" y1="163.5" y2="163.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="354" x2="491" y1="171.5" y2="171.5"/></g><!--class CacheControl--><g id="elem_CacheControl"><rect fill="#F1F1F1" height="48" id="CacheControl" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="130" x="357.5" y="256"/><ellipse cx="372.5" cy="272" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M374.8438,267.6719 C373.9063,267.2344 373.3125,267.0938 372.4375,267.0938 C369.8125,267.0938 367.8125,269.1719 367.8125,271.8906 L367.8125,273.0156 C367.8125,275.5938 369.9219,277.4844 372.8125,277.4844 C374.0313,277.4844 375.1875,277.1875 375.9375,276.6406 C376.5156,276.2344 376.8438,275.7813 376.8438,275.3906 C376.8438,274.9375 376.4531,274.5469 375.9844,274.5469 C375.7656,274.5469 375.5625,274.625 375.375,274.8125 C374.9219,275.2969 374.9219,275.2969 374.7344,275.3906 C374.3125,275.6563 373.625,275.7813 372.8594,275.7813 C370.8125,275.7813 369.5156,274.6875 369.5156,272.9844 L369.5156,271.8906 C369.5156,270.1094 370.7656,268.7969 372.5,268.7969 C373.0781,268.7969 373.6875,268.9531 374.1563,269.2031 C374.6406,269.4844 374.8125,269.7031 374.9063,270.1094 C374.9688,270.5156 375,270.6406 375.1406,270.7656 C375.2813,270.9063 375.5156,271.0156 375.7344,271.0156 C376,271.0156 376.2656,270.875 376.4375,270.6563 C376.5469,270.5 376.5781,270.3125 376.5781,269.8906 L376.5781,268.4688 C376.5781,268.0313 376.5625,267.9063 376.4688,267.75 C376.3125,267.4844 376.0313,267.3438 375.7344,267.3438 C375.4375,267.3438 375.2344,267.4375 375.0156,267.75 L374.8438,267.6719 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="386.5" y="276.8467">CacheControl</text><line style="stroke:#181818;stroke-width:0.5;" x1="358.5" x2="486.5" y1="288" y2="288"/><line style="stroke:#181818;stroke-width:0.5;" x1="358.5" x2="486.5" y1="296" y2="296"/></g><!--reverse link CacheInterceptor to Cache--><g id="link_CacheInterceptor_Cache"><path codeLine="5" d="M259.3146,63.2706 C241.4416,80.1126 225.493,95.142 204.49,114.933 " fill="none" id="CacheInterceptor-backto-Cache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="268.048,55.041,260.9381,56.2447,259.3146,63.2706,266.4245,62.067,268.048,55.041" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Cache to DiskLruCache--><g id="link_Cache_DiskLruCache"><path codeLine="6" d="M162.5,208.272 C162.5,227.9732 162.5,239.0687 162.5,255.8428 " fill="none" id="Cache-backto-DiskLruCache" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="162.5,196.272,158.5,202.272,162.5,208.272,166.5,202.272,162.5,196.272" style="stroke:#181818;stroke-width:1.0;"/></g><!--link CacheInterceptor to CacheStrategy--><g id="link_CacheInterceptor_CacheStrategy"><path codeLine="7" d="M316.952,55.041 C340.047,76.804 370.1452,105.1662 393.3492,127.0312 " fill="none" id="CacheInterceptor-to-CacheStrategy" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="397.716,131.146,393.909,122.0627,394.077,127.717,388.4227,127.885,397.716,131.146" style="stroke:#181818;stroke-width:1.0;"/></g><!--link CacheStrategy to CacheControl--><g id="link_CacheStrategy_CacheControl"><path codeLine="8" d="M422.5,179.541 C422.5,201.304 422.5,227.781 422.5,249.6455 " fill="none" id="CacheStrategy-to-CacheControl" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="422.5,255.6455,426.5,246.6455,422.5,250.6455,418.5,246.6455,422.5,255.6455" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[Iyv9B2vMS4vCpaXLgEPI08Bqr1ADejJ2qjJY4Yk580X34yGgBiZFAqwr1oigA0KfWeWWv83Am2P1TTbprNA1-Pvv9Qb5oQa59Vb52bgwkX1542amtoMpEDkdg1H965c7hguTH4TmIL5YIMfw9HSA3o7ld9zNKfIV0m00]--></g></svg>

<p><strong>Cache-Control</strong>请求头是控制缓存策略的关键，server、client端都可以进行设置。<strong>Cache-Control</strong>决定了哪些response可以被缓存，以及缓存的response是否满足当前的request。协议定义可以参考<a href="https://tools.ietf.org/html/rfc7234#section-5.2">RFC 7234, 5.2</a>。</p>
<h2 id="缓存拦截器流程"><a href="#缓存拦截器流程" class="headerlink" title="缓存拦截器流程"></a>缓存拦截器流程</h2><p>缓存拦截器的处理流程如下：</p>
<ol>
<li>首先通过url的md5值去读取本地可用缓存（后面会校验缓存是否可用）；</li>
<li>计算得到CacheStrategy，实际上就是计算得到<strong>networkRequest</strong>和<strong>cacheResponse</strong>，如果两者都为null，就直接报504错误；如果networkRequest是null，表示直接使用缓存。</li>
</ol>
<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="760px" preserveAspectRatio="none" style="width:741px;height:760px;background:#FFFFFF;" version="1.1" viewBox="0 0 741 760" width="741px" zoomAndPan="magnify"><defs/><g><ellipse cx="248.75" cy="20" fill="#222222" rx="10" ry="10" style="stroke:#222222;stroke-width:1.0;"/><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="131" x="183.25" y="50"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="111" x="193.25" y="71.1387">&#36890;&#36807;url&#35835;&#21462;&#26412;&#22320;&#32531;&#23384;</text><rect fill="#F1F1F1" height="61.9063" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="196" x="150.75" y="103.9688"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="176" x="160.75" y="125.1074">&#35745;&#31639;&#24471;&#21040;CacheStrategy&#65292;&#21253;&#21547;:</text><ellipse cx="166.25" cy="134.4063" fill="#000000" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="98" x="172.75" y="139.0762">networkRequest</text><ellipse cx="166.25" cy="148.375" fill="#000000" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="96" x="172.75" y="153.0449">cacheResponse</text><polygon fill="#F1F1F1" points="166.75,185.875,330.75,185.875,342.75,198.6797,330.75,211.4844,166.75,211.4844,154.75,198.6797,166.75,185.875" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="166.75" y="196.0854">networkRequest == null &amp;&amp;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="136" x="166.75" y="208.8901">cacheResponse == null</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="133.75" y="196.0854">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="14" x="342.75" y="196.0854">no</text><rect fill="#F1F1F1" height="47.9375" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="166" x="11" y="221.4844"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="146" x="21" y="242.623">only-if-cached&#22330;&#26223;&#65292;&#20294;&#26159;</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="120" x="21" y="256.5918">&#32531;&#23384;&#19981;&#21512;&#27861;&#65292;&#19978;&#25253;504</text><polygon fill="#F1F1F1" points="334.5,221.4844,472.5,221.4844,484.5,233.4844,472.5,245.4844,334.5,245.4844,322.5,233.4844,334.5,221.4844" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="138" x="334.5" y="237.2925">networkRequest == null</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="301.5" y="230.8901">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="14" x="484.5" y="230.8901">no</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="207" y="255.4844"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="96" x="217" y="276.623">&#20351;&#29992;&#32531;&#23384;&#21709;&#24212;&#35831;&#27714;</text><rect fill="#F1F1F1" height="47.9375" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="214" x="435" y="255.4844"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="168" x="445" y="276.623">&#20351;&#29992;&#19979;&#19968;&#20010;&#25318;&#25130;&#22120;&#22788;&#29702;&#32593;&#32476;&#35831;&#27714;</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="194" x="445" y="290.5918">chain.proceed(networkRequest)</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="484" y="371.8242"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="96" x="494" y="392.9629">&#36825;&#26159;&#19968;&#20010;&#26465;&#20214;&#35831;&#27714;</text><polygon fill="#F1F1F1" points="463,425.793,621,425.793,633,437.793,621,449.793,463,449.793,451,437.793,463,425.793" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="463" y="441.6011">&#21709;&#24212;&#30721;&#26159;304&#65288;Not Modified&#65289;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="430" y="435.1987">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="14" x="633" y="435.1987">no</text><rect fill="#F1F1F1" height="47.9375" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="156" x="363" y="459.793"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="136" x="373" y="480.9316">&#21512;&#24182;&#32593;&#32476;&#35831;&#27714;&#21644;&#26412;&#22320;&#32531;&#23384;,</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="108" x="373" y="494.9004">&#19981;&#38656;&#35201;&#26356;&#26032;&#26412;&#22320;&#32531;&#23384;</text><ellipse cx="441" cy="538.7305" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="441" cy="538.7305" fill="#222222" rx="6" ry="6" style="stroke:#222222;stroke-width:1.0;"/><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="116" x="585" y="459.793"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="96" x="595" y="480.9316">&#37322;&#25918;&#26412;&#22320;&#32531;&#23384;&#36164;&#28304;</text><polygon fill="#F1F1F1" points="476,323.4219,608,323.4219,620,335.4219,608,347.4219,476,347.4219,464,335.4219,476,323.4219" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="546" y="357.6323">yes</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="476" y="339.23">cacheResponse != null</text><polygon fill="#F1F1F1" points="542,569.7305,554,581.7305,542,593.7305,530,581.7305,542,569.7305" style="stroke:#181818;stroke-width:0.5;"/><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="68" x="508" y="613.7305"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="48" x="518" y="634.8691">&#20445;&#23384;&#32531;&#23384;</text><polygon fill="#F1F1F1" points="403.5,653.6992,415.5,665.6992,403.5,677.6992,391.5,665.6992,403.5,653.6992" style="stroke:#181818;stroke-width:0.5;"/><polygon fill="#F1F1F1" points="248.75,683.6992,260.75,695.6992,248.75,707.6992,236.75,695.6992,248.75,683.6992" style="stroke:#181818;stroke-width:0.5;"/><ellipse cx="248.75" cy="738.6992" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="248.75" cy="738.6992" fill="#222222" rx="6" ry="6" style="stroke:#222222;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="248.75" x2="248.75" y1="30" y2="50"/><polygon fill="#181818" points="244.75,40,248.75,50,252.75,40,248.75,44" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="248.75" x2="248.75" y1="83.9688" y2="103.9688"/><polygon fill="#181818" points="244.75,93.9688,248.75,103.9688,252.75,93.9688,248.75,97.9688" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="441" x2="441" y1="507.7305" y2="527.7305"/><polygon fill="#181818" points="437,517.7305,441,527.7305,445,517.7305,441,521.7305" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="451" x2="441" y1="437.793" y2="437.793"/><line style="stroke:#181818;stroke-width:1.0;" x1="441" x2="441" y1="437.793" y2="459.793"/><polygon fill="#181818" points="437,449.793,441,459.793,445,449.793,441,453.793" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="633" x2="643" y1="437.793" y2="437.793"/><line style="stroke:#181818;stroke-width:1.0;" x1="643" x2="643" y1="437.793" y2="459.793"/><polygon fill="#181818" points="639,449.793,643,459.793,647,449.793,643,453.793" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="643" x2="643" y1="493.7617" y2="554.7305"/><line style="stroke:#181818;stroke-width:1.0;" x1="643" x2="542" y1="554.7305" y2="554.7305"/><line style="stroke:#181818;stroke-width:1.0;" x1="542" x2="542" y1="554.7305" y2="569.7305"/><polygon fill="#181818" points="538,559.7305,542,569.7305,546,559.7305,542,563.7305" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="542" x2="542" y1="405.793" y2="425.793"/><polygon fill="#181818" points="538,415.793,542,425.793,546,415.793,542,419.793" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="542" x2="542" y1="347.4219" y2="371.8242"/><polygon fill="#181818" points="538,361.8242,542,371.8242,546,361.8242,542,365.8242" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="620" x2="715" y1="335.4219" y2="335.4219"/><polygon fill="#181818" points="711,453.7773,715,463.7773,719,453.7773,715,457.7773" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="715" x2="715" y1="335.4219" y2="581.7305"/><line style="stroke:#181818;stroke-width:1.0;" x1="715" x2="554" y1="581.7305" y2="581.7305"/><polygon fill="#181818" points="564,577.7305,554,581.7305,564,585.7305,560,581.7305" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="542" x2="542" y1="303.4219" y2="323.4219"/><polygon fill="#181818" points="538,313.4219,542,323.4219,546,313.4219,542,317.4219" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="542" x2="542" y1="593.7305" y2="613.7305"/><polygon fill="#181818" points="538,603.7305,542,613.7305,546,603.7305,542,607.7305" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="322.5" x2="265" y1="233.4844" y2="233.4844"/><line style="stroke:#181818;stroke-width:1.0;" x1="265" x2="265" y1="233.4844" y2="255.4844"/><polygon fill="#181818" points="261,245.4844,265,255.4844,269,245.4844,265,249.4844" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="484.5" x2="542" y1="233.4844" y2="233.4844"/><line style="stroke:#181818;stroke-width:1.0;" x1="542" x2="542" y1="233.4844" y2="255.4844"/><polygon fill="#181818" points="538,245.4844,542,255.4844,546,245.4844,542,249.4844" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="265" x2="265" y1="289.4531" y2="665.6992"/><line style="stroke:#181818;stroke-width:1.0;" x1="265" x2="391.5" y1="665.6992" y2="665.6992"/><polygon fill="#181818" points="381.5,661.6992,391.5,665.6992,381.5,669.6992,385.5,665.6992" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="542" x2="542" y1="647.6992" y2="665.6992"/><line style="stroke:#181818;stroke-width:1.0;" x1="542" x2="415.5" y1="665.6992" y2="665.6992"/><polygon fill="#181818" points="425.5,661.6992,415.5,665.6992,425.5,669.6992,421.5,665.6992" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="154.75" x2="94" y1="198.6797" y2="198.6797"/><line style="stroke:#181818;stroke-width:1.0;" x1="94" x2="94" y1="198.6797" y2="221.4844"/><polygon fill="#181818" points="90,211.4844,94,221.4844,98,211.4844,94,215.4844" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="342.75" x2="403.5" y1="198.6797" y2="198.6797"/><line style="stroke:#181818;stroke-width:1.0;" x1="403.5" x2="403.5" y1="198.6797" y2="221.4844"/><polygon fill="#181818" points="399.5,211.4844,403.5,221.4844,407.5,211.4844,403.5,215.4844" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="94" x2="94" y1="269.4219" y2="695.6992"/><line style="stroke:#181818;stroke-width:1.0;" x1="94" x2="236.75" y1="695.6992" y2="695.6992"/><polygon fill="#181818" points="226.75,691.6992,236.75,695.6992,226.75,699.6992,230.75,695.6992" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="403.5" x2="403.5" y1="677.6992" y2="695.6992"/><line style="stroke:#181818;stroke-width:1.0;" x1="403.5" x2="260.75" y1="695.6992" y2="695.6992"/><polygon fill="#181818" points="270.75,691.6992,260.75,695.6992,270.75,699.6992,266.75,695.6992" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="248.75" x2="248.75" y1="165.875" y2="185.875"/><polygon fill="#181818" points="244.75,175.875,248.75,185.875,252.75,175.875,248.75,179.875" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="248.75" x2="248.75" y1="707.6992" y2="727.6992"/><polygon fill="#181818" points="244.75,717.6992,248.75,727.6992,252.75,717.6992,248.75,721.6992" style="stroke:#181818;stroke-width:1.0;"/><!--SRC=[TPBBJi9058RtVOgw8M34cAYRDgvSwmAtR0WCqjXCiHrYsA51HOI8YXUq998e8QY0KR5oVPdEjAnu1GSAGhtCefdf-S__VtCo2lB9Y66uNkp6x1v6PD6iDl799L6Vi5epMkVu-PfdEBDIC2fNk7E54xLLdpy4Df3iGs0psc-bS6eVPnuvBvo50Er8yfO7R4U0WkWF_q3g0KfOWWhW6I7ej4lObHKMHaIHTJXOBxIfnoKNYq80EgD0SJ4iNPm4nQXR2Bg7wW1M6oHNfHHw-u1SLxtGGjQrDCuaoEl5eA8bIV9XUM69Pu2e02UK1ax_ilmArDjT8rkoVF5v6ZUoPlM3lEpnj3nb-AtKjMDTY-bQcHmNIQACSoLy7pSo1qRxr6YgLY-zRCWdmFcmBFa12Fn0SV53Fufe7ydCtuGqsUpcwEr7iVc2tgnF64TM5hfnjqk5YmjB_LPYNKBicXGGWW88z5j7lssfCPqY_gnFe-EprFJZcFD2EkoU6ZEBk-JsZLpMx4zdxAGWAJmws8OsJEaT9acsCzreliT98pDk1v1IClOTftVpL3Z9iKhMTv3s1G00]--></g></svg>

<h2 id="CacheStrategy"><a href="#CacheStrategy" class="headerlink" title="CacheStrategy"></a>CacheStrategy</h2><p>CacheStrategy的生成使用的条件比较多，比如request CacheControl、response CacheControl、条件请求等，这块就不详细介绍了。其中要计算响应的年龄和响应的保鲜期，下面详细介绍两者的计算方法。</p>
<h3 id="响应年龄的计算方法"><a href="#响应年龄的计算方法" class="headerlink" title="响应年龄的计算方法"></a>响应年龄的计算方法</h3><p>响应的年龄是自它生成<small>（或者通过源服务器成功验证）</small>之后所经过的时长，计算方法如下：</p>
<ul>
<li>第一步：计算原始响应时长，”接收到响应的时间” 减去 “响应的服务时间”（表示生成该response的时间，响应头中的Date字段，如果没有，则取接收到响应的时间）</small>，得到的时间差与<strong>Age</strong>字段进行比较，取最大值；</li>
<li>第二步：计算响应时长，“接收到响应的时间”减去“发送响应的时间”；</li>
<li>第三步：计算本地年龄<small>（被缓存的response在本地的保存时长）</small>，当前时间减去接收到response的时间；</li>
<li>最后，把上述三者加和就得到了响应的最终年龄；</li>
</ul>
<p>响应头的Age字段有必要解释一下：如果存在Age字段，则表示这个response是基于缓存生成的，来自缓存服务器，而不是来自原始服务器。所以Age表示该次响应到源服务器提供服务的时间差。</p>
<h3 id="响应保鲜期的计算方法"><a href="#响应保鲜期的计算方法" class="headerlink" title="响应保鲜期的计算方法"></a>响应保鲜期的计算方法</h3><p>一个被缓存的response，如果超过了保鲜期，就表示这个被缓存的response必须再次通过源服务器的验证后才能继续使用；还在保鲜期内的response就可以不经过源服务器的验证就能使用。</p>
<ul>
<li>如果response Cache-Control中指定了max-age<small>（<em>单位秒</em>）</small>，保鲜期就取max-age的值。</li>
<li>如果没有max-age，被缓存响应中指定了Expires<small>（<em>时钟时间</em>）</small>，则保鲜期就是Expires减去响应服务时间<small>（响应头中的Date字段，如果没有则取接收到响应的时间）</small>后得到时间差。</li>
<li>如果Expires也没有，被缓存响应中存在Last-Modified响应头，则保鲜期就是服务时间<small>（如果没有就使用请求发送的时间）</small>减去Last-Modified的时间差的**10%**。</li>
<li>如果上述信息都没有就默认是0。</li>
<li>最后，上述计算得到的保鲜期与request Cache-Control的max-age的值进行比较，取小值。</li>
</ul>
<p>Request Cache-Control中还有两个字段会影响保鲜期的时长：</p>
<ol>
<li><strong>max-stale</strong> 是client端额外给保鲜期增加的时长，就像有的人比较节省，买的东西刚过了保鲜期没几天，就认为还可以继续用，再多用几天。</li>
<li><strong>min-fresh</strong> 是client端给保鲜期减掉的时长，就好比有的人比较讲究，买的食品马上就到保质期了（实际还差几天）就不想吃了。</li>
</ol>
<p>所以，最终计算的保鲜期还要加上<strong>max-stale</strong>，再减去<strong>min-fresh</strong>。</p>
<h2 id="写入Cache"><a href="#写入Cache" class="headerlink" title="写入Cache"></a>写入Cache</h2><p>这块逻辑相对比较简单。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">internal</span> <span class="function"><span class="keyword">fun</span> <span class="title">put</span><span class="params">(response: <span class="type">Response</span>)</span></span>: CacheRequest? &#123;</span><br><span class="line">  <span class="keyword">val</span> requestMethod = response.request.method</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (HttpMethod.invalidatesCache(response.request.method)) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      remove(response.request)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (_: IOException) &#123;</span><br><span class="line">      <span class="comment">// The cache cannot be written.</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//如果不是GET请求，则不缓存</span></span><br><span class="line">  <span class="keyword">if</span> (requestMethod != <span class="string">&quot;GET&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// Don&#x27;t cache non-GET responses. We&#x27;re technically allowed to cache HEAD requests and some</span></span><br><span class="line">    <span class="comment">// POST requests, but the complexity of doing so is high and the benefit is low.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//如果Vary响应头中包含*则不缓存</span></span><br><span class="line">  <span class="keyword">if</span> (response.hasVaryAll()) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">val</span> entry = Entry(response)</span><br><span class="line">  <span class="keyword">var</span> editor: DiskLruCache.Editor? = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//使用url的md5作为key获取一个editer</span></span><br><span class="line">    editor = cache.edit(key(response.request.url)) ?: <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    <span class="comment">//把response写入到缓存，会把发送时间戳和收到响应的时间戳都写到缓存里面，获取的时候会用来校验</span></span><br><span class="line">    entry.writeTo(editor)</span><br><span class="line">    <span class="keyword">return</span> RealCacheRequest(editor)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (_: IOException) &#123;</span><br><span class="line">    abortQuietly(editor)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>okhttp</category>
      </categories>
      <tags>
        <tag>okhttp</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 中文乱码问题</title>
    <url>/posts/2892.html</url>
    <content><![CDATA[<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="http://www.worldhello.net/gotgit/08-git-misc/020-git-charset.html">Git字符集问题</a></p>
]]></content>
      <categories>
        <category>代码管理</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 常用命令</title>
    <url>/posts/3223.html</url>
    <content><![CDATA[<h2 id="常用全局配置"><a href="#常用全局配置" class="headerlink" title="常用全局配置"></a>常用全局配置</h2><p>git配置使用<a href="https://git-scm.com/docs/git-config">git config</a>来完成。</p>
<h3 id="配置用户信息"><a href="#配置用户信息" class="headerlink" title="配置用户信息"></a>配置用户信息</h3><p>要配置成自己的真实用户名（姓名全拼）和邮箱</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;John Doe&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;johndoe@example.com&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="配置别名"><a href="#配置别名" class="headerlink" title="配置别名"></a>配置别名</h3><p>比如<a href="https://git-scm.com/docs/git-checkout">git checkout</a>通过配置别名，可以使用git co来达到<a href="https://git-scm.com/docs/git-checkout">git checkout</a>的效果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global alias.co checkout</span><br><span class="line">git config --global alias.br branch</span><br><span class="line">git config --global alias.ci commit</span><br><span class="line">git config --global alias.st status</span><br></pre></td></tr></table></figure>

<h3 id="配置编辑器vim"><a href="#配置编辑器vim" class="headerlink" title="配置编辑器vim"></a>配置编辑器vim</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global core.editor vim</span><br></pre></td></tr></table></figure>

<h3 id="配置代码合并工具"><a href="#配置代码合并工具" class="headerlink" title="配置代码合并工具"></a>配置代码合并工具</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global merge.tool vimdiff</span><br></pre></td></tr></table></figure>

<h3 id="配置高亮显示"><a href="#配置高亮显示" class="headerlink" title="配置高亮显示"></a>配置高亮显示</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global color.ui <span class="literal">true</span></span><br><span class="line">git config --global color.status auto</span><br><span class="line">git config --global color.branch auto</span><br></pre></td></tr></table></figure>

<h3 id="查看所有配置"><a href="#查看所有配置" class="headerlink" title="查看所有配置"></a>查看所有配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure>

<h2 id="下载代码"><a href="#下载代码" class="headerlink" title="下载代码"></a>下载代码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/libgit2/libgit2</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/libgit2/libgit2 -b &lt;branch name&gt;</span><br></pre></td></tr></table></figure>

<h2 id="下载单个分支"><a href="#下载单个分支" class="headerlink" title="下载单个分支"></a>下载单个分支</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/libgit2/libgit2 -b master --single-branch</span><br></pre></td></tr></table></figure>

<p>查看工程下的.git/config文件可以看到下面一句“fetch = +refs/heads/dev:refs/remotes/origin/master”，表示只拉取一个分支。</p>
<p>如果还想在工程中拉取其他分支，比如develop，则可以执行命令<code>git remote set-branches --add origin develop</code><br>参考链接：<a href="https://git-scm.com/book/en/v2/Git-Internals-The-Refspec">Git Internals - The Refspec</a></p>
<h2 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h2><p>创建一个名为new_branch的分支</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch new_branch  </span><br></pre></td></tr></table></figure>

<p>创建本地branch_name分支，并且跟踪远端仓库的同名分支</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -t remote/branch_name</span><br></pre></td></tr></table></figure>

<p>删除本地分支</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -D branch_name</span><br></pre></td></tr></table></figure>
<p>删除远端remote仓库的名为branch_name的分支</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push remote :branch_name</span><br></pre></td></tr></table></figure>
<p>从一个分支切到另一个分支，注意此分支必须是已经有的分支</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout branch</span><br></pre></td></tr></table></figure>

<h2 id="查看代码历史"><a href="#查看代码历史" class="headerlink" title="查看代码历史"></a>查看代码历史</h2><h3 id="查看本地未提交的commit"><a href="#查看本地未提交的commit" class="headerlink" title="查看本地未提交的commit"></a>查看本地未提交的commit</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span> @&#123;u&#125;..</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span> origin/master..HEAD</span><br></pre></td></tr></table></figure>

<h3 id="查看某次commit后的提交"><a href="#查看某次commit后的提交" class="headerlink" title="查看某次commit后的提交"></a>查看某次commit后的提交</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git log 4341b6229727799a90305c0f3e909470c527351f..HEAD</span><br></pre></td></tr></table></figure>

<h2 id="修改代码并提交"><a href="#修改代码并提交" class="headerlink" title="修改代码并提交"></a>修改代码并提交</h2><ol>
<li><p>代码修改后，可以通过如下命令将修改的代码标记为track状态（可根据实际情况选择其中一条或者多条命令)。</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add &lt;files...&gt;</span><br><span class="line">git <span class="built_in">mv</span> &lt;old&gt; &lt;new&gt;</span><br><span class="line">git <span class="built_in">rm</span> &lt;files...&gt;</span><br><span class="line">git <span class="built_in">rm</span> -r &lt;<span class="built_in">dirs</span>...&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>将标记为track状态的文件提交</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit</span><br></pre></td></tr></table></figure>

<p> 提交修改，该命令会调用编辑器用于书写log信息。也可使使用<code>git commit     -m &quot;commit messages&quot;</code></p>
</li>
<li><p>提交代码到远程仓库<br> 如果本地分支已经配置为跟踪远端分支（比如：git co -t origin/develop)，可以直接使用<code>git push</code>。如果还没有设置跟踪远端分支，则需要使用下面命令：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push remote branch</span><br></pre></td></tr></table></figure>

<p> remote 表示远程仓库名称，branch表示分支名称。此命令只适用于本地仓库与远程仓库同名的情况。当分支名称不同是，需要同时指定本地分支和远端分支。</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push remote local_branch:remote_branch</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="回退代码"><a href="#回退代码" class="headerlink" title="回退代码"></a>回退代码</h2><p>回退代码会用到git的reset和checkout两个指令：</p>
<ul>
<li><p><a href="https://git-scm.com/docs/git-reset">git reset</a> 是把本地代码回退掉，要切到最新，则需要通过<a href="https://git-scm.com/docs/git-pull">git pull</a>拉取服务器上的最新代码；一般只有在需要永远放弃某些修改的情况下，才使用<a href="https://git-scm.com/docs/git-reset">git reset</a>命令。</p>
</li>
<li><p><a href="https://git-scm.com/docs/git-checkout">git checkout</a> 是切到过去的时间点，还可以切换来。相当于切到了一个新的分支，还可以切换原来分支。</p>
</li>
<li><p>*注意**，本节的示例中的所有<a href="https://git-scm.com/docs/git-reset">git reset</a>都可以可以换成<a href="https://git-scm.com/docs/git-checkout">git checkout</a>。</p>
</li>
<li><p>将代码回退到三天前</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --before=<span class="string">&quot;3 days&quot;</span> -1 --pretty=format:<span class="string">&quot;%H&quot;</span></span><br><span class="line">619ee7a53952d4c94270aa39e9ecdf9ac3aca473</span><br><span class="line">$ git reset --hard 619ee7a53952d4c94270aa39e9ecdf9ac3aca473</span><br></pre></td></tr></table></figure>

<p>也可以合起来用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span> --before=<span class="string">&quot;3 days&quot;</span> -1 --pretty=format:<span class="string">&quot;%H&quot;</span> | xargs git reset --hard</span><br></pre></td></tr></table></figure>

<ul>
<li><p>回退代码到某一天</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span> --before=<span class="string">&quot;2013-10-10&quot;</span> -1 --pretty=format:<span class="string">&quot;%H&quot;</span> | xargs git reset --hard</span><br></pre></td></tr></table></figure>
</li>
<li><p>回退代码到某一天的某个时间点</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span> --before=<span class="string">&quot;2013-10-10 09:15:00 +0800&quot;</span> -1 --pretty=format:<span class="string">&quot;%H&quot;</span> | xargs git    checkout</span><br></pre></td></tr></table></figure>

<p>  其中 +0800 表示东八区时间</p>
</li>
<li><p>查看某个时间段的日志</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span> --since=<span class="string">&quot;2013-10-10 09:15:00 +0800&quot;</span> --before=<span class="string">&quot;2013-10-10 23:59:00 +0800&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>将服务器代码回退到某个点并提交到某个分支（服务器回退不可恢复，确保准确后回退，做好备份）</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reset --hard commit_id</span><br><span class="line">git push --force sunniwell base</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h2><p>合并分支前提是需要相同SDK中的不同分支。</p>
<ul>
<li><p>把另外一个分支的所有修改快速合并。并提交到一个分支上</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git merge --no-ff</span><br></pre></td></tr></table></figure>
</li>
<li><p>把另外一个分支的单个commit 合并到当前分支，并提交单个分支，有冲突查看“HEAD”关键字</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git cherry-pick &lt;commit&gt;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h2><p>合并分支时难免会产生冲突。冲突发生后分为如下两种情况进行处理：</p>
<ul>
<li><strong>文本文件冲突</strong> 可以通过git mergetool命令编辑冲突文件；</li>
<li><strong>二进制文件冲突</strong> 时就无法合并了，要么使用被合并分支的该文件，要么就采用当前分支的该文件。<br>比如仓库下面的“path/lib_file.so”冲突了。则可以通过如下命令选择采用哪个分支的文件：  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git show branch_name:path/lib_file.so &gt; path/lib_file.so</span><br></pre></td></tr></table></figure>
  命令中的第一个path/lib_file.so必须是对应的git仓库根目录的路径，第二个path/lib_file.so则是当前目录的相对路径。<h2 id="查看本地分支跟踪的远程分支"><a href="#查看本地分支跟踪的远程分支" class="headerlink" title="查看本地分支跟踪的远程分支"></a>查看本地分支跟踪的远程分支</h2></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git rev-parse --abbrev-ref --symbolic-full-name @&#123;upstream&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://stackoverflow.com/questions/171550/find-out-which-remote-branch-a-local-branch-is-tracking">Find out which remote branch a local branch is tracking</a></p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://git-scm.com/book/en/v2">Pro Git book</a></li>
</ul>
]]></content>
      <categories>
        <category>代码管理</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux清理Cached内存</title>
    <url>/posts/21595.html</url>
    <content><![CDATA[<p>Kernels 2.6.16 and newer provide a mechanism to have the kernel drop the page cache and/or inode and dentry caches on command, which can help free up a lot of memory. Now you can throw away that script that allocated a ton of memory just to get rid of the cache…</p>
<p>To use /proc/sys/vm/drop_caches, just echo a number to it.</p>
<p>To free pagecache:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure>
<p>To free dentries and inodes:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> 2 &gt; /proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure>
<p>To free pagecache, dentries and inodes:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> 3 &gt; /proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure>
<p>This is a non-destructive operation and will only free things that are completely unused. Dirty objects will continue to be in use until written out to disk and are not freeable. If you run “sync” first to flush them out to disk, these drop operations will tend to free more memory.</p>
<p>参考网站：</p>
<ul>
<li><a href="https://linux-mm.org/Drop_Caches">Drop_Caches</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
</search>
